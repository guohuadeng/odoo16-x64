
/* /web/static/src/core/action_swiper/action_swiper.js */
odoo.define('@web/core/action_swiper/action_swiper',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{localization}=require("@web/core/l10n/localization");const{clamp}=require("@web/core/utils/numbers");const{Component,onMounted,onWillUnmount,useRef,useState}=require("@odoo/owl");const isScrollSwipable=(scrollables)=>{return{left:!scrollables.filter((e)=>e.scrollLeft!==0).length,right:!scrollables.filter((e)=>e.scrollLeft+Math.round(e.getBoundingClientRect().width)!==e.scrollWidth).length,};};const ActionSwiper=__exports.ActionSwiper=class ActionSwiper extends Component{setup(){this.actionTimeoutId=null;this.resetTimeoutId=null;this.defaultState={containerStyle:"",isSwiping:false,width:undefined,};this.root=useRef("root");this.targetContainer=useRef("targetContainer");this.state=useState({...this.defaultState});this.scrollables=undefined;this.startX=undefined;this.swipedDistance=0;this.isScrollValidated=false;onMounted(()=>{if(this.targetContainer.el){this.state.width=this.targetContainer.el.getBoundingClientRect().width;}
if(this.props.onLeftSwipe||this.props.onRightSwipe){const classes=new Set(this.root.el.classList);classes.delete("o_actionswiper");for(const className of classes){this.targetContainer.el.firstChild.classList.add(className);this.root.el.classList.remove(className);}}});onWillUnmount(()=>{browser.clearTimeout(this.actionTimeoutId);browser.clearTimeout(this.resetTimeoutId);});}
get localizedProps(){return{onLeftSwipe:localization.direction==="rtl"?this.props.onRightSwipe:this.props.onLeftSwipe,onRightSwipe:localization.direction==="rtl"?this.props.onLeftSwipe:this.props.onRightSwipe,};}
_onTouchEndSwipe(){if(this.state.isSwiping){this.state.isSwiping=false;if(this.localizedProps.onRightSwipe&&this.swipedDistance>this.state.width/this.props.swipeDistanceRatio){this.swipedDistance=this.state.width;this.handleSwipe(this.localizedProps.onRightSwipe.action);}else if(this.localizedProps.onLeftSwipe&&this.swipedDistance<-this.state.width/this.props.swipeDistanceRatio){this.swipedDistance=-this.state.width;this.handleSwipe(this.localizedProps.onLeftSwipe.action);}else{this.state.containerStyle="";}}}
_onTouchMoveSwipe(ev){if(this.state.isSwiping){const{onLeftSwipe,onRightSwipe}=this.localizedProps;this.swipedDistance=clamp(ev.touches[0].clientX-this.startX,onLeftSwipe?-this.state.width:0,onRightSwipe?this.state.width:0);if(Math.abs(this.swipedDistance)>40){ev.preventDefault();}
if(!this.isScrollValidated&&this.scrollables&&!isScrollSwipable(this.scrollables)[this.swipedDistance>0?"left":"right"]){return this._reset();}
this.isScrollValidated=true;if(this.props.animationOnMove){this.state.containerStyle=`transform: translateX(${this.swipedDistance}px)`;}}}
_onTouchStartSwipe(ev){this.scrollables=ev.composedPath().filter((e)=>e.nodeType===1&&this.targetContainer.el.contains(e)&&e.scrollWidth>e.getBoundingClientRect().width&&["auto","scroll"].includes(window.getComputedStyle(e)["overflow-x"]));if(!this.state.width){this.state.width=this.targetContainer&&this.targetContainer.el.getBoundingClientRect().width;}
this.state.isSwiping=true;this.isScrollValidated=false;this.startX=ev.touches[0].clientX;}
_reset(){Object.assign(this.state,{...this.defaultState});this.scrollables=undefined;this.startX=undefined;this.swipedDistance=0;this.isScrollValidated=false;}
handleSwipe(action){if(this.props.animationType==="bounce"){this.state.containerStyle=`transform: translateX(${this.swipedDistance}px)`;this.actionTimeoutId=browser.setTimeout(()=>{action();this._reset();},500);}else if(this.props.animationType==="forwards"){this.state.containerStyle=`transform: translateX(${this.swipedDistance}px)`;this.actionTimeoutId=browser.setTimeout(()=>{action();this.state.isSwiping=true;this.state.containerStyle=`transform: translateX(${-this.swipedDistance}px)`;this.resetTimeoutId=browser.setTimeout(()=>{this._reset();},100);},100);}else{return action();}}}
ActionSwiper.props={onLeftSwipe:{type:Object,args:{action:Function,icon:String,bgColor:String,},optional:true,},onRightSwipe:{type:Object,args:{action:Function,icon:String,bgColor:String,},optional:true,},slots:Object,animationOnMove:{type:Boolean,optional:true},animationType:{type:String,optional:true},swipeDistanceRatio:{type:Number,optional:true},};ActionSwiper.defaultProps={onLeftSwipe:undefined,onRightSwipe:undefined,animationOnMove:true,animationType:"bounce",swipeDistanceRatio:2,};ActionSwiper.template="web.ActionSwiper";return __exports;});;

/* /web/static/src/core/assets.js */
odoo.define('@web/core/assets',async function(require){'use strict';let __exports={};const{memoize}=require("@web/core/utils/functions");const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{session}=require("@web/session");const assets=__exports.assets={retries:{count:3,delay:5000,extraDelay:2500,},};class AssetsLoadingError extends Error{}
const _loadJS=__exports._loadJS=(assets.loadJS=memoize(function loadJS(url){if(document.querySelector(`script[src="${url}"]`)){return Promise.resolve();}
const scriptEl=document.createElement("script");scriptEl.type="text/javascript";scriptEl.src=url;document.head.appendChild(scriptEl);return new Promise((resolve,reject)=>{scriptEl.addEventListener("load",()=>resolve(true));scriptEl.addEventListener("error",()=>{reject(new AssetsLoadingError(`The loading of ${url} failed`));});});}));const _loadCSS=__exports._loadCSS=(assets.loadCSS=memoize(function loadCSS(url,retryCount=0){if(document.querySelector(`link[href="${url}"]`)){return Promise.resolve();}
const linkEl=document.createElement("link");linkEl.type="text/css";linkEl.rel="stylesheet";linkEl.href=url;const promise=new Promise((resolve,reject)=>{linkEl.addEventListener("load",()=>resolve(true));linkEl.addEventListener("error",async()=>{if(retryCount<assets.retries.count){await new Promise(resolve=>setTimeout(resolve,assets.retries.delay+assets.retries.extraDelay*retryCount));linkEl.remove();loadCSS(url,retryCount+1).then(resolve).catch(reject);}else{reject(new AssetsLoadingError(`The loading of ${url} failed`));}});});document.head.appendChild(linkEl);return promise;}));const templates=__exports.templates=new DOMParser().parseFromString("<odoo/>","text/xml");let defaultApp;const _loadXML=__exports._loadXML=(assets.loadXML=function loadXML(xml,app=defaultApp){const doc=new DOMParser().parseFromString(xml,"text/xml");if(doc.querySelector("parsererror")){throw new Error(doc.querySelector("parsererror").textContent.trim());}
for(const element of doc.querySelectorAll("templates > [t-name][owl]")){element.removeAttribute("owl");const name=element.getAttribute("t-name");const previous=templates.querySelector(`[t-name="${name}"]`);if(previous){console.debug("Override template: "+name);previous.replaceWith(element);}else{templates.documentElement.appendChild(element);}}
if(app||defaultApp){console.debug("Add templates in Owl app.");app.addTemplates(templates,app||defaultApp);}else{console.debug("Add templates on window Owl container.");}});__exports.setLoadXmlDefaultApp=setLoadXmlDefaultApp;function setLoadXmlDefaultApp(app){defaultApp=app;}
const _getBundle=__exports._getBundle=(assets.getBundle=memoize(async function getBundle(bundleName){const url=new URL(`/web/bundle/${bundleName}`,location.origin);for(const[key,value]of Object.entries(session.bundle_params||{})){url.searchParams.set(key,value);}
const response=await browser.fetch(url.href);const json=await response.json();const assets={cssLibs:[],cssContents:[],jsLibs:[],jsContents:[],};for(const key in json){const file=json[key];if(file.type==="link"){assets.cssLibs.push(file.src);}else if(file.type==="style"){assets.cssContents.push(file.content);}else{if(file.src){assets.jsLibs.push(file.src);}else{assets.jsContents.push(file.content);}}}
return assets;}));const _loadBundle=__exports._loadBundle=(assets.loadBundle=async function loadBundle(desc){const promiseCSS=Promise.all((desc.cssLibs||[]).map(assets.loadCSS)).then(()=>{if(desc.cssContents&&desc.cssContents.length){const style=document.createElement("style");style.textContent=desc.cssContents.join("\n");document.head.appendChild(style);}});for(const urlData of desc.jsLibs||[]){if(typeof urlData==="string"){await assets.loadJS(urlData);const bundle=urlData.match(/\/web\/assets\/.*\/([^/]+?)(\.min)?\.js/);if(bundle){await odoo.ready(bundle[1]+".bundle.xml");}}else{await Promise.all(urlData.map(loadJS));}}
if(desc.jsContents&&desc.jsContents.length){const script=document.createElement("script");script.type="text/javascript";script.textContent=desc.jsContents.join("\n");document.head.appendChild(script);}
await promiseCSS;for(const bundleName of desc.assetLibs||[]){if(typeof bundleName==="string"){const desc=await assets.getBundle(bundleName);await assets.loadBundle(desc);}else{await Promise.all(bundleName.map(async(bundleName)=>{const desc=await assets.getBundle(bundleName);return assets.loadBundle(desc);}));}}});const loadJS=__exports.loadJS=function(url){return assets.loadJS(url);};const loadCSS=__exports.loadCSS=function(url){return assets.loadCSS(url);};const loadXML=__exports.loadXML=function(xml,app=defaultApp){return assets.loadXML(xml,app);};const getBundle=__exports.getBundle=function(bundleName){return assets.getBundle(bundleName);};const loadBundle=__exports.loadBundle=function(desc){return assets.loadBundle(desc);};const{Component,xml,onWillStart}=require("@odoo/owl");const LazyComponent=__exports.LazyComponent=class LazyComponent extends Component{setup(){onWillStart(async()=>{const bundle=await getBundle(this.props.bundle);await loadBundle(bundle);this.Component=registry.category("lazy_components").get(this.props.Component);});}}
LazyComponent.template=xml`<t t-component="Component" t-props="props.props"/>`;LazyComponent.props={Component:String,bundle:String,props:{type:Object,optional:true},};return __exports;});;

/* /web/static/src/core/autocomplete/autocomplete.js */
odoo.define('@web/core/autocomplete/autocomplete',async function(require){'use strict';let __exports={};const{Deferred}=require("@web/core/utils/concurrency");const{useForwardRefToParent,useService}=require("@web/core/utils/hooks");const{useDebounced}=require("@web/core/utils/timing");const{getActiveHotkey}=require("@web/core/hotkeys/hotkey_service");const{usePosition}=require("@web/core/position_hook");const{Component,useExternalListener,useRef,useState}=require("@odoo/owl");const AutoComplete=__exports.AutoComplete=class AutoComplete extends Component{setup(){this.nextSourceId=0;this.nextOptionId=0;this.sources=[];this.state=useState({navigationRev:0,optionsRev:0,open:false,activeSourceOption:null,value:this.props.value,});this.inputRef=useForwardRefToParent("input");this.root=useRef("root");this.debouncedProcessInput=useDebounced(async()=>{const currentPromise=this.pendingPromise;this.pendingPromise=null;this.props.onInput({inputValue:this.inputRef.el.value,});try{await this.open(true);currentPromise.resolve();}catch{currentPromise.reject();}finally{if(currentPromise===this.loadingPromise){this.loadingPromise=null;}}},this.constructor.timeout);useExternalListener(window,"scroll",this.onWindowScroll,true);this.hotkey=useService("hotkey");this.hotkeysToRemove=[];owl.onWillUpdateProps((nextProps)=>{if(this.props.value!==nextProps.value||this.forceValFromProp){this.forceValFromProp=false;this.state.value=nextProps.value;this.inputRef.el.value=nextProps.value;this.close();}});usePosition(()=>this.inputRef.el,{popper:"sourcesList",position:"bottom-start",});}
get isOpened(){return this.state.open;}
get hasOptions(){for(const source of this.sources){if(source.isLoading||source.options.length){return true;}}
return false;}
open(useInput=false){this.state.open=true;return this.loadSources(useInput);}
close(){this.state.open=false;this.state.activeSourceOption=null;}
async loadSources(useInput){this.sources=[];this.state.activeSourceOption=null;const proms=[];for(const pSource of this.props.sources){const source=this.makeSource(pSource);this.sources.push(source);const options=this.loadOptions(pSource.options,useInput?this.inputRef.el.value.trim():"");if(options instanceof Promise){source.isLoading=true;const prom=options.then((options)=>{source.options=options.map((option)=>this.makeOption(option));source.isLoading=false;this.state.optionsRev++;});proms.push(prom);}else{source.options=options.map((option)=>this.makeOption(option));}}
await Promise.all(proms);this.navigate(0);}
loadOptions(options,request){if(typeof options==="function"){return options(request);}else{return options;}}
makeOption(option){return Object.assign(Object.create(option),{id:++this.nextOptionId,});}
makeSource(source){return{id:++this.nextSourceId,options:[],isLoading:false,placeholder:source.placeholder,optionTemplate:source.optionTemplate,};}
isActiveSourceOption([sourceIndex,optionIndex]){return(this.state.activeSourceOption&&this.state.activeSourceOption[0]===sourceIndex&&this.state.activeSourceOption[1]===optionIndex);}
selectOption(indices,params={}){const option=this.sources[indices[0]].options[indices[1]];if(option.unselectable){this.inputRef.el.value="";this.close();return;}
if(this.props.resetOnSelect){this.inputRef.el.value="";}
this.forceValFromProp=true;this.props.onSelect(option,{...params,input:this.inputRef.el,});const customEvent=new CustomEvent("AutoComplete:OPTION_SELECTED",{bubbles:true});this.root.el.dispatchEvent(customEvent);this.close();}
navigate(direction){let step=Math.sign(direction);if(!step){this.state.activeSourceOption=null;step=1;}else{this.state.navigationRev++;}
if(this.state.activeSourceOption){let[sourceIndex,optionIndex]=this.state.activeSourceOption;let source=this.sources[sourceIndex];optionIndex+=step;if(0>optionIndex||optionIndex>=source.options.length){sourceIndex+=step;source=this.sources[sourceIndex];while(source&&source.isLoading){sourceIndex+=step;source=this.sources[sourceIndex];}
if(source){optionIndex=step<0?source.options.length-1:0;}}
this.state.activeSourceOption=source?[sourceIndex,optionIndex]:null;}else{let sourceIndex=step<0?this.sources.length-1:0;let source=this.sources[sourceIndex];while(source&&source.isLoading){sourceIndex+=step;source=this.sources[sourceIndex];}
if(source){const optionIndex=step<0?source.options.length-1:0;if(optionIndex<source.options.length){this.state.activeSourceOption=[sourceIndex,optionIndex];}}}}
onInputBlur(){const value=this.inputRef.el.value;if(this.props.autoSelect&&this.state.activeSourceOption&&value.length>0&&value!==this.props.value){this.selectOption(this.state.activeSourceOption,{triggeredOnBlur:true});}else{this.props.onBlur({inputValue:value,});this.close();}}
onInputClick(){if(!this.isOpened){this.open(this.inputRef.el.value.trim()!==this.props.value);}else{this.close();}}
onInputChange(){this.props.onChange({inputValue:this.inputRef.el.value,});}
async onInput(){this.pendingPromise=this.pendingPromise||new Deferred();this.loadingPromise=this.pendingPromise;this.debouncedProcessInput();}
async onInputKeydown(ev){const hotkey=getActiveHotkey(ev);const isSelectKey=hotkey==="enter"||hotkey==="tab";if(this.loadingPromise&&isSelectKey){if(hotkey==="enter"){ev.stopPropagation();ev.preventDefault();}
await this.loadingPromise;}
switch(hotkey){case"enter":if(!this.isOpened||!this.state.activeSourceOption){return;}
this.selectOption(this.state.activeSourceOption);break;case"escape":if(!this.isOpened){return;}
this.close();break;case"tab":if(!this.isOpened){return;}
if(this.props.autoSelect&&this.state.activeSourceOption&&(this.state.navigationRev>0||this.inputRef.el.value.length>0)){this.selectOption(this.state.activeSourceOption);}
this.close();return;case"arrowup":this.navigate(-1);if(!this.isOpened){this.open(true);}
break;case"arrowdown":this.navigate(+1);if(!this.isOpened){this.open(true);}
break;default:return;}
ev.stopPropagation();ev.preventDefault();}
onOptionMouseEnter(indices){this.state.activeSourceOption=indices;}
onOptionMouseLeave(){this.state.activeSourceOption=null;}
onOptionClick(indices){this.selectOption(indices);}
onWindowScroll(ev){if(this.isOpened&&!this.root.el.contains(ev.target)){this.close();}}}
Object.assign(AutoComplete,{template:"web.AutoComplete",props:{value:{type:String},id:{type:String,optional:true},onSelect:{type:Function},sources:{type:Array,element:{type:Object,shape:{placeholder:{type:String,optional:true},optionTemplate:{type:String,optional:true},options:[Array,Function],},},},placeholder:{type:String,optional:true},autoSelect:{type:Boolean,optional:true},resetOnSelect:{type:Boolean,optional:true},onInput:{type:Function,optional:true},onChange:{type:Function,optional:true},onBlur:{type:Function,optional:true},input:{type:Function,optional:true},},defaultProps:{placeholder:"",autoSelect:false,onInput:()=>{},onChange:()=>{},onBlur:()=>{},},timeout:250,});return __exports;});;

/* /web/static/src/core/browser/browser.js */
odoo.define('@web/core/browser/browser',async function(require){'use strict';let __exports={};let sessionStorage=window.sessionStorage;let localStorage=window.localStorage;try{localStorage.setItem("__localStorage__","true");localStorage.removeItem("__localStorage__");}catch(_e){localStorage=makeRAMLocalStorage();sessionStorage=makeRAMLocalStorage();}
const browser=__exports.browser={addEventListener:window.addEventListener.bind(window),removeEventListener:window.removeEventListener.bind(window),setTimeout:window.setTimeout.bind(window),clearTimeout:window.clearTimeout.bind(window),setInterval:window.setInterval.bind(window),clearInterval:window.clearInterval.bind(window),performance:window.performance,requestAnimationFrame:window.requestAnimationFrame.bind(window),cancelAnimationFrame:window.cancelAnimationFrame.bind(window),console:window.console,history:window.history,navigator,Notification:window.Notification,open:window.open.bind(window),SharedWorker:window.SharedWorker,Worker:window.Worker,XMLHttpRequest:window.XMLHttpRequest,localStorage,sessionStorage,fetch:window.fetch.bind(window),innerHeight:window.innerHeight,innerWidth:window.innerWidth,ontouchstart:window.ontouchstart,};Object.defineProperty(browser,"location",{set(val){window.location=val;},get(){return window.location;},configurable:true,});Object.defineProperty(browser,"innerHeight",{get:()=>window.innerHeight,configurable:true,});Object.defineProperty(browser,"innerWidth",{get:()=>window.innerWidth,configurable:true,});__exports.makeRAMLocalStorage=makeRAMLocalStorage;function makeRAMLocalStorage(){let store={};return{setItem(key,value){store[key]=value;window.dispatchEvent(new StorageEvent("storage",{key,newValue:value}));},getItem(key){return store[key];},clear(){store={};},removeItem(key){delete store[key];window.dispatchEvent(new StorageEvent("storage",{key,newValue:null}));},get length(){return Object.keys(store).length;},key(){return"";},};}
return __exports;});;

/* /web/static/src/core/browser/cookie_service.js */
odoo.define('@web/core/browser/cookie_service',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const COOKIE_TTL=24*60*60*365;function parseCookieString(str){const cookie={};const parts=str.split("; ");for(const part of parts){const[key,value]=part.split("=");cookie[key]=value||"";}
return cookie;}
function cookieToString(key,value,ttl=COOKIE_TTL){let fullCookie=[];if(value!==undefined){fullCookie.push(`${key}=${value}`);}
fullCookie=fullCookie.concat(["path=/",`max-age=${ttl}`]);return fullCookie.join(";");}
function makeCookieService(){function getCurrent(){return parseCookieString(document.cookie);}
let cookie=getCurrent();function setCookie(key,value,ttl){document.cookie=cookieToString(key,value,ttl);cookie=getCurrent();}
return{get current(){return cookie;},setCookie,deleteCookie(key){setCookie(key,"kill",0);},};}
const cookieService=__exports.cookieService={start(){return makeCookieService();},};registry.category("services").add("cookie",cookieService);return __exports;});;

/* /web/static/src/core/browser/feature_detection.js */
odoo.define('@web/core/browser/feature_detection',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");__exports.isBrowserChrome=isBrowserChrome;function isBrowserChrome(){return browser.navigator.userAgent.includes("Chrome");}
__exports.isAndroid=isAndroid;function isAndroid(){return/Android/i.test(browser.navigator.userAgent);}
__exports.isIOS=isIOS;function isIOS(){return(/(iPad|iPhone|iPod)/i.test(browser.navigator.userAgent)||(browser.navigator.platform==="MacIntel"&&maxTouchPoints()>1));}
__exports.isOtherMobileOS=isOtherMobileOS;function isOtherMobileOS(){return/(webOS|BlackBerry|Windows Phone)/i.test(browser.navigator.userAgent);}
__exports.isMacOS=isMacOS;function isMacOS(){return Boolean(browser.navigator.userAgent.match(/Mac/i));}
__exports.isMobileOS=isMobileOS;function isMobileOS(){return isAndroid()||isIOS()||isOtherMobileOS();}
__exports.isIosApp=isIosApp;function isIosApp(){return/OdooMobile \(iOS\)/i.test(browser.navigator.userAgent);}
__exports.hasTouch=hasTouch;function hasTouch(){return browser.ontouchstart!==undefined;}
__exports.maxTouchPoints=maxTouchPoints;function maxTouchPoints(){return browser.navigator.maxTouchPoints||1;}
return __exports;});;

/* /web/static/src/core/browser/router_service.js */
odoo.define('@web/core/browser/router_service',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{shallowEqual}=require("@web/core/utils/objects");const{objectToUrlEncodedString}=require("@web/core/utils/urls");const{browser}=require("@web/core/browser/browser");function cast(value){return!value||isNaN(value)?value:Number(value);}
function parseString(str){const parts=str.split("&");const result={};for(const part of parts){const[key,value]=part.split("=");const decoded=decodeURIComponent(value||"");result[key]=cast(decoded);}
return result;}
function applyLocking(lockedKeys,hash,currentHash,options={}){const newHash={};for(const key in hash){if("lock"in options){options.lock?lockedKeys.add(key):lockedKeys.delete(key);}else if(lockedKeys.has(key)){continue;}
newHash[key]=hash[key];}
for(const key in currentHash){if(lockedKeys.has(key)&&!(key in newHash)){newHash[key]=currentHash[key];}}
return newHash;}
function computeNewRoute(hash,replace,currentRoute){if(!replace){hash=Object.assign({},currentRoute.hash,hash);}
hash=sanitizeHash(hash);if(!shallowEqual(currentRoute.hash,hash)){return Object.assign({},currentRoute,{hash});}
return false;}
function sanitizeHash(hash){return Object.fromEntries(Object.entries(hash).filter(([,v])=>v!==undefined).map(([k,v])=>[k,cast(v)]));}
__exports.parseHash=parseHash;function parseHash(hash){return hash&&hash!=="#"?parseString(hash.slice(1)):{};}
__exports.parseSearchQuery=parseSearchQuery;function parseSearchQuery(search){return search?parseString(search.slice(1)):{};}
__exports.routeToUrl=routeToUrl;function routeToUrl(route){const search=objectToUrlEncodedString(route.search);const hash=objectToUrlEncodedString(route.hash);return route.pathname+(search?"?"+search:"")+(hash?"#"+hash:"");}
async function redirect(env,url,wait=false){if(wait){await new Promise((resolve)=>{const waitForServer=(delay)=>{browser.setTimeout(async()=>{env.services.rpc("/web/webclient/version_info",{}).then(resolve).catch(()=>waitForServer(250));},delay);};waitForServer(1000);});}
browser.location.assign(url);}
function getRoute(urlObj){const{pathname,search,hash}=urlObj;const searchQuery=parseSearchQuery(search);const hashQuery=parseHash(hash);return{pathname,search:searchQuery,hash:hashQuery};}
function makeRouter(env){const bus=env.bus;const lockedKeys=new Set();let current=getRoute(browser.location);let pushTimeout;browser.addEventListener("hashchange",(ev)=>{browser.clearTimeout(pushTimeout);const loc=new URL(ev.newURL);current=getRoute(loc);bus.trigger("ROUTE_CHANGE");});function makeDebouncedPush(mode){let allPushArgs=[];function doPush(){const replace=allPushArgs.some(([,options])=>options&&options.replace);const newHash=allPushArgs.reduce((finalHash,[hash,options])=>{hash=applyLocking(lockedKeys,hash,current.hash,options);if(finalHash){hash=applyLocking(lockedKeys,hash,finalHash,options);}
return Object.assign(finalHash||{},hash);},null);const newRoute=computeNewRoute(newHash,replace,current);if(!newRoute){return;}
const url=browser.location.origin+routeToUrl(newRoute);if(mode==="push"){browser.history.pushState({},"",url);}else{browser.history.replaceState({},"",url);}
current=getRoute(browser.location);}
return function pushOrReplaceState(hash,options){allPushArgs.push([hash,options]);browser.clearTimeout(pushTimeout);pushTimeout=browser.setTimeout(()=>{doPush();pushTimeout=null;allPushArgs=[];});};}
return{get current(){return current;},pushState:makeDebouncedPush("push"),replaceState:makeDebouncedPush("replace"),redirect:(url,wait)=>redirect(env,url,wait),cancelPushes:()=>browser.clearTimeout(pushTimeout),};}
const routerService=__exports.routerService={start(env){return makeRouter(env);},};__exports.objectToQuery=objectToQuery;function objectToQuery(obj){const query={};Object.entries(obj).forEach(([k,v])=>{query[k]=v?String(v):v;});return query;}
registry.category("services").add("router",routerService);return __exports;});;

/* /web/static/src/core/browser/title_service.js */
odoo.define('@web/core/browser/title_service',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const titleService=__exports.titleService={start(){const titleParts={};function getParts(){return Object.assign({},titleParts);}
function setParts(parts){for(const key in parts){const val=parts[key];if(!val){delete titleParts[key];}else{titleParts[key]=val;}}
document.title=Object.values(titleParts).join(" - ");}
return{get current(){return document.title;},getParts,setParts,};},};registry.category("services").add("title",titleService);return __exports;});;

/* /web/static/src/core/checkbox/checkbox.js */
odoo.define('@web/core/checkbox/checkbox',async function(require){'use strict';let __exports={};const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{Component,useRef}=require("@odoo/owl");const CheckBox=__exports.CheckBox=class CheckBox extends Component{setup(){this.id=`checkbox-comp-${CheckBox.nextId++}`;this.rootRef=useRef("root");useHotkey("Enter",({area})=>{const oldValue=area.querySelector("input").checked;this.props.onChange(!oldValue);},{area:()=>this.rootRef.el,bypassEditableProtection:true});}
onClick(ev){if(ev.composedPath().find((el)=>["INPUT","LABEL"].includes(el.tagName))){ev.stopPropagation();return;}
const input=this.rootRef.el.querySelector("input");input.focus();if(!this.props.disabled){ev.stopPropagation();input.checked=!input.checked;this.props.onChange(input.checked);}}
onChange(ev){if(!this.props.disabled){this.props.onChange(ev.target.checked);}}}
CheckBox.template="web.CheckBox";CheckBox.nextId=1;CheckBox.defaultProps={onChange:()=>{},};CheckBox.props={id:{type:true,optional:true,},disabled:{type:Boolean,optional:true,},value:{type:Boolean,optional:true,},slots:{type:Object,optional:true,},onChange:{type:Function,optional:true,},className:{type:String,optional:true,},name:{type:String,optional:true,},};return __exports;});;

/* /web/static/src/core/colorlist/colorlist.js */
odoo.define('@web/core/colorlist/colorlist',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{Component,useRef,useState,useExternalListener}=require("@odoo/owl");const ColorList=__exports.ColorList=class ColorList extends Component{setup(){this.colorlistRef=useRef("colorlist");this.state=useState({isExpanded:this.props.isExpanded});useExternalListener(window,"click",this.onOutsideClick);}
get colors(){return this.constructor.COLORS;}
onColorSelected(id){this.props.onColorSelected(id);if(!this.props.forceExpanded){this.state.isExpanded=false;}}
onOutsideClick(ev){if(this.colorlistRef.el.contains(ev.target)||this.props.forceExpanded){return;}
this.state.isExpanded=false;}
onToggle(ev){if(this.props.canToggle){ev.preventDefault();ev.stopPropagation();this.state.isExpanded=!this.state.isExpanded;this.colorlistRef.el.firstElementChild.focus();}}}
ColorList.COLORS=[_lt("No color"),_lt("Red"),_lt("Orange"),_lt("Yellow"),_lt("Light blue"),_lt("Dark purple"),_lt("Salmon pink"),_lt("Medium blue"),_lt("Dark blue"),_lt("Fuchsia"),_lt("Green"),_lt("Purple"),];ColorList.template="web.ColorList";ColorList.defaultProps={forceExpanded:false,isExpanded:false,};ColorList.props={canToggle:{type:Boolean,optional:true},colors:Array,forceExpanded:{type:Boolean,optional:true},isExpanded:{type:Boolean,optional:true},onColorSelected:Function,selectedColor:{type:Number,optional:true},};return __exports;});;

/* /web/static/src/core/commands/command_category.js */
odoo.define('@web/core/commands/command_category',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const commandCategoryRegistry=registry.category("command_categories");commandCategoryRegistry.add("app",{},{sequence:10}).add("smart_action",{},{sequence:15}).add("actions",{},{sequence:30}).add("navbar",{},{sequence:40}).add("default",{},{sequence:100}).add("debug",{},{sequence:110});return __exports;});;

/* /web/static/src/core/commands/command_hook.js */
odoo.define('@web/core/commands/command_hook',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{useEffect}=require("@odoo/owl");__exports.useCommand=useCommand;function useCommand(name,action,options={}){const commandService=useService("command");useEffect(()=>commandService.add(name,action,options),()=>[]);}
return __exports;});;

/* /web/static/src/core/commands/command_palette.js */
odoo.define('@web/core/commands/command_palette',async function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{_lt}=require("@web/core/l10n/translation");const{KeepLast}=require("@web/core/utils/concurrency");const{useAutofocus,useService}=require("@web/core/utils/hooks");const{scrollTo}=require("@web/core/utils/scrolling");const{fuzzyLookup}=require("@web/core/utils/search");const{debounce}=require("@web/core/utils/timing");const{isMacOS,isMobileOS}=require("@web/core/browser/feature_detection");const{escapeRegExp}=require("@web/core/utils/strings");const{Component,onWillStart,onWillDestroy,useRef,useState,markRaw,useExternalListener,}=require("@odoo/owl");const DEFAULT_PLACEHOLDER=_lt("Search...");const DEFAULT_EMPTY_MESSAGE=_lt("No result found");const FUZZY_NAMESPACES=["default"];function commandsWithinCategory(categoryName,categories){return(cmd)=>{const inCurrentCategory=categoryName===cmd.category;const fallbackCategory=categoryName==="default"&&!categories.includes(cmd.category);return inCurrentCategory||fallbackCategory;};}
__exports.splitCommandName=splitCommandName;function splitCommandName(name,searchValue){if(name){const splitName=name.split(new RegExp(`(${escapeRegExp(searchValue)})`,"ig"));return searchValue.length&&splitName.length>1?splitName:[name];}
return[];}
const DefaultCommandItem=__exports.DefaultCommandItem=class DefaultCommandItem extends Component{}
DefaultCommandItem.template="web.DefaultCommandItem";const CommandPalette=__exports.CommandPalette=class CommandPalette extends Component{setup(){if(this.props.bus){const setConfig=({detail})=>this.setCommandPaletteConfig(detail);this.props.bus.addEventListener(`SET-CONFIG`,setConfig);onWillDestroy(()=>this.props.bus.removeEventListener(`SET-CONFIG`,setConfig));}
this.keyId=1;this.keepLast=new KeepLast();this._sessionId=CommandPalette.lastSessionId++;this.DefaultCommandItem=DefaultCommandItem;this.activeElement=useService("ui").activeElement;this.inputRef=useAutofocus();useHotkey("Enter",()=>this.executeSelectedCommand(),{bypassEditableProtection:true});useHotkey("Control+Enter",()=>this.executeSelectedCommand(true),{bypassEditableProtection:true,});useHotkey("ArrowUp",()=>this.selectCommandAndScrollTo("PREV"),{bypassEditableProtection:true,allowRepeat:true,});useHotkey("ArrowDown",()=>this.selectCommandAndScrollTo("NEXT"),{bypassEditableProtection:true,allowRepeat:true,});useExternalListener(window,"mousedown",this.onWindowMouseDown);this.state=useState({});this.root=useRef("root");this.listboxRef=useRef("listbox");onWillStart(()=>this.setCommandPaletteConfig(this.props.config));}
get commandsByCategory(){const categories=[];for(const category of this.categoryKeys){const commands=this.state.commands.filter(commandsWithinCategory(category,this.categoryKeys));if(commands.length){categories.push({commands,keyId:category,});}}
return categories;}
async setCommandPaletteConfig(config){this.configByNamespace=config.configByNamespace||{};this.state.FooterComponent=config.FooterComponent;this.providersByNamespace={default:[]};for(const provider of config.providers){const namespace=provider.namespace||"default";if(namespace in this.providersByNamespace){this.providersByNamespace[namespace].push(provider);}else{this.providersByNamespace[namespace]=[provider];}}
const{namespace,searchValue}=this.processSearchValue(config.searchValue||"");this.switchNamespace(namespace);await this.search(searchValue);}
async setCommands(namespace,options={}){this.categoryKeys=["default"];const proms=this.providersByNamespace[namespace].map((provider)=>{const{provide}=provider;const result=provide(this.env,options);return result;});let commands=(await this.keepLast.add(Promise.all(proms))).flat();const namespaceConfig=this.configByNamespace[namespace]||{};if(options.searchValue&&FUZZY_NAMESPACES.includes(namespace)){commands=fuzzyLookup(options.searchValue,commands,(c)=>c.name);}else{if(namespaceConfig.categories){let commandsSorted=[];this.categoryKeys=namespaceConfig.categories;if(!this.categoryKeys.includes("default")){this.categoryKeys.push("default");}
for(const category of this.categoryKeys){commandsSorted=commandsSorted.concat(commands.filter(commandsWithinCategory(category,this.categoryKeys)));}
commands=commandsSorted;}}
this.state.commands=markRaw(commands.slice(0,100).map((command)=>({...command,keyId:this.keyId++,splitName:splitCommandName(command.name,options.searchValue),})));this.selectCommand(this.state.commands.length?0:-1);this.mouseSelectionActive=false;this.state.emptyMessage=(namespaceConfig.emptyMessage||DEFAULT_EMPTY_MESSAGE).toString();}
selectCommand(index){if(index===-1||index>=this.state.commands.length){this.state.selectedCommand=null;return;}
this.state.selectedCommand=markRaw(this.state.commands[index]);}
selectCommandAndScrollTo(type){this.mouseSelectionActive=false;const index=this.state.commands.indexOf(this.state.selectedCommand);if(index===-1){return;}
let nextIndex;if(type==="NEXT"){nextIndex=index<this.state.commands.length-1?index+1:0;}else if(type==="PREV"){nextIndex=index>0?index-1:this.state.commands.length-1;}
this.selectCommand(nextIndex);const command=this.listboxRef.el.querySelector(`#o_command_${nextIndex}`);scrollTo(command,{scrollable:this.listboxRef.el});}
onCommandClicked(event,index){event.preventDefault();this.selectCommand(index);const ctrlKey=isMacOS()?event.metaKey:event.ctrlKey;this.executeSelectedCommand(ctrlKey);}
async executeCommand(command){const config=await command.action();if(config){this.setCommandPaletteConfig(config);}else{this.props.close();}}
async executeSelectedCommand(ctrlKey){await this.searchValuePromise;const selectedCommand=this.state.selectedCommand;if(selectedCommand){if(!ctrlKey){this.executeCommand(selectedCommand);}else if(selectedCommand.href){window.open(selectedCommand.href,"_blank");}}}
onCommandMouseEnter(index){if(this.mouseSelectionActive){this.selectCommand(index);}else{this.mouseSelectionActive=true;}}
async search(searchValue){this.state.searchValue=searchValue;await this.setCommands(this.state.namespace,{searchValue,activeElement:this.activeElement,sessionId:this._sessionId,});if(this.inputRef.el){this.inputRef.el.focus();}}
debounceSearch(value){const{namespace,searchValue}=this.processSearchValue(value);if(namespace!=="default"&&this.state.namespace!==namespace){this.switchNamespace(namespace);}
this.inputRef.el.value=searchValue;this.searchValuePromise=this.lastDebounceSearch(searchValue).catch(()=>{this.searchValuePromise=null;});}
onSearchInput(ev){this.debounceSearch(ev.target.value);}
onKeyDown(ev){if(ev.key.toLowerCase()==="backspace"&&!ev.target.value.length&&!ev.repeat){this.switchNamespace("default");this.searchValuePromise=this.lastDebounceSearch("").catch(()=>{this.searchValuePromise=null;});}}
onWindowMouseDown(ev){if(!this.root.el.contains(ev.target)){this.props.close();}}
switchNamespace(namespace){if(this.lastDebounceSearch){this.lastDebounceSearch.cancel();}
const namespaceConfig=this.configByNamespace[namespace]||{};this.lastDebounceSearch=debounce((value)=>this.search(value),namespaceConfig.debounceDelay||0);this.state.namespace=namespace;this.state.placeholder=namespaceConfig.placeholder||DEFAULT_PLACEHOLDER.toString();}
processSearchValue(searchValue){let namespace="default";if(searchValue.length&&this.providersByNamespace[searchValue[0]]){namespace=searchValue[0];searchValue=searchValue.slice(1);}
return{namespace,searchValue};}
get isMacOS(){return isMacOS();}
get isMobileOS(){return isMobileOS();}}
CommandPalette.lastSessionId=0;CommandPalette.template="web.CommandPalette";CommandPalette.components={Dialog};return __exports;});;

/* /web/static/src/core/commands/command_service.js */
odoo.define('@web/core/commands/command_service',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{CommandPalette}=require("@web/core/commands/command_palette");const{Component,xml,EventBus}=require("@odoo/owl");const commandCategoryRegistry=registry.category("command_categories");const commandProviderRegistry=registry.category("command_provider");const commandSetupRegistry=registry.category("command_setup");class DefaultFooter extends Component{setup(){this.elements=commandSetupRegistry.getEntries().map((el)=>({namespace:el[0],name:el[1].name})).filter((el)=>el.name);}
onClick(namespace){this.props.switchNamespace(namespace);}}
DefaultFooter.template=xml`
<span>
    <span class="fw-bolder text-primary">TIP</span> — search for
    <t t-foreach="elements" t-as="element" t-key="element.namespace">
        <t t-if="!(element_first || element_last)">, </t>
        <t t-if="element_last and !element_first"> and </t>
        <span class="o_namespace btn-link text-primary cursor-pointer" t-on-click="() => this.onClick(element.namespace)">
            <span t-out="element.namespace" class="fw-bolder text-primary"/><t t-out="element.name"/>
        </span>
    </t>
</span>
`;const commandService=__exports.commandService={dependencies:["dialog","hotkey","ui"],start(env,{dialog,hotkey:hotkeyService,ui}){const registeredCommands=new Map();let nextToken=0;let isPaletteOpened=false;const bus=new EventBus();hotkeyService.add("control+k",openMainPalette,{bypassEditableProtection:true,global:true,});function openMainPalette(config={},onClose){const configByNamespace={};for(const provider of commandProviderRegistry.getAll()){const namespace=provider.namespace||"default";if(!configByNamespace[namespace]){configByNamespace[namespace]={categories:[],};}}
for(const[category,el]of commandCategoryRegistry.getEntries()){const namespace=el.namespace||"default";if(namespace in configByNamespace){configByNamespace[namespace].categories.push(category);}}
for(const[namespace,{emptyMessage,debounceDelay,placeholder},]of commandSetupRegistry.getEntries()){if(namespace in configByNamespace){if(emptyMessage){configByNamespace[namespace].emptyMessage=emptyMessage;}
if(debounceDelay!==undefined){configByNamespace[namespace].debounceDelay=debounceDelay;}
if(placeholder){configByNamespace[namespace].placeholder=placeholder;}}}
config=Object.assign({configByNamespace,FooterComponent:DefaultFooter,providers:commandProviderRegistry.getAll(),},config);return openPalette(config,onClose);}
function openPalette(config,onClose){if(isPaletteOpened){bus.trigger("SET-CONFIG",config);return;}
isPaletteOpened=true;dialog.add(CommandPalette,{config,bus,},{onClose:()=>{isPaletteOpened=false;if(onClose){onClose();}},});}
function registerCommand(command,options){if(!command.name||!command.action||typeof command.action!=="function"){throw new Error("A Command must have a name and an action function.");}
const registration=Object.assign({},command,options);if(registration.hotkey){const action=async()=>{const commandService=env.services.command;const config=await command.action();if(!isPaletteOpened&&config){commandService.openPalette(config);}};registration.removeHotkey=hotkeyService.add(registration.hotkey,action,{activeElement:registration.activeElement,global:registration.global,validate:registration.isAvailable,});}
const token=nextToken++;registeredCommands.set(token,registration);if(!options.activeElement){Promise.resolve().then(()=>{registration.activeElement=ui.activeElement;});}
return token;}
function unregisterCommand(token){const cmd=registeredCommands.get(token);if(cmd&&cmd.removeHotkey){cmd.removeHotkey();}
registeredCommands.delete(token);}
return{add(name,action,options={}){const token=registerCommand({name,action},options);return()=>{unregisterCommand(token);};},getCommands(activeElement){return[...registeredCommands.values()].filter((command)=>command.activeElement===activeElement||command.global);},openMainPalette,openPalette,};},};registry.category("services").add("command",commandService);return __exports;});;

/* /web/static/src/core/commands/default_providers.js */
odoo.define('@web/core/commands/default_providers',async function(require){'use strict';let __exports={};const{isMacOS}=require("@web/core/browser/feature_detection");const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{capitalize}=require("@web/core/utils/strings");const{getVisibleElements}=require("@web/core/utils/ui");const{DefaultCommandItem}=require("@web/core/commands/command_palette");const{Component}=require("@odoo/owl");const commandSetupRegistry=registry.category("command_setup");commandSetupRegistry.add("default",{emptyMessage:_lt("No command found"),placeholder:_lt("Search for a command..."),});const HotkeyCommandItem=__exports.HotkeyCommandItem=class HotkeyCommandItem extends Component{setup(){useHotkey(this.props.hotkey,this.props.executeCommand);}
getKeysToPress(command){const{hotkey}=command;let result=hotkey.split("+");if(isMacOS()){result=result.map((x)=>x.replace("control","command")).map((x)=>x.replace("alt","control"));}
return result.map((key)=>key.toUpperCase());}}
HotkeyCommandItem.template="web.HotkeyCommandItem";const commandCategoryRegistry=registry.category("command_categories");const commandProviderRegistry=registry.category("command_provider");commandProviderRegistry.add("command",{provide:(env,options={})=>{const commands=env.services.command.getCommands(options.activeElement).map((cmd)=>{cmd.category=commandCategoryRegistry.contains(cmd.category)?cmd.category:"default";return cmd;}).filter((command)=>command.isAvailable===undefined||command.isAvailable());return commands.map((command)=>({Component:command.hotkey?HotkeyCommandItem:DefaultCommandItem,action:command.action,category:command.category,name:command.name,props:{hotkey:command.hotkey,hotkeyOptions:command.hotkeyOptions,},}));},});commandProviderRegistry.add("data-hotkeys",{provide:(env,options={})=>{const commands=[];const overlayModifier=registry.category("services").get("hotkey").overlayModifier;for(const el of getVisibleElements(options.activeElement,"[data-hotkey]:not(:disabled)")){const closest=el.closest("[data-command-category]");const category=closest?closest.dataset.commandCategory:"default";const description=el.title||el.dataset.bsOriginalTitle||el.dataset.tooltip||el.placeholder||(el.innerText&&`${el.innerText.slice(0, 50)}${el.innerText.length > 50 ? "..." : ""}`)||env._t("no description provided");commands.push({Component:HotkeyCommandItem,action:()=>{el.focus();el.click();},category,name:capitalize(description.trim().toLowerCase()),props:{hotkey:`${overlayModifier}+${el.dataset.hotkey}`,},});}
return commands;},});return __exports;});;

/* /web/static/src/core/confirmation_dialog/confirmation_dialog.js */
odoo.define('@web/core/confirmation_dialog/confirmation_dialog',async function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{_lt}=require("@web/core/l10n/translation");const{useChildRef}=require("@web/core/utils/hooks");const{Component}=require("@odoo/owl");const ConfirmationDialog=__exports.ConfirmationDialog=class ConfirmationDialog extends Component{setup(){this.env.dialogData.close=()=>this._cancel();this.modalRef=useChildRef();this.isConfirmedOrCancelled=false;}
async _cancel(){if(this.isConfirmedOrCancelled){return;}
this.isConfirmedOrCancelled=true;this.disableButtons();if(this.props.cancel){try{await this.props.cancel();}catch(e){this.props.close();throw e;}}
this.props.close();}
async _confirm(){if(this.isConfirmedOrCancelled){return;}
this.isConfirmedOrCancelled=true;this.disableButtons();if(this.props.confirm){try{await this.props.confirm();}catch(e){this.props.close();throw e;}}
this.props.close();}
disableButtons(){if(!this.modalRef.el){return;}
for(const button of[...this.modalRef.el.querySelectorAll(".modal-footer button")]){button.disabled=true;}}}
ConfirmationDialog.template="web.ConfirmationDialog";ConfirmationDialog.components={Dialog};ConfirmationDialog.props={close:Function,title:{validate:(m)=>{return(typeof m==="string"||(typeof m==="object"&&typeof m.toString==="function"));},optional:true,},body:String,confirm:{type:Function,optional:true},confirmLabel:{type:String,optional:true},cancel:{type:Function,optional:true},cancelLabel:{type:String,optional:true},};ConfirmationDialog.defaultProps={confirmLabel:_lt("Ok"),cancelLabel:_lt("Cancel"),title:_lt("Confirmation"),};const AlertDialog=__exports.AlertDialog=class AlertDialog extends ConfirmationDialog{}
AlertDialog.template="web.AlertDialog";AlertDialog.props={...ConfirmationDialog.props,contentClass:{type:String,optional:true},};AlertDialog.defaultProps={...ConfirmationDialog.defaultProps,title:_lt("Alert"),};return __exports;});;

/* /web/static/src/core/context.js */
odoo.define('@web/core/context',async function(require){'use strict';let __exports={};const{evaluateExpr}=require("@web/core/py_js/py");__exports.makeContext=makeContext;function makeContext(contexts,initialEvaluationContext){const evaluationContext=Object.assign({},initialEvaluationContext);const context={};for(let ctx of contexts){if(ctx!==""){ctx=typeof ctx==="string"?evaluateExpr(ctx,evaluationContext):ctx;Object.assign(context,ctx);Object.assign(evaluationContext,context);}}
return context;}
return __exports;});;

/* /web/static/src/core/datepicker/datepicker.js */
odoo.define('@web/core/datepicker/datepicker',async function(require){'use strict';let __exports={};const{Component,onMounted,onWillUnmount,onWillUpdateProps,useExternalListener,useRef,useState,}=require("@odoo/owl");const{isMobileOS}=require("@web/core/browser/feature_detection");const{formatDate,formatDateTime,luxonToMoment,luxonToMomentFormat,momentToLuxon,parseDate,parseDateTime,}=require("@web/core/l10n/dates");const{localization}=require("@web/core/l10n/localization");const{useAutofocus}=require("@web/core/utils/hooks");const{pick}=require("@web/core/utils/objects");const{DateTime}=luxon;let datePickerId=0;function areEqual(value1,value2){if(value1&&value2){return Number(value1)===Number(value2);}else{return value1===value2;}}
function wrapError(fn,defaultValue){return(...args)=>{const result=[defaultValue,null];try{result[0]=fn(...args);}catch(_err){result[1]=_err;}
return result;};}
const DatePicker=__exports.DatePicker=class DatePicker extends Component{setup(){this.rootRef=useRef("root");this.inputRef=useRef("input");this.hiddenInputRef=useRef("hiddenInput");this.state=useState({warning:false});this.datePickerId=`o_datepicker_${datePickerId++}`;this.isPickerOpen=false;this.pickerDate=null;this.ignorePickerEvents=true;this.initFormat();this.setDateAndFormat(this.props);useAutofocus();useExternalListener(window,"click",this.onWindowClick,{capture:true});useExternalListener(window,"scroll",this.onWindowScroll,{capture:true});onMounted(this.onMounted);onWillUpdateProps(this.onWillUpdateProps);onWillUnmount(this.onWillUnmount);}
onMounted(){this.bootstrapDateTimePicker(this.props);this.updateInput(this.date);this.addPickerListener("show",()=>{this.isPickerOpen=true;this.inputRef.el.select();});this.addPickerListener("change",({date})=>{if(date&&this.isPickerOpen){const{locale}=this.getOptions();this.pickerDate=momentToLuxon(date).setLocale(locale);this.updateInput(this.pickerDate);}});this.addPickerListener("hide",()=>{this.isPickerOpen=false;this.onDateChange();this.pickerDate=null;});this.addPickerListener("error",()=>false);this.ignorePickerEvents=false;}
onWillUpdateProps(nextProps){this.ignorePickerEvents=true;this.setDateAndFormat(nextProps);const shouldUpdate=Object.entries(pick(nextProps,"date","format")).some(([key,val])=>!areEqual(this.props[key],val));if(shouldUpdate){this.updateInput(this.date);}
if(this.isPickerOpen){this.bootstrapDateTimePicker("hide");this.bootstrapDateTimePicker("show");}
this.ignorePickerEvents=false;}
onWillUnmount(){window.$(this.rootRef.el).off();this.bootstrapDateTimePicker("destroy");}
addPickerListener(type,listener){return window.$(this.rootRef.el).on(`${type}.datetimepicker`,(ev)=>{if(this.ignorePickerEvents){return false;}
return listener(ev);});}
getOptions(){return{format:this.format,locale:this.props.locale||(this.date&&this.date.locale),};}
initFormat(){this.defaultFormat=localization.dateFormat;this.formatValue=wrapError(formatDate,"");this.parseValue=wrapError(parseDate,false);this.isLocal=false;}
setDateAndFormat({date,locale,format}){this.date=date&&locale?date.setLocale(locale):date;this.format=format||this.defaultFormat;this.staticFormat="yyyy-MM-dd";}
updateInput(value){value=value||false;const options=this.getOptions();const[formattedValue,error]=this.formatValue(value,options);if(!error){this.inputRef.el.value=formattedValue;[this.hiddenInputRef.el.value]=this.formatValue(value,{...options,format:this.staticFormat,});this.props.onUpdateInput(formattedValue);}
return formattedValue;}
bootstrapDateTimePicker(commandOrParams){if(typeof commandOrParams==="object"){const params={...commandOrParams,date:this.date||null,format:luxonToMomentFormat(this.staticFormat),locale:commandOrParams.locale||(this.date&&this.date.locale),};for(const prop in params){if(params[prop]instanceof DateTime){params[prop]=luxonToMoment(params[prop]);}}
commandOrParams=params;}
window.$(this.rootRef.el).datetimepicker(commandOrParams);}
onDateChange(){const[value,error]=this.pickerDate?[this.pickerDate,null]:this.parseValue(this.inputRef.el.value,this.getOptions());this.state.warning=value&&value>DateTime.local();if(error||areEqual(this.date,value)){this.updateInput(this.date);}else{this.props.onDateTimeChanged(value);}
if(this.pickerDate){this.inputRef.el.select();}}
onInputChange(){this.onDateChange();}
onInputInput(ev){this.pickerDate=null;return this.props.onInput(ev);}
onInputKeydown(ev){switch(ev.key){case"Escape":{if(this.isPickerOpen){ev.preventDefault();ev.stopPropagation();this.bootstrapDateTimePicker("hide");this.inputRef.el.select();}
break;}
case"Tab":{this.bootstrapDateTimePicker("hide");break;}}}
onWindowClick({target}){if(target.closest(".bootstrap-datetimepicker-widget")){return;}else if(this.rootRef.el.contains(target)){this.bootstrapDateTimePicker("toggle");}else{this.bootstrapDateTimePicker("hide");}}
onWindowScroll(ev){if(!isMobileOS()&&ev.target!==this.inputRef.el){this.bootstrapDateTimePicker("hide");}}}
DatePicker.defaultProps={calendarWeeks:true,icons:{clear:"fa fa-delete",close:"fa fa-check primary",date:"fa fa-calendar",down:"fa fa-chevron-down",next:"fa fa-chevron-right",previous:"fa fa-chevron-left",time:"fa fa-clock-o",today:"fa fa-calendar-check-o",up:"fa fa-chevron-up",},inputId:"",maxDate:DateTime.fromObject({year:9999,month:12,day:31}),minDate:DateTime.fromObject({year:1000}),useCurrent:false,widgetParent:"body",onInput:()=>{},onUpdateInput:()=>{},};DatePicker.props={onDateTimeChanged:Function,date:{type:[DateTime,{value:false}],optional:true},warn_future:{type:Boolean,optional:true},buttons:{type:Object,shape:{showClear:Boolean,showClose:Boolean,showToday:Boolean,},optional:true,},calendarWeeks:{type:Boolean,optional:true},format:{type:String,optional:true},icons:{type:Object,shape:{clear:String,close:String,date:String,down:String,next:String,previous:String,time:String,today:String,up:String,},optional:true,},inputId:{type:String,optional:true},keyBinds:{validate:(kb)=>typeof kb==="object"||kb===null,optional:true},locale:{type:String,optional:true},maxDate:{type:DateTime,optional:true},minDate:{type:DateTime,optional:true},readonly:{type:Boolean,optional:true},useCurrent:{type:Boolean,optional:true},widgetParent:{type:String,optional:true},daysOfWeekDisabled:{type:Array,optional:true},placeholder:{type:String,optional:true},onInput:{type:Function,optional:true},onUpdateInput:{type:Function,optional:true},};DatePicker.template="web.DatePicker";const DateTimePicker=__exports.DateTimePicker=class DateTimePicker extends DatePicker{initFormat(){this.defaultFormat=localization.dateTimeFormat;this.formatValue=wrapError(formatDateTime,"");this.parseValue=wrapError(parseDateTime,false);this.isLocal=true;}
setDateAndFormat(nextProps){super.setDateAndFormat(nextProps);this.staticFormat+=` ${/h/.test(this.format) ? "hh" : "HH"}:mm:ss`;}}
DateTimePicker.defaultProps={...DatePicker.defaultProps,buttons:{showClear:false,showClose:true,showToday:false,},};return __exports;});;

/* /web/static/src/core/debug/debug_context.js */
odoo.define('@web/core/debug/debug_context',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{memoize}=require("@web/core/utils/functions");const{useEffect,useEnv,useSubEnv}=require("@odoo/owl");const debugRegistry=registry.category("debug");const getAccessRights=memoize(async function getAccessRights(orm){const rightsToCheck={"ir.ui.view":"write","ir.rule":"read","ir.model.access":"read",};const proms=Object.entries(rightsToCheck).map(([model,operation])=>{return orm.call(model,"check_access_rights",[],{operation,raise_exception:false,});});const[canEditView,canSeeRecordRules,canSeeModelAccess]=await Promise.all(proms);const accessRights={canEditView,canSeeRecordRules,canSeeModelAccess};return accessRights;});class DebugContext{constructor(env,defaultCategories){this.orm=env.services.orm;this.categories=new Map(defaultCategories.map((cat)=>[cat,[{}]]));}
activateCategory(category,context){const contexts=this.categories.get(category)||new Set();contexts.add(context);this.categories.set(category,contexts);return()=>{contexts.delete(context);if(contexts.size===0){this.categories.delete(category);}};}
async getItems(env){const accessRights=await getAccessRights(this.orm);return[...this.categories.entries()].flatMap(([category,contexts])=>{return debugRegistry.category(category).getAll().map((factory)=>factory(Object.assign({env,accessRights},...contexts)));}).filter(Boolean).sort((x,y)=>{const xSeq=x.sequence||1000;const ySeq=y.sequence||1000;return xSeq-ySeq;});}}
const debugContextSymbol=Symbol("debugContext");__exports.createDebugContext=createDebugContext;function createDebugContext(env,{categories=[]}={}){return{[debugContextSymbol]:new DebugContext(env,categories)};}
__exports.useOwnDebugContext=useOwnDebugContext;function useOwnDebugContext({categories=[]}={}){useSubEnv(createDebugContext(useEnv(),{categories}));}
__exports.useEnvDebugContext=useEnvDebugContext;function useEnvDebugContext(){const debugContext=useEnv()[debugContextSymbol];if(!debugContext){throw new Error("There is no debug context available in the current environment.");}
return debugContext;}
__exports.useDebugCategory=useDebugCategory;function useDebugCategory(category,context={}){const env=useEnv();if(env.debug){const debugContext=useEnvDebugContext();useEffect(()=>debugContext.activateCategory(category,context),()=>[]);}}
return __exports;});;

/* /web/static/src/core/debug/debug_menu.js */
odoo.define('@web/core/debug/debug_menu',async function(require){'use strict';let __exports={};const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{DebugMenuBasic}=require("@web/core/debug/debug_menu_basic");const{useCommand}=require("@web/core/commands/command_hook");const{useService}=require("@web/core/utils/hooks");const{useEnvDebugContext}=require("@web/core/debug/debug_context");const DebugMenu=__exports.DebugMenu=class DebugMenu extends DebugMenuBasic{setup(){super.setup();const debugContext=useEnvDebugContext();this.command=useService("command");useCommand(this.env._t("Debug tools..."),async()=>{const items=await debugContext.getItems(this.env);let index=0;const defaultCategories=items.filter((item)=>item.type==="separator").map(()=>(index+=1));const provider={async provide(){const categories=[...defaultCategories];let category=categories.shift();const result=[];items.forEach((item)=>{if(item.type==="item"){result.push({name:item.description.toString(),action:item.callback,category,});}else if(item.type==="separator"){category=categories.shift();}});return result;},};const configByNamespace={default:{categories:defaultCategories,emptyMessage:this.env._t("No debug command found"),placeholder:this.env._t("Choose a debug command..."),},};const commandPaletteConfig={configByNamespace,providers:[provider],};return commandPaletteConfig;},{category:"debug",});}}
DebugMenu.components={Dropdown,DropdownItem};return __exports;});;

/* /web/static/src/core/debug/debug_menu_basic.js */
odoo.define('@web/core/debug/debug_menu_basic',async function(require){'use strict';let __exports={};const{useEnvDebugContext}=require("@web/core/debug/debug_context");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{Component}=require("@odoo/owl");const DebugMenuBasic=__exports.DebugMenuBasic=class DebugMenuBasic extends Component{setup(){const debugContext=useEnvDebugContext();this.getElements=async()=>{this.elements=await debugContext.getItems(this.env);};}}
DebugMenuBasic.components={Dropdown,DropdownItem,};DebugMenuBasic.template="web.DebugMenu";return __exports;});;

/* /web/static/src/core/debug/debug_menu_items.js */
odoo.define('@web/core/debug/debug_menu_items',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{routeToUrl}=require("@web/core/browser/router_service");const{registry}=require("@web/core/registry");function activateAssetsDebugging({env}){return{type:"item",description:env._t("Activate Assets Debugging"),callback:()=>{browser.location.search="?debug=assets";},sequence:410,};}
function activateTestsAssetsDebugging({env}){return{type:"item",description:env._t("Activate Tests Assets Debugging"),callback:()=>{browser.location.search="?debug=assets,tests";},sequence:420,};}
__exports.regenerateAssets=regenerateAssets;function regenerateAssets({env}){return{type:"item",description:env._t("Regenerate Assets Bundles"),callback:async()=>{const domain=["&",["res_model","=","ir.ui.view"],"|",["name","=like","%.assets_%.css"],["name","=like","%.assets_%.js"],];const ids=await env.services.orm.search("ir.attachment",domain);await env.services.orm.unlink("ir.attachment",ids);browser.location.reload();},sequence:430,};}
function becomeSuperuser({env}){const becomeSuperuserURL=browser.location.origin+"/web/become";return{type:"item",description:env._t("Become Superuser"),hide:!env.services.user.isAdmin,href:becomeSuperuserURL,callback:()=>{browser.open(becomeSuperuserURL,"_self");},sequence:440,};}
function leaveDebugMode({env}){return{type:"item",description:env._t("Leave the Developer Tools"),callback:()=>{const route=env.services.router.current;route.search.debug="";browser.location.href=browser.location.origin+routeToUrl(route);},sequence:450,};}
registry.category("debug").category("default").add("activateAssetsDebugging",activateAssetsDebugging).add("regenerateAssets",regenerateAssets).add("becomeSuperuser",becomeSuperuser).add("leaveDebugMode",leaveDebugMode).add("activateTestsAssetsDebugging",activateTestsAssetsDebugging);return __exports;});;

/* /web/static/src/core/debug/debug_providers.js */
odoo.define('@web/core/debug/debug_providers',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{browser}=require("@web/core/browser/browser");const{routeToUrl}=require("@web/core/browser/router_service");const commandProviderRegistry=registry.category("command_provider");commandProviderRegistry.add("debug",{provide:(env,options)=>{const result=[];if(env.debug){if(!env.debug.includes("assets")){result.push({action(){browser.location.search="?debug=assets";},category:"debug",name:env._t("Activate debug mode (with assets)"),});}
result.push({action(){const route=env.services.router.current;route.search.debug="";browser.location.href=browser.location.origin+routeToUrl(route);},category:"debug",name:env._t("Deactivate debug mode"),});result.push({action(){const runTestsURL=browser.location.origin+"/web/tests?debug=assets";browser.open(runTestsURL);},category:"debug",name:env._t("Run JS Tests"),});result.push({action(){const runTestsURL=browser.location.origin+"/web/tests/mobile?debug=assets";browser.open(runTestsURL);},category:"debug",name:env._t("Run JS Mobile Tests"),});}else{if(options.searchValue.toLowerCase()==="debug"){result.push({action(){browser.location.search="?debug=assets";},category:"debug",name:env._t("Activate debug mode (with assets)"),});}}
return result;},});return __exports;});;

/* /web/static/src/core/debug/debug_utils.js */
odoo.define('@web/core/debug/debug_utils',async function(require){'use strict';let __exports={};__exports.editModelDebug=editModelDebug;function editModelDebug(env,title,model,id){return env.services.action.doAction({res_model:model,res_id:id,name:title,type:"ir.actions.act_window",views:[[false,"form"]],view_mode:"form",target:"new",});}
return __exports;});;

/* /web/static/src/core/debug/profiling/profiling_item.js */
odoo.define('@web/core/debug/profiling/profiling_item',async function(require){'use strict';let __exports={};const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{useBus,useService}=require("@web/core/utils/hooks");const{Component}=require("@odoo/owl");const ProfilingItem=__exports.ProfilingItem=class ProfilingItem extends Component{setup(){this.profiling=useService("profiling");useBus(this.props.bus,"UPDATE",this.render);}
changeParam(param,ev){this.profiling.setParam(param,ev.target.value);}
toggleParam(param){const value=this.profiling.state.params.execution_context_qweb;this.profiling.setParam(param,!value);}
openProfiles(){if(this.env.services.action){this.env.services.action.doAction("base.action_menu_ir_profile");}else{window.location="/web/#action=base.action_menu_ir_profile";}}}
ProfilingItem.components={DropdownItem};ProfilingItem.template="web.DebugMenu.ProfilingItem";return __exports;});;

/* /web/static/src/core/debug/profiling/profiling_qweb.js */
odoo.define('@web/core/debug/profiling/profiling_qweb',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{loadBundle}=require("@web/core/assets");const{renderToString}=require("@web/core/utils/render");const{useDebounced}=require("@web/core/utils/timing");const{Component,useState,useRef,onWillStart,onMounted,onWillUnmount}=require("@odoo/owl");class MenuItem extends Component{}
MenuItem.template="web.ProfilingQwebView.menuitem";const ProfilingQwebView=__exports.ProfilingQwebView=class ProfilingQwebView extends Component{setup(){super.setup();this.orm=useService("orm");this.ace=useRef("ace");this.selector=useRef("selector");for(const line of this.profile.data){line.xpath=line.xpath.replace(/([^\]])\//g,"$1[1]/").replace(/([^\]])$/g,"$1[1]");}
this.state=useState({viewID:this.profile.data.length?this.profile.data[0].view_id:0,view:null,});this.renderProfilingInformation=useDebounced(this.renderProfilingInformation,100);onWillStart(async()=>{await loadBundle({jsLibs:['/web/static/lib/ace/ace.js',['/web/static/lib/ace/mode-python.js','/web/static/lib/ace/mode-xml.js','/web/static/lib/ace/mode-qweb.js'],],});await this._fetchViewData();this.state.view=this.viewObjects.find((view)=>view.id===this.state.viewID);});onMounted(()=>{this._startAce(this.ace.el);this._renderView();});onWillUnmount(()=>{if(this.aceEditor){this.aceEditor.destroy();}
this._unmoutInfo();});}
get profile(){if(this.props.value){return JSON.parse(this.props.value)[0].results;}
return{archs:{},data:[]};}
async _fetchViewData(){const viewIDs=Array.from(new Set(this.profile.data.map((line)=>line.view_id)));const viewObjects=await this.orm.call("ir.ui.view","search_read",[],{fields:["id","display_name","key"],domain:[["id","in",viewIDs]],});for(const view of viewObjects){view.delay=0;view.query=0;const lines=this.profile.data.filter((l)=>l.view_id===view.id);const root=lines.find((l)=>l.xpath==="");if(root){view.delay+=root.delay;view.query+=root.query;}else{view.delay=lines.map((l)=>l.delay).reduce((a,b)=>a+b);view.query=lines.map((l)=>l.query).reduce((a,b)=>a+b);}
view.delay=Math.ceil(view.delay*10)/10;}
this.viewObjects=viewObjects;}
_formatDelay(delay){return delay?_.str.sprintf("%.1f",Math.ceil(delay*10)/10):".";}
_startAce(node){this.aceEditor=window.ace.edit(node);this.aceEditor.setOptions({maxLines:Infinity,showPrintMargin:false,highlightActiveLine:false,highlightGutterLine:true,readOnly:true,});this.aceEditor.renderer.setOptions({displayIndentGuides:true,showGutter:true,});this.aceEditor.renderer.$cursorLayer.element.style.display="none";this.aceEditor.$blockScrolling=true;this.aceSession=this.aceEditor.getSession();this.aceSession.setOptions({useWorker:false,mode:"ace/mode/qweb",tabSize:2,useSoftTabs:true,});this.aceEditor.renderer.on("afterRender",this.renderProfilingInformation.bind(this));}
renderProfilingInformation(){this._unmoutInfo();let flat={};let arch=[{xpath:"",children:[]}];const rows=this.ace.el.querySelectorAll(".ace_gutter .ace_gutter-cell");const elems=this.ace.el.querySelectorAll(".ace_tag-open, .ace_end-tag-close, .ace_end-tag-open, .ace_qweb");elems.forEach(node=>{const parent=arch[arch.length-1];let xpath=parent.xpath;if(node.classList.contains("ace_end-tag-close")){let previous=node;while(previous=previous.previousElementSibling){if(previous&&previous.classList.contains("ace_tag-name")){break;}}
const tag=previous&&previous.textContent;if(parent.tag===tag){arch.pop();}}else if(node.classList.contains("ace_end-tag-open")){const tag=node.nextElementSibling&&node.nextElementSibling.textContent;if(parent.tag===tag){arch.pop();}}else if(node.classList.contains("ace_qweb")){const directive=node.textContent;parent.directive.push({el:node,directive:directive,});let delay=0;let query=0;for(const line of this.profile.data){if(line.view_id===this.state.viewID&&line.xpath===xpath&&line.directive.includes(directive)){delay+=line.delay;query+=line.query;}}
if((delay||query)&&!node.querySelector(".o_info")){this._renderHover(delay,query,node);}}else if(node.classList.contains("ace_tag-open")){const nodeTagName=node.nextElementSibling;const aceLine=nodeTagName.parentNode;const index=[].indexOf.call(aceLine.parentNode.children,aceLine);const row=rows[index];xpath+="/"+nodeTagName.textContent;let i=1;while(flat[xpath+"["+i+"]"]){i++;}
xpath+="["+i+"]";flat[xpath]={xpath:xpath,tag:nodeTagName.textContent,children:[],directive:[]};arch.push(flat[xpath]);parent.children.push(flat[xpath]);const closed=!!row.querySelector(".ace_closed");const delays=[];const querys=[];const groups={};let displayDetail=false;for(const line of this.profile.data){if(line.view_id===this.state.viewID&&(closed?line.xpath.startsWith(xpath):line.xpath===xpath)){delays.push(line.delay);querys.push(line.query);const directive=line.directive.split("=")[0];if(!groups[directive]){groups[directive]={delays:[],querys:[],};}else{displayDetail=true;}
groups[directive].delays.push(this._formatDelay(line.delay));groups[directive].querys.push(line.query);}}
if(delays.length&&!row.querySelector(".o_info")){this._renderInfo(delays,querys,displayDetail,groups,row);}}
node.setAttribute("data-xpath",xpath);});}
_renderView(){const view=this.viewObjects.find((view)=>view.id===this.state.viewID);if(view){const arch=this.profile.archs[view.id]||"";if(this.aceSession.getValue()!==arch){this.aceSession.setValue(arch);}}else{this.aceSession.setValue("");}
this.state.view=view;}
_unmoutInfo(){if(this.hover){if(this.ace.el.querySelector('.o_ace_hover')){this.ace.el.querySelector('.o_ace_hover').remove();}}
if(this.info){if(this.ace.el.querySelector('.o_ace_info')){this.ace.el.querySelector('.o_ace_info').remove();}}}
_renderHover(delay,query,node){const xml=renderToString('web.ProfilingQwebView.hover',{delay:this._formatDelay(delay),query:query,});const div=new DOMParser().parseFromString(xml,"text/html").querySelector('div');node.insertBefore(div,node.firstChild);}
_renderInfo(delays,querys,displayDetail,groups,node){const xml=renderToString('web.ProfilingQwebView.info',{delay:this._formatDelay(delays.reduce((a,b)=>a+b,0)),query:querys.reduce((a,b)=>a+b,0)||".",displayDetail:displayDetail,groups:groups,});const div=new DOMParser().parseFromString(xml,"text/html").querySelector('div');node.insertBefore(div,node.firstChild);}
_onSelectView(ev){this.state.viewID=+ev.currentTarget.dataset.id;this._renderView();}}
ProfilingQwebView.template="web.ProfilingQwebView";ProfilingQwebView.components={MenuItem};registry.category("fields").add("profiling_qweb_view",ProfilingQwebView);return __exports;});;

/* /web/static/src/core/debug/profiling/profiling_service.js */
odoo.define('@web/core/debug/profiling/profiling_service',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{ProfilingItem}=require("@web/core/debug/profiling/profiling_item");const{session}=require("@web/session");const{profilingSystrayItem}=require("@web/core/debug/profiling/profiling_systray_item");const{EventBus,reactive}=require("@odoo/owl");const systrayRegistry=registry.category("systray");const profilingService={dependencies:["orm"],start(env,{orm}){if(!env.debug){return;}
function notify(){if(systrayRegistry.contains("web.profiling")&&state.isEnabled===false){systrayRegistry.remove("web.profiling",profilingSystrayItem);}
if(!systrayRegistry.contains("web.profiling")&&state.isEnabled===true){systrayRegistry.add("web.profiling",profilingSystrayItem,{sequence:99});}
bus.trigger("UPDATE");}
const state=reactive({session:session.profile_session||false,collectors:session.profile_collectors||["sql","traces_async"],params:session.profile_params||{},get isEnabled(){return Boolean(state.session);},},notify);const bus=new EventBus();notify();async function setProfiling(params){const kwargs=Object.assign({collectors:state.collectors,params:state.params,profile:state.isEnabled,},params);const resp=await orm.call("ir.profile","set_profiling",[],kwargs);if(resp.type){env.services.action.doAction(resp);}else{state.session=resp.session;state.collectors=resp.collectors;state.params=resp.params;}}
function profilingSeparator(){return{type:"separator",sequence:500,};}
function profilingItem(){return{type:"component",Component:ProfilingItem,props:{bus},sequence:510,};}
registry.category("debug").category("default").add("profilingSeparator",profilingSeparator).add("profilingItem",profilingItem);return{state,async toggleProfiling(){await setProfiling({profile:!state.isEnabled});},async toggleCollector(collector){const nextCollectors=state.collectors.slice();const index=nextCollectors.indexOf(collector);if(index>=0){nextCollectors.splice(index,1);}else{nextCollectors.push(collector);}
await setProfiling({collectors:nextCollectors});},async setParam(key,value){const nextParams=Object.assign({},state.params);nextParams[key]=value;await setProfiling({params:nextParams});},isCollectorEnabled(collector){return state.collectors.includes(collector);},};},};registry.category("services").add("profiling",profilingService);return __exports;});;

/* /web/static/src/core/debug/profiling/profiling_systray_item.js */
odoo.define('@web/core/debug/profiling/profiling_systray_item',async function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");class ProfilingSystrayItem extends Component{}
ProfilingSystrayItem.template="web.ProfilingSystrayItem";const profilingSystrayItem=__exports.profilingSystrayItem={Component:ProfilingSystrayItem,};return __exports;});;

/* /web/static/src/core/dialog/dialog.js */
odoo.define('@web/core/dialog/dialog',async function(require){'use strict';let __exports={};const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{useActiveElement}=require("@web/core/ui/ui_service");const{useForwardRefToParent}=require("@web/core/utils/hooks");const{Component,useChildSubEnv,useState}=require("@odoo/owl");const Dialog=__exports.Dialog=class Dialog extends Component{setup(){this.modalRef=useForwardRefToParent("modalRef");useActiveElement("modalRef");this.data=useState(this.env.dialogData);useHotkey("escape",()=>{this.data.close();});this.id=`dialog_${this.data.id}`;useChildSubEnv({inDialog:true,dialogId:this.id,closeDialog:this.data.close});owl.onWillDestroy(()=>{if(this.env.isSmall){this.data.scrollToOrigin();}});}
get isFullscreen(){return this.props.fullscreen||this.env.isSmall;}}
Dialog.template="web.Dialog";Dialog.props={contentClass:{type:String,optional:true},bodyClass:{type:String,optional:true},fullscreen:{type:Boolean,optional:true},footer:{type:Boolean,optional:true},header:{type:Boolean,optional:true},size:{type:String,optional:true,validate:(s)=>["sm","md","lg","xl"].includes(s)},technical:{type:Boolean,optional:true},title:{type:String,optional:true},modalRef:{type:Function,optional:true},slots:{type:Object,shape:{default:Object,header:{type:Object,optional:true},footer:{type:Object,optional:true},},},withBodyPadding:{type:Boolean,optional:true},};Dialog.defaultProps={contentClass:"",bodyClass:"",fullscreen:false,footer:true,header:true,size:"lg",technical:true,title:"Odoo",withBodyPadding:true,};return __exports;});;

/* /web/static/src/core/dialog/dialog_container.js */
odoo.define('@web/core/dialog/dialog_container',async function(require){'use strict';let __exports={};const{ErrorHandler,WithEnv}=require("@web/core/utils/components");const{Component,xml}=require("@odoo/owl");const DialogContainer=__exports.DialogContainer=class DialogContainer extends Component{handleError(error,dialog){dialog.props.close();Promise.resolve().then(()=>{throw error;});}}
DialogContainer.components={ErrorHandler,WithEnv};DialogContainer.template=xml`
    <div class="o_dialog_container" t-att-class="{'modal-open': Object.keys(props.dialogs).length > 0}">
        <div>
            <t t-foreach="Object.values(props.dialogs)" t-as="dialog" t-key="dialog.id">
                <ErrorHandler onError="(error) => this.handleError(error, dialog)">
                    <WithEnv env="{ dialogData: dialog.dialogData }">
                        <t t-component="dialog.class" t-props="dialog.props"/>
                    </WithEnv>
                </ErrorHandler>
            </t>
        </div>
    </div>
`;return __exports;});;

/* /web/static/src/core/dialog/dialog_service.js */
odoo.define('@web/core/dialog/dialog_service',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{DialogContainer}=require("@web/core/dialog/dialog_container");const{markRaw,reactive}=require("@odoo/owl");const dialogService=__exports.dialogService={start(env){const dialogs=reactive({});let dialogId=0;registry.category("main_components").add("DialogContainer",{Component:DialogContainer,props:{dialogs},});function add(dialogClass,props,options={}){for(const dialog of Object.values(dialogs)){dialog.dialogData.isActive=false;}
const id=++dialogId;function close(){if(dialogs[id]){delete dialogs[id];Object.values(dialogs).forEach((dialog,i,dialogArr)=>{dialog.dialogData.isActive=i===dialogArr.length-1;});if(options.onClose){options.onClose();}}}
const dialog={id,class:dialogClass,props:markRaw({...props,close}),dialogData:{isActive:true,close,id,},};if(env.isSmall){const scrollOrigin={top:window.scrollY,left:window.scrollX};dialog.dialogData.scrollToOrigin=()=>{if(!Object.keys(dialogs).length){window.scrollTo(scrollOrigin);}};}
dialogs[id]=dialog;return close;}
return{add};},};registry.category("services").add("dialog",dialogService);return __exports;});;

/* /web/static/src/core/domain.js */
odoo.define('@web/core/domain',async function(require){'use strict';let __exports={};const{shallowEqual}=require("@web/core/utils/arrays");const{evaluate,formatAST,parseExpr}=require("@web/core/py_js/py");const{toPyValue}=require("@web/core/py_js/py_utils");const InvalidDomainError=__exports.InvalidDomainError=class InvalidDomainError extends Error{}
const Domain=__exports.Domain=class Domain{static combine(domains,operator){if(domains.length===0){return new Domain([]);}
const domain1=domains[0]instanceof Domain?domains[0]:new Domain(domains[0]);if(domains.length===1){return domain1;}
const domain2=Domain.combine(domains.slice(1),operator);const result=new Domain([]);const astValues1=domain1.ast.value;const astValues2=domain2.ast.value;const op=operator==="AND"?"&":"|";const combinedAST={type:4,value:astValues1.concat(astValues2)};result.ast=normalizeDomainAST(combinedAST,op);return result;}
static and(domains){return Domain.combine(domains,"AND");}
static or(domains){return Domain.combine(domains,"OR");}
static not(domain){const result=new Domain(domain);result.ast.value.unshift({type:1,value:"!"});return result;}
constructor(descr=[]){if(descr instanceof Domain){return new Domain(descr.toString());}else{const rawAST=typeof descr==="string"?parseExpr(descr):toAST(descr);this.ast=normalizeDomainAST(rawAST);}}
contains(record){const expr=evaluate(this.ast,record);return matchDomain(record,expr);}
toString(){return formatAST(this.ast);}
toList(context){return evaluate(this.ast,context);}}
const TRUE_LEAF=[1,"=",1];const FALSE_LEAF=[0,"=",1];const TRUE_DOMAIN=new Domain([TRUE_LEAF]);const FALSE_DOMAIN=new Domain([FALSE_LEAF]);Domain.TRUE=TRUE_DOMAIN;Domain.FALSE=FALSE_DOMAIN;function toAST(domain){const elems=domain.map((elem)=>{switch(elem){case"!":case"&":case"|":return{type:1,value:elem};default:return{type:10,value:elem.map(toPyValue),};}});return{type:4,value:elems};}
function normalizeDomainAST(domain,op="&"){if(domain.type!==4){if(domain.type===10){const value=domain.value;if(value.findIndex((e)=>e.type===10)===-1||!value.every((e)=>e.type===10||e.type===1)){throw new InvalidDomainError("Invalid domain AST");}}else{throw new InvalidDomainError("Invalid domain AST");}}
if(domain.value.length===0){return domain;}
let expected=1;for(const child of domain.value){if(child.type===1&&(child.value==="&"||child.value==="|")){expected++;}else if(child.type!==1||child.value!=="!"){expected--;}}
const values=domain.value.slice();while(expected<0){expected++;values.unshift({type:1,value:op});}
if(expected>0){throw new InvalidDomainError(`invalid domain ${formatAST(domain)} (missing ${expected} segment(s))`);}
return{type:4,value:values};}
function matchCondition(record,condition){if(typeof condition==="boolean"){return condition;}
const[field,operator,value]=condition;if(typeof field==="string"){const names=field.split(".");if(names.length>=2){return matchCondition(record[names[0]],[names.slice(1).join("."),operator,value]);}}
const fieldValue=typeof field==="number"?field:record[field];switch(operator){case"=?":if([false,null].includes(value)){return true;}
case"=":case"==":if(Array.isArray(fieldValue)&&Array.isArray(value)){return shallowEqual(fieldValue,value);}
return fieldValue===value;case"!=":case"<>":return!matchCondition(record,[field,"==",value]);case"<":return fieldValue<value;case"<=":return fieldValue<=value;case">":return fieldValue>value;case">=":return fieldValue>=value;case"in":{const val=Array.isArray(value)?value:[value];const fieldVal=Array.isArray(fieldValue)?fieldValue:[fieldValue];return fieldVal.some((fv)=>val.includes(fv));}
case"not in":{const val=Array.isArray(value)?value:[value];const fieldVal=Array.isArray(fieldValue)?fieldValue:[fieldValue];return!fieldVal.some((fv)=>val.includes(fv));}
case"like":if(fieldValue===false){return false;}
return fieldValue.indexOf(value)>=0;case"=like":if(fieldValue===false){return false;}
return new RegExp(value.replace(/%/g,".*")).test(fieldValue);case"ilike":if(fieldValue===false){return false;}
return fieldValue.toLowerCase().indexOf(value.toLowerCase())>=0;case"=ilike":if(fieldValue===false){return false;}
return new RegExp(value.replace(/%/g,".*"),"i").test(fieldValue);}
throw new InvalidDomainError("could not match domain");}
function makeOperators(record){const match=matchCondition.bind(null,record);return{"!":(x)=>!match(x),"&":(a,b)=>match(a)&&match(b),"|":(a,b)=>match(a)||match(b),};}
function matchDomain(record,domain){if(domain.length===0){return true;}
const operators=makeOperators(record);const reversedDomain=Array.from(domain).reverse();const condStack=[];for(const item of reversedDomain){if(item in operators){const operator=operators[item];const operands=condStack.splice(-operator.length);condStack.push(operator(...operands));}else{condStack.push(item);}}
return matchCondition(record,condStack.pop());}
return __exports;});;

/* /web/static/src/core/domain_selector/domain_selector.js */
odoo.define('@web/core/domain_selector/domain_selector',async function(require){'use strict';let __exports={};const{Domain}=require("@web/core/domain");const{DomainSelectorRootNode}=require("@web/core/domain_selector/domain_selector_root_node");const{Component}=require("@odoo/owl");const DomainSelector=__exports.DomainSelector=class DomainSelector extends Component{setup(){this.nextNodeId=0;}
buildTree(){try{const domain=new Domain(this.props.value);const ctx={parent:null,index:0,domain:domain.toList(),get currentElement(){return ctx.domain[ctx.index];},next(){ctx.index++;},getFullDomain(){return rootNode.computeDomain().toString();},};const rootNode=this.makeRootNode(ctx);ctx.parent=rootNode;this.traverseNode(ctx);return ctx.parent;}catch(_e){return false;}}
traverseNode(ctx,negate=false){if(ctx.index<ctx.domain.length){if(ctx.currentElement==="!"){ctx.next();this.traverseNode(ctx,!negate);}else if(typeof ctx.currentElement==="string"&&["&","|"].includes(ctx.currentElement)){this.traverseBranchNode(ctx,negate);}else{this.traverseLeafNode(ctx,negate);}}}
traverseBranchNode(ctx,negate){if(ctx.parent.type!=="branch"||ctx.parent.operator!==ctx.currentElement){const node=this.makeBranchNode(ctx,ctx.currentElement,[],negate);ctx.parent.operands.push(node);ctx=Object.assign(Object.create(ctx),{parent:node});}
ctx.next();this.traverseNode(ctx);ctx.next();this.traverseNode(ctx);}
traverseLeafNode(ctx,negate){const condition=ctx.currentElement;const[leftOperand,operator,rightOperand]=condition;const node=this.makeLeafNode(ctx,operator,[leftOperand,rightOperand],negate);ctx.parent.operands.push(node);}
makeBranchNode(ctx,operator,operands,negate){const updateDomain=()=>this.props.update(ctx.getFullDomain());const makeFakeNode=this.makeFakeNode.bind(this);return{type:"branch",id:this.nextNodeId++,operator,operands,computeDomain(){let domain=Domain.combine(this.operands.map((operand)=>operand.computeDomain()),this.operator==="&"?"AND":"OR");if(negate){domain=Domain.not(domain);}
return domain;},update(operator){this.operator=operator;updateDomain();},insert(newNodeType){const newNode=makeFakeNode(ctx,newNodeType);const operands=ctx.parent.operands;operands.splice(operands.indexOf(this)+1,0,newNode);updateDomain();},delete(){const operands=ctx.parent.operands;operands.splice(operands.indexOf(this),1);updateDomain();},};}
makeLeafNode(ctx,operator,operands,negate){const updateDomain=()=>this.props.update(ctx.getFullDomain());const makeFakeNode=this.makeFakeNode.bind(this);return{type:"leaf",id:this.nextNodeId++,operator,operands,computeDomain(){let domain=new Domain([[this.operands[0],this.operator,this.operands[1]]]);if(negate){domain=Domain.not(domain);}
return domain;},update(changes){if("fieldName"in changes){this.operands[0]=changes.fieldName;}
if("operator"in changes){this.operator=changes.operator;}
if("value"in changes){this.operands[1]=changes.value;}
updateDomain();},insert(newNodeType){const newNode=makeFakeNode(ctx,newNodeType);const operands=ctx.parent.operands;operands.splice(operands.indexOf(this)+1,0,newNode);updateDomain();},delete(){const operands=ctx.parent.operands;operands.splice(operands.indexOf(this),1);updateDomain();},};}
makeRootNode(ctx){const updateDomain=(...args)=>this.props.update(...args);const makeFakeNode=this.makeFakeNode.bind(this);return{type:"root",id:this.nextNodeId++,operator:"&",operands:[],computeDomain(){return Domain.combine(this.operands.map((operand)=>operand.computeDomain()),"AND");},update(newValue,fromDebug){if(typeof newValue==="string"){updateDomain(newValue,fromDebug);}else if(this.operands.length){this.operands[0].update(newValue);}},insert(newNodeType){const newNode=makeFakeNode(ctx,newNodeType);if(ctx.parent){const operands=ctx.parent.operands;operands.splice(operands.indexOf(this)+1,0,newNode);}else{this.operands.push(newNode);}
updateDomain(ctx.getFullDomain());},delete(){},};}
makeFakeNode(ctx,type){const[field,op,value]=this.props.defaultLeafValue;if(type==="branch"){return this.makeBranchNode(ctx,ctx.parent.operator==="&"?"|":"&",[this.makeLeafNode(ctx,op,[field,value]),this.makeLeafNode(ctx,op,[field,value]),]);}else{return this.makeLeafNode(ctx,op,[field,value]);}}}
Object.assign(DomainSelector,{template:"web._DomainSelector",components:{DomainSelectorRootNode,},props:{className:{type:String,optional:true},resModel:String,value:String,debugValue:{type:String,optional:true},readonly:{type:Boolean,optional:true},update:{type:Function,optional:true},isDebugMode:{type:Boolean,optional:true},defaultLeafValue:{type:Array,optional:true},},defaultProps:{readonly:true,update:()=>{},isDebugMode:false,defaultLeafValue:["id","=",1],},});return __exports;});;

/* /web/static/src/core/domain_selector/domain_selector_branch_node.js */
odoo.define('@web/core/domain_selector/domain_selector_branch_node',async function(require){'use strict';let __exports={};const{DomainSelectorBranchOperator}=require("@web/core/domain_selector/domain_selector_branch_operator");const{DomainSelectorControlPanel}=require("@web/core/domain_selector/domain_selector_control_panel");const{DomainSelectorLeafNode}=require("@web/core/domain_selector/domain_selector_leaf_node");const{Component,useRef}=require("@odoo/owl");const DomainSelectorBranchNode=__exports.DomainSelectorBranchNode=class DomainSelectorBranchNode extends Component{setup(){this.root=useRef("root");}
onHoverDeleteNodeBtn(hovering){this.root.el.classList.toggle("o_hover_btns",hovering);}
onHoverInsertLeafNodeBtn(hovering){this.root.el.classList.toggle("o_hover_add_node",hovering);}
onHoverInsertBranchNodeBtn(hovering){this.root.el.classList.toggle("o_hover_add_node",hovering);this.root.el.classList.toggle("o_hover_add_inset_node",hovering);}}
DomainSelectorBranchNode.template="web.DomainSelectorBranchNode";DomainSelectorBranchNode.components={DomainSelectorBranchNode,DomainSelectorBranchOperator,DomainSelectorControlPanel,DomainSelectorLeafNode,};return __exports;});;

/* /web/static/src/core/domain_selector/domain_selector_branch_operator.js */
odoo.define('@web/core/domain_selector/domain_selector_branch_operator',async function(require){'use strict';let __exports={};const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{Component}=require("@odoo/owl");const DomainSelectorBranchOperator=__exports.DomainSelectorBranchOperator=class DomainSelectorBranchOperator extends Component{onOperatorSelected(operator){this.props.node.update(operator);}}
DomainSelectorBranchOperator.components={Dropdown,DropdownItem,};DomainSelectorBranchOperator.template="web.DomainSelectorBranchOperator";DomainSelectorBranchOperator.props={node:Object,readonly:Boolean,showCaret:{type:Boolean,optional:true,},};return __exports;});;

/* /web/static/src/core/domain_selector/domain_selector_control_panel.js */
odoo.define('@web/core/domain_selector/domain_selector_control_panel',async function(require){'use strict';let __exports={};const{Component,toRaw}=require("@odoo/owl");const DomainSelectorControlPanel=__exports.DomainSelectorControlPanel=class DomainSelectorControlPanel extends Component{deleteNode(){this.props.node.delete();}
insertNode(newNodeType){toRaw(this.props.node).insert(newNodeType);}
onEnterDeleteNodeBtn(){this.props.onHoverDeleteNodeBtn(true);}
onLeaveDeleteNodeBtn(){this.props.onHoverDeleteNodeBtn(false);}
onEnterInsertLeafNodeBtn(){this.props.onHoverInsertLeafNodeBtn(true);}
onLeaveInsertLeafNodeBtn(){this.props.onHoverInsertLeafNodeBtn(false);}
onEnterInsertBranchNodeBtn(){this.props.onHoverInsertBranchNodeBtn(true);}
onLeaveInsertBranchNodeBtn(){this.props.onHoverInsertBranchNodeBtn(false);}}
DomainSelectorControlPanel.template="web.DomainSelectorControlPanel";DomainSelectorControlPanel.props={node:Object,onHoverDeleteNodeBtn:Function,onHoverInsertLeafNodeBtn:Function,onHoverInsertBranchNodeBtn:Function,};return __exports;});;

/* /web/static/src/core/domain_selector/domain_selector_leaf_node.js */
odoo.define('@web/core/domain_selector/domain_selector_leaf_node',async function(require){'use strict';let __exports={};const{useModelField}=require("@web/core/model_field_selector/model_field_hook");const{ModelFieldSelector}=require("@web/core/model_field_selector/model_field_selector");const{registry}=require("@web/core/registry");const{DomainSelectorControlPanel}=require("@web/core/domain_selector/domain_selector_control_panel");const{DomainSelectorDefaultField}=require("@web/core/domain_selector/fields/domain_selector_default_field");const{Component,onWillStart,onWillUpdateProps,useRef}=require("@odoo/owl");const DomainSelectorLeafNode=__exports.DomainSelectorLeafNode=class DomainSelectorLeafNode extends Component{setup(){this.root=useRef("root");this.modelField=useModelField();this.fieldInfo={type:"integer",string:"ID",};onWillStart(async()=>{this.fieldInfo=await this.loadField(this.props.resModel,this.props.node.operands[0]);});onWillUpdateProps(async(nextProps)=>{this.fieldInfo=await this.loadField(nextProps.resModel,nextProps.node.operands[0]);});}
get displayedOperator(){const op=this.getOperatorInfo(this.props.node.operator);return op?op.label:"?";}
get isValueHidden(){const op=this.getOperatorInfo(this.props.node.operator);return op?op.hideValue:false;}
async loadField(resModel,fieldName){const chain=await this.modelField.loadChain(resModel,fieldName);if(!chain[chain.length-1].field&&chain.length>1){return chain[chain.length-2].field;}
return(chain[chain.length-1].field||{type:"integer",string:"ID",});}
findOperator(operatorList,opToFind){return operatorList.find((o)=>o.matches({field:this.fieldInfo,value:this.props.node.operands[1],operator:opToFind,}));}
getOperators(field){const operators=field.getOperators();if(this.findOperator(operators,this.props.node.operator)){return operators;}
return operators.concat(this.findOperator(registry.category("domain_selector/operator").getAll(),this.props.node.operator));}
getFieldComponent(type){return registry.category("domain_selector/fields").get(type,DomainSelectorDefaultField);}
getOperatorInfo(operator){const op=this.findOperator(this.getFieldComponent(this.fieldInfo.type).getOperators(),operator);if(op){return op;}
return this.findOperator(registry.category("domain_selector/operator").getAll(),this.props.node.operator);}
async onFieldChange(fieldName){const changes={fieldName};const fieldInfo=await this.loadField(this.props.resModel,fieldName);const component=this.getFieldComponent(fieldInfo.type);Object.assign(changes,component.onDidTypeChange(fieldInfo));if(!this.findOperator(component.getOperators(),this.props.node.operator)){const operatorInfo=component.getOperators()[0];changes.operator=operatorInfo.value;Object.assign(changes,operatorInfo.onDidChange(this.getOperatorInfo(this.props.node.operator),()=>component.onDidTypeChange(this.fieldInfo)));}
this.props.node.update(changes);}
onOperatorChange(ev){const component=this.getFieldComponent(this.fieldInfo.type);const operatorInfo=component.getOperators()[parseInt(ev.target.value,10)];const changes={operator:operatorInfo.value};Object.assign(changes,operatorInfo.onDidChange(this.getOperatorInfo(this.props.node.operator),()=>component.onDidTypeChange(this.fieldInfo)));this.props.node.update(changes);}
onHoverDeleteNodeBtn(hovering){this.root.el.classList.toggle("o_hover_btns",hovering);}
onHoverInsertLeafNodeBtn(hovering){this.root.el.classList.toggle("o_hover_add_node",hovering);}
onHoverInsertBranchNodeBtn(hovering){this.root.el.classList.toggle("o_hover_add_node",hovering);this.root.el.classList.toggle("o_hover_add_inset_node",hovering);}}
Object.assign(DomainSelectorLeafNode,{template:"web.DomainSelectorLeafNode",components:{DomainSelectorControlPanel,ModelFieldSelector,},});return __exports;});;

/* /web/static/src/core/domain_selector/domain_selector_operators.js */
odoo.define('@web/core/domain_selector/domain_selector_operators',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");function onDidChange(action){return function(oldOperator,fieldChange){if(this.category!==oldOperator.category){return action(fieldChange);}
return{};};}
function matchValue(){return function({operator}){return operator===this.value;};}
const dso=registry.category("domain_selector/operator");dso.add("=",{category:"equality",label:"=",value:"=",onDidChange:onDidChange((fieldChange)=>fieldChange()),matches({operator,value}){return operator===this.value&&typeof value!=="boolean";},});dso.add("!=",{category:"equality",label:_lt("is not ="),value:"!=",onDidChange:onDidChange((fieldChange)=>fieldChange()),matches({operator,value}){return operator===this.value&&typeof value!=="boolean";},});dso.add(">",{category:"comparison",label:">",value:">",onDidChange:onDidChange((fieldChange)=>fieldChange()),matches:matchValue(),});dso.add(">=",{category:"comparison",label:">=",value:">=",onDidChange:onDidChange((fieldChange)=>fieldChange()),matches:matchValue(),});dso.add("<",{category:"comparison",label:"<",value:"<",onDidChange:onDidChange((fieldChange)=>fieldChange()),matches:matchValue(),});dso.add("<=",{category:"comparison",label:"<=",value:"<=",onDidChange:onDidChange((fieldChange)=>fieldChange()),matches:matchValue(),});dso.add("ilike",{category:"like",label:_lt("contains"),value:"ilike",onDidChange:onDidChange(()=>({value:""})),matches:matchValue(),});dso.add("not ilike",{category:"like",label:_lt("does not contain"),value:"not ilike",onDidChange:onDidChange(()=>({value:""})),matches:matchValue(),});dso.add("like",{category:"like",label:_lt("like"),value:"like",onDidChange:onDidChange(()=>({value:""})),matches:matchValue(),});dso.add("not like",{category:"like",label:_lt("not like"),value:"not like",onDidChange:onDidChange(()=>({value:""})),matches:matchValue(),});dso.add("=like",{category:"like",label:_lt("=like"),value:"=like",onDidChange:onDidChange(()=>({value:""})),matches:matchValue(),});dso.add("=ilike",{category:"like",label:_lt("=ilike"),value:"=ilike",onDidChange:onDidChange(()=>({value:""})),matches:matchValue(),});dso.add("child_of",{category:"relation",label:_lt("child of"),value:"child_of",onDidChange:onDidChange(()=>({value:1})),matches:matchValue(),});dso.add("parent_of",{category:"relation",label:_lt("parent of"),value:"parent_of",onDidChange:onDidChange(()=>({value:1})),matches:matchValue(),});dso.add("in",{category:"in",label:_lt("in"),value:"in",onDidChange:onDidChange(()=>({value:[]})),matches:matchValue(),});dso.add("not in",{category:"in",label:_lt("not in"),value:"not in",onDidChange:onDidChange(()=>({value:[]})),matches:matchValue(),});dso.add("set",{category:"set",label:_lt("is set"),value:"set",hideValue:true,onDidChange(){return{operator:"!=",value:false,};},matches({operator,value}){return operator==="!="&&typeof value==="boolean";},});dso.add("not set",{category:"set",label:_lt("is not set"),value:"not set",hideValue:true,onDidChange(){return{operator:"=",value:false,};},matches({operator,value}){return operator==="="&&typeof value==="boolean";},});return __exports;});;

/* /web/static/src/core/domain_selector/domain_selector_root_node.js */
odoo.define('@web/core/domain_selector/domain_selector_root_node',async function(require){'use strict';let __exports={};const{DomainSelectorBranchNode}=require("@web/core/domain_selector/domain_selector_branch_node");const{DomainSelectorBranchOperator}=require("@web/core/domain_selector/domain_selector_branch_operator");const{DomainSelectorLeafNode}=require("@web/core/domain_selector/domain_selector_leaf_node");const{Component}=require("@odoo/owl");const DomainSelectorRootNode=__exports.DomainSelectorRootNode=class DomainSelectorRootNode extends Component{get hasNode(){return this.props.node.operands.length>0;}
get node(){return this.props.node.operands[0];}
insertNode(newNodeType){this.props.node.insert(newNodeType);}
onOperatorSelected(ev){this.props.node.update(ev.detail.payload.operator);}
onChange(ev){this.props.node.update(ev.target.value,true);}}
DomainSelectorRootNode.template="web.DomainSelectorRootNode";DomainSelectorRootNode.components={DomainSelectorBranchNode,DomainSelectorBranchOperator,DomainSelectorLeafNode,};return __exports;});;

/* /web/static/src/core/domain_selector/fields/domain_selector_boolean_field.js */
odoo.define('@web/core/domain_selector/fields/domain_selector_boolean_field',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{Component}=require("@odoo/owl");const dsf=registry.category("domain_selector/fields");const DomainSelectorBooleanField=__exports.DomainSelectorBooleanField=class DomainSelectorBooleanField extends Component{onChange(ev){this.props.update({value:ev.target.value==="1",});}}
Object.assign(DomainSelectorBooleanField,{template:"web.DomainSelectorBooleanField",onDidTypeChange(){return{value:true};},getOperators(){return[{category:"equality",label:_lt("is"),value:"=",onDidChange(){},matches({operator}){return operator===this.value;},},{category:"equality",label:_lt("is not"),value:"!=",onDidChange(){},matches({operator}){return operator===this.value;},},];},});dsf.add("boolean",DomainSelectorBooleanField);return __exports;});;

/* /web/static/src/core/domain_selector/fields/domain_selector_datetime_field.js */
odoo.define('@web/core/domain_selector/fields/domain_selector_datetime_field',async function(require){'use strict';let __exports={};const{DatePicker,DateTimePicker}=require("@web/core/datepicker/datepicker");const{deserializeDate,deserializeDateTime,serializeDate,serializeDateTime,}=require("@web/core/l10n/dates");const{registry}=require("@web/core/registry");const{Component}=require("@odoo/owl");const dsf=registry.category("domain_selector/fields");const dso=registry.category("domain_selector/operator");const DomainSelectorDateTimeField=__exports.DomainSelectorDateTimeField=class DomainSelectorDateTimeField extends Component{get component(){const{DatePicker,DateTimePicker}=this.constructor.components;return this.props.field.type==="date"?DatePicker:DateTimePicker;}
get deserializedValue(){const deserialize=this.props.field.type==="date"?deserializeDate:deserializeDateTime;return this.props.value?deserialize(this.props.value):luxon.DateTime.local();}
onChange(value){if(!this.deserializedValue.isValid&&!value){return;}
const serialize=this.props.field.type==="date"?serializeDate:serializeDateTime;this.props.update({value:serialize(value||luxon.DateTime.local())});}}
Object.assign(DomainSelectorDateTimeField,{template:"web.DomainSelectorDateTimeField",components:{DatePicker,DateTimePicker,},onDidTypeChange(field){const serialize=field.type==="date"?serializeDate:serializeDateTime;return{value:serialize(luxon.DateTime.local())};},getOperators(){return["=","!=",">","<",">=","<=","set","not set"].map((key)=>dso.get(key));},});dsf.add("date",DomainSelectorDateTimeField);dsf.add("datetime",DomainSelectorDateTimeField);return __exports;});;

/* /web/static/src/core/domain_selector/fields/domain_selector_default_field.js */
odoo.define('@web/core/domain_selector/fields/domain_selector_default_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{DomainSelectorFieldInput}=require("@web/core/domain_selector/fields/domain_selector_field_input");const{Component}=require("@odoo/owl");const dso=registry.category("domain_selector/operator");const DomainSelectorDefaultField=__exports.DomainSelectorDefaultField=class DomainSelectorDefaultField extends Component{}
Object.assign(DomainSelectorDefaultField,{template:"web.DomainSelectorDefaultField",components:{DomainSelectorFieldInput,},onDidTypeChange(){return{value:""};},getOperators(){return dso.getAll();},});return __exports;});;

/* /web/static/src/core/domain_selector/fields/domain_selector_field_input.js */
odoo.define('@web/core/domain_selector/fields/domain_selector_field_input',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{Component}=require("@odoo/owl");const parsers=registry.category("parsers");const DomainSelectorFieldInput=__exports.DomainSelectorFieldInput=class DomainSelectorFieldInput extends Component{parseValue(value){const parser=parsers.get(this.props.field.type,(value)=>value);try{return parser(value);}catch(_){return value;}}
onChange(ev){this.props.update({value:this.parseValue(ev.target.value)});}}
DomainSelectorFieldInput.template="web.DomainSelectorFieldInput";return __exports;});;

/* /web/static/src/core/domain_selector/fields/domain_selector_field_input_with_tags.js */
odoo.define('@web/core/domain_selector/fields/domain_selector_field_input_with_tags',async function(require){'use strict';let __exports={};const{Component,useRef}=require("@odoo/owl");const DomainSelectorFieldInputWithTags=__exports.DomainSelectorFieldInputWithTags=class DomainSelectorFieldInputWithTags extends Component{setup(){this.inputRef=useRef("input");}
removeTag(tagIndex){const value=[...this.props.value];value.splice(tagIndex,1);this.props.update({value});}
addTag(value){this.props.update({value:this.props.value.concat(value)});}
onBtnClick(){const value=this.inputRef.el.value;this.inputRef.el.value="";this.addTag(value);}}
DomainSelectorFieldInputWithTags.template="web.DomainSelectorFieldInputWithTags";return __exports;});;

/* /web/static/src/core/domain_selector/fields/domain_selector_number_field.js */
odoo.define('@web/core/domain_selector/fields/domain_selector_number_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{DomainSelectorFieldInput}=require("@web/core/domain_selector/fields/domain_selector_field_input");const{Component}=require("@odoo/owl");const dsf=registry.category("domain_selector/fields");const dso=registry.category("domain_selector/operator");const DomainSelectorNumberField=__exports.DomainSelectorNumberField=class DomainSelectorNumberField extends Component{}
Object.assign(DomainSelectorNumberField,{template:"web.DomainSelectorNumberField",components:{DomainSelectorFieldInput,},onDidTypeChange(){return{value:0};},getOperators(){return["=","!=",">","<",">=","<=","ilike","not ilike","set","not set",].map((key)=>dso.get(key));},});dsf.add("integer",DomainSelectorNumberField);dsf.add("float",DomainSelectorNumberField);dsf.add("monetary",DomainSelectorNumberField);return __exports;});;

/* /web/static/src/core/domain_selector/fields/domain_selector_relation_field.js */
odoo.define('@web/core/domain_selector/fields/domain_selector_relation_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{DomainSelectorFieldInput}=require("@web/core/domain_selector/fields/domain_selector_field_input");const{Component}=require("@odoo/owl");const dso=registry.category("domain_selector/operator");const DomainSelectorRelationField=__exports.DomainSelectorRelationField=class DomainSelectorRelationField extends Component{}
Object.assign(DomainSelectorRelationField,{template:"web.DomainSelectorRelationField",components:{DomainSelectorFieldInput,},onDidTypeChange(){return{value:"0"};},getOperators(){return["=","!=","ilike","not ilike","set","not set"].map((key)=>dso.get(key));},});registry.category("domain_selector/fields").add("one2many",DomainSelectorRelationField).add("many2one",DomainSelectorRelationField).add("many2many",DomainSelectorRelationField);return __exports;});;

/* /web/static/src/core/domain_selector/fields/domain_selector_selection_field.js */
odoo.define('@web/core/domain_selector/fields/domain_selector_selection_field',async function(require){'use strict';let __exports={};const{evaluateExpr}=require("@web/core/py_js/py");const{formatAST,toPyValue}=require("@web/core/py_js/py_utils");const{registry}=require("@web/core/registry");const{Component}=require("@odoo/owl");const dsf=registry.category("domain_selector/fields");const dso=registry.category("domain_selector/operator");const DomainSelectorSelectionField=__exports.DomainSelectorSelectionField=class DomainSelectorSelectionField extends Component{get options(){return[[false,""],...this.props.field.selection.filter((option)=>!this.props.value.includes(option[0])),];}
get formattedValue(){const ast=toPyValue(this.props.value);return formatAST(ast);}
onChange(ev){this.props.update({value:ev.target.value});}
onChangeMulti(ev){this.props.update({value:evaluateExpr(ev.target.value)});}}
Object.assign(DomainSelectorSelectionField,{template:"web.DomainSelectorSelectionField",onDidTypeChange(field){return{value:field.selection[0][0]};},getOperators(){return["=","!=","set","not set"].map((key)=>dso.get(key));},});dsf.add("selection",DomainSelectorSelectionField);return __exports;});;

/* /web/static/src/core/domain_selector/fields/domain_selector_text_field.js */
odoo.define('@web/core/domain_selector/fields/domain_selector_text_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{DomainSelectorFieldInput}=require("@web/core/domain_selector/fields/domain_selector_field_input");const{DomainSelectorFieldInputWithTags}=require("@web/core/domain_selector/fields/domain_selector_field_input_with_tags");const{Component}=require("@odoo/owl");const dsf=registry.category("domain_selector/fields");const dso=registry.category("domain_selector/operator");const DomainSelectorTextField=__exports.DomainSelectorTextField=class DomainSelectorTextField extends Component{}
Object.assign(DomainSelectorTextField,{template:"web.DomainSelectorTextField",components:{DomainSelectorFieldInput,DomainSelectorFieldInputWithTags,},onDidTypeChange(){return{value:""};},getOperators(){return["=","!=","ilike","not ilike","set","not set","in","not in"].map((key)=>dso.get(key));},});dsf.add("char",DomainSelectorTextField);dsf.add("html",DomainSelectorTextField);dsf.add("text",DomainSelectorTextField);return __exports;});;

/* /web/static/src/core/domain_selector_dialog/domain_selector_dialog.js */
odoo.define('@web/core/domain_selector_dialog/domain_selector_dialog',async function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{DomainSelector}=require("@web/core/domain_selector/domain_selector");const{_t}=require("@web/core/l10n/translation");const{Component,useState}=require("@odoo/owl");const DomainSelectorDialog=__exports.DomainSelectorDialog=class DomainSelectorDialog extends Component{setup(){this.state=useState({value:this.props.initialValue,});}
get dialogTitle(){return _t("Domain");}
get domainSelectorProps(){return{className:this.props.className,resModel:this.props.resModel,readonly:this.props.readonly,isDebugMode:this.props.isDebugMode,defaultLeafValue:this.props.defaultLeafValue,value:this.state.value,update:(value)=>{this.state.value=value;},};}
async onSave(){await this.props.onSelected(this.state.value);this.props.close();}
onDiscard(){this.props.close();}}
DomainSelectorDialog.template="web.DomainSelectorDialog";DomainSelectorDialog.components={Dialog,DomainSelector,};DomainSelectorDialog.props={close:Function,className:{type:String,optional:true},resModel:String,readonly:{type:Boolean,optional:true},isDebugMode:{type:Boolean,optional:true},defaultLeafValue:{type:Array,optional:true},initialValue:{type:String,optional:true},onSelected:{type:Function,optional:true},};DomainSelectorDialog.defaultProps={initialValue:"",onSelected:()=>{},readonly:true,isDebugMode:false,};return __exports;});;

/* /web/static/src/core/dropdown/dropdown.js */
odoo.define('@web/core/dropdown/dropdown',async function(require){'use strict';let __exports={};const{useBus,useService}=require("@web/core/utils/hooks");const{usePosition}=require("@web/core/position_hook");const{useDropdownNavigation}=require("@web/core/dropdown/dropdown_navigation_hook");const{localization}=require("@web/core/l10n/localization");const{Component,EventBus,onWillStart,status,useEffect,useExternalListener,useRef,useState,useChildSubEnv,}=require("@odoo/owl");const DIRECTION_CARET_CLASS={bottom:"dropdown",top:"dropup",left:"dropstart",right:"dropend",};const DROPDOWN=__exports.DROPDOWN=Symbol("Dropdown");const Dropdown=__exports.Dropdown=class Dropdown extends Component{setup(){this.state=useState({open:this.props.startOpen,groupIsOpen:this.props.startOpen,});this.rootRef=useRef("root");onWillStart(()=>{if(this.state.open&&this.props.beforeOpen){return this.props.beforeOpen();}});if(!this.props.manualOnly){useExternalListener(window,"click",this.onWindowClicked,{capture:true});useBus(Dropdown.bus,"state-changed",({detail})=>this.onDropdownStateChanged(detail));}
this.ui=useService("ui");useEffect(()=>{Promise.resolve().then(()=>{this.myActiveEl=this.ui.activeElement;});},()=>[]);this.parentDropdown=this.env[DROPDOWN];useChildSubEnv({[DROPDOWN]:{close:this.close.bind(this),closeAllParents:()=>{this.close();if(this.parentDropdown){this.parentDropdown.closeAllParents();}},},});useDropdownNavigation();const position=this.props.position||(this.parentDropdown?"right-start":"bottom-start");let[direction]=position.split("-");if(["left","right"].includes(direction)&&localization.direction==="rtl"){direction=direction==="left"?"right":"left";}
const positioningOptions={popper:"menuRef",position,};this.directionCaretClass=DIRECTION_CARET_CLASS[direction];this.togglerRef=useRef("togglerRef");if(this.props.toggler==="parent"){useEffect(()=>{const onClick=(ev)=>{if(this.rootRef.el.contains(ev.target)){return;}
this.toggle();};if(this.rootRef.el.parentElement.tabIndex===-1){this.rootRef.el.parentElement.tabIndex=-1;}
this.rootRef.el.parentElement.addEventListener("click",onClick);return()=>{this.rootRef.el.parentElement.removeEventListener("click",onClick);};},()=>[]);useEffect((open)=>{this.rootRef.el.parentElement.ariaExpanded=open?"true":"false";},()=>[this.state.open]);usePosition(()=>this.rootRef.el.parentElement,positioningOptions);}else{const togglerRef=useRef("togglerRef");usePosition(()=>togglerRef.el,positioningOptions);}}
async changeStateAndNotify(stateSlice){if(stateSlice.open&&this.props.beforeOpen){await this.props.beforeOpen();if(status(this)==="destroyed"){return;}}
Object.assign(this.state,stateSlice);const stateChangedPayload={emitter:this,newState:{...this.state},};Dropdown.bus.trigger("state-changed",stateChangedPayload);}
close(){return this.changeStateAndNotify({open:false,groupIsOpen:false});}
open(){return this.changeStateAndNotify({open:true,groupIsOpen:true});}
toggle(){const toggled=!this.state.open;return this.changeStateAndNotify({open:toggled,groupIsOpen:toggled});}
get showCaret(){return this.props.showCaret===undefined?this.parentDropdown:this.props.showCaret;}
onDropdownStateChanged(args){if(!this.rootRef.el||this.rootRef.el.contains(args.emitter.rootRef.el)){return;}
if(args.emitter.rootRef.el.parentElement===this.rootRef.el.parentElement){this.state.groupIsOpen=args.newState.groupIsOpen;if(this.state.open&&args.newState.open){this.state.open=false;}}else{if(this.state.open&&args.newState.open){this.close();}}}
onTogglerClick(){this.toggle();}
onTogglerMouseEnter(){if(this.state.groupIsOpen&&!this.state.open){this.togglerRef.el.focus();this.open();}}
onWindowClicked(ev){if(!this.state.open){return;}
if(this.ui.activeElement!==this.myActiveEl){return;}
if(ev.target.closest(".bootstrap-datetimepicker-widget")){return;}
const rootEl=this.props.toggler==="parent"?this.rootRef.el.parentElement:this.rootRef.el;const gotClickedInside=rootEl.contains(ev.target);if(!gotClickedInside){this.close();}}}
Dropdown.bus=new EventBus();Dropdown.props={class:{type:String,optional:true,},toggler:{type:String,optional:true,validate:(prop)=>["parent"].includes(prop),},skipTogglerTabbing:{type:Boolean,optional:true,},startOpen:{type:Boolean,optional:true,},manualOnly:{type:Boolean,optional:true,},menuClass:{type:String,optional:true,},beforeOpen:{type:Function,optional:true,},togglerClass:{type:String,optional:true,},hotkey:{type:String,optional:true,},tooltip:{type:String,optional:true,},title:{type:String,optional:true,},position:{type:String,optional:true,},slots:{type:Object,optional:true,},showCaret:{type:Boolean,optional:true,},};Dropdown.template="web.Dropdown";return __exports;});;

/* /web/static/src/core/dropdown/dropdown_item.js */
odoo.define('@web/core/dropdown/dropdown_item',async function(require){'use strict';let __exports={};const{DROPDOWN}=require("@web/core/dropdown/dropdown");const{Component}=require("@odoo/owl");const ParentClosingMode={None:"none",ClosestParent:"closest",AllParents:"all",};const DropdownItem=__exports.DropdownItem=class DropdownItem extends Component{onClick(ev){const{href,onSelected,parentClosingMode}=this.props;if(href){ev.preventDefault();}
if(onSelected){onSelected();}
const dropdown=this.env[DROPDOWN];if(!dropdown){return;}
const{ClosestParent,AllParents}=ParentClosingMode;switch(parentClosingMode){case ClosestParent:dropdown.close();break;case AllParents:dropdown.closeAllParents();break;}}
get dataAttributes(){const{dataset}=this.props;if(this.props.dataset){const attributes=Object.entries(dataset).map(([key,value])=>{return[`data-${key.replace(/[A-Z]/g, (char) => `-${char.toLowerCase()}`)}`,value];});return Object.fromEntries(attributes);}
return{};}}
DropdownItem.template="web.DropdownItem";DropdownItem.props={onSelected:{type:Function,optional:true,},class:{type:[String,Object],optional:true,},parentClosingMode:{type:ParentClosingMode,optional:true,},hotkey:{type:String,optional:true,},href:{type:String,optional:true,},slots:{type:Object,optional:true,},title:{type:String,optional:true,},dataset:{type:Object,optional:true,},};DropdownItem.defaultProps={parentClosingMode:ParentClosingMode.AllParents,};return __exports;});;

/* /web/static/src/core/dropdown/dropdown_navigation_hook.js */
odoo.define('@web/core/dropdown/dropdown_navigation_hook',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{browser}=require("@web/core/browser/browser");const{localization}=require("@web/core/l10n/localization");const{scrollTo}=require("@web/core/utils/scrolling");const{useComponent,useEffect,useRef}=require("@odoo/owl");const ACTIVE_MENU_ELEMENT_CLASS="focus";const MENU_ELEMENTS_SELECTORS=[":scope > .dropdown-item",":scope > .dropdown"];const NEXT_ACTIVE_INDEX_FNS={FIRST:()=>0,LAST:(list)=>list.length-1,NEXT:(list,prevActiveIndex)=>(prevActiveIndex+1)%list.length,PREV:(list,prevActiveIndex)=>(prevActiveIndex<=0?list.length:prevActiveIndex)-1,};__exports.useDropdownNavigation=useDropdownNavigation;function useDropdownNavigation(){const comp=useComponent();if(comp.parentDropdown&&comp.props.toggler==="parent"){throw new Error("A nested Dropdown must use its standard toggler");}
const originalOnTogglerClick=comp.onTogglerClick.bind(comp);comp.onTogglerClick=(ev)=>{if(comp.parentDropdown&&!ev.__fromDropdownNavigation){return;}
originalOnTogglerClick();};const originalOnTogglerMouseEnter=comp.onTogglerMouseEnter.bind(comp);comp.onTogglerMouseEnter=()=>{if(comp.parentDropdown){return;}
originalOnTogglerMouseEnter();};let mouseSelectionActive=true;const menuRef=useRef("menuRef");let menuElements=[];useEffect(()=>{if(!comp.state.open){return;}
const addedListeners=[];const queryResult=menuRef.el.querySelectorAll(MENU_ELEMENTS_SELECTORS.join());for(const el of queryResult){const isSubDropdown=el.classList.contains("dropdown");const isSubDropdownOpen=()=>el.classList.contains("show");const navTarget=isSubDropdown?el.querySelector(":scope > .dropdown-toggle"):el;let subDropdownTimeout;const closeSubDropdown=()=>{browser.clearTimeout(subDropdownTimeout);subDropdownTimeout=browser.setTimeout(()=>{if(isSubDropdownOpen()){const ev=new MouseEvent("click",{bubbles:false});ev.__fromDropdownNavigation=true;navTarget.dispatchEvent(ev);}},200);};const openSubDropdown=(immediate=false)=>{browser.clearTimeout(subDropdownTimeout);subDropdownTimeout=browser.setTimeout(()=>{if(!isSubDropdownOpen()){const ev=new MouseEvent("click",{bubbles:false});ev.__fromDropdownNavigation=true;navTarget.dispatchEvent(ev);}},immediate?0:200);};const makeOnlyActive=()=>{for(const menuElement of menuElements){if(menuElement.el===el){continue;}
menuElement.navTarget.classList.remove(ACTIVE_MENU_ELEMENT_CLASS);if(menuElement.isSubDropdown){menuElement.closeSubDropdown();}}
navTarget.classList.add(ACTIVE_MENU_ELEMENT_CLASS);navTarget.focus();};const menuElement={el,get isActive(){return navTarget.classList.contains(ACTIVE_MENU_ELEMENT_CLASS);},makeOnlyActive,navTarget,get isSubDropdownOpen(){return isSubDropdownOpen();},isSubDropdown,closeSubDropdown,openSubDropdown,};menuElements.push(menuElement);const elementListeners={mouseenter:()=>{if(!mouseSelectionActive){mouseSelectionActive=true;}else{makeOnlyActive();if(isSubDropdown){openSubDropdown();}}},};for(const[eventType,listener]of Object.entries(elementListeners)){navTarget.addEventListener(eventType,listener);}
addedListeners.push([navTarget,elementListeners]);}
return()=>{menuElements=[];mouseSelectionActive=true;for(const[navTarget,listeners]of addedListeners){for(const[eventType,listener]of Object.entries(listeners)){navTarget.removeEventListener(eventType,listener);}}};});const getActiveMenuElement=()=>{return menuElements.find((menuElement)=>menuElement.isActive);};const setActiveMenuElement=(menuElement)=>{if(menuElements.length){if(typeof menuElement==="string"){const prevIndex=menuElements.indexOf(getActiveMenuElement());const nextIndex=NEXT_ACTIVE_INDEX_FNS[menuElement](menuElements,prevIndex);menuElement=menuElements[nextIndex];}
menuElement.makeOnlyActive();scrollTo(menuElement.el,{scrollable:menuElement.el.parentElement});}};useEffect((open)=>{if(open&&comp.parentDropdown){setActiveMenuElement("FIRST");}},()=>[comp.state.open]);const hotkeyService=useService("hotkey");const closeAndRefocus=()=>{const toFocus=comp.props.toggler==="parent"?comp.rootRef.el.parentElement:comp.rootRef.el.querySelector(":scope > .dropdown-toggle");comp.close().then(()=>{toFocus.focus();});};const closeSubDropdown=comp.parentDropdown?closeAndRefocus:()=>{};const openSubDropdown=()=>{const menuElement=getActiveMenuElement();if(menuElement&&menuElement.isSubDropdown){menuElement.openSubDropdown(true);}};const selectActiveMenuElement=()=>{const menuElement=getActiveMenuElement();if(menuElement){if(menuElement.isSubDropdown){menuElement.openSubDropdown(true);}else{menuElement.navTarget.click();}}};let hotkeyRemoves=[];const hotkeyCallbacks={home:()=>setActiveMenuElement("FIRST"),end:()=>setActiveMenuElement("LAST"),tab:()=>setActiveMenuElement("NEXT"),"shift+tab":()=>setActiveMenuElement("PREV"),arrowdown:()=>setActiveMenuElement("NEXT"),arrowup:()=>setActiveMenuElement("PREV"),arrowleft:localization.direction==="rtl"?openSubDropdown:closeSubDropdown,arrowright:localization.direction==="rtl"?closeSubDropdown:openSubDropdown,enter:selectActiveMenuElement,escape:closeAndRefocus,};useEffect((open)=>{if(!open){return;}
for(const[hotkey,callback]of Object.entries(hotkeyCallbacks)){const callbackWrapper=()=>{const hasOpenedSubDropdown=menuElements.some((m)=>m.isSubDropdownOpen);if(!hasOpenedSubDropdown){mouseSelectionActive=false;callback.call(comp);}};hotkeyRemoves.push(hotkeyService.add(hotkey,callbackWrapper,{allowRepeat:true}));}
return()=>{for(const removeHotkey of hotkeyRemoves){removeHotkey();}
hotkeyRemoves=[];};},()=>[comp.state.open]);}
return __exports;});;

/* /web/static/src/core/effects/effect_container.js */
odoo.define('@web/core/effects/effect_container',async function(require){'use strict';let __exports={};const{Component,xml,onWillDestroy}=require("@odoo/owl");const EffectContainer=__exports.EffectContainer=class EffectContainer extends Component{setup(){this.effect=null;const listenerRef=this.props.bus.addEventListener("UPDATE",(ev)=>{this.effect=ev.detail;this.render();});onWillDestroy(()=>{this.props.bus.removeEventListener("UPDATE",listenerRef);});}
removeEffect(){this.effect=null;this.render();}}
EffectContainer.template=xml`
  <div class="o_effects_manager">
    <t t-if="effect">
        <t t-component="effect.Component" t-props="effect.props" t-key="effect.id" close="() => this.removeEffect()"/>
    </t>
  </div>`;return __exports;});;

/* /web/static/src/core/effects/effect_service.js */
odoo.define('@web/core/effects/effect_service',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{EffectContainer}=require("@web/core/effects/effect_container");const{RainbowMan}=require("@web/core/effects/rainbow_man");const{EventBus}=require("@odoo/owl");const effectRegistry=registry.category("effects");function rainbowMan(env,params={}){let message=params.message;if(message instanceof jQuery){console.log("Providing a jQuery element to an effect is deprecated. Note that all event handlers will be lost.");message=message.html();}else if(message instanceof Element){console.log("Providing an HTML element to an effect is deprecated. Note that all event handlers will be lost.");message=message.outerHTML;}else if(!message){message=env._t("Well Done!");}
if(env.services.user.showEffect){const props={imgUrl:params.img_url||"/web/static/img/smile.svg",fadeout:params.fadeout||"medium",message,Component:params.Component,props:params.props,};return{Component:RainbowMan,props};}
env.services.notification.add(message);}
effectRegistry.add("rainbow_man",rainbowMan);const effectService=__exports.effectService={start(env){const bus=new EventBus();registry.category("main_components").add("EffectContainer",{Component:EffectContainer,props:{bus},});let effectId=0;function add(params={}){const type=params.type||"rainbow_man";const effect=effectRegistry.get(type);const{Component,props}=effect(env,params)||{};if(Component){bus.trigger("UPDATE",{Component,props,id:effectId++});}}
return{add};},};registry.category("services").add("effect",effectService);return __exports;});;

/* /web/static/src/core/effects/rainbow_man.js */
odoo.define('@web/core/effects/rainbow_man',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{Component,useEffect,useExternalListener,useState}=require("@odoo/owl");const RainbowMan=__exports.RainbowMan=class RainbowMan extends Component{setup(){useExternalListener(document.body,"click",this.closeRainbowMan);this.state=useState({isFading:false});this.delay=RainbowMan.rainbowFadeouts[this.props.fadeout];if(this.delay){useEffect(()=>{const timeout=browser.setTimeout(()=>{this.state.isFading=true;},this.delay);return()=>browser.clearTimeout(timeout);},()=>[]);}}
onAnimationEnd(ev){if(this.delay&&ev.animationName==="reward-fading-reverse"){ev.stopPropagation();this.closeRainbowMan();}}
closeRainbowMan(){this.props.close();}}
RainbowMan.template="web.RainbowMan";RainbowMan.rainbowFadeouts={slow:4500,medium:3500,fast:2000,no:false};return __exports;});;

/* /web/static/src/core/errors/error_dialogs.js */
odoo.define('@web/core/errors/error_dialogs',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{Dialog}=require("@web/core/dialog/dialog");const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{capitalize}=require("@web/core/utils/strings");const{Component,useState,markup}=require("@odoo/owl");const odooExceptionTitleMap=__exports.odooExceptionTitleMap=new Map(Object.entries({"odoo.addons.base.models.ir_mail_server.MailDeliveryException":_lt("MailDeliveryException"),"odoo.exceptions.AccessDenied":_lt("Access Denied"),"odoo.exceptions.MissingError":_lt("Missing Record"),"odoo.exceptions.UserError":_lt("User Error"),"odoo.exceptions.ValidationError":_lt("Validation Error"),"odoo.exceptions.AccessError":_lt("Access Error"),"odoo.exceptions.Warning":_lt("Warning"),}));const ErrorDialog=__exports.ErrorDialog=class ErrorDialog extends Component{setup(){this.state=useState({showTraceback:false,});}
onClickClipboard(){browser.navigator.clipboard.writeText(`${this.props.name}\n${this.props.message}\n${this.props.traceback}`);}}
ErrorDialog.template="web.ErrorDialog";ErrorDialog.components={Dialog};ErrorDialog.title=_lt("Odoo Error");const ClientErrorDialog=__exports.ClientErrorDialog=class ClientErrorDialog extends ErrorDialog{}
ClientErrorDialog.title=_lt("Odoo Client Error");const NetworkErrorDialog=__exports.NetworkErrorDialog=class NetworkErrorDialog extends ErrorDialog{}
NetworkErrorDialog.title=_lt("Odoo Network Error");const RPCErrorDialog=__exports.RPCErrorDialog=class RPCErrorDialog extends ErrorDialog{setup(){super.setup();this.inferTitle();this.traceback=this.props.traceback;if(this.props.data&&this.props.data.debug){this.traceback=`${this.props.data.debug}\nThe above server error caused the following client error:\n${this.traceback}`;}}
inferTitle(){if(this.props.exceptionName&&odooExceptionTitleMap.has(this.props.exceptionName)){this.title=odooExceptionTitleMap.get(this.props.exceptionName).toString();return;}
if(!this.props.type){return;}
switch(this.props.type){case"server":this.title=this.env._t("Odoo Server Error");break;case"script":this.title=this.env._t("Odoo Client Error");break;case"network":this.title=this.env._t("Odoo Network Error");break;}}
onClickClipboard(){browser.navigator.clipboard.writeText(`${this.props.name}\n${this.props.message}\n${this.traceback}`);}}
const WarningDialog=__exports.WarningDialog=class WarningDialog extends Component{setup(){this.title=this.inferTitle();const{data,message}=this.props;if(data&&data.arguments&&data.arguments.length>0){this.message=data.arguments[0];}else{this.message=message;}}
inferTitle(){if(this.props.exceptionName&&odooExceptionTitleMap.has(this.props.exceptionName)){return odooExceptionTitleMap.get(this.props.exceptionName).toString();}
return this.props.title||this.env._t("Odoo Warning");}}
WarningDialog.template="web.WarningDialog";WarningDialog.components={Dialog};const RedirectWarningDialog=__exports.RedirectWarningDialog=class RedirectWarningDialog extends Component{setup(){this.actionService=useService("action");const{data,subType}=this.props;const[message,actionId,buttonText,additionalContext]=data.arguments;this.title=capitalize(subType)||this.env._t("Odoo Warning");this.message=message;this.actionId=actionId;this.buttonText=buttonText;this.additionalContext=additionalContext;}
async onClick(){const options={};if(this.additionalContext){options.additionalContext=this.additionalContext;}
if(this.actionId.help){this.actionId.help=markup(this.actionId.help);}
await this.actionService.doAction(this.actionId,options);this.props.close();}}
RedirectWarningDialog.template="web.RedirectWarningDialog";RedirectWarningDialog.components={Dialog};const Error504Dialog=__exports.Error504Dialog=class Error504Dialog extends Component{}
Error504Dialog.template="web.Error504Dialog";Error504Dialog.components={Dialog};Error504Dialog.title=_lt("Request timeout");const SessionExpiredDialog=__exports.SessionExpiredDialog=class SessionExpiredDialog extends Component{onClick(){browser.location.reload();}}
SessionExpiredDialog.template="web.SessionExpiredDialog";SessionExpiredDialog.components={Dialog};SessionExpiredDialog.title=_lt("Odoo Session Expired");registry.category("error_dialogs").add("odoo.exceptions.AccessDenied",WarningDialog).add("odoo.exceptions.AccessError",WarningDialog).add("odoo.exceptions.MissingError",WarningDialog).add("odoo.exceptions.UserError",WarningDialog).add("odoo.exceptions.ValidationError",WarningDialog).add("odoo.exceptions.RedirectWarning",RedirectWarningDialog).add("odoo.http.SessionExpiredException",SessionExpiredDialog).add("werkzeug.exceptions.Forbidden",SessionExpiredDialog).add("504",Error504Dialog);return __exports;});;

/* /web/static/src/core/errors/error_handlers.js */
odoo.define('@web/core/errors/error_handlers',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{ConnectionLostError,RPCError}=require("@web/core/network/rpc_service");const{registry}=require("@web/core/registry");const{ClientErrorDialog,ErrorDialog,NetworkErrorDialog,RPCErrorDialog,}=require("@web/core/errors/error_dialogs");const{UncaughtClientError,UncaughtCorsError,UncaughtPromiseError}=require("@web/core/errors/error_service");const errorHandlerRegistry=registry.category("error_handlers");const errorDialogRegistry=registry.category("error_dialogs");const errorNotificationRegistry=registry.category("error_notifications");__exports.rpcErrorHandler=rpcErrorHandler;function rpcErrorHandler(env,error,originalError){if(!(error instanceof UncaughtPromiseError)){return false;}
if(originalError instanceof RPCError){error.unhandledRejectionEvent.preventDefault();const exceptionName=originalError.exceptionName;let ErrorComponent=originalError.Component;if(!ErrorComponent&&exceptionName){if(errorNotificationRegistry.contains(exceptionName)){const notif=errorNotificationRegistry.get(exceptionName);env.services.notification.add(notif.message||originalError.data.message,notif);return true;}
if(errorDialogRegistry.contains(exceptionName)){ErrorComponent=errorDialogRegistry.get(exceptionName);}}
if(!ErrorComponent&&originalError.data.context){const exceptionClass=originalError.data.context.exception_class;if(errorDialogRegistry.contains(exceptionClass)){ErrorComponent=errorDialogRegistry.get(exceptionClass);}}
env.services.dialog.add(ErrorComponent||RPCErrorDialog,{traceback:error.traceback,message:originalError.message,name:originalError.name,exceptionName:originalError.exceptionName,data:originalError.data,subType:originalError.subType,code:originalError.code,type:originalError.type,});return true;}}
errorHandlerRegistry.add("rpcErrorHandler",rpcErrorHandler,{sequence:97});let connectionLostNotifRemove=null;__exports.lostConnectionHandler=lostConnectionHandler;function lostConnectionHandler(env,error,originalError){if(!(error instanceof UncaughtPromiseError)){return false;}
if(originalError instanceof ConnectionLostError){if(connectionLostNotifRemove){return true;}
connectionLostNotifRemove=env.services.notification.add(env._t("Connection lost. Trying to reconnect..."),{sticky:true});let delay=2000;browser.setTimeout(function checkConnection(){env.services.rpc("/web/webclient/version_info",{}).then(function(){if(connectionLostNotifRemove){connectionLostNotifRemove();connectionLostNotifRemove=null;}
env.services.notification.add(env._t("Connection restored. You are back online."),{type:"info",});}).catch(()=>{delay=delay*1.5+500*Math.random();browser.setTimeout(checkConnection,delay);});},delay);return true;}}
errorHandlerRegistry.add("lostConnectionHandler",lostConnectionHandler,{sequence:98});const defaultDialogs=new Map([[UncaughtClientError,ClientErrorDialog],[UncaughtPromiseError,ClientErrorDialog],[UncaughtCorsError,NetworkErrorDialog],]);function defaultHandler(env,error){const DialogComponent=defaultDialogs.get(error.constructor)||ErrorDialog;env.services.dialog.add(DialogComponent,{traceback:error.traceback,message:error.message,name:error.name,});return true;}
errorHandlerRegistry.add("defaultHandler",defaultHandler,{sequence:100});return __exports;});;

/* /web/static/src/core/errors/error_service.js */
odoo.define('@web/core/errors/error_service',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{completeUncaughtError,getErrorTechnicalName}=require("@web/core/errors/error_utils");const{isIOS}=require("@web/core/browser/feature_detection");const{session}=require("@web/session");const UncaughtError=__exports.UncaughtError=class UncaughtError extends Error{constructor(message){super(message);this.name=getErrorTechnicalName(this);this.traceback=null;}}
const UncaughtClientError=__exports.UncaughtClientError=class UncaughtClientError extends UncaughtError{constructor(message=_lt("Uncaught Javascript Error")){super(message);}}
const UncaughtPromiseError=__exports.UncaughtPromiseError=class UncaughtPromiseError extends UncaughtError{constructor(message=_lt("Uncaught Promise")){super(message);this.unhandledRejectionEvent=null;}}
const UncaughtCorsError=__exports.UncaughtCorsError=class UncaughtCorsError extends UncaughtError{constructor(message=_lt("Uncaught CORS Error")){super(message);}}
const errorService=__exports.errorService={start(env){function handleError(uncaughtError,retry=true){let originalError=uncaughtError;while(originalError instanceof Error&&"cause"in originalError){originalError=originalError.cause;}
const services=env.services;if(!services.dialog||!services.notification||!services.rpc){if(retry){browser.setTimeout(()=>{handleError(uncaughtError,false);},1000);}
return;}
for(const handler of registry.category("error_handlers").getAll()){if(handler(env,uncaughtError,originalError)){break;}}
if(uncaughtError.event&&!uncaughtError.event.defaultPrevented){uncaughtError.event.preventDefault();console.error(uncaughtError.traceback);}}
browser.addEventListener("error",async(ev)=>{const{colno,error,filename,lineno,message}=ev;const errorsToIgnore=["ResizeObserver loop completed with undelivered notifications.","ResizeObserver loop limit exceeded",];if(!error&&errorsToIgnore.includes(message)){return;}
let uncaughtError;if(!filename&&!lineno&&!colno){if(isIOS()&&session.is_frontend&&odoo.debug!=="assets"){return;}
uncaughtError=new UncaughtCorsError();uncaughtError.traceback=env._t(`Unknown CORS error\n\n`+`An unknown CORS error occured.\n`+`The error probably originates from a JavaScript file served from a different origin.\n`+`(Opening your browser console might give you a hint on the error.)`);}else{uncaughtError=new UncaughtClientError();uncaughtError.event=ev;if(error instanceof Error){error.errorEvent=ev;const annotated=env.debug&&env.debug.includes("assets");await completeUncaughtError(uncaughtError,error,annotated);}}
uncaughtError.cause=error;handleError(uncaughtError);});browser.addEventListener("unhandledrejection",async(ev)=>{const error=ev.reason;const uncaughtError=new UncaughtPromiseError();uncaughtError.unhandledRejectionEvent=ev;uncaughtError.event=ev;if(error instanceof Error){error.errorEvent=ev;const annotated=env.debug&&env.debug.includes("assets");await completeUncaughtError(uncaughtError,error,annotated);}
uncaughtError.cause=error;handleError(uncaughtError);});},};registry.category("services").add("error",errorService,{sequence:1});return __exports;});;

/* /web/static/src/core/errors/error_utils.js */
odoo.define('@web/core/errors/error_utils',async function(require){'use strict';let __exports={};const{_loadJS}=require("@web/core/assets");const{isBrowserChrome}=require("@web/core/browser/feature_detection");function combineErrorNames(uncaughtError,originalError){const originalErrorName=getErrorTechnicalName(originalError);const uncaughtErrorName=getErrorTechnicalName(uncaughtError);if(originalErrorName===Error.name){return uncaughtErrorName;}else{return`${uncaughtErrorName} > ${originalErrorName}`;}}
__exports.fullTraceback=fullTraceback;function fullTraceback(error){let traceback=formatTraceback(error);let current=error.cause;while(current){traceback+=`\n\nCaused by: ${
            current instanceof Error ? formatTraceback(current) : current
        }`;current=current.cause;}
return traceback;}
__exports.fullAnnotatedTraceback=fullAnnotatedTraceback;async function fullAnnotatedTraceback(error){if(error.annotatedTraceback){return error.annotatedTraceback;}
if(error.errorEvent){error.errorEvent.preventDefault();}
let traceback;try{traceback=await annotateTraceback(error);let current=error.cause;while(current){traceback+=`\n\nCaused by: ${
                current instanceof Error ? await annotateTraceback(current) : current
            }`;current=current.cause;}}catch(e){console.warn("Failed to annotate traceback for error:",error,"failure reason:",e);traceback=fullTraceback(error);}
error.annotatedTraceback=traceback;if(error.errorEvent){throw error;}
return traceback;}
__exports.completeUncaughtError=completeUncaughtError;async function completeUncaughtError(uncaughtError,originalError,annotated=false){uncaughtError.name=combineErrorNames(uncaughtError,originalError);if(annotated){uncaughtError.traceback=await fullAnnotatedTraceback(originalError);}else{uncaughtError.traceback=fullTraceback(originalError);}
if(originalError.message){uncaughtError.message=`${uncaughtError.message} > ${originalError.message}`;}
uncaughtError.cause=originalError;}
__exports.getErrorTechnicalName=getErrorTechnicalName;function getErrorTechnicalName(error){return error.name!==Error.name?error.name:error.constructor.name;}
__exports.formatTraceback=formatTraceback;function formatTraceback(error){let traceback=error.stack;const errorName=getErrorTechnicalName(error);if(!isBrowserChrome()){traceback=`${errorName}: ${error.message}\n${error.stack}`.replace(/\n/g,"\n    ").trim();}else if(error.stack){traceback=error.stack.replace(/^[^:]*/g,errorName);}
return traceback;}
__exports.annotateTraceback=annotateTraceback;async function annotateTraceback(error){const traceback=formatTraceback(error);try{await _loadJS("/web/static/lib/stacktracejs/stacktrace.js");}catch(_e){return traceback;}
if(error.stack){const regex=/ line (\d*) > (Function):(\d*)/gm;const subst=`:$1`;error.stack=error.stack.replace(regex,subst);}
let frames;try{frames=await StackTrace.fromError(error);}catch(e){console.warn("The following error could not be annotated:",error,e);return traceback;}
const lines=traceback.split("\n");if(lines[lines.length-1].trim()===""){lines.splice(-1);}
let lineIndex=0;let frameIndex=0;while(frameIndex<frames.length){const line=lines[lineIndex];if(!line.match(/:\d+:\d+\)?$/)){lineIndex++;continue;}
const frame=frames[frameIndex];const info=` (${frame.fileName}:${frame.lineNumber})`;lines[lineIndex]=line+info;lineIndex++;frameIndex++;}
return lines.join("\n");}
return __exports;});;

/* /web/static/src/core/file_input/file_input.js */
odoo.define('@web/core/file_input/file_input',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{Component,onMounted,useRef}=require("@odoo/owl");const FileInput=__exports.FileInput=class FileInput extends Component{setup(){this.http=useService("http");this.fileInputRef=useRef("file-input");onMounted(()=>{if(this.props.autoOpen){this.onTriggerClicked();}});}
get httpParams(){const{resId,resModel}=this.props;const params={csrf_token:odoo.csrf_token,ufile:[...this.fileInputRef.el.files],};if(resModel){params.model=resModel;}
if(resId!==undefined){params.id=resId;}
return params;}
async uploadFiles(params){const fileData=await this.http.post(this.props.route,params,"text");const parsedFileData=JSON.parse(fileData);if(parsedFileData.error){throw new Error(parsedFileData.error);}
return parsedFileData;}
async onFileInputChange(){const parsedFileData=await this.uploadFiles(this.httpParams);this.props.onUpload(parsedFileData);}
async onTriggerClicked(){if(await this.props.beforeOpen()){this.fileInputRef.el.click();}}}
FileInput.defaultProps={acceptedFileExtensions:"*",hidden:false,multiUpload:false,onUpload:()=>{},route:"/web/binary/upload_attachment",beforeOpen:async()=>true,};FileInput.props={acceptedFileExtensions:{type:String,optional:true},autoOpen:{type:Boolean,optional:true},hidden:{type:Boolean,optional:true},multiUpload:{type:Boolean,optional:true},onUpload:{type:Function,optional:true},beforeOpen:{type:Function,optional:true},resId:{type:Number,optional:true},resModel:{type:String,optional:true},route:{type:String,optional:true},"*":true,};FileInput.template="web.FileInput";return __exports;});;

/* /web/static/src/core/file_upload/file_upload_progress_bar.js */
odoo.define('@web/core/file_upload/file_upload_progress_bar',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{sprintf}=require("@web/core/utils/strings");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{Component}=require("@odoo/owl");const FileUploadProgressBar=__exports.FileUploadProgressBar=class FileUploadProgressBar extends Component{setup(){this.dialogService=useService("dialog");}
onCancel(){if(!this.props.fileUpload.xhr){return;}
this.dialogService.add(ConfirmationDialog,{body:sprintf(this.env._t("Do you really want to cancel the upload of %s?"),this.props.fileUpload.title),confirm:()=>{this.props.fileUpload.xhr.abort();},});}}
FileUploadProgressBar.props={fileUpload:{type:Object},};FileUploadProgressBar.template="web.FileUploadProgressBar";return __exports;});;

/* /web/static/src/core/file_upload/file_upload_progress_container.js */
odoo.define('@web/core/file_upload/file_upload_progress_container',async function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const FileUploadProgressContainer=__exports.FileUploadProgressContainer=class FileUploadProgressContainer extends Component{}
FileUploadProgressContainer.template="web.FileUploadProgressContainer";FileUploadProgressContainer.props={Component:{optional:false},shouldDisplay:{type:Function,optional:true},fileUploads:{type:Object},};return __exports;});;

/* /web/static/src/core/file_upload/file_upload_progress_record.js */
odoo.define('@web/core/file_upload/file_upload_progress_record',async function(require){'use strict';let __exports={};const{sprintf}=require("@web/core/utils/strings");const{FileUploadProgressBar}=require("@web/core/file_upload/file_upload_progress_bar");const{Component}=require("@odoo/owl");const FileUploadProgressRecord=__exports.FileUploadProgressRecord=class FileUploadProgressRecord extends Component{getProgressTexts(){const fileUpload=this.props.fileUpload;const percent=Math.round(fileUpload.progress*100);if(percent===100){return{left:this.env._t("Processing..."),right:"",};}else{const mbLoaded=Math.round(fileUpload.loaded/1000000);const mbTotal=Math.round(fileUpload.total/1000000);return{left:sprintf(this.env._t("Uploading... (%s%)"),percent),right:sprintf(this.env._t("(%s/%sMB)"),mbLoaded,mbTotal),};}}}
FileUploadProgressRecord.components={FileUploadProgressBar,};const FileUploadProgressKanbanRecord=__exports.FileUploadProgressKanbanRecord=class FileUploadProgressKanbanRecord extends FileUploadProgressRecord{}
FileUploadProgressKanbanRecord.template="web.FileUploadProgressKanbanRecord";const FileUploadProgressDataRow=__exports.FileUploadProgressDataRow=class FileUploadProgressDataRow extends FileUploadProgressRecord{}
FileUploadProgressDataRow.template="web.FileUploadProgressDataRow";return __exports;});;

/* /web/static/src/core/file_upload/file_upload_service.js */
odoo.define('@web/core/file_upload/file_upload_service',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{sprintf}=require("@web/core/utils/strings");const{EventBus,reactive}=require("@odoo/owl");const fileUploadService=__exports.fileUploadService={dependencies:["notification"],createXhr(){return new window.XMLHttpRequest();},start(env,{notificationService}){const uploads=reactive({});let nextId=1;const bus=new EventBus();const upload=async(route,files,params={})=>{const xhr=this.createXhr();xhr.open("POST",route);const formData=new FormData();formData.append("csrf_token",odoo.csrf_token);for(const file of files){formData.append("ufile",file);}
if(params.buildFormData){params.buildFormData(formData);}
const upload=reactive({id:nextId++,xhr,data:formData,progress:0,loaded:0,total:0,state:"pending",title:files.length===1?files[0].name:sprintf(env._t("%s Files"),files.length),type:files.length===1?files[0].type:undefined,});uploads[upload.id]=upload;xhr.upload.addEventListener("progress",async(ev)=>{upload.progress=ev.loaded/ev.total;upload.loaded=ev.loaded;upload.total=ev.total;upload.state="loading";});xhr.addEventListener("load",()=>{delete uploads[upload.id];upload.state="loaded";bus.trigger("FILE_UPLOAD_LOADED",{upload});});xhr.addEventListener("error",async()=>{delete uploads[upload.id];upload.state="error";if(params.displayErrorNotification!==undefined&&params.displayErrorNotification){notificationService.add(env._t("An error occured while uploading."),{title:env._t("Error"),sticky:true,});}
bus.trigger("FILE_UPLOAD_ERROR",{upload});});xhr.addEventListener("abort",async()=>{delete uploads[upload.id];upload.state="abort";bus.trigger("FILE_UPLOAD_ERROR",{upload});});xhr.send(formData);bus.trigger("FILE_UPLOAD_ADDED",{upload});return upload;};return{bus,upload,uploads};},};registry.category("services").add("file_upload",fileUploadService);return __exports;});;

/* /web/static/src/core/hotkeys/hotkey_hook.js */
odoo.define('@web/core/hotkeys/hotkey_hook',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{useEffect}=require("@odoo/owl");__exports.useHotkey=useHotkey;function useHotkey(hotkey,callback,options={}){const hotkeyService=useService("hotkey");useEffect(()=>hotkeyService.add(hotkey,callback,options),()=>[]);}
return __exports;});;

/* /web/static/src/core/hotkeys/hotkey_service.js */
odoo.define('@web/core/hotkeys/hotkey_service',async function(require){'use strict';let __exports={};const{isMacOS}=require("@web/core/browser/feature_detection");const{registry}=require("@web/core/registry");const{browser}=require("@web/core/browser/browser");const{getVisibleElements}=require("@web/core/utils/ui");const ALPHANUM_KEYS="abcdefghijklmnopqrstuvwxyz0123456789".split("");const NAV_KEYS=["arrowleft","arrowright","arrowup","arrowdown","pageup","pagedown","home","end","backspace","enter","tab","delete","space",];const MODIFIERS=["alt","control","shift"];const AUTHORIZED_KEYS=[...ALPHANUM_KEYS,...NAV_KEYS,"escape"];__exports.getActiveHotkey=getActiveHotkey;function getActiveHotkey(ev){if(!ev.key){return"";}
const hotkey=[];if(isMacOS()?ev.ctrlKey:ev.altKey){hotkey.push("alt");}
if(isMacOS()?ev.metaKey:ev.ctrlKey){hotkey.push("control");}
if(ev.shiftKey){hotkey.push("shift");}
let key=ev.key.toLowerCase();if(ev.code&&ev.code.indexOf("Digit")===0){key=ev.code.slice(-1);}
if(!AUTHORIZED_KEYS.includes(key)&&ev.code&&ev.code.indexOf("Key")===0){key=ev.code.slice(-1).toLowerCase();}
if(!MODIFIERS.includes(key)){hotkey.push(key);}
return hotkey.join("+");}
const hotkeyService=__exports.hotkeyService={dependencies:["ui"],overlayModifier:"alt",start(env,{ui}){const registrations=new Map();let nextToken=0;let overlaysVisible=false;addListeners(browser);function addListeners(target){target.addEventListener("keydown",onKeydown);target.addEventListener("keyup",removeHotkeyOverlays);target.addEventListener("blur",removeHotkeyOverlays);target.addEventListener("click",removeHotkeyOverlays);}
function onKeydown(event){if(event.code&&event.code.indexOf("Numpad")===0&&/^\d$/.test(event.key)){return;}
const hotkey=getActiveHotkey(event);if(!hotkey){return;}
const{activeElement,isBlocked}=ui;if(isBlocked){return;}
const elementsWithAccessKey=document.querySelectorAll("[accesskey]");for(const el of elementsWithAccessKey){if(el instanceof HTMLElement){el.dataset.hotkey=el.accessKey;el.removeAttribute("accesskey");}}
if(!overlaysVisible&&hotkey===hotkeyService.overlayModifier){addHotkeyOverlays(activeElement);event.preventDefault();return;}
const singleKey=hotkey.split("+").pop();if(!AUTHORIZED_KEYS.includes(singleKey)){return;}
const targetIsEditable=event.target instanceof HTMLElement&&(/input|textarea/i.test(event.target.tagName)||event.target.isContentEditable);const shouldProtectEditable=targetIsEditable&&!event.target.dataset.allowHotkeys&&singleKey!=="escape";const infos={activeElement,hotkey,isRepeated:event.repeat,target:event.target,shouldProtectEditable,};const dispatched=dispatch(infos);if(dispatched){event.preventDefault();event.stopImmediatePropagation();}
if(overlaysVisible){removeHotkeyOverlays();event.preventDefault();}}
function dispatch(infos){const{activeElement,hotkey,isRepeated,target,shouldProtectEditable}=infos;const reversedRegistrations=Array.from(registrations.values()).reverse();const domRegistrations=getDomRegistrations(hotkey,activeElement);const allRegistrations=reversedRegistrations.concat(domRegistrations);const candidates=allRegistrations.filter((reg)=>reg.hotkey===hotkey&&(reg.allowRepeat||!isRepeated)&&(reg.bypassEditableProtection||!shouldProtectEditable)&&(reg.global||reg.activeElement===activeElement)&&(!reg.validate||reg.validate(target))&&(!reg.area||(target instanceof Node&&reg.area()&&reg.area().contains(target))));let winner=candidates.shift();if(winner&&winner.area){for(const candidate of candidates.filter((c)=>Boolean(c.area))){if(candidate.area()&&winner.area().contains(candidate.area())){winner=candidate;}}}
if(winner){winner.callback({area:winner.area&&winner.area(),target,});return true;}
return false;}
function getDomRegistrations(hotkey,activeElement){const overlayModParts=hotkeyService.overlayModifier.split("+");if(!overlayModParts.every((el)=>hotkey.includes(el))){return[];}
const cleanHotkey=hotkey.split("+").filter((key)=>!overlayModParts.includes(key)).join("+");const elems=getVisibleElements(activeElement,`[data-hotkey='${cleanHotkey}' i]`);return elems.map((el)=>({hotkey,activeElement,bypassEditableProtection:true,callback:()=>{el.focus();el.click();},}));}
function addHotkeyOverlays(activeElement){for(const el of getVisibleElements(activeElement,"[data-hotkey]:not(:disabled)")){const hotkey=el.dataset.hotkey;const overlay=document.createElement("div");overlay.classList.add("o_web_hotkey_overlay","position-absolute","top-0","bottom-0","start-0","end-0","d-flex","justify-content-center","align-items-center","m-0","bg-black-50","h6");const overlayKbd=document.createElement("kbd");overlayKbd.className="small";overlayKbd.appendChild(document.createTextNode(hotkey.toUpperCase()));overlay.appendChild(overlayKbd);let overlayParent;if(el.tagName.toUpperCase()==="INPUT"){overlayParent=el.parentElement;}else{overlayParent=el;}
if(overlayParent.style.position!=="absolute"){overlayParent.style.position="relative";}
overlayParent.appendChild(overlay);}
overlaysVisible=true;}
function removeHotkeyOverlays(){for(const overlay of document.querySelectorAll(".o_web_hotkey_overlay")){overlay.remove();}
overlaysVisible=false;}
function registerHotkey(hotkey,callback,options={}){if(!hotkey||hotkey.length===0){throw new Error("You must specify an hotkey when registering a registration.");}
if(!callback||typeof callback!=="function"){throw new Error("You must specify a callback function when registering a registration.");}
const keys=hotkey.toLowerCase().split("+").filter((k)=>!MODIFIERS.includes(k));if(keys.some((k)=>!AUTHORIZED_KEYS.includes(k))){throw new Error(`You are trying to subscribe for an hotkey ('${hotkey}')
            that contains parts not whitelisted: ${keys.join(", ")}`);}else if(keys.length>1){throw new Error(`You are trying to subscribe for an hotkey ('${hotkey}')
            that contains more than one single key part: ${keys.join("+")}`);}
const token=nextToken++;const registration={hotkey:hotkey.toLowerCase(),callback,activeElement:null,allowRepeat:options&&options.allowRepeat,bypassEditableProtection:options&&options.bypassEditableProtection,global:options&&options.global,area:options&&options.area,validate:options&&options.validate,};Promise.resolve().then(()=>{registration.activeElement=ui.activeElement;});registrations.set(token,registration);return token;}
function unregisterHotkey(token){registrations.delete(token);}
return{add(hotkey,callback,options={}){const token=registerHotkey(hotkey,callback,options);return()=>{unregisterHotkey(token);};},registerIframe(iframe){addListeners(iframe.contentWindow);},};},};registry.category("services").add("hotkey",hotkeyService);return __exports;});;

/* /web/static/src/core/l10n/dates.js */
odoo.define('@web/core/l10n/dates',async function(require){'use strict';let __exports={};const{localization}=require("@web/core/l10n/localization");const{_t}=require("@web/core/l10n/translation");const{memoize}=require("@web/core/utils/functions");const{sprintf}=require("@web/core/utils/strings");const{DateTime,Settings}=luxon;const SERVER_DATE_FORMAT="yyyy-MM-dd";const SERVER_TIME_FORMAT="HH:mm:ss";const SERVER_DATETIME_FORMAT=`${SERVER_DATE_FORMAT} ${SERVER_TIME_FORMAT}`;const alphaRegex=/[a-zA-Z]/g;const nonAlphaRegex=/[^a-zA-Z]/g;const nonDigitsRegex=/[^0-9]/g;const normalizeFormatTable={a:"ccc",A:"cccc",b:"MMM",B:"MMMM",d:"dd",H:"HH",I:"hh",j:"o",m:"MM",M:"mm",p:"a",S:"ss",W:"WW",w:"c",y:"yy",Y:"yyyy",c:"ccc MMM d HH:mm:ss yyyy",x:"MM/dd/yy",X:"HH:mm:ss",};const luxonToMomentFormatTable={c:"d",d:"D",o:"DDDD",a:"A",y:"Y",};const smartDateUnits={d:"days",m:"months",w:"weeks",y:"years",};const smartDateRegex=new RegExp(`^([+-])(\\d+)([${Object.keys(smartDateUnits).join("")}]?)$`);__exports.areDateEquals=areDateEquals;function areDateEquals(d1,d2){return d1 instanceof DateTime&&d2 instanceof DateTime?d1.equals(d2):d1===d2;}
function parseSmartDateInput(value){const match=smartDateRegex.exec(value);if(match){let date=DateTime.local();const offset=parseInt(match[2],10);const unit=smartDateUnits[match[3]||"d"];if(match[1]==="+"){date=date.plus({[unit]:offset});}else{date=date.minus({[unit]:offset});}
return date;}
return false;}
function isValidDateTime(dt){return dt&&dt.isValid&&dt.year>=1000&&dt.year<10000;}
const stripAlphaDupes=memoize(function stripAlphaDupes(str){return str.replace(alphaRegex,(letter,index,str)=>{return letter===str[index-1]?"":letter;});});const strftimeToLuxonFormat=__exports.strftimeToLuxonFormat=memoize(function strftimeToLuxonFormat(value){const output=[];let inToken=false;for(let index=0;index<value.length;++index){let character=value[index];if(character==="%"&&!inToken){inToken=true;continue;}
if(character.match(alphaRegex)){if(inToken&&normalizeFormatTable[character]!==undefined){character=normalizeFormatTable[character];}else{character="'"+character+"'";}}
output.push(character);inToken=false;}
return output.join("");});const luxonToMomentFormat=__exports.luxonToMomentFormat=memoize(function luxonToMomentFormat(format){return format.replace(alphaRegex,(match)=>{return luxonToMomentFormatTable[match]||match;});});__exports.luxonToMoment=luxonToMoment;function luxonToMoment(dt){if(dt.isValid){const o=dt.toObject();return moment({...o,month:o.month-1});}else{return moment.invalid();}}
__exports.momentToLuxon=momentToLuxon;function momentToLuxon(dt){const o=dt.toObject();return DateTime.fromObject({year:o.years,month:o.months+1,day:o.date,hour:o.hours,minute:o.minutes,second:o.seconds,millisecond:o.milliseconds,});}
__exports.is24HourFormat=is24HourFormat;function is24HourFormat(format){return(format||localization.timeFormat).indexOf("H")!==-1;}
__exports.formatDate=formatDate;function formatDate(value,options={}){if(value===false){return"";}
const format=options.format||localization.dateFormat;const numberingSystem=options.numberingSystem||Settings.defaultNumberingSystem||"latn";return value.toFormat(format,{numberingSystem});}
__exports.formatDateTime=formatDateTime;function formatDateTime(value,options={}){if(value===false){return"";}
const format=options.format||localization.dateTimeFormat;const numberingSystem=options.numberingSystem||Settings.defaultNumberingSystem||"latn";return value.setZone("default").toFormat(format,{numberingSystem});}
__exports.parseDate=parseDate;function parseDate(value,options={}){if(!value){return false;}
return parseDateTime(value,{format:localization.dateFormat,...options}).startOf("day");}
__exports.parseDateTime=parseDateTime;function parseDateTime(value,options={}){if(!value){return false;}
const fmt=options.format||localization.dateTimeFormat;const parseOpts={setZone:true,zone:"default",locale:options.locale,numberingSystem:options.numberingSystem||Settings.defaultNumberingSystem||"latn",};if(/[0-9]/.test(value)){parseOpts.numberingSystem="latn";}
let result=DateTime.fromFormat(value,fmt,parseOpts);if(!isValidDateTime(result)){result=parseSmartDateInput(value);}
if(!isValidDateTime(result)){const fmtWoZero=stripAlphaDupes(fmt);result=DateTime.fromFormat(value,fmtWoZero,parseOpts);}
if(!isValidDateTime(result)){const digitList=value.split(nonDigitsRegex).filter(Boolean);const fmtList=fmt.split(nonAlphaRegex).filter(Boolean);const valWoSeps=digitList.join("");let carry=0;const fmtWoSeps=fmtList.map((part,i)=>{const digitLength=(digitList[i]||"").length;const actualPart=part.slice(0,digitLength+carry);carry+=digitLength-actualPart.length;return actualPart;}).join("");result=DateTime.fromFormat(valWoSeps,fmtWoSeps,parseOpts);}
if(!isValidDateTime(result)){const valueDigits=value.replace(nonDigitsRegex,"");if(valueDigits.length>4){result=DateTime.fromISO(value,parseOpts);if(!isValidDateTime(result)){result=DateTime.fromSQL(value,parseOpts);}}}
if(!isValidDateTime(result)){throw new Error(sprintf(_t("'%s' is not a correct date or datetime"),value));}
return result.setZone("default");}
__exports.deserializeDate=deserializeDate;function deserializeDate(value){return DateTime.fromSQL(value,{zone:"default",numberingSystem:"latn"});}
__exports.deserializeDateTime=deserializeDateTime;function deserializeDateTime(value){return DateTime.fromSQL(value,{zone:"utc",numberingSystem:"latn"}).setZone("default");}
const dateCache=new WeakMap();__exports.serializeDate=serializeDate;function serializeDate(value){if(!dateCache.has(value)){dateCache.set(value,value.toFormat(SERVER_DATE_FORMAT,{numberingSystem:"latn"}));}
return dateCache.get(value);}
const dateTimeCache=new WeakMap();__exports.serializeDateTime=serializeDateTime;function serializeDateTime(value){if(!dateTimeCache.has(value)){dateTimeCache.set(value,value.setZone("utc").toFormat(SERVER_DATETIME_FORMAT,{numberingSystem:"latn"}));}
return dateTimeCache.get(value);}
return __exports;});;

/* /web/static/src/core/l10n/localization.js */
odoo.define('@web/core/l10n/localization',async function(require){'use strict';let __exports={};const notReadyError=new Error("Localization parameters not ready yet. Maybe add 'localization' to your dependencies?");const localization=__exports.localization={dateFormat:notReadyError,dateTimeFormat:notReadyError,timeFormat:notReadyError,decimalPoint:notReadyError,direction:notReadyError,grouping:notReadyError,multiLang:notReadyError,thousandsSep:notReadyError,weekStart:notReadyError,};return __exports;});;

/* /web/static/src/core/l10n/localization_service.js */
odoo.define('@web/core/l10n/localization_service',async function(require){'use strict';let __exports={};const{session}=require("@web/session");const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{strftimeToLuxonFormat}=require("@web/core/l10n/dates");const{localization}=require("@web/core/l10n/localization");const{translatedTerms,_t}=require("@web/core/l10n/translation");const{Settings}=luxon;const NUMBERING_SYSTEMS=[[/^ar-(sa|sy|001)$/i,"arab"],[/^bn/i,"beng"],[/^bo/i,"tibt"],[/^pa-in/i,"guru"],[/^ta/i,"tamldec"],[/.*/i,"latn"],];const localizationService=__exports.localizationService={dependencies:["user"],start:async(env,{user})=>{const cacheHashes=session.cache_hashes||{};const translationsHash=cacheHashes.translations||new Date().getTime().toString();const lang=user.lang||null;const translationURL=session.translationURL||"/web/webclient/translations";let url=`${translationURL}/${translationsHash}`;if(lang){url+=`?lang=${lang}`;}
const response=await browser.fetch(url);if(!response.ok){throw new Error("Error while fetching translations");}
const{lang_parameters:userLocalization,modules:modules,multi_lang:multiLang,}=await response.json();const terms={};for(const addon of Object.keys(modules)){for(const message of modules[addon].messages){terms[message.id]=message.string;}}
Object.setPrototypeOf(translatedTerms,terms);env._t=_t;if(lang){const locale=lang==="sr@latin"?"sr-Latn-RS":lang.replace(/_/g,"-");Settings.defaultLocale=locale;for(const[re,numberingSystem]of NUMBERING_SYSTEMS){if(re.test(locale)){Settings.defaultNumberingSystem=numberingSystem;break;}}}
const dateFormat=strftimeToLuxonFormat(userLocalization.date_format);const timeFormat=strftimeToLuxonFormat(userLocalization.time_format);const dateTimeFormat=`${dateFormat} ${timeFormat}`;const grouping=JSON.parse(userLocalization.grouping);Object.assign(localization,{dateFormat,timeFormat,dateTimeFormat,decimalPoint:userLocalization.decimal_point,direction:userLocalization.direction,grouping,multiLang,thousandsSep:userLocalization.thousands_sep,weekStart:userLocalization.week_start,});},};registry.category("services").add("localization",localizationService);return __exports;});;

/* /web/static/src/core/l10n/translation.js */
odoo.define('@web/core/l10n/translation',async function(require){'use strict';let __exports={};const translatedTerms=__exports.translatedTerms={};__exports._t=_t;function _t(term){return translatedTerms[term]||term;}
class LazyTranslatedString extends String{valueOf(){const str=super.valueOf();return _t(str);}
toString(){return this.valueOf();}}
__exports._lt=_lt;function _lt(term){return new LazyTranslatedString(term);}
_lt("less than a minute ago");_lt("about a minute ago");_lt("%d minutes ago");_lt("about an hour ago");_lt("%d hours ago");_lt("a day ago");_lt("%d days ago");_lt("about a month ago");_lt("%d months ago");_lt("about a year ago");_lt("%d years ago");__exports.loadLanguages=loadLanguages;async function loadLanguages(orm){if(!loadLanguages.installedLanguages){loadLanguages.installedLanguages=await orm.call("res.lang","get_installed");}
return loadLanguages.installedLanguages;}
return __exports;});;

/* /web/static/src/core/macro.js */
odoo.define('@web/core/macro',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{isVisible}=require("@web/core/utils/ui");const ACTION_HELPERS=__exports.ACTION_HELPERS={click(el,_step){el.dispatchEvent(new MouseEvent("mouseover"));el.dispatchEvent(new MouseEvent("mouseenter"));el.dispatchEvent(new MouseEvent("mousedown"));el.dispatchEvent(new MouseEvent("mouseup"));el.click();el.dispatchEvent(new MouseEvent("mouseout"));el.dispatchEvent(new MouseEvent("mouseleave"));},text(el,step){this.click(el,step);el.value=step.value;el.dispatchEvent(new InputEvent("input",{bubbles:true}));el.dispatchEvent(new InputEvent("change",{bubbles:true}));},};class TimeoutError extends Error{}
class Macro{constructor(descr){this.name=descr.name||"anonymous";this.timeoutDuration=descr.timeout||0;this.timeout=null;this.currentIndex=0;this.interval="interval"in descr?Math.max(16,descr.interval):500;this.isComplete=false;this.steps=descr.steps;this.onStep=descr.onStep||(()=>{});this.onError=descr.onError;this.onTimeout=descr.onTimeout;this.setTimer();}
advance(){if(this.isComplete){return;}
const step=this.steps[this.currentIndex];const trigger=step.trigger;if(trigger){let el=null;if(typeof trigger==="function"){const result=this.safeCall(trigger);if(result instanceof HTMLElement){el=result;}}
if(typeof trigger==="string"){el=document.querySelector(trigger);}
if(el&&isVisible(el)){this.advanceStep(el,step);}}else{this.advanceStep(null,step);}}
advanceStep(el,step){this.safeCall(this.onStep,el,step);const action=step.action;if(action in ACTION_HELPERS){ACTION_HELPERS[action](el,step);}else if(typeof action==="function"){this.safeCall(action,el);}
this.currentIndex++;if(this.currentIndex===this.steps.length){this.isComplete=true;browser.clearTimeout(this.timeout);}else{this.setTimer();this.advance();}}
safeCall(fn,...args){if(this.isComplete){return;}
try{return fn(...args);}catch(e){this.handleError(e);}}
setTimer(){if(this.timeoutDuration){browser.clearTimeout(this.timeout);this.timeout=browser.setTimeout(()=>{if(this.onTimeout){const index=this.currentIndex;const step=this.steps[index];this.safeCall(this.onTimeout,step,index);}else{const error=new TimeoutError("Step timeout");this.handleError(error);}},this.timeoutDuration);}}
handleError(error){this.isComplete=true;browser.clearTimeout(this.timeout);if(this.onError){const index=this.currentIndex;const step=this.steps[index];this.onError(error,step,index);}else{console.error(error);}}}
const MacroEngine=__exports.MacroEngine=class MacroEngine{constructor(target=document.body){this.isRunning=false;this.timeout=null;this.target=target;this.interval=Infinity;this.macros=new Set();this.observer=new MutationObserver(this.delayedCheck.bind(this));}
async activate(descr){await Promise.resolve();const macro=new Macro(descr);this.interval=Math.min(this.interval,macro.interval);this.macros.add(macro);this.start();}
start(){if(!this.isRunning){this.isRunning=true;this.observer.observe(this.target,{attributes:true,childList:true,subtree:true,characterData:true,});}
this.delayedCheck();}
stop(){if(this.isRunning){this.isRunning=false;browser.clearTimeout(this.timeout);this.timeout=null;this.observer.disconnect();}}
delayedCheck(){if(this.timeout){browser.clearTimeout(this.timeout);}
this.timeout=browser.setTimeout(this.advanceMacros.bind(this),this.interval);}
advanceMacros(){const toDelete=[];for(const macro of this.macros){macro.advance();if(macro.isComplete){toDelete.push(macro);}}
if(toDelete.length){for(const macro of toDelete){this.macros.delete(macro);}
this.interval=Infinity;for(const macro of this.macros){this.interval=Math.min(this.interval,macro.interval);}}
if(this.macros.size===0){this.stop();}}}
return __exports;});;

/* /web/static/src/core/main_components_container.js */
odoo.define('@web/core/main_components_container',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{ErrorHandler}=require("@web/core/utils/components");const{useBus}=require("@web/core/utils/hooks");const{Component,xml}=require("@odoo/owl");const MainComponentsContainer=__exports.MainComponentsContainer=class MainComponentsContainer extends Component{setup(){const mainComponents=registry.category("main_components");this.Components=mainComponents.getEntries();useBus(mainComponents,"UPDATE",()=>{this.Components=mainComponents.getEntries();this.render();});}
handleComponentError(error,C){this.Components.splice(this.Components.indexOf(C),1);this.render();Promise.resolve().then(()=>{throw error;});}}
MainComponentsContainer.template=xml`
<div class="o-main-components-container">
    <t t-foreach="Components" t-as="C" t-key="C[0]">
        <ErrorHandler onError="error => this.handleComponentError(error, C)">
            <t t-component="C[1].Component" t-props="C[1].props"/>
        </ErrorHandler>
    </t>
</div>
`;MainComponentsContainer.components={ErrorHandler};return __exports;});;

/* /web/static/src/core/model_field_selector/model_field_hook.js */
odoo.define('@web/core/model_field_selector/model_field_hook',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");__exports.useModelField=useModelField;function useModelField(){const view=useService("view");const loadModelFields=(resModel)=>{return view.loadFields(resModel,{attributes:["store","searchable","type","string","relation","selection","related",],});};const loadChain=async(resModel,fieldName)=>{const fieldNameChain=fieldName.length?fieldName.split("."):[];let currentNode={resModel,field:null,};const chain=[currentNode];for(const fieldName of fieldNameChain){const fieldsInfo=await loadModelFields(currentNode.resModel);Object.assign(currentNode,{field:{...fieldsInfo[fieldName],name:fieldName},});if(fieldsInfo[fieldName].relation){currentNode={resModel:fieldsInfo[fieldName].relation,field:null,};chain.push(currentNode);}}
return chain;};return{loadModelFields,loadChain,};}
return __exports;});;

/* /web/static/src/core/model_field_selector/model_field_selector.js */
odoo.define('@web/core/model_field_selector/model_field_selector',async function(require){'use strict';let __exports={};const{useModelField}=require("@web/core/model_field_selector/model_field_hook");const{useUniquePopover}=require("@web/core/model_field_selector/unique_popover_hook");const{ModelFieldSelectorPopover}=require("@web/core/model_field_selector/model_field_selector_popover");const{Component,onWillStart,onWillUpdateProps}=require("@odoo/owl");const ModelFieldSelector=__exports.ModelFieldSelector=class ModelFieldSelector extends Component{setup(){this.popover=useUniquePopover();this.modelField=useModelField();this.chain=[];onWillStart(async()=>{this.chain=await this.loadChain(this.props.resModel,this.props.fieldName);});onWillUpdateProps(async(nextProps)=>{this.chain=await this.loadChain(nextProps.resModel,nextProps.fieldName);});}
get fieldNameChain(){return this.getFieldNameChain(this.props.fieldName);}
getFieldNameChain(fieldName){return fieldName.length?fieldName.split("."):[];}
async loadChain(resModel,fieldName){if("01".includes(fieldName)){return[{resModel,field:{string:fieldName}}];}
const fieldNameChain=this.getFieldNameChain(fieldName);let currentNode={resModel,field:null,};const chain=[currentNode];for(const fieldName of fieldNameChain){const fieldsInfo=await this.modelField.loadModelFields(currentNode.resModel);Object.assign(currentNode,{field:{...fieldsInfo[fieldName],name:fieldName},});if(fieldsInfo[fieldName].relation){currentNode={resModel:fieldsInfo[fieldName].relation,field:null,};chain.push(currentNode);}}
return chain;}
update(chain){this.props.update(chain.join("."));}
onFieldSelectorClick(ev){if(this.props.readonly){return;}
this.popover.add(ev.currentTarget,this.constructor.components.Popover,{chain:this.chain,update:this.update.bind(this),showSearchInput:this.props.showSearchInput,isDebugMode:this.props.isDebugMode,loadChain:this.loadChain.bind(this),filter:this.props.filter,followRelations:this.props.followRelations,},{closeOnClickAway:true,popoverClass:"o_popover_field_selector",});}}
Object.assign(ModelFieldSelector,{template:"web._ModelFieldSelector",components:{Popover:ModelFieldSelectorPopover,},props:{fieldName:String,resModel:String,readonly:{type:Boolean,optional:true},showSearchInput:{type:Boolean,optional:true},isDebugMode:{type:Boolean,optional:true},update:{type:Function,optional:true},filter:{type:Function,optional:true},followRelations:{type:Boolean,optional:true},},defaultProps:{readonly:true,isDebugMode:false,showSearchInput:true,update:()=>{},filter:()=>true,followRelations:true,},});return __exports;});;

/* /web/static/src/core/model_field_selector/model_field_selector_popover.js */
odoo.define('@web/core/model_field_selector/model_field_selector_popover',async function(require){'use strict';let __exports={};const{sortBy}=require("@web/core/utils/arrays");const{useModelField}=require("@web/core/model_field_selector/model_field_hook");const{fuzzyLookup}=require("@web/core/utils/search");const{useAutofocus}=require("@web/core/utils/hooks");const{Component,onWillStart}=require("@odoo/owl");const ModelFieldSelectorPopover=__exports.ModelFieldSelectorPopover=class ModelFieldSelectorPopover extends Component{setup(){this.chain=Array.from(this.props.chain);this.modelField=useModelField();this.unfilteredFields={};this.fields={};this.fieldKeys=[];this.currentActiveFieldId=0;this.searchValue="";this.defaultValue="";this.isDefaultValueVisible=false;this.fullFieldName=this.fieldNameChain.join(".");if(!this.env.isSmall){useAutofocus();useAutofocus({refName:'autofocusDefaultValue',selectAll:true});}
onWillStart(async()=>{await this.loadFields();});}
get currentActiveField(){return this.fieldKeys[this.currentActiveFieldId];}
get currentNode(){return this.chain[this.chain.length-1];}
get currentFieldName(){const nodes=this.chain.filter((node)=>node.field);return nodes.length?nodes[nodes.length-1].field.string:"";}
get fieldNameChain(){return this.chain.filter((node)=>node.field).map((node)=>node.field.name);}
async loadFields(){this.unfilteredFields=await this.modelField.loadModelFields(this.currentNode.resModel);this.fields={...this.unfilteredFields};this.fieldKeys=this.sortedKeys(this.fields);for(let key of this.fieldKeys){const field=this.fields[key];if(!field.searchable||!this.props.filter(field)){delete this.fields[key];}}
this.fieldKeys=this.sortedKeys(this.fields);}
sortedKeys(obj){const keys=Object.keys(obj);return sortBy(keys,(key)=>obj[key].string);}
async update(){const fieldNameChain=this.fieldNameChain;this.fullFieldName=fieldNameChain.join(".");await this.props.update(fieldNameChain);await this.loadFields();this.render();}
async onInputKeydown(ev){switch(ev.key){case"ArrowUp":ev.preventDefault();ev.stopPropagation();if(this.currentActiveFieldId>0){this.currentActiveFieldId--;await this.render();}
break;case"ArrowDown":ev.preventDefault();ev.stopPropagation();if(this.currentActiveFieldId<this.fieldKeys.length-1){this.currentActiveFieldId++;await this.render();}
break;case"ArrowLeft":ev.preventDefault();ev.stopPropagation();this.onPreviousBtnClick();break;case"Escape":ev.preventDefault();ev.stopPropagation();this.props.close();break;case"Enter":case"ArrowRight":ev.preventDefault();ev.stopPropagation();if(this.isDefaultValueVisible){this.selectDefaultValue(true);}else{const field={...this.fields[this.currentActiveField],name:this.currentActiveField}
this.onFieldSelected(field);}
break;}}
onSearch(ev){this.searchValue=ev.target.value;let fieldKeys=this.sortedKeys(this.fields);if(this.searchValue){fieldKeys=fuzzyLookup(this.searchValue,fieldKeys,(key)=>this.fields[key].string);}
this.fieldKeys=fieldKeys;this.render();}
onDefaultValue(ev){this.defaultValue=ev.target.value;this.render();}
onPreviousBtnClick(){this.searchValue="";if(this.currentNode.field===null){this.chain.pop();}
this.currentNode.field=null;this.update();}
onFieldSelected(field){this.searchValue="";this.currentActiveFieldId=0;this.currentNode.field=field;if(field.relation&&this.props.followRelations){this.chain.push({resModel:field.relation,field:null,});this.update();}else if(this.props.needDefaultValue){this.isDefaultValueVisible=true;this.render();this.update();}else{this.update();this.props.close();this.props.validate(this.fieldNameChain,this.defaultValue);}}
selectDefaultValue(acceptDefaultValue){if(!acceptDefaultValue){this.defaultValue="";}
this.props.close();this.update();this.props.validate(this.fieldNameChain,this.defaultValue);}
async onFieldNameChange(ev){this.fullFieldName=ev.target.value.replace(/\s+/g,"");const{resModel}=this.props.chain[0];try{this.chain=await this.props.loadChain(resModel,this.fullFieldName);this.update();}catch(_error){this.chain=[{resModel,field:null}];await this.props.update([]);this.render();}}}
ModelFieldSelectorPopover.defaultProps={validate:()=>{},needDefaultValue:false,isDebugMode:false,followRelations:true,};ModelFieldSelectorPopover.props={chain:Array,update:Function,showSearchInput:Boolean,isDebugMode:{type:Boolean,optional:true},loadChain:Function,filter:Function,close:Function,followRelations:{type:Boolean,optional:true},needDefaultValue:{type:Boolean,optional:true},validate:{type:Function,optional:true},};ModelFieldSelectorPopover.template="web.ModelFieldSelectorPopover";return __exports;});;

/* /web/static/src/core/model_field_selector/unique_popover_hook.js */
odoo.define('@web/core/model_field_selector/unique_popover_hook',async function(require){'use strict';let __exports={};const{usePopover}=require("@web/core/popover/popover_hook");__exports.useUniquePopover=useUniquePopover;function useUniquePopover(){const popover=usePopover();let remove=null;return Object.assign(Object.create(popover),{add(target,component,props,options){if(remove){remove();}
remove=popover.add(target,component,props,options);return()=>{remove();remove=null;};},});}
return __exports;});;

/* /web/static/src/core/model_selector/model_selector.js */
odoo.define('@web/core/model_selector/model_selector',async function(require){'use strict';let __exports={};const{AutoComplete}=require("@web/core/autocomplete/autocomplete");const{useService}=require("@web/core/utils/hooks");const{fuzzyLookup}=require("@web/core/utils/search");const{_t}=require("@web/core/l10n/translation");const{Component,onWillStart}=require("@odoo/owl");const ModelSelector=__exports.ModelSelector=class ModelSelector extends Component{setup(){this.orm=useService("orm");onWillStart(async()=>{if(!this.props.models){this.models=await this._fetchAvailableModels();}else{this.models=await this.orm.call("ir.model","display_name_for",[this.props.models,]);}
this.models=this.models.map((record)=>({label:record.display_name,technical:record.model,classList:{[`o_model_selector_${record.model}`]:1,},}));});}
get placeholder(){return _t("Search a Model...");}
get sources(){return[this.optionsSource];}
get optionsSource(){return{placeholder:_t("Loading..."),options:this.loadOptionsSource.bind(this),};}
onSelect(option){this.props.onModelSelected({label:option.label,technical:option.technical,});}
filterModels(name){if(!name){return this.models.slice(0,8);}
return fuzzyLookup(name,this.models,(model)=>model.technical+model.label).slice(0,8);}
loadOptionsSource(request){const options=this.filterModels(request);if(!options.length){options.push({label:_t("No records"),classList:"o_m2o_no_result",unselectable:true,});}
return options;}
async _fetchAvailableModels(){const result=await this.orm.call("ir.model","get_available_models");return result||[];}}
ModelSelector.template="web.ModelSelector";ModelSelector.components={AutoComplete};ModelSelector.props={onModelSelected:Function,id:{type:String,optional:true},value:{type:String,optional:true},models:{type:Array,optional:true},};return __exports;});;

/* /web/static/src/core/network/download.js */
odoo.define('@web/core/network/download',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{makeErrorFromResponse,ConnectionLostError}=require("@web/core/network/rpc_service");const{browser}=require("@web/core/browser/browser");const HEX_ESCAPE_REPLACE_REGEXP=/%([0-9A-Fa-f]{2})/g;const NON_LATIN1_REGEXP=/[^\x20-\x7e\xa0-\xff]/g;const QESC_REGEXP=/\\([\u0000-\u007f])/g;const PARAM_REGEXP=/;[\x09\x20]*([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*=[\x09\x20]*("(?:[\x20!\x23-\x5b\x5d-\x7e\x80-\xff]|\\[\x20-\x7e])*"|[!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*/g;const EXT_VALUE_REGEXP=/^([A-Za-z0-9!#$%&+\-^_`{}~]+)'(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}|[A-Za-z]{4,8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$&+.^_`|~-])+)$/;const DISPOSITION_TYPE_REGEXP=/^([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*(?:$|;)/;function decodefield(str){const match=EXT_VALUE_REGEXP.exec(str);if(!match){throw new TypeError("invalid extended field value");}
const charset=match[1].toLowerCase();const encoded=match[2];switch(charset){case"iso-8859-1":return encoded.replace(HEX_ESCAPE_REPLACE_REGEXP,pdecode).replace(NON_LATIN1_REGEXP,"?");case"utf-8":return decodeURIComponent(encoded);default:throw new TypeError("unsupported charset in extended field");}}
function parse(string){if(!string||typeof string!=="string"){throw new TypeError("argument string is required");}
let match=DISPOSITION_TYPE_REGEXP.exec(string);if(!match){throw new TypeError("invalid type format");}
let index=match[0].length;const type=match[1].toLowerCase();let key;const names=[];const params={};let value;index=PARAM_REGEXP.lastIndex=match[0].substr(-1)===";"?index-1:index;while((match=PARAM_REGEXP.exec(string))){if(match.index!==index){throw new TypeError("invalid parameter format");}
index+=match[0].length;key=match[1].toLowerCase();value=match[2];if(names.indexOf(key)!==-1){throw new TypeError("invalid duplicate parameter");}
names.push(key);if(key.indexOf("*")+1===key.length){key=key.slice(0,-1);value=decodefield(value);params[key]=value;continue;}
if(typeof params[key]==="string"){continue;}
if(value[0]==='"'){value=value.substr(1,value.length-2).replace(QESC_REGEXP,"$1");}
params[key]=value;}
if(index!==-1&&index!==string.length){throw new TypeError("invalid parameter format");}
return new ContentDisposition(type,params);}
function pdecode(str,hex){return String.fromCharCode(parseInt(hex,16));}
function ContentDisposition(type,parameters){this.type=type;this.parameters=parameters;}
function _download(data,filename,mimetype){let self=window,defaultMime="application/octet-stream",mimeType=mimetype||defaultMime,payload=data,url=!filename&&!mimetype&&payload,anchor=document.createElement("a"),toString=function(a){return String(a);},myBlob=self.Blob||self.MozBlob||self.WebKitBlob||toString,fileName=filename||"download",blob,reader;myBlob=myBlob.call?myBlob.bind(self):Blob;if(String(this)==="true"){payload=[payload,mimeType];mimeType=payload[0];payload=payload[1];}
if(url&&url.length<2048){fileName=url.split("/").pop().split("?")[0];anchor.href=url;if(anchor.href.indexOf(url)!==-1){let ajax=new XMLHttpRequest();ajax.open("GET",url,true);ajax.responseType="blob";ajax.onload=function(e){_download(e.target.response,fileName,defaultMime);};setTimeout(()=>{ajax.send();},0);return ajax;}}
if(/^data:[\w+\-]+\/[\w+\-]+[,;]/.test(payload)){if(payload.length>1024*1024*1.999&&myBlob!==toString){payload=dataUrlToBlob(payload);mimeType=payload.type||defaultMime;}else{return navigator.msSaveBlob?navigator.msSaveBlob(dataUrlToBlob(payload),fileName):saver(payload);}}
blob=payload instanceof myBlob?payload:new myBlob([payload],{type:mimeType});function dataUrlToBlob(strUrl){let parts=strUrl.split(/[:;,]/),type=parts[1],decoder=parts[2]==="base64"?atob:decodeURIComponent,binData=decoder(parts.pop()),mx=binData.length,i=0,uiArr=new Uint8Array(mx);for(i;i<mx;++i){uiArr[i]=binData.charCodeAt(i);}
return new myBlob([uiArr],{type});}
function saver(url,winMode){if("download"in anchor){anchor.href=url;anchor.setAttribute("download",fileName);anchor.className="download-js-link";anchor.innerText=_lt("downloading...");anchor.style.display="none";document.body.appendChild(anchor);setTimeout(()=>{anchor.click();document.body.removeChild(anchor);if(winMode===true){setTimeout(()=>{self.URL.revokeObjectURL(anchor.href);},250);}},66);return true;}
if(/(Version)\/(\d+)\.(\d+)(?:\.(\d+))?.*Safari\//.test(navigator.userAgent)){url=url.replace(/^data:([\w\/\-+]+)/,defaultMime);if(!window.open(url)){if(confirm("Displaying New Document\n\nUse Save As... to download, then click back to return to this page.")){location.href=url;}}
return true;}
let f=document.createElement("iframe");document.body.appendChild(f);if(!winMode){url=`data:${url.replace(/^data:([\w\/\-+]+)/, defaultMime)}`;}
f.src=url;setTimeout(()=>{document.body.removeChild(f);},333);}
if(navigator.msSaveBlob){return navigator.msSaveBlob(blob,fileName);}
if(self.URL){saver(self.URL.createObjectURL(blob),true);}else{if(typeof blob==="string"||blob.constructor===toString){try{return saver(`data:${mimeType};base64,${self.btoa(blob)}`);}catch(_y){return saver(`data:${mimeType},${encodeURIComponent(blob)}`);}}
reader=new FileReader();reader.onload=function(){saver(this.result);};reader.readAsDataURL(blob);}
return true;}
__exports.downloadFile=downloadFile;function downloadFile(data,filename,mimetype){return downloadFile._download(data,filename,mimetype)}
downloadFile._download=_download;__exports.download=download;function download(options){return download._download(options);}
download._download=(options)=>{return new Promise((resolve,reject)=>{const xhr=new browser.XMLHttpRequest();let data;if(Object.prototype.hasOwnProperty.call(options,"form")){xhr.open(options.form.method,options.form.action);data=new FormData(options.form);}else{xhr.open("POST",options.url);data=new FormData();Object.entries(options.data).forEach((entry)=>{const[key,value]=entry;data.append(key,value);});}
data.append("token","dummy-because-api-expects-one");if(odoo.csrf_token){data.append("csrf_token",odoo.csrf_token);}
xhr.responseType="blob";xhr.onload=()=>{const mimetype=xhr.response.type;const header=(xhr.getResponseHeader("Content-Disposition")||"").replace(/;$/,"");const filename=header?parse(header).parameters.filename:null;if(xhr.status===200&&(mimetype!=="text/html"||filename)){_download(xhr.response,filename,mimetype);return resolve(filename);}else if(xhr.status===502){reject(new ConnectionLostError());}else{const decoder=new FileReader();decoder.onload=()=>{const contents=decoder.result;const doc=new DOMParser().parseFromString(contents,"text/html");const nodes=doc.body.children.length===0?doc.body.childNodes:doc.body.children;let error;try{const node=nodes[1]||nodes[0];error=JSON.parse(node.textContent);}catch(_e){error={message:"Arbitrary Uncaught Python Exception",data:{debug:`${xhr.status}`+`\n`+`${nodes.length > 0 ? nodes[0].textContent : ""}
                                    ${nodes.length > 1 ? nodes[1].textContent : ""}`,},};}
error=makeErrorFromResponse(error);reject(error);};decoder.readAsText(xhr.response);}};xhr.onerror=()=>{reject(new ConnectionLostError());};xhr.send(data);});};return __exports;});;

/* /web/static/src/core/network/http_service.js */
odoo.define('@web/core/network/http_service',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");function checkResponseStatus(response){if(response.status===502){throw new Error("Failed to fetch");}}
const httpService=__exports.httpService={start(){return{async get(route,readMethod="json"){const response=await fetch(route,{method:"GET"});checkResponseStatus(response);return response[readMethod]();},async post(route,params={},readMethod="json"){const formData=new FormData();for(const key in params){const value=params[key];if(Array.isArray(value)&&value.length){for(const val of value){formData.append(key,val);}}else{formData.append(key,value);}}
const info={body:formData,method:"POST",};const response=await fetch(route,info);checkResponseStatus(response);return response[readMethod]();},};},};registry.category("services").add("http",httpService);return __exports;});;

/* /web/static/src/core/network/rpc_service.js */
odoo.define('@web/core/network/rpc_service',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const RPCError=__exports.RPCError=class RPCError extends Error{constructor(){super(...arguments);this.name="RPC_ERROR";this.type="server";this.code=null;this.data=null;this.exceptionName=null;this.subType=null;}}
const ConnectionLostError=__exports.ConnectionLostError=class ConnectionLostError extends Error{}
const ConnectionAbortedError=__exports.ConnectionAbortedError=class ConnectionAbortedError extends Error{}
const HTTPError=__exports.HTTPError=class HTTPError extends Error{}
__exports.makeErrorFromResponse=makeErrorFromResponse;function makeErrorFromResponse(reponse){const{code,data:errorData,message,type:subType}=reponse;const error=new RPCError();error.exceptionName=errorData.name;error.subType=subType;error.data=errorData;error.message=message;error.code=code;return error;}
__exports.jsonrpc=jsonrpc;function jsonrpc(env,rpcId,url,params,settings={}){const bus=env.bus;const XHR=browser.XMLHttpRequest;const data={id:rpcId,jsonrpc:"2.0",method:"call",params:params,};const request=settings.xhr||new XHR();let rejectFn;const promise=new Promise((resolve,reject)=>{rejectFn=reject;if(!settings.silent){bus.trigger("RPC:REQUEST",data.id);}
request.addEventListener("load",()=>{if(request.status===502){if(!settings.silent){bus.trigger("RPC:RESPONSE",data.id);}
reject(new ConnectionLostError());return;}
let params;try{params=JSON.parse(request.response);}catch(_){if(!settings.silent){bus.trigger("RPC:RESPONSE",data.id);}
return reject(new ConnectionLostError());}
const{error:responseError,result:responseResult}=params;if(!settings.silent){bus.trigger("RPC:RESPONSE",data.id);}
if(!responseError){return resolve(responseResult);}
const error=makeErrorFromResponse(responseError);reject(error);});request.addEventListener("error",()=>{if(!settings.silent){bus.trigger("RPC:RESPONSE",data.id);}
reject(new ConnectionLostError());});request.open("POST",url);request.setRequestHeader("Content-Type","application/json");request.send(JSON.stringify(data));});promise.abort=function(rejectError=true){if(request.abort){request.abort();}
if(!settings.silent){bus.trigger("RPC:RESPONSE",data.id);}
if(rejectError){rejectFn(new ConnectionAbortedError("XmlHttpRequestError abort"));}};return promise;}
const rpcService=__exports.rpcService={async:true,start(env){let rpcId=0;return function rpc(route,params={},settings){return jsonrpc(env,rpcId++,route,params,settings);};},};registry.category("services").add("rpc",rpcService);return __exports;});;

/* /web/static/src/core/notebook/notebook.js */
odoo.define('@web/core/notebook/notebook',async function(require){'use strict';let __exports={};const{scrollTo}=require("@web/core/utils/scrolling");const{Component,onWillDestroy,onWillUpdateProps,useEffect,useRef,useState}=require("@odoo/owl");const Notebook=__exports.Notebook=class Notebook extends Component{setup(){this.activePane=useRef("activePane");this.anchorTarget=null;this.pages=this.computePages(this.props);this.state=useState({currentPage:null});this.state.currentPage=this.computeActivePage(this.props.defaultPage,true);const onAnchorClicked=this.onAnchorClicked.bind(this);this.env.bus.addEventListener("SCROLLER:ANCHOR_LINK_CLICKED",onAnchorClicked);useEffect(()=>{this.props.onPageUpdate(this.state.currentPage);if(this.anchorTarget){const matchingEl=this.activePane.el.querySelector(`#${this.anchorTarget}`);scrollTo(matchingEl,{isAnchor:true});this.anchorTarget=null;}},()=>[this.state.currentPage]);onWillUpdateProps((nextProps)=>{const activateDefault=this.props.defaultPage!==nextProps.defaultPage||!this.defaultVisible;this.pages=this.computePages(nextProps);this.state.currentPage=this.computeActivePage(nextProps.defaultPage,activateDefault);});onWillDestroy(()=>{this.env.bus.removeEventListener("SCROLLER:ANCHOR_LINK_CLICKED",onAnchorClicked);});}
get navItems(){return this.pages.filter((e)=>e[1].isVisible);}
get page(){const page=this.pages.find((e)=>e[0]===this.state.currentPage)[1];return page.Component&&page;}
onAnchorClicked(ev){if(!this.props.anchors){return;}
const id=ev.detail.detail.id.substring(1);if(this.props.anchors[id]){if(this.state.currentPage!==this.props.anchors[id].target){ev.preventDefault();ev.detail.detail.originalEv.preventDefault();this.anchorTarget=id;this.state.currentPage=this.props.anchors[id].target;}}}
activatePage(pageIndex){this.state.currentPage=pageIndex;}
computePages(props){if(!props.slots&&!props.pages){return[];}
if(props.pages){for(const page of props.pages){page.isVisible=true;}}
const pages=[];const pagesWithIndex=[];for(const[k,v]of Object.entries({...props.slots,...props.pages})){const id=v.id||k;if(v.index){pagesWithIndex.push([id,v]);}else{pages.push([id,v]);}}
for(const page of pagesWithIndex){pages.splice(page[1].index,0,page);}
return pages;}
computeActivePage(defaultPage,activateDefault){if(!this.pages.length){return null;}
const pages=this.pages.filter((e)=>e[1].isVisible).map((e)=>e[0]);if(defaultPage){if(!pages.includes(defaultPage)){this.defaultVisible=false;}else{this.defaultVisible=true;if(activateDefault){return defaultPage;}}}
const current=this.state.currentPage;if(!current||(current&&!pages.includes(current))){return pages[0];}
return current;}}
Notebook.template="web.Notebook";Notebook.defaultProps={className:"",orientation:"horizontal",onPageUpdate:()=>{},};Notebook.props={slots:{type:Object,optional:true},pages:{type:Object,optional:true},class:{optional:true},className:{type:String,optional:true},anchors:{type:Object,optional:true},defaultPage:{type:String,optional:true},orientation:{type:String,optional:true},onPageUpdate:{type:Function,optional:true},};return __exports;});;

/* /web/static/src/core/notifications/notification.js */
odoo.define('@web/core/notifications/notification',async function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const Notification=__exports.Notification=class Notification extends Component{}
Notification.template="web.NotificationWowl";Notification.props={message:{validate:(m)=>{return(typeof m==="string"||(typeof m==="object"&&typeof m.toString==="function"));},},title:{type:[String,Boolean,{toString:Function}],optional:true},type:{type:String,optional:true,validate:(t)=>["warning","danger","success","info"].includes(t),},className:{type:String,optional:true},buttons:{type:Array,element:{type:Object,shape:{name:{type:String},icon:{type:String,optional:true},primary:{type:Boolean,optional:true},onClick:Function,},},optional:true,},close:{type:Function},};Notification.defaultProps={buttons:[],className:"",type:"warning",};return __exports;});;

/* /web/static/src/core/notifications/notification_container.js */
odoo.define('@web/core/notifications/notification_container',async function(require){'use strict';let __exports={};const{Notification}=require("@web/core/notifications/notification");const{Transition}=require("@web/core/transition");const{Component,xml,useState}=require("@odoo/owl");const NotificationContainer=__exports.NotificationContainer=class NotificationContainer extends Component{setup(){this.notifications=useState(this.props.notifications);}}
NotificationContainer.template=xml`
    <div class="o_notification_manager">
        <t t-foreach="notifications" t-as="notification" t-key="notification">
            <Transition leaveDuration="0" name="'o_notification_fade'" t-slot-scope="transition">
                <Notification t-props="notification_value.props" className="(notification_value.props.className || '') + ' ' + transition.className"/>
            </Transition>
        </t>
    </div>`;NotificationContainer.components={Notification,Transition};return __exports;});;

/* /web/static/src/core/notifications/notification_service.js */
odoo.define('@web/core/notifications/notification_service',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{NotificationContainer}=require("@web/core/notifications/notification_container");const{reactive}=require("@odoo/owl");const AUTOCLOSE_DELAY=4000;const notificationService=__exports.notificationService={start(){let notifId=0;const notifications=reactive({});registry.category("main_components").add("NotificationContainer",{Component:NotificationContainer,props:{notifications},});function add(message,options={}){const id=++notifId;const closeFn=()=>close(id);const props=Object.assign({},options,{message,close:closeFn});const sticky=props.sticky;delete props.sticky;delete props.onClose;const notification={id,props,onClose:options.onClose,};notifications[id]=notification;if(!sticky){browser.setTimeout(closeFn,AUTOCLOSE_DELAY);}
return closeFn;}
function close(id){if(notifications[id]){const notification=notifications[id];if(notification.onClose){notification.onClose();}
delete notifications[id];}}
return{add};},};registry.category("services").add("notification",notificationService);return __exports;});;

/* /web/static/src/core/orm_service.js */
odoo.define('@web/core/orm_service',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const x2ManyCommands=__exports.x2ManyCommands={CREATE:0,create(virtualID,values){delete values.id;return[x2ManyCommands.CREATE,virtualID||false,values];},UPDATE:1,update(id,values){delete values.id;return[x2ManyCommands.UPDATE,id,values];},DELETE:2,delete(id){return[x2ManyCommands.DELETE,id,false];},FORGET:3,forget(id){return[x2ManyCommands.FORGET,id,false];},LINK_TO:4,linkTo(id){return[x2ManyCommands.LINK_TO,id,false];},DELETE_ALL:5,deleteAll(){return[x2ManyCommands.DELETE_ALL,false,false];},REPLACE_WITH:6,replaceWith(ids){return[x2ManyCommands.REPLACE_WITH,false,ids];},};function validateModel(value){if(typeof value!=="string"||value.length===0){throw new Error(`Invalid model name: ${value}`);}}
function validatePrimitiveList(name,type,value){if(!Array.isArray(value)||value.some((val)=>typeof val!==type)){throw new Error(`Invalid ${name} list: ${value}`);}}
function validateObject(name,obj){if(typeof obj!=="object"||obj===null||Array.isArray(obj)){throw new Error(`${name} should be an object`);}}
function validateArray(name,array){if(!Array.isArray(array)){throw new Error(`${name} should be an array`);}}
const ORM=__exports.ORM=class ORM{constructor(rpc,user){this.rpc=rpc;this.user=user;this._silent=false;}
get silent(){return Object.assign(Object.create(this),{_silent:true});}
call(model,method,args=[],kwargs={}){validateModel(model);const url=`/web/dataset/call_kw/${model}/${method}`;const fullContext=Object.assign({},this.user.context,kwargs.context||{});const fullKwargs=Object.assign({},kwargs,{context:fullContext});const params={model,method,args,kwargs:fullKwargs,};return this.rpc(url,params,{silent:this._silent});}
create(model,records,kwargs={}){validateArray("records",records);for(const record of records){validateObject("record",record);}
return this.call(model,"create",records,kwargs);}
nameGet(model,ids,kwargs={}){validatePrimitiveList("ids","number",ids);if(!ids.length){return Promise.resolve([]);}
return this.call(model,"name_get",[ids],kwargs);}
read(model,ids,fields,kwargs={}){validatePrimitiveList("ids","number",ids);if(fields){validatePrimitiveList("fields","string",fields);}
if(!ids.length){return Promise.resolve([]);}
return this.call(model,"read",[ids,fields],kwargs);}
readGroup(model,domain,fields,groupby,kwargs={}){validateArray("domain",domain);validatePrimitiveList("fields","string",fields);validatePrimitiveList("groupby","string",groupby);return this.call(model,"read_group",[],{...kwargs,domain,fields,groupby});}
search(model,domain,kwargs={}){validateArray("domain",domain);return this.call(model,"search",[domain],kwargs);}
searchRead(model,domain,fields,kwargs={}){validateArray("domain",domain);if(fields){validatePrimitiveList("fields","string",fields);}
return this.call(model,"search_read",[],{...kwargs,domain,fields});}
searchCount(model,domain,kwargs={}){validateArray("domain",domain);return this.call(model,"search_count",[domain],kwargs);}
unlink(model,ids,kwargs={}){validatePrimitiveList("ids","number",ids);if(!ids.length){return true;}
return this.call(model,"unlink",[ids],kwargs);}
webReadGroup(model,domain,fields,groupby,kwargs={}){validateArray("domain",domain);validatePrimitiveList("fields","string",fields);validatePrimitiveList("groupby","string",groupby);return this.call(model,"web_read_group",[],{...kwargs,groupby,domain,fields,});}
webSearchRead(model,domain,fields,kwargs={}){validateArray("domain",domain);validatePrimitiveList("fields","string",fields);return this.call(model,"web_search_read",[],{...kwargs,domain,fields});}
write(model,ids,data,kwargs={}){validatePrimitiveList("ids","number",ids);validateObject("data",data);return this.call(model,"write",[ids,data],kwargs);}}
const ormService=__exports.ormService={dependencies:["rpc","user"],async:["call","create","nameGet","read","readGroup","search","searchRead","unlink","webSearchRead","write",],start(env,{rpc,user}){return new ORM(rpc,user);},};registry.category("services").add("orm",ormService);return __exports;});;

/* /web/static/src/core/pager/pager.js */
odoo.define('@web/core/pager/pager',async function(require){'use strict';let __exports={};const{useAutofocus}=require("@web/core/utils/hooks");const{clamp}=require("@web/core/utils/numbers");const{Component,useExternalListener,useState}=require("@odoo/owl");const Pager=__exports.Pager=class Pager extends Component{setup(){this.state=useState({isEditing:false,isDisabled:false,});this.inputRef=useAutofocus();useExternalListener(document,"mousedown",this.onClickAway,{capture:true});}
get minimum(){return this.props.offset+1;}
get maximum(){return Math.min(this.props.offset+this.props.limit,this.props.total);}
get value(){const parts=[this.minimum];if(this.props.limit>1){parts.push(this.maximum);}
return parts.join("-");}
get isSinglePage(){return!this.props.updateTotal&&this.minimum===1&&this.maximum===this.props.total;}
async navigate(direction){let minimum=this.props.offset+this.props.limit*direction;let total=this.props.total;if(this.props.updateTotal&&minimum<0){total=await this.props.updateTotal();}
if(minimum>=total){if(!this.props.updateTotal){minimum=0;}}else if(minimum<0&&this.props.limit===1){minimum=total-1;}else if(minimum<0&&this.props.limit>1){minimum=total-(total%this.props.limit||this.props.limit);}
this.update(minimum,this.props.limit,true);}
async parse(value){let[minimum,maximum]=value.trim().split(/\s*[-\s,;]\s*/);minimum=parseInt(minimum,10);maximum=maximum?parseInt(maximum,10):minimum;if(this.props.updateTotal){return{minimum:minimum-1,maximum};}
return{minimum:clamp(minimum,1,this.props.total)-1,maximum:clamp(maximum,1,this.props.total),};}
async setValue(value){const{minimum,maximum}=await this.parse(value);if(!isNaN(minimum)&&!isNaN(maximum)&&minimum<maximum){this.update(minimum,maximum-minimum);}}
async update(offset,limit,hasNavigated){this.state.isDisabled=true;await this.props.onUpdate({offset,limit},hasNavigated);this.state.isDisabled=false;this.state.isEditing=false;}
async updateTotal(){if(!this.state.isDisabled){this.state.isDisabled=true;await this.props.updateTotal();this.state.isDisabled=false;}}
onClickAway(ev){if(ev.target!==this.inputRef.el){this.state.isEditing=false;}}
onInputBlur(){this.state.isEditing=false;}
onInputChange(ev){this.setValue(ev.target.value);if(!this.state.isDisabled){ev.preventDefault();}}
onInputKeydown(ev){switch(ev.key){case"Enter":ev.preventDefault();ev.stopPropagation();this.setValue(ev.currentTarget.value);break;case"Escape":ev.preventDefault();ev.stopPropagation();this.state.isEditing=false;break;}}
onValueClick(){if(this.props.isEditable&&!this.state.isEditing&&!this.state.isDisabled){if(this.inputRef.el){this.inputRef.el.focus();}
this.state.isEditing=true;}}}
Pager.template="web.Pager";Pager.defaultProps={isEditable:true,withAccessKey:true,};Pager.props={offset:Number,limit:Number,total:Number,onUpdate:Function,isEditable:{type:Boolean,optional:true},withAccessKey:{type:Boolean,optional:true},updateTotal:{type:Function,optional:true},};return __exports;});;

/* /web/static/src/core/popover/popover.js */
odoo.define('@web/core/popover/popover',async function(require){'use strict';let __exports={};const{usePosition}=require("@web/core/position_hook");const{Component}=require("@odoo/owl");const Popover=__exports.Popover=class Popover extends Component{setup(){usePosition(this.props.target,{onPositioned:this.props.onPositioned||this.onPositioned.bind(this),position:this.props.position,});}
onPositioned(el,{direction,variant}){const position=`${direction[0]}${variant[0]}`;const directionMap={top:"top",bottom:"bottom",left:"start",right:"end",};el.classList=["o_popover popover mw-100 shadow-sm",`bs-popover-${directionMap[direction]}`,`o-popover-${direction}`,`o-popover--${position}`,].join(" ");if(this.props.popoverClass){el.classList.add(...this.props.popoverClass.split(" "));}
const arrowEl=el.firstElementChild;arrowEl.className="popover-arrow";switch(position){case"tm":case"bm":arrowEl.classList.add("start-0","end-0","mx-auto");break;case"lm":case"rm":arrowEl.classList.add("top-0","bottom-0","my-auto");break;case"ts":case"bs":arrowEl.classList.add("end-auto");break;case"te":case"be":arrowEl.classList.add("start-auto");break;case"ls":case"rs":arrowEl.classList.add("bottom-auto");break;case"le":case"re":arrowEl.classList.add("top-auto");break;}}}
Popover.template="web.PopoverWowl";Popover.defaultProps={position:"bottom",};Popover.props={id:{optional:true,type:Number,},popoverClass:{optional:true,type:String,},position:{type:String,validate:(p)=>["top","bottom","left","right"].includes(p),optional:true,},onPositioned:{type:Function,optional:true,},target:HTMLElement,slots:{type:Object,optional:true,shape:{default:{optional:true},},},};return __exports;});;

/* /web/static/src/core/popover/popover_container.js */
odoo.define('@web/core/popover/popover_container',async function(require){'use strict';let __exports={};const{Popover}=require("@web/core/popover/popover");const{Component,onWillDestroy,useExternalListener,useState,xml}=require("@odoo/owl");class PopoverController extends Component{setup(){this.state=useState({displayed:false});if(this.target.isConnected){useExternalListener(window,"click",this.onClickAway,{capture:true});const targetObserver=new MutationObserver(this.onTargetMutate.bind(this));targetObserver.observe(this.target.parentElement,{childList:true});onWillDestroy(()=>{targetObserver.disconnect();});}else{this.onTargetMutate();}}
get popoverProps(){return{id:this.props.id,target:this.target,position:this.props.position,popoverClass:this.props.popoverClass,onPositioned:this.props.onPositioned,};}
get popoverComponentProps(){return{close:this.props.close,...this.props.props,};}
get target(){if(typeof this.props.target==="string"){return document.querySelector(this.props.target);}else{return this.props.target;}}
onClickAway(ev){if(this.target.contains(ev.target)||ev.target.closest(`.o_popover[popover-id="${this.props.id}"]`)){return;}
if(this.props.preventClose&&this.props.preventClose(ev)){return;}
if(this.props.closeOnClickAway){this.props.close();}}
onTargetMutate(){const target=this.target;if(!target||!target.parentElement){this.props.close();}}}
PopoverController.components={Popover};PopoverController.defaultProps={alwaysDisplayed:false,closeOnClickAway:true,};PopoverController.template=xml`
    <Popover t-props="popoverProps">
        <t t-component="props.Component" t-props="popoverComponentProps"/>
    </Popover>
`;const PopoverContainer=__exports.PopoverContainer=class PopoverContainer extends Component{setup(){this.props.bus.addEventListener("UPDATE",this.render.bind(this));}}
PopoverContainer.components={PopoverController};PopoverContainer.template=xml`
    <div class="o_popover_container">
        <t t-foreach="Object.values(props.popovers)" t-as="popover" t-key="popover.id">
            <PopoverController t-props="popover" />
        </t>
    </div>
`;return __exports;});;

/* /web/static/src/core/popover/popover_hook.js */
odoo.define('@web/core/popover/popover_hook',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{onWillUnmount,status,useComponent}=require("@odoo/owl");__exports.usePopover=usePopover;function usePopover(){const removeFns=new Set();const service=useService("popover");const component=useComponent();onWillUnmount(function(){for(const removeFn of removeFns){removeFn();}
removeFns.clear();});return{add(target,Component,props,options={}){const newOptions=Object.create(options);newOptions.onClose=function(){removeFns.delete(removeFn);if(options.onClose&&status(component)!=="destroyed"){options.onClose();}};const removeFn=service.add(target,Component,props,newOptions);removeFns.add(removeFn);return removeFn;},};}
return __exports;});;

/* /web/static/src/core/popover/popover_service.js */
odoo.define('@web/core/popover/popover_service',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{PopoverContainer}=require("@web/core/popover/popover_container");const{EventBus}=require("@odoo/owl");const popoverService=__exports.popoverService={start(){let nextId=0;const popovers={};const bus=new EventBus();registry.category("main_components").add("PopoverContainer",{Component:PopoverContainer,props:{bus,popovers}});function add(target,Component,props,options={}){const id=++nextId;const closeFn=()=>close(id);const popover={id,target,Component,props,close:closeFn,onClose:options.onClose,position:options.position,onPositioned:options.onPositioned,popoverClass:options.popoverClass,closeOnClickAway:options.closeOnClickAway,preventClose:options.preventClose,};popovers[id]=popover;bus.trigger("UPDATE");return closeFn;}
function close(id){if(id in popovers){const popover=popovers[id];if(popover.onClose){popover.onClose();}
delete popovers[id];bus.trigger("UPDATE");}}
return{add};},};registry.category("services").add("popover",popoverService);return __exports;});;

/* /web/static/src/core/position_hook.js */
odoo.define('@web/core/position_hook',async function(require){'use strict';let __exports={};const{throttleForAnimation}=require("@web/core/utils/timing");const{EventBus,onWillDestroy,onWillUnmount,useChildSubEnv,useComponent,useEffect,useExternalListener,useRef,}=require("@odoo/owl");const{localization}=require("@web/core/l10n/localization");const DIRECTIONS={t:"top",r:"right",b:"bottom",l:"left"};const VARIANTS={s:"start",m:"middle",e:"end"};const DIRECTION_FLIP_ORDER={top:"tbrl",right:"rltb",bottom:"btrl",left:"lrbt"};const VARIANT_FLIP_ORDER={start:"sme",middle:"mse",end:"ems"};const DEFAULTS={popper:"popper",margin:0,position:"bottom",};function getBestPosition(reference,popper,{container,margin,position}){const[directionKey,variantKey="middle"]=position.split("-");const directions=DIRECTION_FLIP_ORDER[directionKey];const variants=VARIANT_FLIP_ORDER[variantKey];const popperStyle=getComputedStyle(popper);const{marginTop,marginLeft,marginRight,marginBottom}=popperStyle;const popMargins={top:parseFloat(marginTop),left:parseFloat(marginLeft),right:parseFloat(marginRight),bottom:parseFloat(marginBottom),};const popBox=popper.getBoundingClientRect();const refBox=reference.getBoundingClientRect();const contBox=container.getBoundingClientRect();const containerIsHTMLNode=container===document.firstElementChild;const directionsData={t:refBox.top-popMargins.bottom-margin-popBox.height,b:refBox.bottom+popMargins.top+margin,r:refBox.right+popMargins.left+margin,l:refBox.left-popMargins.right-margin-popBox.width,};const variantsData={vs:refBox.left+popMargins.left,vm:refBox.left+refBox.width/2-popBox.width/2,ve:refBox.right-popMargins.right-popBox.width,hs:refBox.top+popMargins.top,hm:refBox.top+refBox.height/2-popBox.height/2,he:refBox.bottom-popMargins.bottom-popBox.height,};function getPositioningData(d=directions[0],v=variants[0],containerRestricted=false){const vertical=["t","b"].includes(d);const variantPrefix=vertical?"v":"h";const directionValue=directionsData[d];const variantValue=variantsData[variantPrefix+v];if(containerRestricted){const[directionSize,variantSize]=vertical?[popBox.height,popBox.width]:[popBox.width,popBox.height];let[directionMin,directionMax]=vertical?[contBox.top,contBox.bottom]:[contBox.left,contBox.right];let[variantMin,variantMax]=vertical?[contBox.left,contBox.right]:[contBox.top,contBox.bottom];if(containerIsHTMLNode){if(vertical){directionMin+=container.scrollTop;directionMax+=container.scrollTop;}else{variantMin+=container.scrollTop;variantMax+=container.scrollTop;}}
const directionOverflow=Math.ceil(directionValue)<Math.floor(directionMin)||Math.floor(directionValue+directionSize)>Math.ceil(directionMax);const variantOverflow=Math.ceil(variantValue)<Math.floor(variantMin)||Math.floor(variantValue+variantSize)>Math.ceil(variantMax);if(directionOverflow||variantOverflow){return null;}}
const positioning=vertical?{top:directionValue,left:variantValue,}:{top:variantValue,left:directionValue,};return{top:positioning.top-popBox.top,left:positioning.left-popBox.left,direction:DIRECTIONS[d],variant:VARIANTS[v],};}
for(const d of directions){for(const v of variants){const match=getPositioningData(d,v,true);if(match){return match;}}}
return getPositioningData();}
__exports.reposition=reposition;function reposition(reference,popper,options){options={container:document.documentElement,...options,};popper.style.position="fixed";popper.style.top="0px";popper.style.left="0px";const position=getBestPosition(reference,popper,options);const{top,left}=position;popper.style.top=`${top}px`;popper.style.left=`${left}px`;if(options.onPositioned){options.onPositioned(popper,position);}}
const POSITION_BUS=Symbol("position-bus");__exports.usePosition=usePosition;function usePosition(reference,options){options={...DEFAULTS,...options};const{popper,position}=options;let[directionKey,variantKey="middle"]=position.split("-");if(localization.direction==="rtl"){if(["bottom","top"].includes(directionKey)){if(variantKey!=="middle"){variantKey=variantKey==="start"?"end":"start";}}else{directionKey=directionKey==="left"?"right":"left";}
options.position=[directionKey,variantKey].join("-");}
const popperRef=useRef(popper);const getReference=typeof reference==="function"?reference:()=>reference;const update=()=>{const ref=getReference();if(popperRef.el&&ref){reposition(ref,popperRef.el,options);}};const component=useComponent();const bus=component.env[POSITION_BUS]||new EventBus();bus.on("update",component,update);onWillDestroy(()=>bus.off("update",component));useEffect(()=>bus.trigger("update"));if(!(POSITION_BUS in component.env)){useChildSubEnv({[POSITION_BUS]:bus});const throttledUpdate=throttleForAnimation(()=>bus.trigger("update"));useExternalListener(document,"scroll",throttledUpdate,{capture:true});useExternalListener(document,"load",throttledUpdate,{capture:true});useExternalListener(window,"resize",throttledUpdate);onWillUnmount(throttledUpdate.cancel);}}
return __exports;});;

/* /web/static/src/core/py_js/py.js */
odoo.define('@web/core/py_js/py',async function(require){'use strict';let __exports={};const{evaluate}=require("@web/core/py_js/py_interpreter");const{parse}=require("@web/core/py_js/py_parser");const{tokenize}=require("@web/core/py_js/py_tokenizer");{const{evaluate}=require("@web/core/py_js/py_interpreter");Object.assign(__exports,{evaluate})};{const{parse}=require("@web/core/py_js/py_parser");Object.assign(__exports,{parse})};{const{tokenize}=require("@web/core/py_js/py_tokenizer");Object.assign(__exports,{tokenize})};{const{formatAST}=require("@web/core/py_js/py_utils");Object.assign(__exports,{formatAST})};__exports.parseExpr=parseExpr;function parseExpr(expr){const tokens=tokenize(expr);return parse(tokens);}
__exports.evaluateExpr=evaluateExpr;function evaluateExpr(expr,context={}){const ast=parseExpr(expr);return evaluate(ast,context);}
return __exports;});;

/* /web/static/src/core/py_js/py_builtin.js */
odoo.define('@web/core/py_js/py_builtin',async function(require){'use strict';let __exports={};const{PyDate,PyDateTime,PyRelativeDelta,PyTime,PyTimeDelta}=require("@web/core/py_js/py_date");const BUILTINS=__exports.BUILTINS={bool(value){switch(typeof value){case"number":return value!==0;case"string":return value!=="";case"boolean":return value;case"object":if(value===null){return false;}
if(value.isTrue){return value.isTrue();}
return true;}
return true;},time:{strftime(format){return PyDateTime.now().strftime(format);},},context_today(){return PyDate.today();},get current_date(){return this.today;},get today(){return PyDate.today().strftime("%Y-%m-%d");},get now(){return PyDateTime.now().strftime("%Y-%m-%d %H:%M:%S");},datetime:{time:PyTime,timedelta:PyTimeDelta,datetime:PyDateTime,date:PyDate,},relativedelta:PyRelativeDelta,true:true,false:false,};return __exports;});;

/* /web/static/src/core/py_js/py_date.js */
odoo.define('@web/core/py_js/py_date',async function(require){'use strict';let __exports={};const{parseArgs}=require("@web/core/py_js/py_parser");const AssertionError=__exports.AssertionError=class AssertionError extends Error{}
const ValueError=__exports.ValueError=class ValueError extends Error{}
const NotSupportedError=__exports.NotSupportedError=class NotSupportedError extends Error{}
function fmt2(n){return String(n).padStart(2,"0");}
function fmt4(n){return String(n).padStart(4,"0");}
function divmod(a,b,fn){let mod=a%b;if((mod>0&&b<0)||(mod<0&&b>0)){mod+=b;}
return fn(Math.floor(a/b),mod);}
function assert(bool,message="AssertionError"){if(!bool){throw new AssertionError(message);}}
const DAYS_IN_MONTH=[null,31,28,31,30,31,30,31,31,30,31,30,31];const DAYS_BEFORE_MONTH=[null];for(let dbm=0,i=1;i<DAYS_IN_MONTH.length;++i){DAYS_BEFORE_MONTH.push(dbm);dbm+=DAYS_IN_MONTH[i];}
function daysInMonth(year,month){if(month===2&&isLeap(year)){return 29;}
return DAYS_IN_MONTH[month];}
function isLeap(year){return year%4===0&&(year%100!==0||year%400===0);}
function daysBeforeYear(year){const y=year-1;return y*365+Math.floor(y/4)-Math.floor(y/100)+Math.floor(y/400);}
function daysBeforeMonth(year,month){const postLeapFeb=month>2&&isLeap(year);return DAYS_BEFORE_MONTH[month]+(postLeapFeb?1:0);}
function ymd2ord(year,month,day){const dim=daysInMonth(year,month);if(!(1<=day&&day<=dim)){throw new ValueError(`day must be in 1..${dim}`);}
return daysBeforeYear(year)+daysBeforeMonth(year,month)+day;}
const DI400Y=daysBeforeYear(401);const DI100Y=daysBeforeYear(101);const DI4Y=daysBeforeYear(5);function ord2ymd(n){--n;let n400,n100,n4,n1,n0;divmod(n,DI400Y,function(_n400,n){n400=_n400;divmod(n,DI100Y,function(_n100,n){n100=_n100;divmod(n,DI4Y,function(_n4,n){n4=_n4;divmod(n,365,function(_n1,n){n1=_n1;n0=n;});});});});n=n0;const year=n400*400+1+n100*100+n4*4+n1;if(n1==4||n100==100){assert(n0===0);return{year:year-1,month:12,day:31,};}
const leapyear=n1===3&&(n4!==24||n100==3);assert(leapyear==isLeap(year));let month=(n+50)>>5;let preceding=DAYS_BEFORE_MONTH[month]+(month>2&&leapyear?1:0);if(preceding>n){--month;preceding-=DAYS_IN_MONTH[month]+(month===2&&leapyear?1:0);}
n-=preceding;return{year:year,month:month,day:n+1,};}
function tmxxx(year,month,day,hour,minute,second,microsecond){hour=hour||0;minute=minute||0;second=second||0;microsecond=microsecond||0;if(microsecond<0||microsecond>999999){divmod(microsecond,1000000,function(carry,ms){microsecond=ms;second+=carry;});}
if(second<0||second>59){divmod(second,60,function(carry,s){second=s;minute+=carry;});}
if(minute<0||minute>59){divmod(minute,60,function(carry,m){minute=m;hour+=carry;});}
if(hour<0||hour>23){divmod(hour,24,function(carry,h){hour=h;day+=carry;});}
if(month<1||month>12){divmod(month-1,12,function(carry,m){month=m+1;year+=carry;});}
const dim=daysInMonth(year,month);if(day<1||day>dim){if(day===0){--month;if(month>0){day=daysInMonth(year,month);}else{--year;month=12;day=31;}}else if(day==dim+1){++month;day=1;if(month>12){month=1;++year;}}else{const r=ord2ymd(ymd2ord(year,month,1)+(day-1));year=r.year;month=r.month;day=r.day;}}
return{year:year,month:month,day:day,hour:hour,minute:minute,second:second,microsecond:microsecond,};}
const PyDate=__exports.PyDate=class PyDate{static today(){return this.convertDate(new Date());}
static convertDate(date){const year=date.getUTCFullYear();const month=date.getUTCMonth()+1;const day=date.getUTCDate();return new PyDate(year,month,day);}
constructor(year,month,day){this.year=year;this.month=month;this.day=day;}
static create(...args){const{year,month,day}=parseArgs(args,["year","month","day"]);return new PyDate(year,month,day);}
add(timedelta){const s=tmxxx(this.year,this.month,this.day+timedelta.days);return new PyDate(s.year,s.month,s.day);}
isEqual(other){if(!(other instanceof PyDate)){return false;}
return this.year===other.year&&this.month===other.month&&this.day===other.day;}
strftime(format){return format.replace(/%([A-Za-z])/g,(m,c)=>{switch(c){case"Y":return fmt4(this.year);case"m":return fmt2(this.month);case"d":return fmt2(this.day);}
throw new ValueError(`No known conversion for ${m}`);});}
substract(other){if(other instanceof PyTimeDelta){return this.add(other.negate());}
if(other instanceof PyDate){return PyTimeDelta.create(this.toordinal()-other.toordinal());}
throw NotSupportedError();}
toJSON(){return this.strftime("%Y-%m-%d");}
toordinal(){return ymd2ord(this.year,this.month,this.day);}}
const PyDateTime=__exports.PyDateTime=class PyDateTime{static now(){return this.convertDate(new Date());}
static convertDate(date){const year=date.getUTCFullYear();const month=date.getUTCMonth()+1;const day=date.getUTCDate();const hour=date.getUTCHours();const minute=date.getUTCMinutes();const second=date.getUTCSeconds();return new PyDateTime(year,month,day,hour,minute,second,0);}
static create(...args){const namedArgs=parseArgs(args,["year","month","day","hour","minute","second","microsecond",]);const year=namedArgs.year;const month=namedArgs.month;const day=namedArgs.day;const hour=namedArgs.hour||0;const minute=namedArgs.minute||0;const second=namedArgs.second||0;const ms=namedArgs.micro/1000||0;return new PyDateTime(year,month,day,hour,minute,second,ms);}
static combine(...args){const{date,time}=parseArgs(args,["date","time"]);return PyDateTime.create(date.year,date.month,date.day,time.hour,time.minute,time.second);}
constructor(year,month,day,hour,minute,second,microsecond){this.year=year;this.month=month;this.day=day;this.hour=hour;this.minute=minute;this.second=second;this.microsecond=microsecond;}
add(timedelta){const s=tmxxx(this.year,this.month,this.day+timedelta.days,this.hour,this.minute,this.second+timedelta.seconds,this.microsecond+timedelta.microseconds);return new PyDateTime(s.year,s.month,s.day,s.hour,s.minute,s.second,s.microsecond);}
isEqual(other){if(!(other instanceof PyDateTime)){return false;}
return(this.year===other.year&&this.month===other.month&&this.day===other.day&&this.hour===other.hour&&this.minute===other.minute&&this.second===other.second&&this.microsecond===other.microsecond);}
strftime(format){return format.replace(/%([A-Za-z])/g,(m,c)=>{switch(c){case"Y":return fmt4(this.year);case"m":return fmt2(this.month);case"d":return fmt2(this.day);case"H":return fmt2(this.hour);case"M":return fmt2(this.minute);case"S":return fmt2(this.second);}
throw new ValueError(`No known conversion for ${m}`);});}
substract(timedelta){return this.add(timedelta.negate());}
toJSON(){return this.strftime("%Y-%m-%d %H:%M:%S");}
to_utc(){const d=new Date(this.year,this.month-1,this.day,this.hour,this.minute,this.second);const timedelta=PyTimeDelta.create({minutes:d.getTimezoneOffset()});return this.add(timedelta);}}
const PyTime=__exports.PyTime=class PyTime extends PyDate{static create(...args){const namedArgs=parseArgs(args,["hour","minute","second"]);const hour=namedArgs.hour||0;const minute=namedArgs.minute||0;const second=namedArgs.second||0;return new PyTime(hour,minute,second);}
constructor(hour,minute,second){const now=new Date();const year=now.getFullYear();const month=now.getUTCMonth();const day=now.getUTCDate();super(year,month,day);this.hour=hour;this.minute=minute;this.second=second;}
strftime(format){return format.replace(/%([A-Za-z])/g,(m,c)=>{switch(c){case"Y":return fmt4(this.year);case"m":return fmt2(this.month+1);case"d":return fmt2(this.day);case"H":return fmt2(this.hour);case"M":return fmt2(this.minute);case"S":return fmt2(this.second);}
throw new ValueError(`No known conversion for ${m}`);});}
toJSON(){return this.strftime("%H:%M:%S");}}
const DAYS_IN_YEAR=[31,59,90,120,151,181,212,243,273,304,334,366];const TIME_PERIODS=["hour","minute","second"];const PERIODS=["year","month","day",...TIME_PERIODS];const RELATIVE_KEYS="years months weeks days hours minutes seconds microseconds leapdays".split(" ");const ABSOLUTE_KEYS="year month day hour minute second microsecond weekday nlyearday yearday".split(" ");const argsSpec=["dt1","dt2"];const PyRelativeDelta=__exports.PyRelativeDelta=class PyRelativeDelta{static create(...args){const params=parseArgs(args,argsSpec);if("dt1"in params){throw new Error("relativedelta(dt1, dt2) is not supported for now");}
for(const period of PERIODS){if(period in params){const val=params[period];assert(val>=0,`${period} ${val} is out of range`);}}
for(const key of RELATIVE_KEYS){params[key]=params[key]||0;}
for(const key of ABSOLUTE_KEYS){params[key]=key in params?params[key]:null;}
params.days+=7*params.weeks;let yearDay=0;if(params.nlyearday){yearDay=params.nlyearday;}else if(params.yearday){yearDay=params.yearday;if(yearDay>59){params.leapDays=-1;}}
if(yearDay){for(let monthIndex=0;monthIndex<DAYS_IN_YEAR.length;monthIndex++){if(yearDay<=DAYS_IN_YEAR[monthIndex]){params.month=monthIndex+1;if(monthIndex===0){params.day=yearDay;}else{params.day=yearDay-DAYS_IN_YEAR[monthIndex-1];}
break;}}}
return new PyRelativeDelta(params);}
static add(date,delta){if(!(date instanceof PyDate||date instanceof PyDateTime)){throw NotSupportedError();}
const s=tmxxx((delta.year||date.year)+delta.years,(delta.month||date.month)+delta.months,delta.day||date.day,delta.hour||date.hour||0,delta.minute||date.minute||0,delta.second||date.seconds||0,delta.microseconds||date.microseconds||0);const newDateTime=new PyDateTime(s.year,s.month,s.day,s.hour,s.minute,s.second,s.microsecond);let leapDays=0;if(delta.leapDays&&newDateTime.month>2&&isLeap(newDateTime.year)){leapDays=delta.leapDays;}
const temp=newDateTime.add(PyTimeDelta.create({days:delta.days+leapDays,hours:delta.hours,minutes:delta.minutes,seconds:delta.seconds,microseconds:delta.microseconds,}));const hasTime=Boolean(temp.hour||temp.minute||temp.second||temp.microsecond);const returnDate=!hasTime&&date instanceof PyDate?new PyDate(temp.year,temp.month,temp.day):temp;if(delta.weekday!==null){const wantedDow=delta.weekday+1;const _date=new Date(returnDate.year,returnDate.month-1,returnDate.day);const days=(7-_date.getDay()+wantedDow)%7;return returnDate.add(new PyTimeDelta(days,0,0));}
return returnDate;}
static substract(date,delta){return PyRelativeDelta.add(date,delta.negate());}
constructor(params={},sign=+1){this.years=sign*params.years;this.months=sign*params.months;this.days=sign*params.days;this.hours=sign*params.hours;this.minutes=sign*params.minutes;this.seconds=sign*params.seconds;this.microseconds=sign*params.microseconds;this.leapDays=params.leapDays;this.year=params.year;this.month=params.month;this.day=params.day;this.hour=params.hour;this.minute=params.minute;this.second=params.second;this.microsecond=params.microsecond;this.weekday=params.weekday;}
negate(){return new PyRelativeDelta(this,-1);}
isEqual(other){throw new NotSupportedError();}}
const TIME_DELTA_KEYS="weeks days hours minutes seconds milliseconds microseconds".split(" ");function modf(x){const mod=x%1;return[mod<0?mod+1:mod,Math.floor(x)];}
const PyTimeDelta=__exports.PyTimeDelta=class PyTimeDelta{static create(...args){const namedArgs=parseArgs(args,["days","seconds","microseconds"]);for(const key of TIME_DELTA_KEYS){namedArgs[key]=namedArgs[key]||0;}
let d=0;let s=0;let us=0;const days=namedArgs.days+namedArgs.weeks*7;let seconds=namedArgs.seconds+60*namedArgs.minutes+3600*namedArgs.hours;let microseconds=namedArgs.microseconds+1000*namedArgs.milliseconds;const[dFrac,dInt]=modf(days);d=dInt;let daysecondsfrac=0;if(dFrac){const[dsFrac,dsInt]=modf(dFrac*24*3600);s=dsInt;daysecondsfrac=dsFrac;}
const[sFrac,sInt]=modf(seconds);seconds=sInt;const secondsfrac=sFrac+daysecondsfrac;divmod(seconds,24*3600,(days,seconds)=>{d+=days;s+=seconds;});microseconds+=secondsfrac*1e6;divmod(microseconds,1000000,(seconds,microseconds)=>{divmod(seconds,24*3600,(days,seconds)=>{d+=days;s+=seconds;us+=Math.round(microseconds);});});return new PyTimeDelta(d,s,us);}
constructor(days,seconds,microseconds){this.days=days;this.seconds=seconds;this.microseconds=microseconds;}
add(other){return PyTimeDelta.create({days:this.days+other.days,seconds:this.seconds+other.seconds,microseconds:this.microseconds+other.microseconds,});}
divide(n){const us=(this.days*24*3600+this.seconds)*1e6+this.microseconds;return PyTimeDelta.create({microseconds:Math.floor(us/n)});}
isEqual(other){if(!(other instanceof PyTimeDelta)){return false;}
return(this.days===other.days&&this.seconds===other.seconds&&this.microseconds===other.microseconds);}
isTrue(){return this.days!==0||this.seconds!==0||this.microseconds!==0;}
multiply(n){return PyTimeDelta.create({days:n*this.days,seconds:n*this.seconds,microseconds:n*this.microseconds,});}
negate(){return PyTimeDelta.create({days:-this.days,seconds:-this.seconds,microseconds:-this.microseconds,});}
substract(other){return PyTimeDelta.create({days:this.days-other.days,seconds:this.seconds-other.seconds,microseconds:this.microseconds-other.microseconds,});}
total_seconds(){return this.days*86400+this.seconds+this.microseconds/1000000;}}
return __exports;});;

/* /web/static/src/core/py_js/py_interpreter.js */
odoo.define('@web/core/py_js/py_interpreter',async function(require){'use strict';let __exports={};const{BUILTINS}=require("@web/core/py_js/py_builtin");const{NotSupportedError,PyDate,PyDateTime,PyRelativeDelta,PyTime,PyTimeDelta,}=require("@web/core/py_js/py_date");const{PY_DICT,toPyDict}=require("@web/core/py_js/py_utils");const{parseArgs}=require("@web/core/py_js/py_parser");const EvaluationError=__exports.EvaluationError=class EvaluationError extends Error{}
const isTrue=BUILTINS.bool;function applyUnaryOp(ast,context){const value=evaluate(ast.right,context);switch(ast.op){case"-":if(value instanceof Object&&value.negate){return value.negate();}
return-value;case"+":return value;case"not":return!isTrue(value);}
throw new EvaluationError(`Unknown unary operator: ${ast.op}`);}
function pytypeIndex(val){switch(typeof val){case"object":return val===null?1:Array.isArray(val)?5:3;case"number":return 2;case"string":return 4;}
throw new EvaluationError(`Unknown type: ${typeof val}`);}
function isConstructor(obj){return!!obj.prototype&&!!obj.prototype.constructor.name;}
function isLess(left,right){if(typeof left==="number"&&typeof right==="number"){return left<right;}
if(typeof left==="boolean"){left=left?1:0;}
if(typeof right==="boolean"){right=right?1:0;}
const leftIndex=pytypeIndex(left);const rightIndex=pytypeIndex(right);if(leftIndex===rightIndex){return left<right;}
return leftIndex<rightIndex;}
function isEqual(left,right){if(typeof left!==typeof right){if(typeof left==="boolean"&&typeof right==="number"){return right===(left?1:0);}
if(typeof left==="number"&&typeof right==="boolean"){return left===(right?1:0);}
return false;}
if(left instanceof Object&&left.isEqual){return left.isEqual(right);}
return left===right;}
function isIn(left,right){if(Array.isArray(right)){return right.includes(left);}
if(typeof right==="string"&&typeof left==="string"){return right.includes(left);}
return false;}
function applyBinaryOp(ast,context){const left=evaluate(ast.left,context);const right=evaluate(ast.right,context);switch(ast.op){case"+":{const relativeDeltaOnLeft=left instanceof PyRelativeDelta;const relativeDeltaOnRight=right instanceof PyRelativeDelta;if(relativeDeltaOnLeft||relativeDeltaOnRight){const date=relativeDeltaOnLeft?right:left;const delta=relativeDeltaOnLeft?left:right;return PyRelativeDelta.add(date,delta);}
const timeDeltaOnLeft=left instanceof PyTimeDelta;const timeDeltaOnRight=right instanceof PyTimeDelta;if(timeDeltaOnLeft&&timeDeltaOnRight){return left.add(right);}
if(timeDeltaOnLeft){if(right instanceof PyDate||right instanceof PyDateTime){return right.add(left);}else{throw NotSupportedError();}}
if(timeDeltaOnRight){if(left instanceof PyDate||left instanceof PyDateTime){return left.add(right);}else{throw NotSupportedError();}}
return left+right;}
case"-":{const isRightDelta=right instanceof PyRelativeDelta;if(isRightDelta){return PyRelativeDelta.substract(left,right);}
const timeDeltaOnRight=right instanceof PyTimeDelta;if(timeDeltaOnRight){if(left instanceof PyTimeDelta){return left.substract(right);}else if(left instanceof PyDate||left instanceof PyDateTime){return left.substract(right);}else{throw NotSupportedError();}}
if(left instanceof PyDate){return left.substract(right);}
return left-right;}
case"*":{const timeDeltaOnLeft=left instanceof PyTimeDelta;const timeDeltaOnRight=right instanceof PyTimeDelta;if(timeDeltaOnLeft||timeDeltaOnRight){const number=timeDeltaOnLeft?right:left;const delta=timeDeltaOnLeft?left:right;return delta.multiply(number);}
return left*right;}
case"/":return left/right;case"%":return left%right;case"//":if(left instanceof PyTimeDelta){return left.divide(right);}
return Math.floor(left/right);case"**":return left**right;case"==":return isEqual(left,right);case"<>":case"!=":return!isEqual(left,right);case"<":return isLess(left,right);case">":return isLess(right,left);case">=":return isEqual(left,right)||isLess(right,left);case"<=":return isEqual(left,right)||isLess(left,right);case"in":return isIn(left,right);case"not in":return!isIn(left,right);}
throw new EvaluationError(`Unknown binary operator: ${ast.op}`);}
const DICT={get(dict){return(...args)=>{const{key,defValue}=parseArgs(args,["key","defValue"]);if(key in dict){return dict[key];}else if(defValue){return defValue;}
return null;};},};__exports.evaluate=evaluate;function evaluate(ast,context={}){const dicts=new Set();let pyContext;const evalContext=Object.create(context);Object.defineProperty(evalContext,"context",{get(){if(!pyContext){pyContext=toPyDict(context);}
return pyContext;},});function _evaluate(ast){switch(ast.type){case 0:case 1:return ast.value;case 5:if(ast.value in evalContext){return evalContext[ast.value];}else if(ast.value in BUILTINS){return BUILTINS[ast.value];}else{throw new EvaluationError(`Name '${ast.value}' is not defined`);}
case 3:return null;case 2:return ast.value;case 6:return applyUnaryOp(ast,evalContext);case 7:return applyBinaryOp(ast,evalContext);case 14:{const left=_evaluate(ast.left);if(ast.op==="and"){return isTrue(left)?_evaluate(ast.right):left;}else{return isTrue(left)?left:_evaluate(ast.right);}}
case 4:case 10:return ast.value.map(_evaluate);case 11:{const dict={};for(const key in ast.value){dict[key]=_evaluate(ast.value[key]);}
dicts.add(dict);return dict;}
case 8:{const fnValue=_evaluate(ast.fn);const args=ast.args.map(_evaluate);const kwargs={};for(const kwarg in ast.kwargs){kwargs[kwarg]=_evaluate(ast.kwargs[kwarg]);}
if(fnValue===PyDate||fnValue===PyDateTime||fnValue===PyTime||fnValue===PyRelativeDelta||fnValue===PyTimeDelta){return fnValue.create(...args,kwargs);}
return fnValue(...args,kwargs);}
case 12:{const dict=_evaluate(ast.target);const key=_evaluate(ast.key);return dict[key];}
case 13:{if(isTrue(_evaluate(ast.condition))){return _evaluate(ast.ifTrue);}else{return _evaluate(ast.ifFalse);}}
case 15:{const left=_evaluate(ast.obj);if(dicts.has(left)||Object.isPrototypeOf.call(PY_DICT,left)){return DICT[ast.key](left);}
const result=left[ast.key];if(typeof result==="function"&&!isConstructor(result)){return result.bind(left);}
return result;}}
throw new EvaluationError(`AST of type ${ast.type} cannot be evaluated`);}
return _evaluate(ast);}
return __exports;});;

/* /web/static/src/core/py_js/py_parser.js */
odoo.define('@web/core/py_js/py_parser',async function(require){'use strict';let __exports={};const{binaryOperators,comparators}=require("@web/core/py_js/py_tokenizer");const ParserError=__exports.ParserError=class ParserError extends Error{}
const chainedOperators=new Set(comparators);const infixOperators=new Set(binaryOperators.concat(comparators));__exports.bp=bp;function bp(symbol){switch(symbol){case"=":return 10;case"if":return 20;case"in":case"not in":case"is":case"is not":case"<":case"<=":case">":case">=":case"<>":case"==":case"!=":return 60;case"or":return 30;case"and":return 40;case"not":return 50;case"|":return 70;case"^":return 80;case"&":return 90;case"<<":case">>":return 100;case"+":case"-":return 110;case"*":case"/":case"//":case"%":return 120;case"**":return 140;case".":case"(":case"[":return 150;}
return 0;}
function bindingPower(token){return token.type===2?bp(token.value):0;}
function isSymbol(token,value){return token.type===2&&token.value===value;}
function parsePrefix(current,tokens){switch(current.type){case 0:return{type:0,value:current.value};case 1:return{type:1,value:current.value};case 4:if(current.value==="None"){return{type:3};}else{return{type:2,value:current.value==="True"};}
case 3:return{type:5,value:current.value};case 2:switch(current.value){case"-":case"+":case"~":return{type:6,op:current.value,right:_parse(tokens,130),};case"not":return{type:6,op:current.value,right:_parse(tokens,50),};case"(":{const content=[];let isTuple=false;while(tokens[0]&&!isSymbol(tokens[0],")")){content.push(_parse(tokens,0));if(tokens[0]){if(tokens[0]&&isSymbol(tokens[0],",")){isTuple=true;tokens.shift();}else if(!isSymbol(tokens[0],")")){throw new ParserError("parsing error");}}else{throw new ParserError("parsing error");}}
if(!tokens[0]||!isSymbol(tokens[0],")")){throw new ParserError("parsing error");}
tokens.shift();isTuple=isTuple||content.length===0;return isTuple?{type:10,value:content}:content[0];}
case"[":{const value=[];while(tokens[0]&&!isSymbol(tokens[0],"]")){value.push(_parse(tokens,0));if(tokens[0]){if(isSymbol(tokens[0],",")){tokens.shift();}else if(!isSymbol(tokens[0],"]")){throw new ParserError("parsing error");}}}
if(!tokens[0]||!isSymbol(tokens[0],"]")){throw new ParserError("parsing error");}
tokens.shift();return{type:4,value};}
case"{":{const dict={};while(tokens[0]&&!isSymbol(tokens[0],"}")){const key=_parse(tokens,0);if((key.type!==1&&key.type!==0)||!tokens[0]||!isSymbol(tokens[0],":")){throw new ParserError("parsing error");}
tokens.shift();const value=_parse(tokens,0);dict[key.value]=value;if(isSymbol(tokens[0],",")){tokens.shift();}}
if(!tokens.shift()){throw new ParserError("parsing error");}
return{type:11,value:dict};}}}
throw new ParserError("Token cannot be parsed");}
function parseInfix(left,current,tokens){switch(current.type){case 2:if(infixOperators.has(current.value)){let right=_parse(tokens,bindingPower(current));if(current.value==="and"||current.value==="or"){return{type:14,op:current.value,left,right,};}else if(current.value==="."){if(right.type===5){return{type:15,obj:left,key:right.value,};}else{throw new ParserError("invalid obj lookup");}}
let op={type:7,op:current.value,left,right,};while(chainedOperators.has(current.value)&&tokens[0]&&tokens[0].type===2&&chainedOperators.has(tokens[0].value)){const nextToken=tokens.shift();op={type:14,op:"and",left:op,right:{type:7,op:nextToken.value,left:right,right:_parse(tokens,bindingPower(nextToken)),},};right=op.right.right;}
return op;}
switch(current.value){case"(":{const args=[];const kwargs={};while(tokens[0]&&!isSymbol(tokens[0],")")){const arg=_parse(tokens,0);if(arg.type===9){kwargs[arg.name.value]=arg.value;}else{args.push(arg);}
if(tokens[0]&&isSymbol(tokens[0],",")){tokens.shift();}}
if(!tokens[0]||!isSymbol(tokens[0],")")){throw new ParserError("parsing error");}
tokens.shift();return{type:8,fn:left,args,kwargs};}
case"=":if(left.type===5){return{type:9,name:left,value:_parse(tokens,10),};}
break;case"[":{const key=_parse(tokens);if(!tokens[0]||!isSymbol(tokens[0],"]")){throw new ParserError("parsing error");}
tokens.shift();return{type:12,target:left,key:key,};}
case"if":{const condition=_parse(tokens);if(!tokens[0]||!isSymbol(tokens[0],"else")){throw new ParserError("parsing error");}
tokens.shift();const ifFalse=_parse(tokens);return{type:13,condition,ifTrue:left,ifFalse,};}}}
throw new ParserError("Token cannot be parsed");}
function _parse(tokens,bp=0){const token=tokens.shift();let expr=parsePrefix(token,tokens);while(tokens[0]&&bindingPower(tokens[0])>bp){expr=parseInfix(expr,tokens.shift(),tokens);}
return expr;}
__exports.parse=parse;function parse(tokens){if(tokens.length){return _parse(tokens,0);}
throw new ParserError("Missing token");}
__exports.parseArgs=parseArgs;function parseArgs(args,spec){const last=args[args.length-1];const unnamedArgs=typeof last==="object"?args.slice(0,-1):args;const kwargs=typeof last==="object"?last:{};for(const[index,val]of unnamedArgs.entries()){kwargs[spec[index]]=val;}
return kwargs;}
return __exports;});;

/* /web/static/src/core/py_js/py_tokenizer.js */
odoo.define('@web/core/py_js/py_tokenizer',async function(require){'use strict';let __exports={};const TokenizerError=__exports.TokenizerError=class TokenizerError extends Error{}
const directMap={"\\":"\\",'"':'"',"'":"'",a:"\x07",b:"\x08",f:"\x0c",n:"\n",r:"\r",t:"\t",v:"\v",};function decodeStringLiteral(str,unicode){const out=[];let code;for(var i=0;i<str.length;++i){if(str[i]!=="\\"){out.push(str[i]);continue;}
var escape=str[i+1];if(escape in directMap){out.push(directMap[escape]);++i;continue;}
switch(escape){case"\n":++i;continue;case"N":if(!unicode){break;}
throw new TokenizerError("SyntaxError: \\N{} escape not implemented");case"u":if(!unicode){break;}
var uni=str.slice(i+2,i+6);if(!/[0-9a-f]{4}/i.test(uni)){throw new TokenizerError(["SyntaxError: (unicode error) 'unicodeescape' codec"," can't decode bytes in position ",i,"-",i+4,": truncated \\uXXXX escape",].join(""));}
code=parseInt(uni,16);out.push(String.fromCharCode(code));i+=5;continue;case"U":if(!unicode){break;}
throw new TokenizerError("SyntaxError: \\U escape not implemented");case"x":var hex=str.slice(i+2,i+4);if(!/[0-9a-f]{2}/i.test(hex)){if(!unicode){throw new TokenizerError("ValueError: invalid \\x escape");}
throw new TokenizerError(["SyntaxError: (unicode error) 'unicodeescape'"," codec can't decode bytes in position ",i,"-",i+2,": truncated \\xXX escape",].join(""));}
code=parseInt(hex,16);out.push(String.fromCharCode(code));i+=3;continue;default:if(!/[0-8]/.test(escape)){break;}
var r=/[0-8]{1,3}/g;r.lastIndex=i+1;var m=r.exec(str);var oct=m[0];code=parseInt(oct,8);out.push(String.fromCharCode(code));i+=oct.length;continue;}
out.push("\\");}
return out.join("");}
const constants=new Set(["None","False","True"]);const comparators=__exports.comparators=["in","not","not in","is","is not","<","<=",">",">=","<>","!=","==",];const binaryOperators=__exports.binaryOperators=["or","and","|","^","&","<<",">>","+","-","*","/","//","%","~","**",".",];const unaryOperators=__exports.unaryOperators=["-"];const symbols=new Set([...["(",")","[","]","{","}",":",","],...["if","else","lambda","="],...comparators,...binaryOperators,...unaryOperators,]);function group(...args){return"("+args.join("|")+")";}
const Name="[a-zA-Z_]\\w*";const Whitespace="[ \\f\\t]*";const DecNumber="\\d+(L|l)?";const IntNumber=DecNumber;const Exponent="[eE][+-]?\\d+";const PointFloat=group(`\\d+\\.\\d*(${Exponent})?`,`\\.\\d+(${Exponent})?`);const FloatNumber=group(PointFloat,`\\d+${Exponent}`);const Number=group(FloatNumber,IntNumber);const Operator=group("\\*\\*=?",">>=?","<<=?","<>","!=","//=?","[+\\-*/%&|^=<>]=?","~");const Bracket="[\\[\\]\\(\\)\\{\\}]";const Special="[:;.,`@]";const Funny=group(Operator,Bracket,Special);const ContStr=group("([uU])?'([^\n'\\\\]*(?:\\\\.[^\n'\\\\]*)*)'",'([uU])?"([^\n"\\\\]*(?:\\\\.[^\n"\\\\]*)*)"');const PseudoToken=Whitespace+group(Number,Funny,ContStr,Name);const NumberPattern=new RegExp("^"+Number+"$");const StringPattern=new RegExp("^"+ContStr+"$");const NamePattern=new RegExp("^"+Name+"$");const strip=new RegExp("^"+Whitespace);__exports.tokenize=tokenize;function tokenize(str){const tokens=[];const max=str.length;let start=0;let end=0;const pseudoprog=new RegExp(PseudoToken,"g");while(pseudoprog.lastIndex<max){const pseudomatch=pseudoprog.exec(str);if(!pseudomatch){if(/^\s+$/.test(str.slice(end))){break;}
throw new TokenizerError("Failed to tokenize <<"+
str+">> at index "+
(end||0)+"; parsed so far: "+
tokens);}
if(pseudomatch.index>end){if(str.slice(end,pseudomatch.index).trim()){throw new TokenizerError("Invalid expression");}}
start=pseudomatch.index;end=pseudoprog.lastIndex;let token=str.slice(start,end).replace(strip,"");if(NumberPattern.test(token)){tokens.push({type:0,value:parseFloat(token),});}else if(StringPattern.test(token)){var m=StringPattern.exec(token);tokens.push({type:1,value:decodeStringLiteral(m[3]!==undefined?m[3]:m[5],!!(m[2]||m[4])),});}else if(symbols.has(token)){if(token==="in"&&tokens.length>0&&tokens[tokens.length-1].value==="not"){token="not in";tokens.pop();}else if(token==="not"&&tokens.length>0&&tokens[tokens.length-1].value==="is"){token="is not";tokens.pop();}
tokens.push({type:2,value:token,});}else if(constants.has(token)){tokens.push({type:4,value:token,});}else if(NamePattern.test(token)){tokens.push({type:3,value:token,});}else{throw new TokenizerError("Invalid expression");}}
return tokens;}
return __exports;});;

/* /web/static/src/core/py_js/py_utils.js */
odoo.define('@web/core/py_js/py_utils',async function(require){'use strict';let __exports={};const{bp}=require("@web/core/py_js/py_parser");const{PyDate,PyDateTime}=require("@web/core/py_js/py_date");__exports.toPyValue=toPyValue;function toPyValue(value){switch(typeof value){case"string":return{type:1,value};case"number":return{type:0,value};case"boolean":return{type:2,value};case"object":if(Array.isArray(value)){return{type:4,value:value.map(toPyValue)};}else if(value===null){return{type:3};}else if(value instanceof Date){return{type:1,value:PyDateTime.convertDate(value)};}else if(value instanceof PyDate||value instanceof PyDateTime){return{type:1,value};}else{const content={};for(const key in value){content[key]=toPyValue(value[key]);}
return{type:11,value:content};}
default:throw new Error("Invalid type");}}
__exports.formatAST=formatAST;function formatAST(ast,lbp=0){switch(ast.type){case 3:return"None";case 1:return JSON.stringify(ast.value);case 0:return String(ast.value);case 2:return ast.value?"True":"False";case 4:return`[${ast.value.map(formatAST).join(", ")}]`;case 6:if(ast.op==="not"){return`not `+formatAST(ast.right,50);}
return ast.op+formatAST(ast.right,130);case 7:{const abp=bp(ast.op);const str=`${formatAST(ast.left, abp)} ${ast.op} ${formatAST(ast.right, abp)}`;return abp<lbp?`(${str})`:str;}
case 11:{const pairs=[];for(const k in ast.value){pairs.push(`"${k}": ${formatAST(ast.value[k])}`);}
return`{`+pairs.join(", ")+`}`;}
case 10:return`(${ast.value.map(formatAST).join(", ")})`;case 5:return ast.value;case 12:{return`${formatAST(ast.target)}[${formatAST(ast.key)}]`;}
case 13:{const{ifTrue,condition,ifFalse}=ast;return`${formatAST(ifTrue)} if ${formatAST(condition)} else ${formatAST(ifFalse)}`;}
case 14:{const abp=bp(ast.op);const str=`${formatAST(ast.left, abp)} ${ast.op} ${formatAST(ast.right, abp)}`;return abp<lbp?`(${str})`:str;}
case 15:return`${formatAST(ast.obj, 150)}.${ast.key}`;case 8:{const args=ast.args.map(formatAST);const kwargs=[];for(const kwarg in ast.kwargs){kwargs.push(`${kwarg} = ${formatAST(ast.kwargs[kwarg])}`);}
const argStr=args.concat(kwargs).join(", ");return`${formatAST(ast.fn)}(${argStr})`;}}
throw new Error("invalid expression: "+ast);}
const PY_DICT=__exports.PY_DICT=Object.create(null);__exports.toPyDict=toPyDict;function toPyDict(obj){return new Proxy(obj,{getPrototypeOf(){return PY_DICT;},});}
return __exports;});;

/* /web/static/src/core/registry.js */
odoo.define('@web/core/registry',async function(require){'use strict';let __exports={};const{EventBus}=require("@odoo/owl");const KeyNotFoundError=__exports.KeyNotFoundError=class KeyNotFoundError extends Error{}
const DuplicatedKeyError=__exports.DuplicatedKeyError=class DuplicatedKeyError extends Error{}
const Registry=__exports.Registry=class Registry extends EventBus{constructor(){super();this.content={};this.subRegistries={};this.elements=null;this.entries=null;this.addEventListener("UPDATE",()=>{this.elements=null;this.entries=null;});}
add(key,value,{force,sequence}={}){if(!force&&key in this.content){throw new DuplicatedKeyError(`Cannot add '${key}' in this registry: it already exists`);}
let previousSequence;if(force){const elem=this.content[key];previousSequence=elem&&elem[0];}
sequence=sequence===undefined?previousSequence||50:sequence;this.content[key]=[sequence,value];const payload={operation:"add",key,value};this.trigger("UPDATE",payload);return this;}
get(key,defaultValue){if(arguments.length<2&&!(key in this.content)){throw new KeyNotFoundError(`Cannot find ${key} in this registry!`);}
const info=this.content[key];return info?info[1]:defaultValue;}
contains(key){return key in this.content;}
getAll(){if(!this.elements){const content=Object.values(this.content).sort((el1,el2)=>el1[0]-el2[0]);this.elements=content.map((elem)=>elem[1]);}
return this.elements.slice();}
getEntries(){if(!this.entries){const entries=Object.entries(this.content).sort((el1,el2)=>el1[1][0]-el2[1][0]);this.entries=entries.map(([str,elem])=>[str,elem[1]]);}
return this.entries.slice();}
remove(key){const value=this.content[key];delete this.content[key];const payload={operation:"delete",key,value};this.trigger("UPDATE",payload);}
category(subcategory){if(!(subcategory in this.subRegistries)){this.subRegistries[subcategory]=new Registry();}
return this.subRegistries[subcategory];}}
const registry=__exports.registry=new Registry();return __exports;});;

/* /web/static/src/core/scroller_service.js */
odoo.define('@web/core/scroller_service',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{scrollTo}=require("@web/core/utils/scrolling");const scrollerService=__exports.scrollerService={start(env){browser.addEventListener("click",(ev)=>{const link=ev.target.closest("a");if(!link){return;}
const disableAnchor=link.attributes.getNamedItem("disable_anchor");if(disableAnchor&&disableAnchor.value==="true"){return;}
const href=link.attributes.getNamedItem("href");if(href){if(href.value[0]==="#"){if(href.value.length===1){ev.preventDefault();return;}
let matchingEl=null;try{matchingEl=document.querySelector(`.o_content #${href.value.substr(1)}`);}catch(_e){}
const triggerEv=new CustomEvent("anchor-link-clicked",{detail:{element:matchingEl,id:href.value,originalEv:ev,},});env.bus.trigger("SCROLLER:ANCHOR_LINK_CLICKED",triggerEv);if(matchingEl&&!triggerEv.defaultPrevented){ev.preventDefault();scrollTo(matchingEl,{isAnchor:true});}}}});},};registry.category("services").add("scroller",scrollerService);return __exports;});;

/* /web/static/src/core/signature/name_and_signature.js */
odoo.define('@web/core/signature/name_and_signature',async function(require){'use strict';let __exports={};const{isMobileOS}=require("@web/core/browser/feature_detection");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{useService}=require("@web/core/utils/hooks");const{pick}=require("@web/core/utils/objects");const{renderToString}=require("@web/core/utils/render");const{getDataURLFromFile}=require("@web/core/utils/urls");const{Component,useState,onWillStart,useRef,useEffect}=require("@odoo/owl");let htmlId=0;const NameAndSignature=__exports.NameAndSignature=class NameAndSignature extends Component{setup(){this.rpc=useService("rpc");this.htmlId=htmlId++;this.defaultName=this.props.signature.name||"";this.currentFont=0;this.drawTimeout=null;this.state=useState({signMode:this.props.mode||(this.props.noInputName&&!this.defaultName?"draw":"auto"),showSignatureArea:!!(this.props.noInputName||this.defaultName),showFontList:false,});this.signNameInputRef=useRef("signNameInput");const signInputLoad=useRef("signInputLoad");useEffect((el)=>{if(el){el.click();}},()=>[signInputLoad.el]);onWillStart(async()=>{this.fonts=await this.rpc(`/web/sign/get_fonts/${this.props.defaultFont}`);});this.signatureRef=useRef("signature");useEffect((el)=>{if(el){this.$signatureField=$(".o_web_sign_signature");this.$signatureField.on("change",()=>{this.props.signature.isSignatureEmpty=this.isSignatureEmpty;});this.jSignature();this.resetSignature();this.props.signature.getSignatureImage=()=>this.jSignature("getData","image");if(this.state.signMode==="auto"){this.drawCurrentName();}}},()=>[this.signatureRef.el]);}
drawCurrentName(){const font=this.fonts[this.currentFont];const text=this.getCleanedName();const canvas=this.signatureRef.el.querySelector("canvas");const img=this.getSVGText(font,text,canvas.width,canvas.height);this.printImage(img);}
focusName(){if(!isMobileOS()&&this.signNameInputRef.el){this.signNameInputRef.el.focus();}}
getCleanedName(){const text=this.props.signature.name;if(this.props.signatureType==="initial"&&text){return(text.split(" ").map(function(w){return w[0];}).join(".")+".");}
return text;}
getSVGText(font,text,width,height){const svg=renderToString("web.sign_svg_text",{width:width,height:height,font:font,text:text,type:this.props.signatureType,color:this.props.fontColor,});return"data:image/svg+xml,"+encodeURI(svg);}
getSVGTextFont(font){const height=100;const width=parseInt(height*this.props.displaySignatureRatio);return this.getSVGText(font,this.getCleanedName(),width,height);}
jSignature(){return this.$signatureField.jSignature(...arguments);}
async onChangeSignLoadInput(ev){var file=ev.target.files[0];if(file===undefined){return false;}
if(file.type.substr(0,5)!=="image"){this.jSignature("reset");this.state.loadIsInvalid=true;return false;}
this.state.loadIsInvalid=false;const result=await getDataURLFromFile(file);this.printImage(result);}
onClickSignAutoSelectStyle(){this.state.showFontList=true;}
onClickSignDrawClear(){this.jSignature("reset");}
onInputSignName(ev){this.props.signature.name=ev.target.value;if(!this.state.showSignatureArea&&this.getCleanedName()){this.state.showSignatureArea=true;return;}
if(this.state.signMode==="auto"){this.drawCurrentName();}}
onSelectFont(index){this.currentFont=this.fonts[index];this.drawCurrentName();}
printImage(imgSrc){const image=new Image();image.onload=()=>{clearTimeout(this.drawTimeout);this.drawTimeout=setTimeout(()=>{let width=0;let height=0;const ratio=image.width/image.height;const signatureEl=this.signatureRef.el;if(!signatureEl){return;}
const canvas=signatureEl.querySelector("canvas");const context=canvas.getContext("2d");if(image.width/canvas.width>image.height/canvas.height){width=canvas.width;height=parseInt(width/ratio);}else{height=canvas.height;width=parseInt(height*ratio);}
this.jSignature("reset");const ignoredContext=pick(context,"shadowOffsetX","shadowOffsetY");Object.assign(context,{shadowOffsetX:0,shadowOffsetY:0});context.drawImage(image,0,0,image.width,image.height,(canvas.width-width)/2,(canvas.height-height)/2,width,height);Object.assign(context,ignoredContext);this.props.signature.isSignatureEmpty=this.isSignatureEmpty;return this.isSignatureEmpty;},0);};image.src=imgSrc;}
resetSignature(){const{width,height}=this.resizeSignature();this.$signatureField.empty().jSignature({"decor-color":"#D1D0CE","background-color":"rgba(255,255,255,0)","show-stroke":false,color:this.props.fontColor,lineWidth:2,width:width,height:height,});this.emptySignature=this.jSignature("getData");this.setMode(this.state.signMode,true);this.focusName();}
resizeSignature(){this.signatureRef.el.style.width="unset";const width=this.signatureRef.el.clientWidth;const height=parseInt(width/this.props.displaySignatureRatio);this.state.signature={width,height,};Object.assign(this.signatureRef.el.querySelector("canvas").style,{width,height});return{width,height};}
async setMode(mode,reset){if(reset!==true&&mode===this.signMode){return;}
this.state.signMode=mode;this.jSignature(this.state.signMode==="draw"?"enable":"disable");this.jSignature("reset");if(this.state.signMode==="auto"){this.drawCurrentName();}}
get isSignatureEmpty(){const signature=this.jSignature("getData");return signature&&this.emptySignature?this.emptySignature===signature:true;}
get loadIsInvalid(){return this.state.signMode==="load"&&this.state.loadIsInvalid;}
get signatureStyle(){const{signature}=this.state;return signature?`width: ${signature.width}px; height: ${signature.height}px`:"";}}
NameAndSignature.template="web.NameAndSignature";NameAndSignature.components={Dropdown,DropdownItem};NameAndSignature.props={signature:{type:Object},defaultFont:{type:String,optional:true},displaySignatureRatio:{type:Number,optional:true},fontColor:{type:String,optional:true},signatureType:{type:String,optional:true},noInputName:{type:Boolean,optional:true},mode:{type:String,optional:true},};NameAndSignature.defaultProps={defaultFont:"",displaySignatureRatio:3.0,fontColor:"DarkBlue",signatureType:"signature",noInputName:false,};return __exports;});;

/* /web/static/src/core/signature/signature_dialog.js */
odoo.define('@web/core/signature/signature_dialog',async function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{NameAndSignature}=require("@web/core/signature/name_and_signature");const{Component,useState}=require("@odoo/owl");const SignatureDialog=__exports.SignatureDialog=class SignatureDialog extends Component{setup(){this.title=this.env._t("Adopt Your Signature");this.signature=useState({name:this.props.defaultName,isSignatureEmpty:true,});}
onClickConfirm(){this.props.uploadSignature({name:this.signature.name,signatureImage:this.signature.getSignatureImage(),});this.props.close();}
get nameAndSignatureProps(){return{...this.props.nameAndSignatureProps,signature:this.signature,};}}
SignatureDialog.template="web.SignatureDialog";SignatureDialog.components={Dialog,NameAndSignature};SignatureDialog.defaultProps={defaultName:"",};return __exports;});;

/* /web/static/src/core/tooltip/tooltip.js */
odoo.define('@web/core/tooltip/tooltip',async function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const Tooltip=__exports.Tooltip=class Tooltip extends Component{}
Tooltip.template="web.Tooltip";Tooltip.props={close:Function,tooltip:{type:String,optional:true},template:{type:String,optional:true},info:{optional:true},};return __exports;});;

/* /web/static/src/core/tooltip/tooltip_hook.js */
odoo.define('@web/core/tooltip/tooltip_hook',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{useEffect,useRef}=require("@odoo/owl");__exports.useTooltip=useTooltip;function useTooltip(refName,params){const tooltip=useService("tooltip");const ref=useRef(refName);useEffect((el)=>tooltip.add(el,params),()=>[ref.el]);}
return __exports;});;

/* /web/static/src/core/tooltip/tooltip_service.js */
odoo.define('@web/core/tooltip/tooltip_service',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{Tooltip}=require("@web/core/tooltip/tooltip");const{hasTouch}=require("@web/core/browser/feature_detection");const{whenReady}=require("@odoo/owl");const OPEN_DELAY=400;const CLOSE_DELAY=200;const tooltipService=__exports.tooltipService={dependencies:["popover"],start(env,{popover}){let openTooltipTimeout;let closeTooltip;let target=null;let touchPressed;const elementsWithTooltips=new Map();function cleanup(){browser.clearTimeout(openTooltipTimeout);if(closeTooltip){closeTooltip();}}
function shouldCleanup(){if(!target){return false;}
if(!document.body.contains(target)){return true;}
if(hasTouch()){return!touchPressed;}
return false;}
function openTooltip(el,{tooltip="",template,info,position,delay=OPEN_DELAY}){target=el;cleanup();if(!tooltip&&!template){return;}
openTooltipTimeout=browser.setTimeout(()=>{if(target.isConnected){closeTooltip=popover.add(target,Tooltip,{tooltip,template,info},{position});target.title="";}},delay);}
function openElementsTooltip(el){if(elementsWithTooltips.has(el)){openTooltip(el,elementsWithTooltips.get(el));}else if(el.matches("[data-tooltip], [data-tooltip-template]")){const dataset=el.dataset;const params={tooltip:dataset.tooltip,template:dataset.tooltipTemplate,position:dataset.tooltipPosition,};if(dataset.tooltipInfo){params.info=JSON.parse(dataset.tooltipInfo);}
if(dataset.tooltipDelay){params.delay=parseInt(dataset.tooltipDelay,10);}
openTooltip(el,params);}}
function onMouseenter(ev){openElementsTooltip(ev.target);}
function onMouseleave(ev){if(target===ev.target){cleanup();}}
function onTouchStart(ev){touchPressed=true;openElementsTooltip(ev.target);}
whenReady(()=>{browser.setInterval(()=>{if(shouldCleanup()){cleanup();}},CLOSE_DELAY);if(hasTouch()){document.body.addEventListener("touchstart",onTouchStart);document.body.addEventListener("touchend",(ev)=>{if(ev.target.matches("[data-tooltip], [data-tooltip-template]")){if(!ev.target.dataset.tooltipTouchTapToShow){touchPressed=false;}}});document.body.addEventListener("touchcancel",(ev)=>{if(ev.target.matches("[data-tooltip], [data-tooltip-template]")){if(!ev.target.dataset.tooltipTouchTapToShow){touchPressed=false;}}});return;}
document.body.addEventListener("mouseenter",onMouseenter,{capture:true});document.body.addEventListener("mouseleave",onMouseleave,{capture:true});});return{add(el,params){elementsWithTooltips.set(el,params);return()=>{elementsWithTooltips.delete(el);if(target===el){cleanup();}};},};},};registry.category("services").add("tooltip",tooltipService);return __exports;});;

/* /web/static/src/core/transition.js */
odoo.define('@web/core/transition',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{Component,useState,useEffect,xml,onWillUpdateProps,useComponent}=require("@odoo/owl");const config=__exports.config={disabled:false,};__exports.useTransition=useTransition;function useTransition({name,initialVisibility=true,leaveDuration=500,onLeave=()=>{},}){const component=useComponent();const state=useState({shouldMount:initialVisibility,stage:initialVisibility?"enter":"leave",});if(config.disabled){return{get shouldMount(){return state.shouldMount;},set shouldMount(val){state.shouldMount=val;},get className(){return`${name} ${name}-enter-active`;},get stage(){return"enter-active";},};}
let onNextPatch=null;useEffect(()=>{if(onNextPatch){onNextPatch();onNextPatch=null;}});let prevState,timer;const transition={get shouldMount(){return state.shouldMount;},set shouldMount(newState){if(newState===prevState){return;}
browser.clearTimeout(timer);prevState=newState;if(newState){state.stage="enter";state.shouldMount=true;component.render();onNextPatch=()=>{state.stage="enter-active";};}else{state.stage="leave";timer=browser.setTimeout(()=>{state.shouldMount=false;onLeave();},leaveDuration);}},get className(){return`${name} ${name}-${state.stage}`;},get stage(){return state.stage;},};transition.shouldMount=initialVisibility;return transition;}
const Transition=__exports.Transition=class Transition extends Component{setup(){const{visible,leaveDuration,name,onLeave}=this.props;this.transition=useTransition({initialVisibility:visible,leaveDuration,name,onLeave,});onWillUpdateProps(({visible=true})=>{this.transition.shouldMount=visible;});}}
Transition.template=xml`<t t-slot="default" t-if="transition.shouldMount" className="transition.className"/>`;Transition.props={name:String,visible:{type:Boolean,optional:true},leaveDuration:{type:Number,optional:true},onLeave:{type:Function,optional:true},slots:Object,};return __exports;});;

/* /web/static/src/core/ui/block_ui.js */
odoo.define('@web/core/ui/block_ui',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{Component,useState,xml}=require("@odoo/owl");const BlockUI=__exports.BlockUI=class BlockUI extends Component{setup(){this.messagesByDuration=[{time:20,l1:this.env._t("Loading...")},{time:40,l1:this.env._t("Still loading...")},{time:60,l1:this.env._t("Still loading..."),l2:this.env._t("Please be patient."),},{time:180,l1:this.env._t("Don't leave yet,"),l2:this.env._t("it's still loading..."),},{time:120,l1:this.env._t("You may not believe it,"),l2:this.env._t("but the application is actually loading..."),},{time:3180,l1:this.env._t("Take a minute to get a coffee,"),l2:this.env._t("because it's loading..."),},{time:null,l1:this.env._t("Maybe you should consider reloading the application by pressing F5..."),},];this.state=useState({blockUI:false,line1:"",line2:"",});this.props.bus.addEventListener("BLOCK",this.block.bind(this));this.props.bus.addEventListener("UNBLOCK",this.unblock.bind(this));}
replaceMessage(index){const message=this.messagesByDuration[index];this.state.line1=message.l1;this.state.line2=message.l2||"";if(message.time!==null){this.msgTimer=browser.setTimeout(()=>{this.replaceMessage(index+1);},message.time*1000);}}
block(){this.state.blockUI=true;this.replaceMessage(0);}
unblock(){this.state.blockUI=false;clearTimeout(this.msgTimer);this.state.line1="";this.state.line2="";}}
BlockUI.template=xml`
    <div t-att-class="state.blockUI ? 'o_blockUI fixed-top d-flex justify-content-center align-items-center flex-column vh-100 bg-black-50' : ''">
      <t t-if="state.blockUI">
        <div class="o_spinner mb-4">
            <img src="/web/static/img/spin.svg" alt="Loading..."/>
        </div>
        <div class="o_message text-center px-4">
            <t t-esc="state.line1"/> <br/>
            <t t-esc="state.line2"/>
        </div>
      </t>
    </div>`;return __exports;});;

/* /web/static/src/core/ui/ui_service.js */
odoo.define('@web/core/ui/ui_service',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{registry}=require("@web/core/registry");const{debounce}=require("@web/core/utils/timing");const{BlockUI}=require("@web/core/ui/block_ui");const{browser}=require("@web/core/browser/browser");const{getTabableElements}=require("@web/core/utils/ui");const{getActiveHotkey}=require("@web/core/hotkeys/hotkey_service");const{EventBus,useEffect,useRef}=require("@odoo/owl");const SIZES=__exports.SIZES={XS:0,VSM:1,SM:2,MD:3,LG:4,XL:5,XXL:6};__exports.useActiveElement=useActiveElement;function useActiveElement(refName){if(!refName){throw new Error("refName not given to useActiveElement");}
const uiService=useService("ui");const owner=useRef(refName);let lastTabableEl,firstTabableEl;function trapFocus(e){switch(getActiveHotkey(e)){case"tab":if(document.activeElement===lastTabableEl){firstTabableEl.focus();e.preventDefault();e.stopPropagation();}
break;case"shift+tab":if(document.activeElement===firstTabableEl){lastTabableEl.focus();e.preventDefault();e.stopPropagation();}
break;}}
useEffect((el)=>{if(el){const oldActiveElement=document.activeElement;uiService.activateElement(el);const tabableEls=getTabableElements(el);if(tabableEls.length===0&&el.tabIndex<0){el.tabIndex=-1;}
firstTabableEl=tabableEls[0]||el;lastTabableEl=tabableEls[tabableEls.length-1]||el;el.addEventListener("keydown",trapFocus);if(!el.contains(document.activeElement)){firstTabableEl.focus();}
return()=>{uiService.deactivateElement(el);el.removeEventListener("keydown",trapFocus);if(el.contains(document.activeElement)){oldActiveElement.focus();}};}},()=>[owner.el]);}
const MEDIAS_BREAKPOINTS=__exports.MEDIAS_BREAKPOINTS=[{maxWidth:474},{minWidth:475,maxWidth:575},{minWidth:576,maxWidth:767},{minWidth:768,maxWidth:991},{minWidth:992,maxWidth:1199},{minWidth:1200,maxWidth:1533},{minWidth:1534},];__exports.getMediaQueryLists=getMediaQueryLists;function getMediaQueryLists(){return MEDIAS_BREAKPOINTS.map(({minWidth,maxWidth})=>{if(!maxWidth){return window.matchMedia(`(min-width: ${minWidth}px)`);}
if(!minWidth){return window.matchMedia(`(max-width: ${maxWidth}px)`);}
return window.matchMedia(`(min-width: ${minWidth}px) and (max-width: ${maxWidth}px)`);});}
const MEDIAS=getMediaQueryLists();const uiService=__exports.uiService={getSize(){return MEDIAS.findIndex((media)=>media.matches);},start(env){const bus=new EventBus();registry.category("main_components").add("BlockUI",{Component:BlockUI,props:{bus}});let blockCount=0;function block(){blockCount++;if(blockCount===1){bus.trigger("BLOCK");}}
function unblock(){blockCount--;if(blockCount<0){console.warn("Unblock ui was called more times than block, you should only unblock the UI if you have previously blocked it.");blockCount=0;}
if(blockCount===0){bus.trigger("UNBLOCK");}}
let activeElems=[document];function activateElement(el){activeElems.push(el);bus.trigger("active-element-changed",el);}
function deactivateElement(el){activeElems=activeElems.filter((x)=>x!==el);bus.trigger("active-element-changed",ui.activeElement);}
function getActiveElementOf(el){for(const activeElement of[...activeElems].reverse()){if(activeElement.contains(el)){return activeElement;}}}
const ui={bus,size:this.getSize(),get activeElement(){return activeElems[activeElems.length-1];},get isBlocked(){return blockCount>0;},get isSmall(){return ui.size<=SIZES.SM;},block,unblock,activateElement,deactivateElement,getActiveElementOf,};const updateSize=()=>{const prevSize=ui.size;ui.size=this.getSize();if(ui.size!==prevSize){bus.trigger("resize");}};browser.addEventListener("resize",debounce(updateSize,100));Object.defineProperty(env,"isSmall",{get(){return ui.isSmall;},});return ui;},};registry.category("services").add("ui",uiService);return __exports;});;

/* /web/static/src/core/user_service.js */
odoo.define('@web/core/user_service',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{session}=require("@web/session");const userService=__exports.userService={dependencies:["rpc"],async:["hasGroup"],start(env,{rpc}){const groupProms={};const context={...session.user_context,uid:session.uid,};return{get context(){return Object.assign({},context);},removeFromContext(key){delete context[key];},updateContext(update){Object.assign(context,update);},hasGroup(group){if(!context.uid){return Promise.resolve(false);}
if(!groupProms[group]){groupProms[group]=rpc("/web/dataset/call_kw/res.users/has_group",{model:"res.users",method:"has_group",args:[group],kwargs:{context},});}
return groupProms[group];},name:session.name,userName:session.username,isAdmin:session.is_admin,isSystem:session.is_system,partnerId:session.partner_id,home_action_id:session.home_action_id,showEffect:session.show_effect,get userId(){return context.uid;},get lang(){return context.lang;},get tz(){return context.tz;},get db(){const res={name:session.db,};if("dbuuid"in session){res.uuid=session.dbuuid;}
return res;},};},};registry.category("services").add("user",userService);return __exports;});;

/* /web/static/src/core/utils/arrays.js */
odoo.define('@web/core/utils/arrays',async function(require){'use strict';let __exports={};function _cartesian(){const args=Array.prototype.slice.call(arguments);if(args.length===0){return[undefined];}
const firstArray=args[0].map(function(elem){return[elem];});if(args.length===1){return firstArray;}
const productOfOtherArrays=_cartesian.apply(null,args.slice(1));return firstArray.reduce(function(acc,elem){return acc.concat(productOfOtherArrays.map(function(tuple){return elem.concat(tuple);}));},[]);}
function _getExtractorFrom(criterion){if(criterion){switch(typeof criterion){case"string":return(element)=>element[criterion];case"function":return criterion;default:throw new Error(`Expected criterion of type 'string' or 'function' and got '${typeof criterion}'`);}}else{return(element)=>element;}}
__exports.intersection=intersection;function intersection(array1,array2){return array1.filter((v)=>array2.includes(v));}
__exports.groupBy=groupBy;function groupBy(array,criterion){const extract=_getExtractorFrom(criterion);const groups={};for(const element of array){const group=String(extract(element));if(!(group in groups)){groups[group]=[];}
groups[group].push(element);}
return groups;}
__exports.sortBy=sortBy;function sortBy(array,criterion,order="asc"){const extract=_getExtractorFrom(criterion);return array.slice().sort((elA,elB)=>{const a=extract(elA);const b=extract(elB);let result;if(isNaN(a)&&isNaN(b)){result=a>b?1:a<b?-1:0;}else{result=a-b;}
return order==="asc"?result:-result;});}
__exports.symmetricalDifference=symmetricalDifference;function symmetricalDifference(arrayA,arrayB){return arrayA.filter((id)=>!arrayB.includes(id)).concat(arrayB.filter((id)=>!arrayA.includes(id)));}
__exports.cartesian=cartesian;function cartesian(){const args=Array.prototype.slice.call(arguments);if(args.length===0){return[undefined];}else if(args.length===1){return args[0];}else{return _cartesian.apply(null,args);}}
__exports.shallowEqual=shallowEqual;function shallowEqual(arrayA,arrayB){if(arrayA.length!==arrayB.length){return false;}
for(let i=0;i<arrayA.length;i++){if(arrayA[i]!==arrayB[i]){return false;}}
return true;}
__exports.sections=sections;function sections(array){const sections=[];for(let i=0;i<array.length+1;i++){sections.push(array.slice(0,i));}
return sections;}
__exports.unique=unique;function unique(array){return Array.from(new Set(array));}
return __exports;});;

/* /web/static/src/core/utils/binary.js */
odoo.define('@web/core/utils/binary',async function(require){'use strict';let __exports={};__exports.isBinarySize=isBinarySize;function isBinarySize(value){return/^\d+(\.\d*)? [^0-9]+$/.test(value);}
return __exports;});;

/* /web/static/src/core/utils/components.js */
odoo.define('@web/core/utils/components',async function(require){'use strict';let __exports={};const{Component,onError,xml,useSubEnv}=require("@odoo/owl");const ErrorHandler=__exports.ErrorHandler=class ErrorHandler extends Component{setup(){onError((error)=>{this.props.onError(error);});}}
ErrorHandler.template=xml`<t t-slot="default" />`;ErrorEvent.props=["onError"];const WithEnv=__exports.WithEnv=class WithEnv extends Component{setup(){useSubEnv(this.props.env);}}
WithEnv.template=xml`<t t-slot="default"/>`;return __exports;});;

/* /web/static/src/core/utils/concurrency.js */
odoo.define('@web/core/utils/concurrency',async function(require){'use strict';let __exports={};const KeepLast=__exports.KeepLast=class KeepLast{constructor(){this._id=0;}
add(promise){this._id++;const currentId=this._id;return new Promise((resolve,reject)=>{promise.then((value)=>{if(this._id===currentId){resolve(value);}}).catch((reason)=>{if(this._id===currentId){reject(reason);}});});}}
const Mutex=__exports.Mutex=class Mutex{constructor(){this._lock=Promise.resolve();this._queueSize=0;this._unlockedProm=undefined;this._unlock=undefined;}
async exec(action){this._queueSize++;if(!this._unlockedProm){this._unlockedProm=new Promise((resolve)=>{this._unlock=()=>{resolve();this._unlockedProm=undefined;};});}
const always=()=>{return Promise.resolve(action()).finally(()=>{if(--this._queueSize===0){this._unlock();}});};this._lock=this._lock.then(always,always);return this._lock;}
getUnlockedDef(){return this._unlockedProm||Promise.resolve();}}
const Race=__exports.Race=class Race{constructor(){this.currentProm=null;this.currentPromResolver=null;this.currentPromRejecter=null;}
add(promise){if(!this.currentProm){this.currentProm=new Promise((resolve,reject)=>{this.currentPromResolver=(value)=>{this.currentProm=null;this.currentPromResolver=null;this.currentPromRejecter=null;resolve(value);};this.currentPromRejecter=(error)=>{this.currentProm=null;this.currentPromResolver=null;this.currentPromRejecter=null;reject(error);};});}
promise.then(this.currentPromResolver).catch(this.currentPromRejecter);return this.currentProm;}
getCurrentProm(){return this.currentProm;}}
const Deferred=__exports.Deferred=class Deferred{constructor(){let resolve;let reject;const prom=new Promise((res,rej)=>{resolve=res;reject=rej;});return Object.assign(prom,{resolve,reject});}}
return __exports;});;

/* /web/static/src/core/utils/draggable.js */
odoo.define('@web/core/utils/draggable',async function(require){'use strict';let __exports={};const{makeDraggableHook}=require("@web/core/utils/draggable_hook_builder");const useDraggable=__exports.useDraggable=makeDraggableHook({name:"useDraggable",onDragStart({ctx,helpers}){helpers.execHandler("onDragStart",{element:ctx.currentElement});},onDrag({ctx,helpers}){helpers.execHandler("onDrag",{element:ctx.currentElement});},onDragEnd({ctx,helpers}){helpers.execHandler("onDragEnd",{element:ctx.currentElement});},onDrop({ctx,helpers}){helpers.execHandler("onDrop",{element:ctx.currentElement});},});return __exports;});;

/* /web/static/src/core/utils/draggable_hook_builder.js */
odoo.define('@web/core/utils/draggable_hook_builder',async function(require){'use strict';let __exports={};const{clamp}=require("@web/core/utils/numbers");const{debounce,setRecurringAnimationFrame}=require("@web/core/utils/timing");const{useEffect,useEnv,useExternalListener,onWillUnmount,reactive}=require("@odoo/owl");const DEFAULT_ACCEPTED_PARAMS={enable:["boolean","function"],ref:["object"],elements:["string"],handle:["string","function"],ignore:["string","function"],cursor:["string"],edgeScrolling:["object","function"],};const DEFAULT_DEFAULT_PARAMS={enable:true,edgeScrolling:{speed:10,threshold:30,},};const LEFT_CLICK=0;const MANDATORY_PARAMS=["ref","elements"];function cancelEvent(ev){ev.stopPropagation();ev.stopImmediatePropagation();ev.preventDefault();}
function getRect(el,options={}){const rect=el.getBoundingClientRect();if(options.adjust){const style=getComputedStyle(el);const[pl,pr,pt,pb]=["padding-left","padding-right","padding-top","padding-bottom",].map((prop)=>pixelValueToNumber(style.getPropertyValue(prop)));rect.x+=pl;rect.y+=pt;rect.width-=pl+pr;rect.height-=pt+pb;}
return rect;}
function getScrollParents(el){return[getScrollParentX(el),getScrollParentY(el)];}
function getScrollParentX(el){if(!el){return null;}
if(el.scrollWidth>el.clientWidth){const overflow=getComputedStyle(el).getPropertyValue("overflow");if(/\bauto\b|\bscroll\b/.test(overflow)){return el;}}
return getScrollParentX(el.parentElement);}
function getScrollParentY(el){if(!el){return null;}
if(el.scrollHeight>el.clientHeight){const overflow=getComputedStyle(el).getPropertyValue("overflow");if(/\bauto\b|\bscroll\b/.test(overflow)){return el;}}
return getScrollParentY(el.parentElement);}
function pixelValueToNumber(val){return Number(val.endsWith("px")?val.slice(0,-2):val);}
__exports.makeDraggableHook=makeDraggableHook;function makeDraggableHook(hookParams={}){const hookName=hookParams.name||"useAnonymousDraggable";const allAcceptedParams={...DEFAULT_ACCEPTED_PARAMS,...hookParams.acceptedParams};const defaultParams={...DEFAULT_DEFAULT_PARAMS,...hookParams.defaultParams};const computeParams=(params)=>{const computedParams={enable:true};for(const prop in allAcceptedParams){if(prop in params){computedParams[prop]=params[prop];if(typeof params[prop]==="function"){computedParams[prop]=computedParams[prop]();}}}
return Object.entries(computedParams);};const makeError=(reason)=>new Error(`Error in hook ${hookName}: ${reason}.`);return{[hookName](params){const addListener=(el,event,callback,options)=>{el.addEventListener(event,callback,options);cleanups.push(()=>el.removeEventListener(event,callback,options));};const addStyle=(el,style)=>{const originalStyle=el.getAttribute("style");cleanups.push(()=>originalStyle?el.setAttribute("style",originalStyle):el.removeAttribute("style"));for(const key in style){el.style[key]=style[key];}};const canDrag=(ev)=>{return(ctx.origin&&Math.hypot(ev.clientX-ctx.origin.x,ev.clientY-ctx.origin.y)>=ctx.pixelsTolerance);};const dragStart=()=>{state.dragging=true;[ctx.currentScrollParentX,ctx.currentScrollParentY]=getScrollParents(ctx.currentContainer);const[eRect]=updateRects();for(const siblingEl of ctx.ref.el.querySelectorAll(ctx.elementSelector)){if(siblingEl!==ctx.currentElement){addStyle(siblingEl,{"pointer-events":"auto"});}}
ctx.offset.x-=eRect.x;ctx.offset.y-=eRect.y;addStyle(ctx.currentElement,{position:"fixed","pointer-events":"none","z-index":1000,width:`${eRect.width}px`,height:`${eRect.height}px`,left:`${eRect.x}px`,top:`${eRect.y}px`,});const bodyStyle={"pointer-events":"none","user-select":"none",};if(ctx.cursor){bodyStyle.cursor=ctx.cursor;}
addStyle(document.body,bodyStyle);if((ctx.currentScrollParentX||ctx.currentScrollParentY)&&ctx.edgeScrolling.enabled){const cleanupFn=setRecurringAnimationFrame(handleEdgeScrolling);cleanups.push(cleanupFn);}
execBuildHandler("onDragStart");};const dragEnd=(cancelled,inErrorState)=>{if(state.dragging){if(!inErrorState){execBuildHandler("onDragEnd");if(!cancelled){execBuildHandler("onDrop");}}}
execBuildHandler("onCleanup");while(cleanups.length){cleanups.pop()();}
ctx.currentContainer=null;ctx.currentElement=null;ctx.currentElementRect=null;ctx.origin=null;ctx.currentScrollParentX=null;ctx.currentScrollParentY=null;state.dragging=false;};const execBuildHandler=(fnName,arg)=>{if(typeof hookParams[fnName]==="function"){hookParams[fnName]({ctx,helpers:buildHelpers,...arg});}};const execHandler=(callbackName,arg)=>{if(typeof params[callbackName]==="function"){try{params[callbackName]({...ctx.mouse,...arg});}catch(err){dragEnd(true,true);throw err;}}};const handleEdgeScrolling=(deltaTime)=>{const[eRect,,xRect,yRect]=updateRects();const{speed,threshold}=ctx.edgeScrolling;const correctedSpeed=(speed/16)*deltaTime;const diff={};if(xRect){const maxWidth=xRect.x+xRect.width;if(eRect.x-xRect.x<threshold){diff.x=[eRect.x-xRect.x,-1];}else if(maxWidth-eRect.x-eRect.width<threshold){diff.x=[maxWidth-eRect.x-eRect.width,1];}}
if(yRect){const maxHeight=yRect.y+yRect.height;if(eRect.y-yRect.y<threshold){diff.y=[eRect.y-yRect.y,-1];}else if(maxHeight-eRect.y-eRect.height<threshold){diff.y=[maxHeight-eRect.y-eRect.height,1];}}
const diffToScroll=([delta,sign])=>(1-clamp(delta,0,threshold)/threshold)*correctedSpeed*sign;if(diff.y){ctx.currentScrollParentY.scrollBy({top:diffToScroll(diff.y)});}
if(diff.x){ctx.currentScrollParentX.scrollBy({left:diffToScroll(diff.x)});}};const onKeydown=(ev)=>{if(!ctx.enabled||!state.dragging){return;}
switch(ev.key){case"Escape":case"Tab":{cancelEvent(ev);dragEnd(true);}}};const onMousedown=(ev)=>{updateMousePosition(ev);dragEnd(true);if(ev.button!==LEFT_CLICK||!ctx.enabled||!ev.target.closest(ctx.fullSelector)||(ctx.ignoreSelector&&ev.target.closest(ctx.ignoreSelector))){return;}
ev.preventDefault();ctx.currentContainer=ctx.ref.el;ctx.currentElement=ev.target.closest(ctx.elementSelector);ctx.origin={x:ev.clientX,y:ev.clientY,};Object.assign(ctx.offset,ctx.mouse);execBuildHandler("onWillStartDrag");};const onMousemove=(ev)=>{if(!ctx.enabled||!ctx.currentElement){return;}
if(!state.dragging){if(canDrag(ev)){dragStart();}}
updateMousePosition(ev);if(state.dragging){const[eRect,cRect]=updateRects();ctx.currentElement.style.left=`${clamp(
                        ctx.mouse.x - ctx.offset.x,
                        cRect.x,
                        cRect.x + cRect.width - eRect.width
                    )}px`;ctx.currentElement.style.top=`${clamp(
                        ctx.mouse.y - ctx.offset.y,
                        cRect.y,
                        cRect.y + cRect.height - eRect.height
                    )}px`;execBuildHandler("onDrag");}};const onMouseup=(ev)=>{updateMousePosition(ev);dragEnd(false);};const updateMousePosition=(ev)=>{ctx.mouse.x=ev.clientX;ctx.mouse.y=ev.clientY;};const updateRects=()=>{const containerRect=getRect(ctx.currentContainer,{adjust:true});containerRect.width=ctx.currentContainer.scrollWidth;containerRect.height=ctx.currentContainer.scrollHeight;let scrollParentXRect=null;let scrollParentYRect=null;if(ctx.edgeScrolling.enabled){if(ctx.currentScrollParentX){scrollParentXRect=getRect(ctx.currentScrollParentX,{adjust:true});const right=Math.min(containerRect.left+ctx.currentContainer.scrollWidth,scrollParentXRect.right);containerRect.x=Math.max(containerRect.x,scrollParentXRect.x);containerRect.width=right-containerRect.x;}
if(ctx.currentScrollParentY){scrollParentYRect=getRect(ctx.currentScrollParentY,{adjust:true});const bottom=Math.min(containerRect.top+ctx.currentContainer.scrollHeight,scrollParentYRect.bottom);containerRect.y=Math.max(containerRect.y,scrollParentYRect.y);containerRect.height=bottom-containerRect.y;}}
ctx.currentElementRect=getRect(ctx.currentElement);return[ctx.currentElementRect,containerRect,scrollParentXRect,scrollParentYRect];};const env=useEnv();const state=reactive({dragging:false});for(const prop in allAcceptedParams){if(params[prop]&&!allAcceptedParams[prop].includes(typeof params[prop])){throw makeError(`invalid type for property "${prop}" in parameters`);}else if(!params[prop]&&MANDATORY_PARAMS.includes(prop)){throw makeError(`missing required property "${prop}" in parameters`);}}
const buildHelpers={addListener,addStyle,execHandler};const cleanups=[];const ctx={ref:params.ref,ignoreSelector:null,fullSelector:null,cursor:null,currentContainer:null,currentElement:null,currentElementRect:null,scrollParent:null,enabled:false,mouse:{x:0,y:0},offset:{x:0,y:0},edgeScrolling:{enabled:true},pixelsTolerance:10,};useEffect((...deps)=>{const actualParams={...defaultParams,...Object.fromEntries(deps)};ctx.enabled=Boolean(ctx.ref.el&&!env.isSmall&&actualParams.enable);if(!ctx.enabled){return;}
ctx.elementSelector=actualParams.elements;if(!ctx.elementSelector){throw makeError(`no value found by "elements" selector: ${ctx.elementSelector}`);}
const allSelectors=[ctx.elementSelector];ctx.cursor=actualParams.cursor||null;if(actualParams.handle){allSelectors.push(actualParams.handle);}
if(actualParams.ignore){ctx.ignoreSelector=actualParams.ignore;}
ctx.fullSelector=allSelectors.join(" ");Object.assign(ctx.edgeScrolling,actualParams.edgeScrolling);execBuildHandler("onComputeParams",{params:actualParams});},()=>computeParams(params));useEffect((el)=>{if(el){el.addEventListener("mousedown",onMousedown);return()=>el.removeEventListener("mousedown",onMousedown);}},()=>[ctx.ref.el]);const debouncedOnMouseMove=debounce(onMousemove,"animationFrame",true);useExternalListener(window,"mousemove",debouncedOnMouseMove);useExternalListener(window,"mouseup",onMouseup);useExternalListener(window,"keydown",onKeydown,true);onWillUnmount(()=>dragEnd(true));return state;},}[hookName];}
return __exports;});;

/* /web/static/src/core/utils/functions.js */
odoo.define('@web/core/utils/functions',async function(require){'use strict';let __exports={};__exports.memoize=memoize;function memoize(func){const cache=new Map();const funcName=func.name?func.name+" (memoized)":"memoized";return{[funcName](...args){if(!cache.has(args[0])){cache.set(args[0],func(...args));}
return cache.get(...args);},}[funcName];}
return __exports;});;

/* /web/static/src/core/utils/hooks.js */
odoo.define('@web/core/utils/hooks',async function(require){'use strict';let __exports={};const{SERVICES_METADATA}=require("@web/env");const{status,useComponent,useEffect,useRef,onWillUnmount}=require("@odoo/owl");__exports.useAutofocus=useAutofocus;function useAutofocus({refName,selectAll}={}){const comp=useComponent();const ref=useRef(refName||"autofocus");if(comp.env.isSmall){return ref;}
if(comp.env.device&&comp.env.device.isMobileDevice){return ref;}
useEffect((el)=>{if(el){el.focus();if(["INPUT","TEXTAREA"].includes(el.tagName)&&el.type!=="number"){el.selectionEnd=el.value.length;el.selectionStart=selectAll?0:el.value.length;}}},()=>[ref.el]);return ref;}
__exports.useBus=useBus;function useBus(bus,eventName,callback){const component=useComponent();useEffect(()=>{const listener=callback.bind(component);bus.addEventListener(eventName,listener);return()=>bus.removeEventListener(eventName,listener);},()=>[]);}
__exports.useListener=useListener;function useListener(eventName,querySelector,handler,options={}){if(typeof arguments[1]!=="string"){querySelector=null;handler=arguments[1];options=arguments[2]||{};}
if(typeof handler!=="function"){throw new Error("The handler must be a function");}
const comp=useComponent();let boundHandler;if(querySelector){boundHandler=function(ev){let el=ev.target;let target;while(el&&!target){if(el.matches(querySelector)){target=el;}else if(el===comp.el){el=null;}else{el=el.parentElement;}}
if(el){handler.call(comp,ev);}};}else{boundHandler=handler.bind(comp);}
useEffect(()=>{comp.el.addEventListener(eventName,boundHandler,options);return()=>{comp.el.removeEventListener(eventName,boundHandler,options);};},()=>[]);}
function _protectMethod(component,fn){return function(...args){if(status(component)==="destroyed"){return Promise.reject(new Error("Component is destroyed"));}
const prom=Promise.resolve(fn.call(this,...args));const protectedProm=prom.then((result)=>status(component)==="destroyed"?new Promise(()=>{}):result);return Object.assign(protectedProm,{abort:prom.abort,cancel:prom.cancel,});};}
__exports.useService=useService;function useService(serviceName){const component=useComponent();const{services}=component.env;if(!(serviceName in services)){throw new Error(`Service ${serviceName} is not available`);}
const service=services[serviceName];if(serviceName in SERVICES_METADATA){if(service instanceof Function){return _protectMethod(component,service);}else{const methods=SERVICES_METADATA[serviceName];const result=Object.create(service);for(const method of methods){result[method]=_protectMethod(component,service[method]);}
return result;}}
return service;}
__exports.useChildRef=useChildRef;function useChildRef(){let defined=false;let value;return function ref(v){value=v;if(defined){return;}
Object.defineProperty(ref,"el",{get(){return value.el;},});defined=true;};}
__exports.useForwardRefToParent=useForwardRefToParent;function useForwardRefToParent(refName){const component=useComponent();const ref=useRef(refName);if(component.props[refName]){component.props[refName](ref);}
return ref;}
__exports.useOwnedDialogs=useOwnedDialogs;function useOwnedDialogs(){const dialogService=useService("dialog");const cbs=[];onWillUnmount(()=>{cbs.forEach((cb)=>cb());});const addDialog=(...args)=>{const close=dialogService.add(...args);cbs.push(close);return close;};return addDialog;}
return __exports;});;

/* /web/static/src/core/utils/numbers.js */
odoo.define('@web/core/utils/numbers',async function(require){'use strict';let __exports={};__exports.computeVariation=computeVariation;function computeVariation(value,comparisonValue){if(isNaN(value)||isNaN(comparisonValue)){return NaN;}
if(comparisonValue===0){if(value===0){return 0;}else if(value>0){return 1;}else{return-1;}}
return(value-comparisonValue)/Math.abs(comparisonValue);}
__exports.clamp=clamp;function clamp(num,min,max){return Math.max(Math.min(num,max),min);}
return __exports;});;

/* /web/static/src/core/utils/objects.js */
odoo.define('@web/core/utils/objects',async function(require){'use strict';let __exports={};__exports.shallowEqual=shallowEqual;function shallowEqual(obj1,obj2){const obj1Keys=Object.keys(obj1);return(obj1Keys.length===Object.keys(obj2).length&&obj1Keys.every((key)=>obj1[key]===obj2[key]));}
__exports.deepCopy=deepCopy;function deepCopy(obj){return JSON.parse(JSON.stringify(obj));}
__exports.omit=omit;function omit(object,...properties){const result={};const propertiesSet=new Set(properties);for(const key in object){if(!propertiesSet.has(key)){result[key]=object[key];}}
return result;}
__exports.pick=pick;function pick(object,...properties){return Object.fromEntries(properties.filter((prop)=>prop in object).map((prop)=>[prop,object[prop]]));}
return __exports;});;

/* /web/static/src/core/utils/patch.js */
odoo.define('@web/core/utils/patch',async function(require){'use strict';let __exports={};const patchMap=new WeakMap();__exports.patch=patch;function patch(obj,patchName,patchValue,options={}){if(typeof patchName!=="string"){throw new Error("Incorrect use of patch: second argument should be the patchName");}
const pure=Boolean(options.pure);if(!patchMap.has(obj)){patchMap.set(obj,{original:{},patches:[],});}
const objDesc=patchMap.get(obj);if(objDesc.patches.some((p)=>p.name===patchName)){throw new Error(`Class ${obj.name} already has a patch ${patchName}`);}
objDesc.patches.push({name:patchName,patch:patchValue,pure,});for(const k in patchValue){let prevDesc=null;let proto=obj;do{prevDesc=Object.getOwnPropertyDescriptor(proto,k);proto=Object.getPrototypeOf(proto);}while(!prevDesc&&proto);let newDesc=Object.getOwnPropertyDescriptor(patchValue,k);if(!Object.hasOwnProperty.call(objDesc.original,k)){objDesc.original[k]=Object.getOwnPropertyDescriptor(obj,k);}
if(prevDesc){const patchedFnName=`${k} (patch ${patchName})`;if(prevDesc.value&&typeof newDesc.value==="function"){newDesc={...prevDesc,value:newDesc.value};makeIntermediateFunction("value",prevDesc,newDesc,patchedFnName);}
if((newDesc.get||newDesc.set)&&(prevDesc.get||prevDesc.set)){newDesc={...prevDesc,get:newDesc.get||prevDesc.get,set:newDesc.set||prevDesc.set,};if(prevDesc.get&&typeof newDesc.get==="function"){makeIntermediateFunction("get",prevDesc,newDesc,patchedFnName);}
if(prevDesc.set&&typeof newDesc.set==="function"){makeIntermediateFunction("set",prevDesc,newDesc,patchedFnName);}}}
Object.defineProperty(obj,k,newDesc);}
function makeIntermediateFunction(key,prevDesc,newDesc,patchedFnName){const _superFn=prevDesc[key];const patchFn=newDesc[key];if(pure){newDesc[key]=patchFn;}else{newDesc[key]={[patchedFnName](...args){let prevSuper;if(this){prevSuper=this._super;Object.defineProperty(this,"_super",{value:_superFn.bind(this),configurable:true,writable:true,});}
const result=patchFn.call(this,...args);if(this){Object.defineProperty(this,"_super",{value:prevSuper,configurable:true,writable:true,});}
return result;},}[patchedFnName];}}}
__exports.unpatch=unpatch;function unpatch(obj,patchName){const objDesc=patchMap.get(obj);if(!objDesc.patches.some((p)=>p.name===patchName)){throw new Error(`Class ${obj.name} does not have any patch ${patchName}`);}
patchMap.delete(obj);for(const k in objDesc.original){if(objDesc.original[k]===undefined){delete obj[k];}else{Object.defineProperty(obj,k,objDesc.original[k]);}}
for(const patchDesc of objDesc.patches){if(patchDesc.name!==patchName){patch(obj,patchDesc.name,patchDesc.patch,{pure:patchDesc.pure});}}}
return __exports;});;

/* /web/static/src/core/utils/render.js */
odoo.define('@web/core/utils/render',async function(require){'use strict';let __exports={};const{blockDom,markup}=require("@odoo/owl");__exports.renderToString=renderToString;function renderToString(template,context={}){const app=renderToString.app;if(!app){throw new Error("an app must be configured before using renderToString");}
const templateFn=app.getTemplate(template);const bdom=templateFn(context,{});const div=document.createElement("div");blockDom.mount(bdom,div);return div.innerHTML;}
__exports.renderToMarkup=renderToMarkup;function renderToMarkup(template,context={}){return markup(renderToString(template,context));}
return __exports;});;

/* /web/static/src/core/utils/scrolling.js */
odoo.define('@web/core/utils/scrolling',async function(require){'use strict';let __exports={};__exports.scrollTo=scrollTo;function scrollTo(element,options={scrollable:null,isAnchor:false}){function _getScrollParent(node){if(node==null){return null;}
if(node.scrollHeight>node.clientHeight&&node.clientHeight>0){return node;}else{return _getScrollParent(node.parentNode);}}
const scrollable=options.scrollable?options.scrollable:_getScrollParent(element.parentNode);if(scrollable){const scrollBottom=scrollable.getBoundingClientRect().bottom;const scrollTop=scrollable.getBoundingClientRect().top;const elementBottom=element.getBoundingClientRect().bottom;const elementTop=element.getBoundingClientRect().top;if(elementBottom>scrollBottom&&!options.isAnchor){scrollable.scrollTop+=elementTop-scrollBottom+Math.ceil(element.getBoundingClientRect().height);}else if(elementTop<scrollTop||options.isAnchor){scrollable.scrollTop-=scrollTop-elementTop;if(options.isAnchor){const parentScrollable=_getScrollParent(scrollable.parentNode);if(parentScrollable){scrollTo(scrollable,{isAnchor:true,scrollable:parentScrollable});}}}}}
return __exports;});;

/* /web/static/src/core/utils/search.js */
odoo.define('@web/core/utils/search',async function(require){'use strict';let __exports={};const{unaccent}=require("@web/core/utils/strings");function match(pattern,str){let totalScore=0;let currentScore=0;const len=str.length;let patternIndex=0;pattern=unaccent(pattern,false);str=unaccent(str,false);for(let i=0;i<len;i++){if(str[i]===pattern[patternIndex]){patternIndex++;currentScore+=100+currentScore-i/200;}else{currentScore=0;}
totalScore=totalScore+currentScore;}
return patternIndex===pattern.length?totalScore:0;}
__exports.fuzzyLookup=fuzzyLookup;function fuzzyLookup(pattern,list,fn){const results=[];list.forEach((data)=>{const score=match(pattern,fn(data));if(score>0){results.push({score,elem:data});}});results.sort((a,b)=>b.score-a.score);return results.map((r)=>r.elem);}
__exports.fuzzyTest=fuzzyTest;function fuzzyTest(pattern,string){return match(pattern,string)!==0;}
return __exports;});;

/* /web/static/src/core/utils/sortable.js */
odoo.define('@web/core/utils/sortable',async function(require){'use strict';let __exports={};const{makeDraggableHook}=require("@web/core/utils/draggable_hook_builder");const useSortable=__exports.useSortable=makeDraggableHook({name:"useSortable",acceptedParams:{groups:["string","function"],connectGroups:["boolean","function"],},defaultParams:{connectGroups:false,currentGroup:null,edgeScrolling:{speed:20,threshold:60},ghostElement:null,groupSelector:null,},onComputeParams({ctx,params}){ctx.groupSelector=params.groups||null;if(ctx.groupSelector){ctx.fullSelector=[ctx.groupSelector,ctx.fullSelector].join(" ");}
ctx.connectGroups=params.connectGroups;},onDragStart({ctx,helpers}){const onElementMouseenter=(ev)=>{const element=ev.currentTarget;if(ctx.connectGroups||!ctx.groupSelector||ctx.currentGroup===element.closest(ctx.groupSelector)){const pos=ctx.ghostElement.compareDocumentPosition(element);if(pos===2){element.before(ctx.ghostElement);}else if(pos===4){element.after(ctx.ghostElement);}}
helpers.execHandler("onElementEnter",{element});};const onElementMouseleave=(ev)=>{const element=ev.currentTarget;helpers.execHandler("onElementLeave",{element});};const onGroupMouseenter=(ev)=>{const group=ev.currentTarget;group.appendChild(ctx.ghostElement);helpers.execHandler("onGroupEnter",{group});};const onGroupMouseleave=(ev)=>{const group=ev.currentTarget;helpers.execHandler("onGroupLeave",{group});};const{width,height}=ctx.currentElementRect;ctx.ghostElement=ctx.currentElement.cloneNode(false);ctx.ghostElement.style=`visibility: hidden; display: block; width: ${width}px; height:${height}px;`;if(ctx.connectGroups&&ctx.groupSelector){for(const siblingGroup of ctx.ref.el.querySelectorAll(ctx.groupSelector)){helpers.addListener(siblingGroup,"mouseenter",onGroupMouseenter);helpers.addListener(siblingGroup,"mouseleave",onGroupMouseleave);helpers.addStyle(siblingGroup,{"pointer-events":"auto"});}}
for(const siblingEl of ctx.ref.el.querySelectorAll(ctx.elementSelector)){if(siblingEl!==ctx.currentElement&&siblingEl!==ctx.ghostElement){helpers.addListener(siblingEl,"mouseenter",onElementMouseenter);helpers.addListener(siblingEl,"mouseleave",onElementMouseleave);}}
ctx.currentElement.after(ctx.ghostElement);helpers.execHandler("onDragStart",{element:ctx.currentElement,group:ctx.currentGroup,});},onDragEnd({ctx,helpers}){helpers.execHandler("onDragEnd",{element:ctx.currentElement,group:ctx.currentGroup});},onDrop({ctx,helpers}){const previous=ctx.ghostElement.previousElementSibling;const next=ctx.ghostElement.nextElementSibling;if(previous!==ctx.currentElement&&next!==ctx.currentElement){helpers.execHandler("onDrop",{element:ctx.currentElement,group:ctx.currentGroup,previous,next,parent:ctx.groupSelector&&ctx.ghostElement.closest(ctx.groupSelector),});}},onWillStartDrag({ctx}){if(ctx.groupSelector){ctx.currentGroup=ctx.currentElement.closest(ctx.groupSelector);if(!ctx.connectGroups){ctx.currentContainer=ctx.currentGroup;}}},onCleanup({ctx}){if(ctx.ghostElement){ctx.ghostElement.remove();}
ctx.currentGroup=null;ctx.ghostElement=null;},});return __exports;});;

/* /web/static/src/core/utils/strings.js */
odoo.define('@web/core/utils/strings',async function(require){'use strict';let __exports={};const nbsp=__exports.nbsp="\u00a0";__exports.escape=escape;function escape(str){if(str===undefined){return"";}
if(typeof str==="number"){return String(str);}
const p=document.createElement("p");p.textContent=str;return p.innerHTML;}
__exports.escapeRegExp=escapeRegExp;function escapeRegExp(str){return str.replace(/[.*+?^${}()|[\]\\]/g,"\\$&");}
__exports.intersperse=intersperse;function intersperse(str,indices,separator=""){separator=separator||"";const result=[];let last=str.length;for(let i=0;i<indices.length;++i){let section=indices[i];if(section===-1||last<=0){break;}else if(section===0&&i===0){break;}else if(section===0){section=indices[--i];}
result.push(str.substring(last-section,last));last-=section;}
const s=str.substring(0,last);if(s){result.push(s);}
return result.reverse().join(separator);}
__exports.sprintf=sprintf;function sprintf(s,...values){if(values.length===1&&Object.prototype.toString.call(values[0])==="[object Object]"){const valuesDict=values[0];s=s.replace(/%\(?([^)]+)\)s/g,(match,value)=>valuesDict[value]);}else if(values.length>0){s=s.replace(/%s/g,()=>values.shift());}
return s;}
__exports.capitalize=capitalize;function capitalize(s){return s?s[0].toUpperCase()+s.slice(1):"";}
const diacriticsMap={'\u0041':'A','\u24B6':'A','\uFF21':'A','\u00C0':'A','\u00C1':'A','\u00C2':'A','\u1EA6':'A','\u1EA4':'A','\u1EAA':'A','\u1EA8':'A','\u00C3':'A','\u0100':'A','\u0102':'A','\u1EB0':'A','\u1EAE':'A','\u1EB4':'A','\u1EB2':'A','\u0226':'A','\u01E0':'A','\u00C4':'A','\u01DE':'A','\u1EA2':'A','\u00C5':'A','\u01FA':'A','\u01CD':'A','\u0200':'A','\u0202':'A','\u1EA0':'A','\u1EAC':'A','\u1EB6':'A','\u1E00':'A','\u0104':'A','\u023A':'A','\u2C6F':'A','\uA732':'AA','\u00C6':'AE','\u01FC':'AE','\u01E2':'AE','\uA734':'AO','\uA736':'AU','\uA738':'AV','\uA73A':'AV','\uA73C':'AY','\u0042':'B','\u24B7':'B','\uFF22':'B','\u1E02':'B','\u1E04':'B','\u1E06':'B','\u0243':'B','\u0182':'B','\u0181':'B','\u0043':'C','\u24B8':'C','\uFF23':'C','\u0106':'C','\u0108':'C','\u010A':'C','\u010C':'C','\u00C7':'C','\u1E08':'C','\u0187':'C','\u023B':'C','\uA73E':'C','\u0044':'D','\u24B9':'D','\uFF24':'D','\u1E0A':'D','\u010E':'D','\u1E0C':'D','\u1E10':'D','\u1E12':'D','\u1E0E':'D','\u0110':'D','\u018B':'D','\u018A':'D','\u0189':'D','\uA779':'D','\u01F1':'DZ','\u01C4':'DZ','\u01F2':'Dz','\u01C5':'Dz','\u0045':'E','\u24BA':'E','\uFF25':'E','\u00C8':'E','\u00C9':'E','\u00CA':'E','\u1EC0':'E','\u1EBE':'E','\u1EC4':'E','\u1EC2':'E','\u1EBC':'E','\u0112':'E','\u1E14':'E','\u1E16':'E','\u0114':'E','\u0116':'E','\u00CB':'E','\u1EBA':'E','\u011A':'E','\u0204':'E','\u0206':'E','\u1EB8':'E','\u1EC6':'E','\u0228':'E','\u1E1C':'E','\u0118':'E','\u1E18':'E','\u1E1A':'E','\u0190':'E','\u018E':'E','\u0046':'F','\u24BB':'F','\uFF26':'F','\u1E1E':'F','\u0191':'F','\uA77B':'F','\u0047':'G','\u24BC':'G','\uFF27':'G','\u01F4':'G','\u011C':'G','\u1E20':'G','\u011E':'G','\u0120':'G','\u01E6':'G','\u0122':'G','\u01E4':'G','\u0193':'G','\uA7A0':'G','\uA77D':'G','\uA77E':'G','\u0048':'H','\u24BD':'H','\uFF28':'H','\u0124':'H','\u1E22':'H','\u1E26':'H','\u021E':'H','\u1E24':'H','\u1E28':'H','\u1E2A':'H','\u0126':'H','\u2C67':'H','\u2C75':'H','\uA78D':'H','\u0049':'I','\u24BE':'I','\uFF29':'I','\u00CC':'I','\u00CD':'I','\u00CE':'I','\u0128':'I','\u012A':'I','\u012C':'I','\u0130':'I','\u00CF':'I','\u1E2E':'I','\u1EC8':'I','\u01CF':'I','\u0208':'I','\u020A':'I','\u1ECA':'I','\u012E':'I','\u1E2C':'I','\u0197':'I','\u004A':'J','\u24BF':'J','\uFF2A':'J','\u0134':'J','\u0248':'J','\u004B':'K','\u24C0':'K','\uFF2B':'K','\u1E30':'K','\u01E8':'K','\u1E32':'K','\u0136':'K','\u1E34':'K','\u0198':'K','\u2C69':'K','\uA740':'K','\uA742':'K','\uA744':'K','\uA7A2':'K','\u004C':'L','\u24C1':'L','\uFF2C':'L','\u013F':'L','\u0139':'L','\u013D':'L','\u1E36':'L','\u1E38':'L','\u013B':'L','\u1E3C':'L','\u1E3A':'L','\u0141':'L','\u023D':'L','\u2C62':'L','\u2C60':'L','\uA748':'L','\uA746':'L','\uA780':'L','\u01C7':'LJ','\u01C8':'Lj','\u004D':'M','\u24C2':'M','\uFF2D':'M','\u1E3E':'M','\u1E40':'M','\u1E42':'M','\u2C6E':'M','\u019C':'M','\u004E':'N','\u24C3':'N','\uFF2E':'N','\u01F8':'N','\u0143':'N','\u00D1':'N','\u1E44':'N','\u0147':'N','\u1E46':'N','\u0145':'N','\u1E4A':'N','\u1E48':'N','\u0220':'N','\u019D':'N','\uA790':'N','\uA7A4':'N','\u01CA':'NJ','\u01CB':'Nj','\u004F':'O','\u24C4':'O','\uFF2F':'O','\u00D2':'O','\u00D3':'O','\u00D4':'O','\u1ED2':'O','\u1ED0':'O','\u1ED6':'O','\u1ED4':'O','\u00D5':'O','\u1E4C':'O','\u022C':'O','\u1E4E':'O','\u014C':'O','\u1E50':'O','\u1E52':'O','\u014E':'O','\u022E':'O','\u0230':'O','\u00D6':'O','\u022A':'O','\u1ECE':'O','\u0150':'O','\u01D1':'O','\u020C':'O','\u020E':'O','\u01A0':'O','\u1EDC':'O','\u1EDA':'O','\u1EE0':'O','\u1EDE':'O','\u1EE2':'O','\u1ECC':'O','\u1ED8':'O','\u01EA':'O','\u01EC':'O','\u00D8':'O','\u01FE':'O','\u0186':'O','\u019F':'O','\uA74A':'O','\uA74C':'O','\u01A2':'OI','\uA74E':'OO','\u0222':'OU','\u0050':'P','\u24C5':'P','\uFF30':'P','\u1E54':'P','\u1E56':'P','\u01A4':'P','\u2C63':'P','\uA750':'P','\uA752':'P','\uA754':'P','\u0051':'Q','\u24C6':'Q','\uFF31':'Q','\uA756':'Q','\uA758':'Q','\u024A':'Q','\u0052':'R','\u24C7':'R','\uFF32':'R','\u0154':'R','\u1E58':'R','\u0158':'R','\u0210':'R','\u0212':'R','\u1E5A':'R','\u1E5C':'R','\u0156':'R','\u1E5E':'R','\u024C':'R','\u2C64':'R','\uA75A':'R','\uA7A6':'R','\uA782':'R','\u0053':'S','\u24C8':'S','\uFF33':'S','\u1E9E':'S','\u015A':'S','\u1E64':'S','\u015C':'S','\u1E60':'S','\u0160':'S','\u1E66':'S','\u1E62':'S','\u1E68':'S','\u0218':'S','\u015E':'S','\u2C7E':'S','\uA7A8':'S','\uA784':'S','\u0054':'T','\u24C9':'T','\uFF34':'T','\u1E6A':'T','\u0164':'T','\u1E6C':'T','\u021A':'T','\u0162':'T','\u1E70':'T','\u1E6E':'T','\u0166':'T','\u01AC':'T','\u01AE':'T','\u023E':'T','\uA786':'T','\uA728':'TZ','\u0055':'U','\u24CA':'U','\uFF35':'U','\u00D9':'U','\u00DA':'U','\u00DB':'U','\u0168':'U','\u1E78':'U','\u016A':'U','\u1E7A':'U','\u016C':'U','\u00DC':'U','\u01DB':'U','\u01D7':'U','\u01D5':'U','\u01D9':'U','\u1EE6':'U','\u016E':'U','\u0170':'U','\u01D3':'U','\u0214':'U','\u0216':'U','\u01AF':'U','\u1EEA':'U','\u1EE8':'U','\u1EEE':'U','\u1EEC':'U','\u1EF0':'U','\u1EE4':'U','\u1E72':'U','\u0172':'U','\u1E76':'U','\u1E74':'U','\u0244':'U','\u0056':'V','\u24CB':'V','\uFF36':'V','\u1E7C':'V','\u1E7E':'V','\u01B2':'V','\uA75E':'V','\u0245':'V','\uA760':'VY','\u0057':'W','\u24CC':'W','\uFF37':'W','\u1E80':'W','\u1E82':'W','\u0174':'W','\u1E86':'W','\u1E84':'W','\u1E88':'W','\u2C72':'W','\u0058':'X','\u24CD':'X','\uFF38':'X','\u1E8A':'X','\u1E8C':'X','\u0059':'Y','\u24CE':'Y','\uFF39':'Y','\u1EF2':'Y','\u00DD':'Y','\u0176':'Y','\u1EF8':'Y','\u0232':'Y','\u1E8E':'Y','\u0178':'Y','\u1EF6':'Y','\u1EF4':'Y','\u01B3':'Y','\u024E':'Y','\u1EFE':'Y','\u005A':'Z','\u24CF':'Z','\uFF3A':'Z','\u0179':'Z','\u1E90':'Z','\u017B':'Z','\u017D':'Z','\u1E92':'Z','\u1E94':'Z','\u01B5':'Z','\u0224':'Z','\u2C7F':'Z','\u2C6B':'Z','\uA762':'Z','\u0061':'a','\u24D0':'a','\uFF41':'a','\u1E9A':'a','\u00E0':'a','\u00E1':'a','\u00E2':'a','\u1EA7':'a','\u1EA5':'a','\u1EAB':'a','\u1EA9':'a','\u00E3':'a','\u0101':'a','\u0103':'a','\u1EB1':'a','\u1EAF':'a','\u1EB5':'a','\u1EB3':'a','\u0227':'a','\u01E1':'a','\u00E4':'a','\u01DF':'a','\u1EA3':'a','\u00E5':'a','\u01FB':'a','\u01CE':'a','\u0201':'a','\u0203':'a','\u1EA1':'a','\u1EAD':'a','\u1EB7':'a','\u1E01':'a','\u0105':'a','\u2C65':'a','\u0250':'a','\uA733':'aa','\u00E6':'ae','\u01FD':'ae','\u01E3':'ae','\uA735':'ao','\uA737':'au','\uA739':'av','\uA73B':'av','\uA73D':'ay','\u0062':'b','\u24D1':'b','\uFF42':'b','\u1E03':'b','\u1E05':'b','\u1E07':'b','\u0180':'b','\u0183':'b','\u0253':'b','\u0063':'c','\u24D2':'c','\uFF43':'c','\u0107':'c','\u0109':'c','\u010B':'c','\u010D':'c','\u00E7':'c','\u1E09':'c','\u0188':'c','\u023C':'c','\uA73F':'c','\u2184':'c','\u0064':'d','\u24D3':'d','\uFF44':'d','\u1E0B':'d','\u010F':'d','\u1E0D':'d','\u1E11':'d','\u1E13':'d','\u1E0F':'d','\u0111':'d','\u018C':'d','\u0256':'d','\u0257':'d','\uA77A':'d','\u01F3':'dz','\u01C6':'dz','\u0065':'e','\u24D4':'e','\uFF45':'e','\u00E8':'e','\u00E9':'e','\u00EA':'e','\u1EC1':'e','\u1EBF':'e','\u1EC5':'e','\u1EC3':'e','\u1EBD':'e','\u0113':'e','\u1E15':'e','\u1E17':'e','\u0115':'e','\u0117':'e','\u00EB':'e','\u1EBB':'e','\u011B':'e','\u0205':'e','\u0207':'e','\u1EB9':'e','\u1EC7':'e','\u0229':'e','\u1E1D':'e','\u0119':'e','\u1E19':'e','\u1E1B':'e','\u0247':'e','\u025B':'e','\u01DD':'e','\u0066':'f','\u24D5':'f','\uFF46':'f','\u1E1F':'f','\u0192':'f','\uA77C':'f','\u0067':'g','\u24D6':'g','\uFF47':'g','\u01F5':'g','\u011D':'g','\u1E21':'g','\u011F':'g','\u0121':'g','\u01E7':'g','\u0123':'g','\u01E5':'g','\u0260':'g','\uA7A1':'g','\u1D79':'g','\uA77F':'g','\u0068':'h','\u24D7':'h','\uFF48':'h','\u0125':'h','\u1E23':'h','\u1E27':'h','\u021F':'h','\u1E25':'h','\u1E29':'h','\u1E2B':'h','\u1E96':'h','\u0127':'h','\u2C68':'h','\u2C76':'h','\u0265':'h','\u0195':'hv','\u0069':'i','\u24D8':'i','\uFF49':'i','\u00EC':'i','\u00ED':'i','\u00EE':'i','\u0129':'i','\u012B':'i','\u012D':'i','\u00EF':'i','\u1E2F':'i','\u1EC9':'i','\u01D0':'i','\u0209':'i','\u020B':'i','\u1ECB':'i','\u012F':'i','\u1E2D':'i','\u0268':'i','\u0131':'i','\u006A':'j','\u24D9':'j','\uFF4A':'j','\u0135':'j','\u01F0':'j','\u0249':'j','\u006B':'k','\u24DA':'k','\uFF4B':'k','\u1E31':'k','\u01E9':'k','\u1E33':'k','\u0137':'k','\u1E35':'k','\u0199':'k','\u2C6A':'k','\uA741':'k','\uA743':'k','\uA745':'k','\uA7A3':'k','\u006C':'l','\u24DB':'l','\uFF4C':'l','\u0140':'l','\u013A':'l','\u013E':'l','\u1E37':'l','\u1E39':'l','\u013C':'l','\u1E3D':'l','\u1E3B':'l','\u017F':'l','\u0142':'l','\u019A':'l','\u026B':'l','\u2C61':'l','\uA749':'l','\uA781':'l','\uA747':'l','\u01C9':'lj','\u006D':'m','\u24DC':'m','\uFF4D':'m','\u1E3F':'m','\u1E41':'m','\u1E43':'m','\u0271':'m','\u026F':'m','\u006E':'n','\u24DD':'n','\uFF4E':'n','\u01F9':'n','\u0144':'n','\u00F1':'n','\u1E45':'n','\u0148':'n','\u1E47':'n','\u0146':'n','\u1E4B':'n','\u1E49':'n','\u019E':'n','\u0272':'n','\u0149':'n','\uA791':'n','\uA7A5':'n','\u01CC':'nj','\u006F':'o','\u24DE':'o','\uFF4F':'o','\u00F2':'o','\u00F3':'o','\u00F4':'o','\u1ED3':'o','\u1ED1':'o','\u1ED7':'o','\u1ED5':'o','\u00F5':'o','\u1E4D':'o','\u022D':'o','\u1E4F':'o','\u014D':'o','\u1E51':'o','\u1E53':'o','\u014F':'o','\u022F':'o','\u0231':'o','\u00F6':'o','\u022B':'o','\u1ECF':'o','\u0151':'o','\u01D2':'o','\u020D':'o','\u020F':'o','\u01A1':'o','\u1EDD':'o','\u1EDB':'o','\u1EE1':'o','\u1EDF':'o','\u1EE3':'o','\u1ECD':'o','\u1ED9':'o','\u01EB':'o','\u01ED':'o','\u00F8':'o','\u01FF':'o','\u0254':'o','\uA74B':'o','\uA74D':'o','\u0275':'o','\u01A3':'oi','\u0223':'ou','\uA74F':'oo','\u0070':'p','\u24DF':'p','\uFF50':'p','\u1E55':'p','\u1E57':'p','\u01A5':'p','\u1D7D':'p','\uA751':'p','\uA753':'p','\uA755':'p','\u0071':'q','\u24E0':'q','\uFF51':'q','\u024B':'q','\uA757':'q','\uA759':'q','\u0072':'r','\u24E1':'r','\uFF52':'r','\u0155':'r','\u1E59':'r','\u0159':'r','\u0211':'r','\u0213':'r','\u1E5B':'r','\u1E5D':'r','\u0157':'r','\u1E5F':'r','\u024D':'r','\u027D':'r','\uA75B':'r','\uA7A7':'r','\uA783':'r','\u0073':'s','\u24E2':'s','\uFF53':'s','\u00DF':'s','\u015B':'s','\u1E65':'s','\u015D':'s','\u1E61':'s','\u0161':'s','\u1E67':'s','\u1E63':'s','\u1E69':'s','\u0219':'s','\u015F':'s','\u023F':'s','\uA7A9':'s','\uA785':'s','\u1E9B':'s','\u0074':'t','\u24E3':'t','\uFF54':'t','\u1E6B':'t','\u1E97':'t','\u0165':'t','\u1E6D':'t','\u021B':'t','\u0163':'t','\u1E71':'t','\u1E6F':'t','\u0167':'t','\u01AD':'t','\u0288':'t','\u2C66':'t','\uA787':'t','\uA729':'tz','\u0075':'u','\u24E4':'u','\uFF55':'u','\u00F9':'u','\u00FA':'u','\u00FB':'u','\u0169':'u','\u1E79':'u','\u016B':'u','\u1E7B':'u','\u016D':'u','\u00FC':'u','\u01DC':'u','\u01D8':'u','\u01D6':'u','\u01DA':'u','\u1EE7':'u','\u016F':'u','\u0171':'u','\u01D4':'u','\u0215':'u','\u0217':'u','\u01B0':'u','\u1EEB':'u','\u1EE9':'u','\u1EEF':'u','\u1EED':'u','\u1EF1':'u','\u1EE5':'u','\u1E73':'u','\u0173':'u','\u1E77':'u','\u1E75':'u','\u0289':'u','\u0076':'v','\u24E5':'v','\uFF56':'v','\u1E7D':'v','\u1E7F':'v','\u028B':'v','\uA75F':'v','\u028C':'v','\uA761':'vy','\u0077':'w','\u24E6':'w','\uFF57':'w','\u1E81':'w','\u1E83':'w','\u0175':'w','\u1E87':'w','\u1E85':'w','\u1E98':'w','\u1E89':'w','\u2C73':'w','\u0078':'x','\u24E7':'x','\uFF58':'x','\u1E8B':'x','\u1E8D':'x','\u0079':'y','\u24E8':'y','\uFF59':'y','\u1EF3':'y','\u00FD':'y','\u0177':'y','\u1EF9':'y','\u0233':'y','\u1E8F':'y','\u00FF':'y','\u1EF7':'y','\u1E99':'y','\u1EF5':'y','\u01B4':'y','\u024F':'y','\u1EFF':'y','\u007A':'z','\u24E9':'z','\uFF5A':'z','\u017A':'z','\u1E91':'z','\u017C':'z','\u017E':'z','\u1E93':'z','\u1E95':'z','\u01B6':'z','\u0225':'z','\u0240':'z','\u2C6C':'z','\uA763':'z',};__exports.unaccent=unaccent;function unaccent(str,caseSensitive){str=str.replace(/[^\u0000-\u007E]/g,function(accented){return diacriticsMap[accented]||accented;});return caseSensitive?str:str.toLowerCase();}
return __exports;});;

/* /web/static/src/core/utils/timing.js */
odoo.define('@web/core/utils/timing',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{onWillUnmount,useComponent}=require("@odoo/owl");__exports.throttleForAnimation=throttleForAnimation;function throttleForAnimation(func){let handle=null;const funcName=func.name?`${func.name} (throttleForAnimation)`:"throttleForAnimation";return Object.assign({[funcName](...args){browser.cancelAnimationFrame(handle);handle=browser.requestAnimationFrame(()=>{handle=null;func.call(this,...args);});},}[funcName],{cancel(){browser.cancelAnimationFrame(handle);},});}
__exports.throttle=throttle;function throttle(func,delay){let waiting=false;const funcName=func.name?func.name+" (throttle)":"throttle";return{[funcName](...args){const context=this;if(!waiting){waiting=true;browser.setTimeout(function(){waiting=false;func.call(context,...args);},delay);}},}[funcName];}
__exports.debounce=debounce;function debounce(func,delay,immediate=false){let handle;const funcName=func.name?func.name+" (debounce)":"debounce";const useAnimationFrame=delay==="animationFrame";const setFnName=useAnimationFrame?"requestAnimationFrame":"setTimeout";const clearFnName=useAnimationFrame?"cancelAnimationFrame":"clearTimeout";return Object.assign({[funcName](...args){return new Promise((resolve)=>{const callNow=immediate&&!handle;browser[clearFnName](handle);handle=browser[setFnName](()=>{handle=null;if(!immediate){Promise.resolve(func.apply(this,args)).then(resolve);}},delay);if(callNow){Promise.resolve(func.apply(this,args)).then(resolve);}});},}[funcName],{cancel(){browser[clearFnName](handle);},});}
__exports.useDebounced=useDebounced;function useDebounced(callback,delay){const component=useComponent();const debounced=debounce(callback.bind(component),delay);onWillUnmount(()=>debounced.cancel());return debounced;}
__exports.setRecurringAnimationFrame=setRecurringAnimationFrame;function setRecurringAnimationFrame(callback){const handler=(timestamp)=>{callback(timestamp-lastTimestamp);lastTimestamp=timestamp;handle=browser.requestAnimationFrame(handler);};const stop=()=>{browser.cancelAnimationFrame(handle);};let lastTimestamp=browser.performance.now();let handle=browser.requestAnimationFrame(handler);return stop;}
return __exports;});;

/* /web/static/src/core/utils/ui.js */
odoo.define('@web/core/utils/ui',async function(require){'use strict';let __exports={};__exports.closest=closest;function closest(elements,targetPos){let closestEl=null;let closestDistance=Infinity;for(const el of elements){const rect=el.getBoundingClientRect();const distance=getQuadrance(rect,targetPos);if(!closestEl||distance<closestDistance){closestEl=el;closestDistance=distance;}}
return closestEl;}
__exports.isVisible=isVisible;function isVisible(el){if(el===document||el===window){return true;}
if(!el){return false;}
let _isVisible=false;if("offsetWidth"in el&&"offsetHeight"in el){_isVisible=el.offsetWidth>0&&el.offsetHeight>0;}else if("getBoundingClientRect"in el){const rect=el.getBoundingClientRect();_isVisible=rect.width>0&&rect.height>0;}
if(!_isVisible&&getComputedStyle(el).display==="contents"){for(const child of el.children){if(isVisible(child)){return true;}}}
return _isVisible;}
__exports._legacyIsVisible=_legacyIsVisible;function _legacyIsVisible(el){if(el===document||el===window){return true;}
if(!el){return false;}
let _isVisible=false;if("offsetWidth"in el&&"offsetHeight"in el){_isVisible=el.offsetWidth>0||el.offsetHeight>0;}else if("getBoundingClientRect"in el){const rect=el.getBoundingClientRect();_isVisible=rect.width>0||rect.height>0;}
if(!_isVisible&&getComputedStyle(el).display==="contents"){for(const child of el.children){if(isVisible(child)){return true;}}}
return _isVisible;}
__exports.getQuadrance=getQuadrance;function getQuadrance(rect,pos){let q=0;if(pos.x<rect.x){q+=(rect.x-pos.x)**2;}else if(rect.x+rect.width<pos.x){q+=(pos.x-(rect.x+rect.width))**2;}
if(pos.y<rect.y){q+=(rect.y-pos.y)**2;}else if(rect.y+rect.height<pos.y){q+=(pos.y-(rect.y+rect.height))**2;}
return q;}
__exports.getVisibleElements=getVisibleElements;function getVisibleElements(activeElement,selector){const visibleElements=[];const elements=activeElement.querySelectorAll(selector);for(const el of elements){if(isVisible(el)){visibleElements.push(el);}}
return visibleElements;}
__exports.touching=touching;function touching(elements,targetRect){const r1={x:0,y:0,width:0,height:0,...targetRect};return[...elements].filter((el)=>{const r2=el.getBoundingClientRect();return(r2.x+r2.width>=r1.x&&r2.x<=r1.x+r1.width&&r2.y+r2.height>=r1.y&&r2.y<=r1.y+r1.height);});}
let TABABLE_SELECTOR="[tabindex], a, area, button, frame, iframe, input, object, select, textarea, details > summary:nth-child(1),".split(",").join(':not([tabindex="-1"]):not(:disabled),');TABABLE_SELECTOR=TABABLE_SELECTOR.slice(0,TABABLE_SELECTOR.length-1);__exports.getTabableElements=getTabableElements;function getTabableElements(container=document.body){const elements=container.querySelectorAll(TABABLE_SELECTOR);const byTabIndex={};for(const el of[...elements]){if(!byTabIndex[el.tabIndex]){byTabIndex[el.tabIndex]=[];}
byTabIndex[el.tabIndex].push(el);}
const withTabIndexZero=byTabIndex[0]||[];delete byTabIndex[0];return[...Object.values(byTabIndex).flat(),...withTabIndexZero];}
__exports.getNextTabableElement=getNextTabableElement;function getNextTabableElement(container=document.body){const tabableElements=getTabableElements(container);const index=tabableElements.indexOf(document.activeElement);return index===-1?tabableElements[0]:tabableElements[index+1]||null;}
__exports.getPreviousTabableElement=getPreviousTabableElement;function getPreviousTabableElement(container=document.body){const tabableElements=getTabableElements(container);const index=tabableElements.indexOf(document.activeElement);return index===-1?tabableElements[tabableElements.length-1]:tabableElements[index-1]||null;}
return __exports;});;

/* /web/static/src/core/utils/urls.js */
odoo.define('@web/core/utils/urls',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");__exports.objectToUrlEncodedString=objectToUrlEncodedString;function objectToUrlEncodedString(obj){return Object.entries(obj).map(([k,v])=>`${encodeURIComponent(k)}=${encodeURIComponent(v || "")}`).join("&");}
__exports.getOrigin=getOrigin;function getOrigin(origin){if(origin){origin=origin.replace(/\/+$/,"");}else{const{host,protocol}=browser.location;origin=`${protocol}//${host}`;}
return origin;}
__exports.url=url;function url(route,queryParams,options={}){const origin=getOrigin(options.origin);if(!route){return origin;}
let queryString=objectToUrlEncodedString(queryParams||{});queryString=queryString.length>0?`?${queryString}`:queryString;let prefix=["http://","https://","//"].some((el)=>route.length>=el.length&&route.slice(0,el.length)===el);prefix=prefix?"":origin;return`${prefix}${route}${queryString}`;}
__exports.getDataURLFromFile=getDataURLFromFile;function getDataURLFromFile(file){if(!file){return Promise.reject();}
return new Promise((resolve,reject)=>{const reader=new FileReader();reader.addEventListener("load",()=>{if(reader.result==="data:"){resolve(`data:${file.type};base64,`);}else{resolve(reader.result);}});reader.addEventListener("abort",reject);reader.addEventListener("error",reject);reader.readAsDataURL(file);});}
return __exports;});;

/* /web/static/src/core/utils/xml.js */
odoo.define('@web/core/utils/xml',async function(require){'use strict';let __exports={};const{nbsp}=require("@web/core/utils/strings");const parser=new DOMParser();const xmlDocument=parser.parseFromString("<templates/>","text/xml");function hasParsingError(parsedDocument){return parsedDocument.getElementsByTagName("parsererror").length>0;}
const XMLParser=__exports.XMLParser=class XMLParser{parse(){}
visitXML(xml,callback){const visit=(el)=>{if(el){let didVisitChildren=false;const visitChildren=()=>{for(const child of el.children){visit(child);}
didVisitChildren=true;};const shouldVisitChildren=callback(el,visitChildren);if(shouldVisitChildren!==false&&!didVisitChildren){visitChildren();}}};const xmlDoc=typeof xml==="string"?this.parseXML(xml):xml;visit(xmlDoc);}
parseXML(arch){const cleanedArch=arch.replace(/&amp;nbsp;/g,nbsp);const xml=parser.parseFromString(cleanedArch,"text/xml");if(hasParsingError(xml)){throw new Error(`An error occured while parsing ${arch}: ${xml.getElementsByTagName("parsererror")}`);}
return xml.documentElement;}}
__exports.append=append;function append(parent,node){const nodes=Array.isArray(node)?node:[node];parent.append(...nodes.filter(Boolean));return parent;}
__exports.combineAttributes=combineAttributes;function combineAttributes(el,attr,parts,glue=" "){const allValues=[];if(el.hasAttribute(attr)){allValues.push(el.getAttribute(attr));}
parts=Array.isArray(parts)?parts:[parts];parts=parts.filter((part)=>!!part);allValues.push(...parts);el.setAttribute(attr,allValues.join(glue));}
__exports.createElement=createElement;function createElement(tagName,...args){const el=xmlDocument.createElement(tagName);for(const arg of args){if(!arg){continue;}
if(Symbol.iterator in arg){el.append(...arg);}else if(typeof arg==="object"){for(const name in arg){el.setAttribute(name,arg[name]);}}}
return el;}
__exports.createTextNode=createTextNode;function createTextNode(data){return xmlDocument.createTextNode(data);}
__exports.extractAttributes=extractAttributes;function extractAttributes(el,attributes){const attrs=Object.create(null);for(const attr of attributes){attrs[attr]=el.getAttribute(attr)||"";el.removeAttribute(attr);}
return attrs;}
__exports.getTag=getTag;function getTag(node,lower=false){const tag=(node&&node.nodeName)||"";return lower?tag.toLowerCase():tag;}
__exports.setAttributes=setAttributes;function setAttributes(node,attributes){for(const[name,value]of Object.entries(attributes)){node.setAttribute(name,value);}}
return __exports;});;

/* /web/static/src/search/action_menus/action_menus.js */
odoo.define('@web/search/action_menus/action_menus',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{makeContext}=require("@web/core/context");const{session}=require("@web/session");const{registry}=require("@web/core/registry");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{useService}=require("@web/core/utils/hooks");const{Component,onWillStart,onWillUpdateProps}=require("@odoo/owl");let registryActionId=0;const ActionMenus=__exports.ActionMenus=class ActionMenus extends Component{setup(){this.orm=useService("orm");this.actionService=useService("action");onWillStart(async()=>{this.actionItems=await this.setActionItems(this.props);});onWillUpdateProps(async(nextProps)=>{this.actionItems=await this.setActionItems(nextProps);});}
get printItems(){const printActions=this.props.items.print||[];return printActions.map((action)=>({action,description:action.name,key:action.id,}));}
async setActionItems(props){const callbackActions=(props.items.other||[]).map((action)=>Object.assign({key:`action-${action.description}`},action));const actionActions=props.items.action||[];const formattedActions=actionActions.map((action)=>({action,description:action.name,key:action.id,}));const registryActions=[];for(const{Component,getProps}of registry.category("action_menus").getAll()){const itemProps=await getProps(props,this.env);if(itemProps){registryActions.push({Component,key:`registry-action-${registryActionId++}`,props:itemProps,});}}
return[...callbackActions,...formattedActions,...registryActions];}
async executeAction(action){let activeIds=this.props.getActiveIds();if(this.props.isDomainSelected){activeIds=await this.orm.search(this.props.resModel,this.props.domain,{limit:session.active_ids_limit,context:this.props.context,});}
const activeIdsContext={active_id:activeIds[0],active_ids:activeIds,active_model:this.props.resModel,};if(this.props.domain){activeIdsContext.active_domain=this.props.domain;}
const context=makeContext([this.props.context,activeIdsContext]);return this.actionService.doAction(action.id,{additionalContext:context,onClose:this.props.onActionExecuted,});}
async onItemSelected(item){if(!(await this.props.shouldExecuteAction(item))){return;}
if(item.callback){item.callback([item]);}else if(item.action){this.executeAction(item.action);}else if(item.url){browser.location=item.url;}}}
ActionMenus.components={Dropdown,DropdownItem,};ActionMenus.props={getActiveIds:Function,context:Object,resModel:String,domain:{type:Array,optional:true},isDomainSelected:{type:Boolean,optional:true},items:{type:Object,shape:{action:{type:Array,optional:true},print:{type:Array,optional:true},other:{type:Array,optional:true},},},onActionExecuted:{type:Function,optional:true},shouldExecuteAction:{type:Function,optional:true},};ActionMenus.defaultProps={onActionExecuted:()=>{},shouldExecuteAction:()=>true,};ActionMenus.template="web.ActionMenus";return __exports;});;

/* /web/static/src/search/comparison_menu/comparison_menu.js */
odoo.define('@web/search/comparison_menu/comparison_menu',async function(require){'use strict';let __exports={};const{Dropdown}=require("@web/core/dropdown/dropdown");const{SearchDropdownItem}=require("@web/search/search_dropdown_item/search_dropdown_item");const{FACET_ICONS}=require("@web/search/utils/misc");const{useBus}=require("@web/core/utils/hooks");const{Component}=require("@odoo/owl");const ComparisonMenu=__exports.ComparisonMenu=class ComparisonMenu extends Component{setup(){this.icon=FACET_ICONS.comparison;useBus(this.env.searchModel,"update",this.render);}
get items(){return this.env.searchModel.getSearchItems((searchItem)=>searchItem.type==="comparison");}
onComparisonSelected(itemId){this.env.searchModel.toggleSearchItem(itemId);}}
ComparisonMenu.template="web.ComparisonMenu";ComparisonMenu.components={Dropdown,DropdownItem:SearchDropdownItem};return __exports;});;

/* /web/static/src/search/control_panel/control_panel.js */
odoo.define('@web/search/control_panel/control_panel',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{getActiveHotkey}=require("@web/core/hotkeys/hotkey_service");const{Pager}=require("@web/core/pager/pager");const{useService}=require("@web/core/utils/hooks");const{ComparisonMenu}=require("@web/search/comparison_menu/comparison_menu");const{FavoriteMenu}=require("@web/search/favorite_menu/favorite_menu");const{FilterMenu}=require("@web/search/filter_menu/filter_menu");const{GroupByMenu}=require("@web/search/group_by_menu/group_by_menu");const{SearchBar}=require("@web/search/search_bar/search_bar");const{Dropdown}=require("@web/core/dropdown/dropdown");const{Dialog}=require("@web/core/dialog/dialog");const{Component,useState,onMounted,useExternalListener,useRef,useEffect,useSubEnv,}=require("@odoo/owl");const MAPPING={filter:FilterMenu,groupBy:GroupByMenu,comparison:ComparisonMenu,favorite:FavoriteMenu,};const STICKY_CLASS="o_mobile_sticky";const ControlPanelSearchDialog=__exports.ControlPanelSearchDialog=class ControlPanelSearchDialog extends Component{setup(){useSubEnv(this.props.env);}}
ControlPanelSearchDialog.template="web.ControlPanelSearchDialog";ControlPanelSearchDialog.props=["close","slots?","display","env","searchMenus"];ControlPanelSearchDialog.components={Dialog,SearchBar};const ControlPanel=__exports.ControlPanel=class ControlPanel extends Component{setup(){this.actionService=useService("action");this.dialog=useService("dialog");this.pagerProps=this.env.config.pagerProps?useState(this.env.config.pagerProps):undefined;this.breadcrumbs=useState(this.env.config.breadcrumbs);this.root=useRef("root");this.state=useState({showSearchBar:false,showViewSwitcher:false,});this.onScrollThrottledBound=this.onScrollThrottled.bind(this);useExternalListener(window,"click",this.onWindowClick);useEffect(()=>{if(!this.env.isSmall||("adaptToScroll"in this.display&&!this.display.adaptToScroll)){return;}
const scrollingEl=this.getScrollingElement();scrollingEl.addEventListener("scroll",this.onScrollThrottledBound);this.root.el.style.top="0px";return()=>{scrollingEl.removeEventListener("scroll",this.onScrollThrottledBound);};});onMounted(()=>{if(!this.env.isSmall||("adaptToScroll"in this.display&&!this.display.adaptToScroll)){return;}
this.oldScrollTop=0;this.lastScrollTop=0;this.initialScrollTop=this.getScrollingElement().scrollTop;});}
getScrollingElement(){return this.root.el.parentElement;}
resetSearchState(){Object.assign(this.state,{showSearchBar:false,showViewSwitcher:false,});}
get display(){const display=Object.assign({"top-left":true,"top-right":true,"bottom-left":true,"bottom-left-buttons":true,"bottom-right":true,},this.props.display);display.top=display["top-left"]||display["top-right"];display.bottom=display["bottom-left"]||display["bottom-right"];return display;}
get searchMenus(){const searchMenus=[];for(const key of this.env.searchModel.searchMenuTypes){if(key==="comparison"&&this.env.searchModel.getSearchItems((i)=>i.type==="comparison").length===0){continue;}
searchMenus.push({Component:MAPPING[key],key});}
return searchMenus;}
openSearchDialog(){this.dialog.add(ControlPanelSearchDialog,{slots:this.props.slots,display:this.display,searchMenus:this.searchMenus,env:{searchModel:this.env.searchModel,config:this.env.config,},});}
onBreadcrumbClicked(jsId){this.actionService.restore(jsId);}
onScrollThrottled(){if(this.isScrolling){return;}
this.isScrolling=true;browser.requestAnimationFrame(()=>(this.isScrolling=false));const scrollTop=this.getScrollingElement().scrollTop;const delta=Math.round(scrollTop-this.oldScrollTop);if(scrollTop>this.initialScrollTop){this.root.el.classList.add(STICKY_CLASS);if(delta<0){this.lastScrollTop=Math.min(0,this.lastScrollTop-delta);}else{this.lastScrollTop=Math.max(-this.root.el.offsetHeight,-this.root.el.offsetTop-delta);}
this.root.el.style.top=`${this.lastScrollTop}px`;}else{this.root.el.classList.remove(STICKY_CLASS);this.lastScrollTop=0;}
this.oldScrollTop=scrollTop;}
onViewClicked(viewType){this.resetSearchState();this.actionService.switchView(viewType);}
onWindowClick(ev){if(this.state.showViewSwitcher&&!ev.target.closest(".o_cp_switch_buttons")){this.state.showViewSwitcher=false;}}
onBottomLeftKeydown(ev){const hotkey=getActiveHotkey(ev);if(hotkey==="arrowdown"){this.env.searchModel.trigger("focus-view");ev.preventDefault();ev.stopPropagation();}}}
ControlPanel.components={...Object.values(MAPPING),Pager,SearchBar,Dropdown,};ControlPanel.template="web.ControlPanel";return __exports;});;

/* /web/static/src/search/favorite_menu/custom_favorite_item.js */
odoo.define('@web/search/favorite_menu/custom_favorite_item',async function(require){'use strict';let __exports={};const{Dropdown}=require("@web/core/dropdown/dropdown");const{CheckBox}=require("@web/core/checkbox/checkbox");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{Component,useRef,useState}=require("@odoo/owl");const favoriteMenuRegistry=registry.category("favoriteMenu");const CustomFavoriteItem=__exports.CustomFavoriteItem=class CustomFavoriteItem extends Component{setup(){this.notificationService=useService("notification");this.descriptionRef=useRef("description");this.state=useState({description:this.env.config.getDisplayName(),isDefault:false,isShared:false,});}
saveFavorite(ev){if(!this.state.description){this.notificationService.add(this.env._t("A name for your favorite filter is required."),{type:"danger"});ev.stopPropagation();return this.descriptionRef.el.focus();}
const favorites=this.env.searchModel.getSearchItems((s)=>s.type==="favorite"&&s.description===this.state.description);if(favorites.length){this.notificationService.add(this.env._t("A filter with same name already exists."),{type:"danger",});ev.stopPropagation();return this.descriptionRef.el.focus();}
const{description,isDefault,isShared}=this.state;this.env.searchModel.createNewFavorite({description,isDefault,isShared});Object.assign(this.state,{description:this.env.config.getDisplayName(),isDefault:false,isShared:false,});}
onDefaultCheckboxChange(checked){this.state.isDefault=checked;if(checked){this.state.isShared=false;}}
onShareCheckboxChange(checked){this.state.isShared=checked;if(checked){this.state.isDefault=false;}}
onInputKeydown(ev){switch(ev.key){case"Enter":ev.preventDefault();this.saveFavorite();break;case"Escape":ev.preventDefault();ev.target.blur();break;}}}
CustomFavoriteItem.template="web.CustomFavoriteItem";CustomFavoriteItem.components={CheckBox,Dropdown};favoriteMenuRegistry.add("custom-favorite-item",{Component:CustomFavoriteItem,groupNumber:3},{sequence:0});return __exports;});;

/* /web/static/src/search/favorite_menu/favorite_menu.js */
odoo.define('@web/search/favorite_menu/favorite_menu',async function(require){'use strict';let __exports={};const{Dropdown}=require("@web/core/dropdown/dropdown");const{SearchDropdownItem}=require("@web/search/search_dropdown_item/search_dropdown_item");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{FACET_ICONS}=require("@web/search/utils/misc");const{registry}=require("@web/core/registry");const{useBus,useService}=require("@web/core/utils/hooks");const{Component}=require("@odoo/owl");const favoriteMenuRegistry=registry.category("favoriteMenu");const FavoriteMenu=__exports.FavoriteMenu=class FavoriteMenu extends Component{setup(){this.icon=FACET_ICONS.favorite;this.dialogService=useService("dialog");useBus(this.env.searchModel,"update",this.render);}
get items(){const favorites=this.env.searchModel.getSearchItems((searchItem)=>searchItem.type==="favorite");const registryMenus=[];for(const item of favoriteMenuRegistry.getAll()){if("isDisplayed"in item?item.isDisplayed(this.env):true){registryMenus.push({Component:item.Component,groupNumber:item.groupNumber,key:item.Component.name,});}}
return[...favorites,...registryMenus];}
onFavoriteSelected(itemId){this.env.searchModel.toggleSearchItem(itemId);}
openConfirmationDialog(itemId){const{userId}=this.items.find((item)=>item.id===itemId);const dialogProps={title:this.env._t("Warning"),body:userId?this.env._t("Are you sure that you want to remove this filter?"):this.env._t("This filter is global and will be removed for everybody if you continue."),confirm:()=>this.env.searchModel.deleteFavorite(itemId),cancel:()=>{},};this.dialogService.add(ConfirmationDialog,dialogProps);}}
FavoriteMenu.template="web.FavoriteMenu";FavoriteMenu.components={Dropdown,DropdownItem:SearchDropdownItem};return __exports;});;

/* /web/static/src/search/filter_menu/custom_filter_item.js */
odoo.define('@web/search/filter_menu/custom_filter_item',async function(require){'use strict';let __exports={};const{DatePicker,DateTimePicker}=require("@web/core/datepicker/datepicker");const{Domain}=require("@web/core/domain");const{Dropdown}=require("@web/core/dropdown/dropdown");const{serializeDate,serializeDateTime}=require("@web/core/l10n/dates");const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{Component,useState}=require("@odoo/owl");const{DateTime}=luxon;const formatters=registry.category("formatters");const parsers=registry.category("parsers");const FIELD_TYPES={binary:"binary",boolean:"boolean",char:"char",date:"date",datetime:"datetime",float:"number",id:"id",integer:"number",json:"json",html:"char",many2many:"char",many2one:"char",monetary:"number",one2many:"char",text:"char",selection:"selection",};const FIELD_OPERATORS={binary:[{symbol:"!=",description:_lt("is set"),value:false},{symbol:"=",description:_lt("is not set"),value:false},],boolean:[{symbol:"=",description:_lt("is Yes"),value:true},{symbol:"!=",description:_lt("is No"),value:true},],char:[{symbol:"ilike",description:_lt("contains")},{symbol:"not ilike",description:_lt("doesn't contain")},{symbol:"=",description:_lt("is equal to")},{symbol:"!=",description:_lt("is not equal to")},{symbol:"!=",description:_lt("is set"),value:false},{symbol:"=",description:_lt("is not set"),value:false},],json:[{symbol:"ilike",description:_lt("contains")},{symbol:"not ilike",description:_lt("doesn't contain")},{symbol:"=",description:_lt("is equal to")},{symbol:"!=",description:_lt("is not equal to")},{symbol:"!=",description:_lt("is set"),value:false},{symbol:"=",description:_lt("is not set"),value:false},],date:[{symbol:"=",description:_lt("is equal to")},{symbol:"!=",description:_lt("is not equal to")},{symbol:">",description:_lt("is after")},{symbol:"<",description:_lt("is before")},{symbol:">=",description:_lt("is after or equal to")},{symbol:"<=",description:_lt("is before or equal to")},{symbol:"between",description:_lt("is between")},{symbol:"!=",description:_lt("is set"),value:false},{symbol:"=",description:_lt("is not set"),value:false},],datetime:[{symbol:"between",description:_lt("is between")},{symbol:"=",description:_lt("is equal to")},{symbol:"!=",description:_lt("is not equal to")},{symbol:">",description:_lt("is after")},{symbol:"<",description:_lt("is before")},{symbol:">=",description:_lt("is after or equal to")},{symbol:"<=",description:_lt("is before or equal to")},{symbol:"!=",description:_lt("is set"),value:false},{symbol:"=",description:_lt("is not set"),value:false},],id:[{symbol:"=",description:_lt("is")}],number:[{symbol:"=",description:_lt("is equal to")},{symbol:"!=",description:_lt("is not equal to")},{symbol:">",description:_lt("greater than")},{symbol:"<",description:_lt("less than")},{symbol:">=",description:_lt("greater than or equal to")},{symbol:"<=",description:_lt("less than or equal to")},{symbol:"!=",description:_lt("is set"),value:false},{symbol:"=",description:_lt("is not set"),value:false},],selection:[{symbol:"=",description:_lt("is")},{symbol:"!=",description:_lt("is not")},{symbol:"!=",description:_lt("is set"),value:false},{symbol:"=",description:_lt("is not set"),value:false},],};function parseField(field,value){if(FIELD_TYPES[field.type]==="char"){return value;}
const type=field.type==="id"?"integer":field.type;const parse=parsers.contains(type)?parsers.get(type):(v)=>v;return parse(value);}
function formatField(field,value){if(FIELD_TYPES[field.type]==="char"){return value;}
const type=field.type==="id"?"integer":field.type;const format=formatters.contains(type)?formatters.get(type):(v)=>v;return format(value,{digits:field.digits});}
const CustomFilterItem=__exports.CustomFilterItem=class CustomFilterItem extends Component{setup(){this.conditions=useState([]);this.fields=Object.values(this.env.searchModel.searchViewFields).filter((field)=>this.validateField(field)).concat({string:"ID",type:"id",name:"id"}).sort(({string:a},{string:b})=>(a>b?1:a<b?-1:0));this.OPERATORS=FIELD_OPERATORS;this.FIELD_TYPES=FIELD_TYPES;this.addNewCondition();}
addNewCondition(){const lastCondition=[...this.conditions].pop();const condition=lastCondition?Object.assign({},lastCondition):{field:0,operator:0,};this.setDefaultValue(condition);this.conditions.push(condition);}
validateField(field){return(!field.deprecated&&field.searchable&&FIELD_TYPES[field.type]&&field.name!=="id");}
setDefaultValue(condition){const field=this.fields[condition.field];const genericType=FIELD_TYPES[field.type];const operator=FIELD_OPERATORS[genericType][condition.operator];switch(genericType){case"id":case"number":{condition.value=0;break;}
case"date":case"datetime":{condition.value=[DateTime.local()];if(operator.symbol==="between"){condition.value.push(DateTime.local());}
if(genericType==="datetime"){condition.value[0]=condition.value[0].set({hour:0,minute:0,second:0});if(operator.symbol==="between"){condition.value[1]=condition.value[1].set({hour:23,minute:59,second:59,});}}
break;}
case"selection":{const[firstValue]=this.fields[condition.field].selection[0];condition.value=firstValue;break;}
default:{condition.value="";}}
if(!["date","datetime"].includes(field.type)){condition.displayedValue=formatField(field,condition.value);}}
onApply(){const preFilters=this.conditions.map((condition)=>{const field=this.fields[condition.field];const genericType=this.FIELD_TYPES[field.type];const operator=this.OPERATORS[genericType][condition.operator];const descriptionArray=[field.string,operator.description.toString()];const domainArray=[];let domainValue;if("value"in operator){domainValue=[operator.value];}else if(["date","datetime"].includes(genericType)){const serialize=genericType==="date"?serializeDate:serializeDateTime;domainValue=condition.value.map(serialize);descriptionArray.push(`"${condition.value
                        .map((val) => formatField(field, val))
                        .join(" " + this.env._t("and") + " ")}"`);}else{domainValue=[condition.value];if(field.type==="selection"){descriptionArray.push(`"${field.selection.find((v) => v[0] === condition.value)[1]}"`);}else{descriptionArray.push(`"${condition.value}"`);}}
if(operator.symbol==="between"){domainArray.push([field.name,">=",domainValue[0]],[field.name,"<=",domainValue[1]]);}else{domainArray.push([field.name,operator.symbol,domainValue[0]]);}
const preFilter={description:descriptionArray.join(" "),domain:new Domain(domainArray).toString(),type:"filter",};return preFilter;});this.env.searchModel.createNewFilters(preFilters);while(this.conditions.length){this.conditions.pop();}
this.addNewCondition();}
onDateTimeChanged(condition,valueIndex,date){condition.value[valueIndex]=date;}
onFieldSelect(condition,ev){Object.assign(condition,{field:ev.target.selectedIndex,operator:0,});this.setDefaultValue(condition);}
onOperatorSelect(condition,ev){condition.operator=ev.target.selectedIndex;this.setDefaultValue(condition);}
onRemoveCondition(conditionIndex){this.conditions.splice(conditionIndex,1);}
onValueChange(condition,ev){if(!ev.target.value){return this.setDefaultValue(condition);}
const field=this.fields[condition.field];try{const parsed=parseField(field,ev.target.value);const formatted=formatField(field,parsed);condition.value=parsed;condition.displayedValue=formatted;}catch(_err){}
if(field.type!=="selection"){ev.target.value=condition.displayedValue;}}}
CustomFilterItem.components={DatePicker,DateTimePicker,Dropdown};CustomFilterItem.template="web.CustomFilterItem";return __exports;});;

/* /web/static/src/search/filter_menu/filter_menu.js */
odoo.define('@web/search/filter_menu/filter_menu',async function(require){'use strict';let __exports={};const{Dropdown}=require("@web/core/dropdown/dropdown");const{SearchDropdownItem}=require("@web/search/search_dropdown_item/search_dropdown_item");const{CustomFilterItem}=require("@web/search/filter_menu/custom_filter_item");const{FACET_ICONS}=require("@web/search/utils/misc");const{useBus}=require("@web/core/utils/hooks");const{Component}=require("@odoo/owl");const FilterMenu=__exports.FilterMenu=class FilterMenu extends Component{setup(){this.icon=FACET_ICONS.filter;useBus(this.env.searchModel,"update",this.render);}
get items(){return this.env.searchModel.getSearchItems((searchItem)=>["filter","dateFilter"].includes(searchItem.type));}
onFilterSelected({itemId,optionId}){if(optionId){this.env.searchModel.toggleDateFilter(itemId,optionId);}else{this.env.searchModel.toggleSearchItem(itemId);}}}
FilterMenu.components={CustomFilterItem,Dropdown,DropdownItem:SearchDropdownItem};FilterMenu.template="web.FilterMenu";return __exports;});;

/* /web/static/src/search/group_by_menu/custom_group_by_item.js */
odoo.define('@web/search/group_by_menu/custom_group_by_item',async function(require){'use strict';let __exports={};const{Dropdown}=require("@web/core/dropdown/dropdown");const{Component,useState}=require("@odoo/owl");const CustomGroupByItem=__exports.CustomGroupByItem=class CustomGroupByItem extends Component{setup(){this.state=useState({});if(this.props.fields.length){this.state.fieldName=this.props.fields[0].name;}}}
CustomGroupByItem.template="web.CustomGroupByItem";CustomGroupByItem.components={Dropdown};return __exports;});;

/* /web/static/src/search/group_by_menu/group_by_menu.js */
odoo.define('@web/search/group_by_menu/group_by_menu',async function(require){'use strict';let __exports={};const{Dropdown}=require("@web/core/dropdown/dropdown");const{SearchDropdownItem}=require("@web/search/search_dropdown_item/search_dropdown_item");const{CustomGroupByItem}=require("@web/search/group_by_menu/custom_group_by_item");const{FACET_ICONS,GROUPABLE_TYPES}=require("@web/search/utils/misc");const{sortBy}=require("@web/core/utils/arrays");const{useBus}=require("@web/core/utils/hooks");const{Component}=require("@odoo/owl");const GroupByMenu=__exports.GroupByMenu=class GroupByMenu extends Component{setup(){this.icon=FACET_ICONS.groupBy;this.dropdownProps=Object.keys(this.props).filter((key)=>key in Dropdown.props).reduce((obj,key)=>({...obj,[key]:this.props[key]}),{});const fields=[];for(const[fieldName,field]of Object.entries(this.env.searchModel.searchViewFields)){if(this.validateField(fieldName,field)){fields.push(Object.assign({name:fieldName},field));}}
this.fields=sortBy(fields,"string");useBus(this.env.searchModel,"update",this.render);}
get hideCustomGroupBy(){return this.env.searchModel.hideCustomGroupBy||false;}
get items(){return this.env.searchModel.getSearchItems((searchItem)=>["groupBy","dateGroupBy"].includes(searchItem.type));}
validateField(fieldName,field){const{sortable,store,type}=field;return((type==="many2many"?store:sortable)&&fieldName!=="id"&&GROUPABLE_TYPES.includes(type));}
onGroupBySelected({itemId,optionId}){if(optionId){this.env.searchModel.toggleDateGroupBy(itemId,optionId);}else{this.env.searchModel.toggleSearchItem(itemId);}}
onAddCustomGroup(fieldName){this.env.searchModel.createNewGroupBy(fieldName);}}
GroupByMenu.components={CustomGroupByItem,Dropdown,DropdownItem:SearchDropdownItem};GroupByMenu.template="web.GroupByMenu";GroupByMenu.defaultProps={showActiveItems:true,showCaretDown:false,};return __exports;});;

/* /web/static/src/search/layout.js */
odoo.define('@web/search/layout',async function(require){'use strict';let __exports={};const{pick}=require("@web/core/utils/objects");const{Component,useRef}=require("@odoo/owl");__exports.extractLayoutComponents=extractLayoutComponents;function extractLayoutComponents(params){return pick(params,"ControlPanel","SearchPanel","Banner");}
const Layout=__exports.Layout=class Layout extends Component{setup(){this.components=extractLayoutComponents(this.env.config);this.contentRef=useRef("content");}
get controlPanelSlots(){const slots={...this.props.slots};slots["control-panel-bottom-left-buttons"]=slots["layout-buttons"];delete slots["layout-buttons"];delete slots.default;return slots;}
get display(){const{controlPanel}=this.props.display;if(!controlPanel||!this.env.inDialog){return this.props.display;}
return{...this.props.display,controlPanel:{...controlPanel,"top-left":false,"bottom-left-buttons":false,},};}}
Layout.template="web.Layout";Layout.props={className:{type:String,optional:true},display:{type:Object,optional:true},slots:{type:Object,optional:true},};Layout.defaultProps={display:{},};return __exports;});;

/* /web/static/src/search/pager_hook.js */
odoo.define('@web/search/pager_hook',async function(require){'use strict';let __exports={};const{useEnv,useChildSubEnv,useState,onWillRender}=require("@odoo/owl");__exports.usePager=usePager;function usePager(getProps){const env=useEnv();const pagerState=useState({});useChildSubEnv({config:{...env.config,pagerProps:pagerState,},});onWillRender(()=>{Object.assign(pagerState,getProps()||{total:0});});}
return __exports;});;

/* /web/static/src/search/search_arch_parser.js */
odoo.define('@web/search/search_arch_parser',async function(require){'use strict';let __exports={};const{makeContext}=require("@web/core/context");const{_lt}=require("@web/core/l10n/translation");const{evaluateExpr}=require("@web/core/py_js/py");const{XMLParser}=require("@web/core/utils/xml");const{DEFAULT_INTERVAL,DEFAULT_PERIOD}=require("@web/search/utils/dates");const ALL=_lt("All");const DEFAULT_LIMIT=200;const DEFAULT_VIEWS_WITH_SEARCH_PANEL=["kanban","list"];function getContextGroubBy(context){try{return makeContext([context]).group_by.split(":");}catch(_err){return[];}}
function reduceType(type){if(type==="dateFilter"){return"filter";}
if(type==="dateGroupBy"){return"groupBy";}
return type;}
const SearchArchParser=__exports.SearchArchParser=class SearchArchParser extends XMLParser{constructor(searchViewDescription,fields,searchDefaults={},searchPanelDefaults={}){super();const{irFilters,arch}=searchViewDescription;this.fields=fields||{};this.irFilters=irFilters||[];this.arch=arch||"<search/>";this.labels=[];this.preSearchItems=[];this.searchPanelInfo={className:"",viewTypes:DEFAULT_VIEWS_WITH_SEARCH_PANEL,};this.sections=[];this.searchDefaults=searchDefaults;this.searchPanelDefaults=searchPanelDefaults;this.currentGroup=[];this.currentTag=null;this.groupNumber=0;this.pregroupOfGroupBys=[];}
parse(){this.visitXML(this.arch,(node,visitChildren)=>{switch(node.tagName){case"search":this.visitSearch(node,visitChildren);break;case"searchpanel":return this.visitSearchPanel(node);case"group":this.visitGroup(node,visitChildren);break;case"separator":this.visitSeparator();break;case"field":this.visitField(node);break;case"filter":this.visitFilter(node);break;}});return{labels:this.labels,preSearchItems:this.preSearchItems,searchPanelInfo:this.searchPanelInfo,sections:this.sections,};}
pushGroup(tag=null){if(this.currentGroup.length){if(this.currentTag==="groupBy"){this.pregroupOfGroupBys.push(...this.currentGroup);}else{this.preSearchItems.push(this.currentGroup);}}
this.currentTag=tag;this.currentGroup=[];this.groupNumber++;}
visitField(node){this.pushGroup("field");const preField={type:"field"};const modifiers=JSON.parse(node.getAttribute("modifiers")||"{}");if(modifiers.invisible===true){preField.invisible=true;}
if(node.hasAttribute("domain")){preField.domain=node.getAttribute("domain");}
if(node.hasAttribute("filter_domain")){preField.filterDomain=node.getAttribute("filter_domain");}else if(node.hasAttribute("operator")){preField.operator=node.getAttribute("operator");}
if(node.hasAttribute("context")){preField.context=node.getAttribute("context");}
if(node.hasAttribute("name")){const name=node.getAttribute("name");preField.fieldName=name;preField.fieldType=this.fields[name].type;if(name in this.searchDefaults){preField.isDefault=true;let value=this.searchDefaults[name];value=Array.isArray(value)?value[0]:value;let operator=preField.operator;if(!operator){let type=preField.fieldType;if(node.hasAttribute("widget")){type=node.getAttribute("widget");}
if(["char","html","many2many","one2many","text"].includes(type)){operator="ilike";}else{operator="=";}}
preField.defaultRank=-10;const{fieldType,fieldName}=preField;const{selection,context,relation}=this.fields[fieldName];preField.defaultAutocompleteValue={label:`${value}`,operator,value};if(fieldType==="selection"){const option=selection.find((sel)=>sel[0]===value);if(!option){throw Error();}
preField.defaultAutocompleteValue.label=option[1];}else if(fieldType==="many2one"){this.labels.push((orm)=>{return orm.call(relation,"name_get",[value],{context}).then((results)=>{preField.defaultAutocompleteValue.label=results[0][1];});});}}}else{throw Error();}
if(node.hasAttribute("string")){preField.description=node.getAttribute("string");}else if(preField.fieldName){preField.description=this.fields[preField.fieldName].string;}else{preField.description="Ω";}
this.currentGroup.push(preField);}
visitFilter(node){const preSearchItem={type:"filter"};if(node.hasAttribute("context")){const context=node.getAttribute("context");const[fieldName,defaultInterval]=getContextGroubBy(context);const groupByField=this.fields[fieldName];if(groupByField){preSearchItem.type="groupBy";preSearchItem.fieldName=fieldName;preSearchItem.fieldType=groupByField.type;if(["date","datetime"].includes(groupByField.type)){preSearchItem.type="dateGroupBy";preSearchItem.defaultIntervalId=defaultInterval||DEFAULT_INTERVAL;}}else{preSearchItem.context=context;}}
if(reduceType(preSearchItem.type)!==this.currentTag){this.pushGroup(reduceType(preSearchItem.type));}
if(preSearchItem.type==="filter"){if(node.hasAttribute("date")){const fieldName=node.getAttribute("date");preSearchItem.type="dateFilter";preSearchItem.fieldName=fieldName;preSearchItem.fieldType=this.fields[fieldName].type;preSearchItem.defaultGeneratorIds=[DEFAULT_PERIOD];if(node.hasAttribute("default_period")){preSearchItem.defaultGeneratorIds=node.getAttribute("default_period").split(",");}}else{let stringRepr="[]";if(node.hasAttribute("domain")){stringRepr=node.getAttribute("domain");}
preSearchItem.domain=stringRepr;}}
const modifiers=JSON.parse(node.getAttribute("modifiers")||"{}");if(modifiers.invisible===true){preSearchItem.invisible=true;const fieldName=preSearchItem.fieldName;if(fieldName&&!this.fields[fieldName]){return;}}
preSearchItem.groupNumber=this.groupNumber;if(node.hasAttribute("name")){const name=node.getAttribute("name");preSearchItem.name=name;if(name in this.searchDefaults){preSearchItem.isDefault=true;if(["groupBy","dateGroupBy"].includes(preSearchItem.type)){const value=this.searchDefaults[name];preSearchItem.defaultRank=typeof value==="number"?value:100;}else{preSearchItem.defaultRank=-5;}}}
if(node.hasAttribute("string")){preSearchItem.description=node.getAttribute("string");}else if(preSearchItem.fieldName){preSearchItem.description=this.fields[preSearchItem.fieldName].string;}else if(node.hasAttribute("help")){preSearchItem.description=node.getAttribute("help");}else if(node.hasAttribute("name")){preSearchItem.description=node.getAttribute("name");}else{preSearchItem.description="Ω";}
this.currentGroup.push(preSearchItem);}
visitGroup(node,visitChildren){this.pushGroup();visitChildren();this.pushGroup();}
visitSearch(node,visitChildren){visitChildren();this.pushGroup();if(this.pregroupOfGroupBys.length){this.preSearchItems.push(this.pregroupOfGroupBys);}}
visitSearchPanel(searchPanelNode){let hasCategoryWithCounters=false;let hasFilterWithDomain=false;let nextSectionId=1;if(searchPanelNode.hasAttribute("class")){this.searchPanelInfo.className=searchPanelNode.getAttribute("class");}
if(searchPanelNode.hasAttribute("view_types")){this.searchPanelInfo.viewTypes=searchPanelNode.getAttribute("view_types").split(",");}
for(const node of searchPanelNode.children){if(node.nodeType!==1||node.tagName!=="field"){continue;}
const modifiers=JSON.parse(node.getAttribute("modifiers")||"{}");if(modifiers.invisible===true){continue;}
const attrs={};for(const attrName of node.getAttributeNames()){attrs[attrName]=node.getAttribute(attrName);}
const type=attrs.select==="multi"?"filter":"category";const section={color:attrs.color||null,description:attrs.string||this.fields[attrs.name].string,enableCounters:Boolean(evaluateExpr(attrs.enable_counters||"0")),expand:Boolean(evaluateExpr(attrs.expand||"0")),fieldName:attrs.name,icon:attrs.icon||null,id:nextSectionId++,limit:evaluateExpr(attrs.limit||String(DEFAULT_LIMIT)),type,values:new Map(),};if(type==="category"){section.activeValueId=this.searchPanelDefaults[attrs.name];section.icon=section.icon||"fa-folder";section.hierarchize=Boolean(evaluateExpr(attrs.hierarchize||"1"));section.values.set(false,{childrenIds:[],display_name:ALL.toString(),id:false,bold:true,parentId:false,});hasCategoryWithCounters=hasCategoryWithCounters||section.enableCounters;}else{section.domain=attrs.domain||"[]";section.groupBy=attrs.groupby||null;section.icon=section.icon||"fa-filter";hasFilterWithDomain=hasFilterWithDomain||section.domain!=="[]";}
this.sections.push([section.id,section]);}
if(hasCategoryWithCounters&&hasFilterWithDomain){for(const section of this.sections){if(section.type==="category"){section.enableCounters=false;}}
console.warn("Warning: categories with counters are incompatible with filters having a domain attribute.","All category counters have been disabled to avoid inconsistencies.");}
return false;}
visitSeparator(){this.pushGroup();}}
return __exports;});;

/* /web/static/src/search/search_bar/search_bar.js */
odoo.define('@web/search/search_bar/search_bar',async function(require){'use strict';let __exports={};const{Domain}=require("@web/core/domain");const{serializeDate,serializeDateTime}=require("@web/core/l10n/dates");const{registry}=require("@web/core/registry");const{KeepLast}=require("@web/core/utils/concurrency");const{useAutofocus,useBus,useService}=require("@web/core/utils/hooks");const{fuzzyTest}=require("@web/core/utils/search");const{Component,useExternalListener,useRef,useState}=require("@odoo/owl");const parsers=registry.category("parsers");const CHAR_FIELDS=["char","html","many2many","many2one","one2many","text"];let nextItemId=1;const SearchBar=__exports.SearchBar=class SearchBar extends Component{setup(){this.fields=this.env.searchModel.searchViewFields;this.searchItems=this.env.searchModel.getSearchItems((f)=>f.type==="field");this.root=useRef("root");this.state=useState({expanded:[],focusedIndex:0,query:"",});this.items=useState([]);this.subItems={};this.orm=useService("orm");this.keepLast=new KeepLast();this.inputRef=this.env.config.disableSearchBarAutofocus?useRef("autofocus"):useAutofocus();useBus(this.env.searchModel,"focus-search",()=>{this.inputRef.el.focus();});useBus(this.env.searchModel,"update",this.render);useExternalListener(window,"click",this.onWindowClick);useExternalListener(window,"keydown",this.onWindowKeydown);}
async computeState(options={}){const query="query"in options?options.query:this.state.query;const expanded="expanded"in options?options.expanded:this.state.expanded;const focusedIndex="focusedIndex"in options?options.focusedIndex:this.state.focusedIndex;const subItems="subItems"in options?options.subItems:this.subItems;const tasks=[];for(const id of expanded){if(!subItems[id]){tasks.push({id,prom:this.computeSubItems(id,query)});}}
const prom=this.keepLast.add(Promise.all(tasks.map((task)=>task.prom)));if(tasks.length){const taskResults=await prom;tasks.forEach((task,index)=>{subItems[task.id]=taskResults[index];});}
this.state.expanded=expanded;this.state.query=query;this.state.focusedIndex=focusedIndex;this.subItems=subItems;this.inputRef.el.value=query;const trimmedQuery=this.state.query.trim();this.items.length=0;if(!trimmedQuery){return;}
for(const searchItem of this.searchItems){const field=this.fields[searchItem.fieldName];const type=field.type==="reference"?"char":field.type;const preposition=this.env._t(["date","datetime"].includes(type)?"at":"for");if(["selection","boolean"].includes(type)){const options=field.selection||[[true,this.env._t("Yes")],[false,this.env._t("No")],];for(const[value,label]of options){if(fuzzyTest(trimmedQuery.toLowerCase(),label.toLowerCase())){this.items.push({id:nextItemId++,searchItemDescription:searchItem.description,preposition,searchItemId:searchItem.id,label,operator:searchItem.operator||"=",value,});}}
continue;}
const parser=parsers.contains(type)?parsers.get(type):(str)=>str;let value;try{switch(type){case"date":{value=serializeDate(parser(trimmedQuery));break;}
case"datetime":{value=serializeDateTime(parser(trimmedQuery));break;}
case"many2one":{value=trimmedQuery;break;}
default:{value=parser(trimmedQuery);}}}catch(_e){continue;}
const item={id:nextItemId++,searchItemDescription:searchItem.description,preposition,searchItemId:searchItem.id,label:this.state.query,operator:searchItem.operator||(CHAR_FIELDS.includes(type)?"ilike":"="),value,};if(type==="many2one"){item.isParent=true;item.isExpanded=this.state.expanded.includes(item.searchItemId);}
this.items.push(item);if(item.isExpanded){this.items.push(...this.subItems[searchItem.id]);}}}
async computeSubItems(searchItemId,query){const searchItem=this.searchItems.find((i)=>i.id===searchItemId);const field=this.fields[searchItem.fieldName];let domain=[];if(searchItem.domain){try{domain=new Domain(searchItem.domain).toList();}catch(_e){}}
const options=await this.orm.call(field.relation,"name_search",[],{args:domain,context:field.context,limit:8,name:query.trim(),});const subItems=[];if(options.length){const operator=searchItem.operator||"=";for(const[value,label]of options){subItems.push({id:nextItemId++,isChild:true,searchItemId,value,label,operator,});}}else{subItems.push({id:nextItemId++,isChild:true,searchItemId,label:this.env._t("(no result)"),unselectable:true,});}
return subItems;}
focusFacet(index){const facets=this.root.el.getElementsByClassName("o_searchview_facet");if(facets.length){if(index===undefined){facets[facets.length-1].focus();}else{facets[index].focus();}}}
removeFacet(facet){this.env.searchModel.deactivateGroup(facet.groupId);this.inputRef.el.focus();}
resetState(){this.computeState({expanded:[],focusedIndex:0,query:"",subItems:[]});this.inputRef.el.focus();}
selectItem(item){if(!item.unselectable){const{searchItemId,label,operator,value}=item;this.env.searchModel.addAutoCompletionValues(searchItemId,{label,operator,value});}
this.resetState();}
toggleItem(item,shouldExpand){const id=item.searchItemId;const expanded=[...this.state.expanded];const index=expanded.findIndex((id0)=>id0===id);if(shouldExpand===true){if(index<0){expanded.push(id);}}else{if(index>=0){expanded.splice(index,1);}}
this.computeState({expanded});}
onFacetKeydown(facet,facetIndex,ev){switch(ev.key){case"ArrowLeft":{if(facetIndex===0){this.inputRef.el.focus();}else{this.focusFacet(facetIndex-1);}
break;}
case"ArrowRight":{const facets=this.root.el.getElementsByClassName("o_searchview_facet");if(facetIndex===facets.length-1){this.inputRef.el.focus();}else{this.focusFacet(facetIndex+1);}
break;}
case"Backspace":{this.removeFacet(facet);break;}}}
onFacetRemove(facet){this.removeFacet(facet);}
onItemMousemove(focusedIndex){this.state.focusedIndex=focusedIndex;this.inputRef.el.focus();}
onSearchKeydown(ev){if(ev.isComposing){return;}
const focusedItem=this.items[this.state.focusedIndex];let focusedIndex;switch(ev.key){case"ArrowDown":ev.preventDefault();if(this.items.length){if(this.state.focusedIndex>=this.items.length-1){focusedIndex=0;}else{focusedIndex=this.state.focusedIndex+1;}}else{this.env.searchModel.trigger("focus-view");}
break;case"ArrowUp":ev.preventDefault();if(this.items.length){if(this.state.focusedIndex===0||this.state.focusedIndex>this.items.length-1){focusedIndex=this.items.length-1;}else{focusedIndex=this.state.focusedIndex-1;}}
break;case"ArrowLeft":if(focusedItem&&focusedItem.isParent&&focusedItem.isExpanded){ev.preventDefault();this.toggleItem(focusedItem,false);}else if(focusedItem&&focusedItem.isChild){ev.preventDefault();focusedIndex=this.items.findIndex((item)=>item.isParent&&item.searchItemId===focusedItem.searchItemId);}else if(ev.target.selectionStart===0){this.focusFacet();}else{}
break;case"ArrowRight":if(ev.target.selectionStart===this.state.query.length){if(focusedItem&&focusedItem.isParent){ev.preventDefault();if(focusedItem.isExpanded){focusedIndex=this.state.focusedIndex+1;}else{this.toggleItem(focusedItem,true);}}else if(ev.target.selectionStart===this.state.query.length){this.focusFacet(0);}}
break;case"Backspace":if(!this.state.query.length){const facets=this.env.searchModel.facets;if(facets.length){this.removeFacet(facets[facets.length-1]);}}
break;case"Enter":if(!this.state.query.length){this.env.searchModel.search();break;}else if(focusedItem){ev.preventDefault();this.selectItem(focusedItem);}
break;case"Tab":if(this.state.query.length&&focusedItem){ev.preventDefault();this.selectItem(focusedItem);}
break;case"Escape":this.resetState();break;}
if(focusedIndex!==undefined){this.state.focusedIndex=focusedIndex;}}
onSearchInput(ev){const query=ev.target.value;if(query.trim()){this.computeState({query,expanded:[],focusedIndex:0,subItems:[]});}else if(this.items.length){this.resetState();}}
onWindowClick(ev){if(this.items.length&&!this.root.el.contains(ev.target)){this.resetState();}}
onWindowKeydown(ev){if(this.items.length&&ev.key==="Escape"){this.resetState();}}}
SearchBar.template="web.SearchBar";return __exports;});;

/* /web/static/src/search/search_dropdown_item/search_dropdown_item.js */
odoo.define('@web/search/search_dropdown_item/search_dropdown_item',async function(require){'use strict';let __exports={};const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const SearchDropdownItem=__exports.SearchDropdownItem=class SearchDropdownItem extends DropdownItem{}
SearchDropdownItem.template="web.SearchDropdownItem";SearchDropdownItem.props={...DropdownItem.props,checked:{type:Boolean,optional:false,},};return __exports;});;

/* /web/static/src/search/search_model.js */
odoo.define('@web/search/search_model',async function(require){'use strict';let __exports={};const{makeContext}=require("@web/core/context");const{Domain}=require("@web/core/domain");const{evaluateExpr}=require("@web/core/py_js/py");const{sortBy}=require("@web/core/utils/arrays");const{deepCopy}=require("@web/core/utils/objects");const{SearchArchParser}=require("@web/search/search_arch_parser");const{constructDateDomain,DEFAULT_INTERVAL,getComparisonOptions,getIntervalOptions,getPeriodOptions,rankInterval,yearSelected,}=require("@web/search/utils/dates");const{FACET_ICONS}=require("@web/search/utils/misc");const{EventBus,toRaw}=require("@odoo/owl");const{DateTime}=luxon;function hasValues(section){const{errorMsg,type,values}=section;if(errorMsg){return true;}
switch(type){case"category":{return values&&values.size>1;}
case"filter":{return values&&values.size>0;}}}
function mapToArray(map){const result=[];for(const[key,val]of map){const valCopy=Object.assign({},val);result.push([key,valCopy]);}
return result;}
function arraytoMap(array){return new Map(array);}
function execute(op,source,target){const{query,nextId,nextGroupId,nextGroupNumber,searchItems,searchPanelInfo,sections,}=source;target.nextGroupId=nextGroupId;target.nextGroupNumber=nextGroupNumber;target.nextId=nextId;target.query=query;target.searchItems=searchItems;target.searchPanelInfo=searchPanelInfo;target.sections=op(sections);for(const[,section]of target.sections){section.values=op(section.values);if(section.groups){section.groups=op(section.groups);for(const[,group]of section.groups){group.values=op(group.values);}}}}
const FAVORITE_PRIVATE_GROUP=1;const FAVORITE_SHARED_GROUP=2;const SearchModel=__exports.SearchModel=class SearchModel extends EventBus{constructor(env,services){super();this.env=env;this.setup(services);}
setup(services){const{orm,user,view}=services;this.orm=orm;this.userService=user;this.viewService=view;this.referenceMoment=DateTime.local();this.comparisonOptions=getComparisonOptions();this.intervalOptions=getIntervalOptions();this.optionGenerators=getPeriodOptions(this.referenceMoment);}
async load(config){const{resModel}=config;if(!resModel){throw Error(`SearchPanel config should have a "resModel" key`);}
this.resModel=resModel;this._reset();const{comparison,context,domain,groupBy,hideCustomGroupBy,orderBy}=config;this.globalComparison=comparison;this.globalContext=toRaw(Object.assign({},context));this.globalDomain=domain||[];this.globalGroupBy=groupBy||[];this.globalOrderBy=orderBy||[];this.hideCustomGroupBy=hideCustomGroupBy;this.searchMenuTypes=new Set(config.searchMenuTypes||["filter","groupBy","favorite"]);let{irFilters,loadIrFilters,searchViewArch,searchViewFields,searchViewId}=config;const loadSearchView=searchViewId!==undefined&&(!searchViewArch||!searchViewFields||(!irFilters&&loadIrFilters));const searchViewDescription={};if(loadSearchView){const result=await this.viewService.loadViews({context:this.globalContext,resModel,views:[[searchViewId,"search"]],},{actionId:this.env.config.actionId,loadIrFilters:loadIrFilters||false,});Object.assign(searchViewDescription,result.views.search);searchViewFields=searchViewFields||result.fields;}
if(searchViewArch){searchViewDescription.arch=searchViewArch;}
if(irFilters){searchViewDescription.irFilters=irFilters;}
if(searchViewId!==undefined){searchViewDescription.viewId=searchViewId;}
this.searchViewArch=searchViewDescription.arch||"<search/>";this.searchViewFields=searchViewFields||{};if(searchViewDescription.irFilters){this.irFilters=searchViewDescription.irFilters;}
if(searchViewDescription.viewId!==undefined){this.searchViewId=searchViewDescription.viewId;}
if(config.state){this._importState(config.state);this.__legacyParseSearchPanelArchAnyway(searchViewDescription,searchViewFields);this.domainParts={};this.display=this._getDisplay(config.display);if(!this.searchPanelInfo.loaded){return this._reloadSections();}
return;}
this.blockNotification=true;this.searchItems={};this.query=[];this.nextId=1;this.nextGroupId=1;this.nextGroupNumber=1;this.domainParts={};const searchDefaults={};const searchPanelDefaults={};for(const key in this.globalContext){const defaultValue=this.globalContext[key];const searchDefaultMatch=/^search_default_(.*)$/.exec(key);if(searchDefaultMatch){if(defaultValue){searchDefaults[searchDefaultMatch[1]]=defaultValue;}
delete this.globalContext[key];continue;}
const searchPanelDefaultMatch=/^searchpanel_default_(.*)$/.exec(key);if(searchPanelDefaultMatch){searchPanelDefaults[searchPanelDefaultMatch[1]]=defaultValue;delete this.globalContext[key];}}
const parser=new SearchArchParser(searchViewDescription,searchViewFields,searchDefaults,searchPanelDefaults);const{labels,preSearchItems,searchPanelInfo,sections}=parser.parse();this.searchPanelInfo={...searchPanelInfo,loaded:false,shouldReload:false};await Promise.all(labels.map((cb)=>cb(this.orm)));for(const preGroup of preSearchItems||[]){this._createGroupOfSearchItems(preGroup);}
this.nextGroupNumber=1+Math.max(...Object.values(this.searchItems).map((i)=>i.groupNumber||0),0);const dateFilters=Object.values(this.searchItems).filter((searchElement)=>searchElement.type==="dateFilter");if(dateFilters.length){this._createGroupOfComparisons(dateFilters);}
const{dynamicFilters}=config;if(dynamicFilters){this._createGroupOfDynamicFilters(dynamicFilters);}
const defaultFavoriteId=this._createGroupOfFavorites(this.irFilters||[]);const activateFavorite="activateFavorite"in config?config.activateFavorite:true;this._activateDefaultSearchItems(activateFavorite?defaultFavoriteId:null);this.sections=new Map(sections||[]);this.display=this._getDisplay(config.display);if(this.display.searchPanel){this.searchDomain=this._getDomain({withSearchPanel:false});this.sectionsPromise=this._fetchSections(this.categories,this.filters).then(()=>{for(const{fieldName,values}of this.filters){const filterDefaults=searchPanelDefaults[fieldName]||[];for(const valueId of filterDefaults){const value=values.get(valueId);if(value){value.checked=true;}}}});if(Object.keys(searchPanelDefaults).length||this._shouldWaitForData(false)){await this.sectionsPromise;}}
this.blockNotification=false;}
async reload(config={}){this._reset();const{comparison,context,domain,groupBy,orderBy}=config;this.globalContext=Object.assign({},context);this.globalDomain=domain||[];this.globalComparison=comparison;this.globalGroupBy=groupBy||[];this.globalOrderBy=orderBy||[];await this._reloadSections();}
get categories(){return[...this.sections.values()].filter((s)=>s.type==="category");}
get context(){if(!this._context){this._context=makeContext([this.globalContext,this._getContext()]);}
return deepCopy(this._context);}
get domain(){if(!this._domain){this._domain=this._getDomain();}
return deepCopy(this._domain);}
get comparison(){if(!this.searchMenuTypes.has("comparison")){return null;}
if(this._comparison===undefined){if(this.globalComparison){this._comparison=this.globalComparison;}else{const comparison=this.getFullComparison();if(comparison){const{fieldName,range,rangeDescription,comparisonRange,comparisonRangeDescription,}=comparison;const domains=[{arrayRepr:Domain.and([this.domain,range]).toList(),description:rangeDescription,},{arrayRepr:Domain.and([this.domain,comparisonRange]).toList(),description:comparisonRangeDescription,},];this._comparison={domains,fieldName};}else{this._comparison=null;}}}
return deepCopy(this._comparison);}
get facets(){const isValidType=(type)=>!["groupBy","comparison"].includes(type)||this.searchMenuTypes.has(type);const facets=[];for(const facet of this._getFacets()){if(!isValidType(facet.type)){continue;}
facets.push(facet);}
return facets;}
get filters(){return[...this.sections.values()].filter((s)=>s.type==="filter");}
get groupBy(){if(!this.searchMenuTypes.has("groupBy")){return[];}
if(!this._groupBy){this._groupBy=this._getGroupBy();}
return deepCopy(this._groupBy);}
get orderBy(){if(!this._orderBy){this._orderBy=this._getOrderBy();}
return deepCopy(this._orderBy);}
addAutoCompletionValues(searchItemId,autocompleteValue){const searchItem=this.searchItems[searchItemId];if(searchItem.type!=="field"){return;}
const{label,value,operator}=autocompleteValue;const queryElem=this.query.find((queryElem)=>queryElem.searchItemId===searchItemId&&"autocompleteValue"in queryElem&&queryElem.autocompleteValue.value===value&&queryElem.autocompleteValue.operator===operator);if(!queryElem){this.query.push({searchItemId,autocompleteValue});}else{queryElem.autocompleteValue.label=label;}
this._notify();}
clearQuery(){this.query=[];this._notify();}
async createNewFavorite(params){const{preFavorite,irFilter}=this._getIrFilterDescription(params);const serverSideId=await this.orm.call("ir.filters","create_or_replace",[irFilter]);this.env.bus.trigger("CLEAR-CACHES");this.blockNotification=true;this.clearQuery();const favorite={...preFavorite,type:"favorite",id:this.nextId,groupId:this.nextGroupId,groupNumber:preFavorite.userId?FAVORITE_PRIVATE_GROUP:FAVORITE_SHARED_GROUP,removable:true,serverSideId,};this.searchItems[this.nextId]=favorite;this.query.push({searchItemId:this.nextId});this.nextGroupId++;this.nextId++;this.blockNotification=false;this._notify();}
createNewFilters(prefilters){if(!prefilters.length){return[];}
prefilters.forEach((preFilter)=>{const filter=Object.assign(preFilter,{groupId:this.nextGroupId,groupNumber:this.nextGroupNumber,id:this.nextId,type:"filter",});this.searchItems[this.nextId]=filter;this.query.push({searchItemId:this.nextId});this.nextId++;});this.nextGroupId++;this.nextGroupNumber++;this._notify();}
createNewGroupBy(fieldName){const field=this.searchViewFields[fieldName];const{string,type:fieldType}=field;const firstGroupBy=Object.values(this.searchItems).find((f)=>f.type==="groupBy");const preSearchItem={description:string||fieldName,fieldName,fieldType,groupId:firstGroupBy?firstGroupBy.groupId:this.nextGroupId++,groupNumber:this.nextGroupNumber,id:this.nextId,custom:true,};if(["date","datetime"].includes(fieldType)){this.searchItems[this.nextId]=Object.assign({type:"dateGroupBy",defaultIntervalId:DEFAULT_INTERVAL},preSearchItem);this.toggleDateGroupBy(this.nextId);}else{this.searchItems[this.nextId]=Object.assign({type:"groupBy"},preSearchItem);this.toggleSearchItem(this.nextId);}
this.nextGroupNumber++;this.nextId++;this._notify();}
deactivateGroup(groupId){this.query=this.query.filter((queryElem)=>{const searchItem=this.searchItems[queryElem.searchItemId];return searchItem.groupId!==groupId;});for(const partName in this.domainParts){const part=this.domainParts[partName];if(part.groupId===groupId){this.setDomainParts({[partName]:null});}}
this._checkComparisonStatus();this._notify();}
async deleteFavorite(favoriteId){const searchItem=this.searchItems[favoriteId];if(searchItem.type!=="favorite"){return;}
const{serverSideId}=searchItem;await this.orm.unlink("ir.filters",[serverSideId]);this.env.bus.trigger("CLEAR-CACHES");const index=this.query.findIndex((queryElem)=>queryElem.searchItemId===favoriteId);delete this.searchItems[favoriteId];if(index>=0){this.query.splice(index,1);}
this._notify();}
exportState(){const state={};execute(mapToArray,this,state);return state;}
getDomainPart(partName){const part=this.domainParts[partName]||null;if(part){return deepCopy(part);}
return part;}
getDomainParts(){const copy=deepCopy(this.domainParts);return sortBy(Object.values(copy),(part)=>part.groupId);}
getFullComparison(){let searchItem=null;for(const queryElem of this.query.slice().reverse()){const item=this.searchItems[queryElem.searchItemId];if(item.type==="comparison"){searchItem=item;break;}else if(item.type==="favorite"&&item.comparison){searchItem=item;break;}}
if(!searchItem){return null;}else if(searchItem.type==="favorite"){return searchItem.comparison;}
const{dateFilterId,comparisonOptionId}=searchItem;const{fieldName,fieldType,description:dateFilterDescription}=this.searchItems[dateFilterId];const selectedGeneratorIds=this._getSelectedGeneratorIds(dateFilterId);const{domain:range,description:rangeDescription}=constructDateDomain(this.referenceMoment,fieldName,fieldType,selectedGeneratorIds);const{domain:comparisonRange,description:comparisonRangeDescription,}=constructDateDomain(this.referenceMoment,fieldName,fieldType,selectedGeneratorIds,comparisonOptionId);return{comparisonId:comparisonOptionId,fieldName,fieldDescription:dateFilterDescription,range:range.toList(),rangeDescription,comparisonRange:comparisonRange.toList(),comparisonRangeDescription,};}
getIrFilterValues(params){const{irFilter}=this._getIrFilterDescription(params);return irFilter;}
getPreFavoriteValues(params){const{preFavorite}=this._getIrFilterDescription(params);return preFavorite;}
getSearchItems(predicate){const searchItems=[];Object.values(this.searchItems).forEach((searchItem)=>{if((!("invisible"in searchItem)||!searchItem.invisible)&&(!predicate||predicate(searchItem))){const enrichedSearchitem=this._enrichItem(searchItem);if(enrichedSearchitem){searchItems.push(enrichedSearchitem);}}});if(searchItems.some((f)=>f.type==="favorite")){searchItems.sort((f1,f2)=>f1.groupNumber-f2.groupNumber);}
return searchItems;}
getSections(predicate){let sections=[...this.sections.values()].map((section)=>Object.assign({},section,{empty:!hasValues(section)}));if(predicate){sections=sections.filter(predicate);}
return sections.sort((s1,s2)=>s1.index-s2.index);}
search(){this.trigger("update");}
setDomainParts(parts){for(const key in parts){const val=parts[key];if(!val){delete this.domainParts[key];}else{this.domainParts[key]=val;val.groupId=this.nextGroupId++;}}
this._notify();}
toggleCategoryValue(sectionId,valueId){const category=this.sections.get(sectionId);category.activeValueId=valueId;this._notify();}
toggleFilterValues(sectionId,valueIds,forceTo=null){const filter=this.sections.get(sectionId);for(const valueId of valueIds){const value=filter.values.get(valueId);value.checked=forceTo===null?!value.checked:forceTo;}
this._notify();}
toggleSearchItem(searchItemId){const searchItem=this.searchItems[searchItemId];switch(searchItem.type){case"dateFilter":case"dateGroupBy":case"field":{return;}}
const index=this.query.findIndex((queryElem)=>queryElem.searchItemId===searchItemId);if(index>=0){this.query.splice(index,1);}else{if(searchItem.type==="favorite"){this.query=[];}else if(searchItem.type==="comparison"){this.query=this.query.filter((queryElem)=>{const{type}=this.searchItems[queryElem.searchItemId];return type!=="comparison";});}
this.query.push({searchItemId});}
this._notify();}
toggleDateFilter(searchItemId,generatorId){const searchItem=this.searchItems[searchItemId];if(searchItem.type!=="dateFilter"){return;}
const generatorIds=generatorId?[generatorId]:searchItem.defaultGeneratorIds;for(const generatorId of generatorIds){const index=this.query.findIndex((queryElem)=>queryElem.searchItemId===searchItemId&&"generatorId"in queryElem&&queryElem.generatorId===generatorId);if(index>=0){this.query.splice(index,1);if(!yearSelected(this._getSelectedGeneratorIds(searchItemId))){this.query=this.query.filter((queryElem)=>queryElem.searchItemId!==searchItemId);}}else{this.query.push({searchItemId,generatorId});if(!yearSelected(this._getSelectedGeneratorIds(searchItemId))){const{defaultYearId}=this.optionGenerators.find((o)=>o.id===generatorId);this.query.push({searchItemId,generatorId:defaultYearId});}}}
this._checkComparisonStatus();this._notify();}
toggleDateGroupBy(searchItemId,intervalId){const searchItem=this.searchItems[searchItemId];if(searchItem.type!=="dateGroupBy"){return;}
intervalId=intervalId||searchItem.defaultIntervalId;const index=this.query.findIndex((queryElem)=>queryElem.searchItemId===searchItemId&&"intervalId"in queryElem&&queryElem.intervalId===intervalId);if(index>=0){this.query.splice(index,1);}else{this.query.push({searchItemId,intervalId});}
this._notify();}
_activateDefaultSearchItems(defaultFavoriteId){if(defaultFavoriteId){this.toggleSearchItem(defaultFavoriteId);}else{Object.values(this.searchItems).filter((f)=>f.isDefault&&f.type!=="favorite").sort((f1,f2)=>(f1.defaultRank||100)-(f2.defaultRank||100)).forEach((f)=>{if(f.type==="dateFilter"){this.toggleDateFilter(f.id);}else if(f.type==="dateGroupBy"){this.toggleDateGroupBy(f.id);}else if(f.type==="field"){this.addAutoCompletionValues(f.id,f.defaultAutocompleteValue);}else{this.toggleSearchItem(f.id);}});}}
_checkComparisonStatus(){const activeComparison=this._getActiveComparison();if(!activeComparison){return;}
const{dateFilterId,id}=activeComparison;const dateFilterIsActive=this.query.some((queryElem)=>queryElem.searchItemId===dateFilterId);if(!dateFilterIsActive){this.query=this.query.filter((queryElem)=>queryElem.searchItemId!==id);}}
_createCategoryTree(sectionId,result){const category=this.sections.get(sectionId);let{error_msg,parent_field:parentField,values}=result;if(error_msg){category.errorMsg=error_msg;values=[];}
if(category.hierarchize){category.parentField=parentField;}
for(const value of values){category.values.set(value.id,Object.assign({},value,{childrenIds:[],parentId:value[parentField]||false,}));}
for(const value of values){const{parentId}=category.values.get(value.id);if(parentId&&category.values.has(parentId)){category.values.get(parentId).childrenIds.push(value.id);}}
category.rootIds=[false];for(const value of values){const{parentId}=category.values.get(value.id);if(!parentId){category.rootIds.push(value.id);}}
const valueIds=[false,...values.map((val)=>val.id)];this._ensureCategoryValue(category,valueIds);}
_createFilterTree(sectionId,result){const filter=this.sections.get(sectionId);let{error_msg,values}=result;if(error_msg){filter.errorMsg=error_msg;values=[];}
values.forEach((value)=>{const oldValue=filter.values.get(value.id);value.checked=oldValue?oldValue.checked:false;});filter.values=new Map();const groupIds=[];if(filter.groupBy){const groups=new Map();for(const value of values){const groupId=value.group_id;if(!groups.has(groupId)){if(groupId){groupIds.push(groupId);}
groups.set(groupId,{id:groupId,name:value.group_name,values:new Map(),tooltip:value.group_tooltip,sequence:value.group_sequence,hex_color:value.group_hex_color,});const oldGroup=filter.groups&&filter.groups.get(groupId);groups.get(groupId).state=(oldGroup&&oldGroup.state)||false;}
groups.get(groupId).values.set(value.id,value);}
filter.groups=groups;filter.sortedGroupIds=sortBy(groupIds,(id)=>groups.get(id).sequence||groups.get(id).name);for(const group of filter.groups.values()){for(const[valueId,value]of group.values){filter.values.set(valueId,value);}}}else{for(const value of values){filter.values.set(value.id,value);}}}
_createGroupOfComparisons(dateFilters){const preSearchItem=[];for(const dateFilter of dateFilters){for(const comparisonOption of this.comparisonOptions){const{id:dateFilterId,description}=dateFilter;const preFilter={type:"comparison",comparisonOptionId:comparisonOption.id,description:`${description}: ${comparisonOption.description}`,dateFilterId,};preSearchItem.push(preFilter);}}
this._createGroupOfSearchItems(preSearchItem);}
_createGroupOfDynamicFilters(dynamicFilters){const pregroup=dynamicFilters.map((filter)=>{return{groupNumber:this.nextGroupNumber,description:filter.description,domain:filter.domain,isDefault:"is_default"in filter?filter.is_default:true,type:"filter",};});this.nextGroupNumber++;this._createGroupOfSearchItems(pregroup);}
_createGroupOfFavorites(irFilters){let defaultFavoriteId=null;irFilters.forEach((irFilter)=>{const favorite=this._irFilterToFavorite(irFilter);this._createGroupOfSearchItems([favorite]);if(favorite.isDefault){defaultFavoriteId=favorite.id;}});return defaultFavoriteId;}
_createGroupOfSearchItems(pregroup){pregroup.forEach((preSearchItem)=>{const searchItem=Object.assign(preSearchItem,{groupId:this.nextGroupId,id:this.nextId,});this.searchItems[this.nextId]=searchItem;this.nextId++;});this.nextGroupId++;}
_enrichItem(searchItem){const queryElements=this.query.filter((queryElem)=>queryElem.searchItemId===searchItem.id);const isActive=Boolean(queryElements.length);const enrichSearchItem=Object.assign({isActive},searchItem);function _enrichOptions(options,selectedIds){return options.map((o)=>{const{description,id,groupNumber}=o;const isActive=selectedIds.some((optionId)=>optionId===id);return{description,id,groupNumber,isActive};});}
switch(searchItem.type){case"comparison":{const{dateFilterId}=searchItem;const dateFilterIsActive=this.query.some((queryElem)=>queryElem.searchItemId===dateFilterId);if(!dateFilterIsActive){return null;}
break;}
case"dateFilter":enrichSearchItem.options=_enrichOptions(this.optionGenerators,queryElements.map((queryElem)=>queryElem.generatorId));break;case"dateGroupBy":enrichSearchItem.options=_enrichOptions(this.intervalOptions,queryElements.map((queryElem)=>queryElem.intervalId));break;case"field":enrichSearchItem.autocompleteValues=queryElements.map((queryElem)=>queryElem.autocompleteValue);break;}
return enrichSearchItem;}
_ensureCategoryValue(category,valueIds){if(!valueIds.includes(category.activeValueId)){category.activeValueId=valueIds[0];}}
async _fetchCategories(categories){const filterDomain=this._getFilterDomain();const searchDomain=this.searchDomain;await Promise.all(categories.map(async(category)=>{const result=await this.orm.call(this.resModel,"search_panel_select_range",[category.fieldName],{category_domain:this._getCategoryDomain(category.id),context:this.globalContext,enable_counters:category.enableCounters,expand:category.expand,filter_domain:filterDomain,hierarchize:category.hierarchize,limit:category.limit,search_domain:searchDomain,});this._createCategoryTree(category.id,result);}));}
async _fetchFilters(filters){const evalContext={};for(const category of this.categories){evalContext[category.fieldName]=category.activeValueId;}
const categoryDomain=this._getCategoryDomain();const searchDomain=this.searchDomain;await Promise.all(filters.map(async(filter)=>{const result=await this.orm.call(this.resModel,"search_panel_select_multi_range",[filter.fieldName],{category_domain:categoryDomain,comodel_domain:new Domain(filter.domain).toList(evalContext),context:this.globalContext,enable_counters:filter.enableCounters,filter_domain:this._getFilterDomain(filter.id),expand:filter.expand,group_by:filter.groupBy||false,group_domain:this._getGroupDomain(filter),limit:filter.limit,search_domain:searchDomain,});this._createFilterTree(filter.id,result);}));}
async _fetchSections(categoriesToLoad,filtersToLoad){await this._fetchCategories(categoriesToLoad);await this._fetchFilters(filtersToLoad);this.searchPanelInfo.loaded=true;}
_getActiveComparison(){for(const queryElem of this.query){const searchItem=this.searchItems[queryElem.searchItemId];if(searchItem.type==="comparison"){return searchItem;}}
return null;}
_getCategoryDomain(excludedCategoryId){const domain=[];for(const category of this.categories){if(category.id===excludedCategoryId||!category.activeValueId){continue;}
const field=this.searchViewFields[category.fieldName];const operator=field.type==="many2one"&&category.parentField?"child_of":"=";domain.push([category.fieldName,operator,category.activeValueId]);}
return domain;}
_getContext(){const groups=this._getGroups();const contexts=[this.userService.context];for(const group of groups){for(const activeItem of group.activeItems){const context=this._getSearchItemContext(activeItem);if(context){contexts.push(context);}}}
let context;try{context=makeContext(contexts);return context;}catch(error){throw new Error(`${this.env._t("Failed to evaluate the context")} ${context}.\n${error.message}`);}}
_getDateFilterDomain(dateFilter,generatorIds,key="domain"){const{fieldName,fieldType}=dateFilter;const dateFilterRange=constructDateDomain(this.referenceMoment,fieldName,fieldType,generatorIds);return dateFilterRange[key];}
_getDisplay(display={}){const{viewTypes}=this.searchPanelInfo;const{bannerRoute,viewType}=this.env.config;return{controlPanel:"controlPanel"in display?display.controlPanel:{},searchPanel:this.sections.size&&(!viewType||viewTypes.includes(viewType))&&("searchPanel"in display?display.searchPanel:true),banner:Boolean(bannerRoute),};}
_getDomain(params={}){const withSearchPanel="withSearchPanel"in params?params.withSearchPanel:true;const withGlobal="withGlobal"in params?params.withGlobal:true;const groups=this._getGroups();const domains=[];if(withGlobal){domains.push(this.globalDomain);}
for(const group of groups){const groupActiveItemDomains=[];for(const activeItem of group.activeItems){const domain=this._getSearchItemDomain(activeItem);if(domain){groupActiveItemDomains.push(domain);}}
const groupDomain=Domain.or(groupActiveItemDomains);domains.push(groupDomain);}
for(const{domain}of this.getDomainParts()){domains.push(domain);}
if(this.display.searchPanel&&withSearchPanel){domains.push(this._getSearchPanelDomain());}
let domain;try{domain=Domain.and(domains);return params.raw?domain:domain.toList(Object.assign({},this.globalContext,this.userService.context));}catch(error){throw new Error(`${this.env._t("Failed to evaluate the domain")} ${domain.toString()}.\n${
                    error.message
                }`);}}
_getFacets(){const facets=[];const groups=this._getGroups();for(const group of groups){const values=[];let title;let type;for(const activeItem of group.activeItems){const searchItem=this.searchItems[activeItem.searchItemId];switch(searchItem.type){case"field":{type="field";title=searchItem.description;for(const autocompleteValue of activeItem.autocompletValues){values.push(autocompleteValue.label);}
break;}
case"groupBy":{type="groupBy";values.push(searchItem.description);break;}
case"dateGroupBy":{type="groupBy";for(const intervalId of activeItem.intervalIds){const option=this.intervalOptions.find((o)=>o.id===intervalId);values.push(`${searchItem.description}: ${option.description}`);}
break;}
case"dateFilter":{type="filter";const periodDescription=this._getDateFilterDomain(searchItem,activeItem.generatorIds,"description");values.push(`${searchItem.description}: ${periodDescription}`);break;}
default:{type=searchItem.type;values.push(searchItem.description);}}}
const facet={groupId:group.id,type:type,values,separator:type==="groupBy"?">":this.env._t("or"),};if(type==="field"){facet.title=title;}else{facet.icon=FACET_ICONS[type];}
facets.push(facet);}
for(const{facetLabel,groupId}of this.getDomainParts()){const type="filter";facets.push({groupId,type,values:[facetLabel],icon:FACET_ICONS[type],});}
return facets;}
_getFieldDomain(field,autocompleteValues){const domains=autocompleteValues.map(({label,value,operator})=>{let domain;if(field.filterDomain){domain=new Domain(field.filterDomain).toList({self:label.trim(),raw_value:value,});}else{domain=[[field.fieldName,operator,value]];}
return new Domain(domain);});return Domain.or(domains);}
_getFilterDomain(excludedFilterId){const domain=[];function addCondition(fieldName,valueMap){const ids=[];for(const[valueId,value]of valueMap){if(value.checked){ids.push(valueId);}}
if(ids.length){domain.push([fieldName,"in",ids]);}}
for(const filter of this.filters){if(filter.id===excludedFilterId){continue;}
const{fieldName,groups,values}=filter;if(groups){for(const group of groups.values()){addCondition(fieldName,group.values);}}else{addCondition(fieldName,values);}}
return domain;}
_getGroupBy(){const groups=this._getGroups();const groupBys=[];for(const group of groups){for(const activeItem of group.activeItems){const activeItemGroupBys=this._getSearchItemGroupBys(activeItem);if(activeItemGroupBys){groupBys.push(...activeItemGroupBys);}}}
const groupBy=groupBys.length?groupBys:this.globalGroupBy.slice();return typeof groupBy==="string"?[groupBy]:groupBy;}
_getGroupDomain(filter){const{fieldName,groups,enableCounters}=filter;const{type:fieldType}=this.searchViewFields[fieldName];if(!enableCounters||!groups){return{many2one:[],many2many:{},}[fieldType];}
let groupDomain=null;if(fieldType==="many2one"){for(const group of groups.values()){const valueIds=[];let active=false;for(const[valueId,value]of group.values){const{checked}=value;valueIds.push(valueId);if(checked){active=true;}}
if(active){if(groupDomain){groupDomain=[[0,"=",1]];break;}else{groupDomain=[[fieldName,"in",valueIds]];}}}}else if(fieldType==="many2many"){const checkedValueIds=new Map();groups.forEach(({values},groupId)=>{values.forEach(({checked},valueId)=>{if(checked){if(!checkedValueIds.has(groupId)){checkedValueIds.set(groupId,[]);}
checkedValueIds.get(groupId).push(valueId);}});});groupDomain={};for(const[gId,ids]of checkedValueIds.entries()){for(const groupId of groups.keys()){if(gId!==groupId){const key=JSON.stringify(groupId);if(!groupDomain[key]){groupDomain[key]=[];}
groupDomain[key].push([fieldName,"in",ids]);}}}}
return groupDomain;}
_getGroups(){const preGroups=[];for(const queryElem of this.query){const{searchItemId}=queryElem;const{groupId}=this.searchItems[searchItemId];let preGroup=preGroups.find((group)=>group.id===groupId);if(!preGroup){preGroup={id:groupId,queryElements:[]};preGroups.push(preGroup);}
preGroup.queryElements.push(queryElem);}
const groups=[];for(const preGroup of preGroups){const{queryElements,id}=preGroup;const activeItems=[];for(const queryElem of queryElements){const{searchItemId}=queryElem;let activeItem=activeItems.find(({searchItemId:id})=>id===searchItemId);if("generatorId"in queryElem){if(!activeItem){activeItem={searchItemId,generatorIds:[]};activeItems.push(activeItem);}
activeItem.generatorIds.push(queryElem.generatorId);}else if("intervalId"in queryElem){if(!activeItem){activeItem={searchItemId,intervalIds:[]};activeItems.push(activeItem);}
activeItem.intervalIds.push(queryElem.intervalId);}else if("autocompleteValue"in queryElem){if(!activeItem){activeItem={searchItemId,autocompletValues:[]};activeItems.push(activeItem);}
activeItem.autocompletValues.push(queryElem.autocompleteValue);}else{if(!activeItem){activeItem={searchItemId};activeItems.push(activeItem);}}}
for(const activeItem of activeItems){if("intervalIds"in activeItem){activeItem.intervalIds.sort((g1,g2)=>rankInterval(g1)-rankInterval(g2));}}
groups.push({id,activeItems});}
return groups;}
_getIrFilterDescription(params={}){const{description,isDefault,isShared}=params;const fns=this.env.__getContext__.callbacks;const localContext=Object.assign({},...fns.map((fn)=>fn()));const gs=this.env.__getOrderBy__.callbacks;let localOrderBy;if(gs.length){localOrderBy=gs.flatMap((g)=>g());}
const context=makeContext([this._getContext(),localContext]);const userContext=this.userService.context;for(const key in context){if(key in userContext||/^search(panel)?_default_/.test(key)){delete context[key];}}
const domain=this._getDomain({raw:true,withGlobal:false}).toString();const groupBys=this._getGroupBy();const comparison=this.getFullComparison();const orderBy=localOrderBy||this._getOrderBy();const userId=isShared?false:this.userService.userId;const preFavorite={description,isDefault,domain,context,groupBys,orderBy,userId,};const irFilter={name:description,action_id:this.env.config.actionId,model_id:this.resModel,domain,is_default:isDefault,sort:JSON.stringify(orderBy.map((o)=>`${o.name}${o.asc === false ? " desc" : ""}`)),user_id:userId,context:{group_by:groupBys,...context},};if(comparison){preFavorite.comparison=comparison;irFilter.context.comparison=comparison;}
return{preFavorite,irFilter};}
_getOrderBy(){const groups=this._getGroups();let orderBy=[];for(const group of groups){for(const activeItem of group.activeItems){const{searchItemId}=activeItem;const searchItem=this.searchItems[searchItemId];if(searchItem.type==="favorite"){orderBy.push(...searchItem.orderBy);}}}
return orderBy.length?orderBy:this.globalOrderBy;}
_getSearchItemContext(activeItem){const{searchItemId}=activeItem;const searchItem=this.searchItems[searchItemId];switch(searchItem.type){case"field":{let context={};if(searchItem.context){try{const self=activeItem.autocompletValues.map((autocompleValue)=>autocompleValue.value);context=evaluateExpr(searchItem.context,{self});if(typeof context!=="object"){throw Error();}}catch(error){throw new Error(`${this.env._t("Failed to evaluate the context")} "${
                                searchItem.context
                            }".\n${error.message}`);}}
if(searchItem.isDefault&&searchItem.fieldType==="many2one"){context[`default_${searchItem.fieldName}`]=searchItem.defaultAutocompleteValue.value;}
return context;}
case"favorite":case"filter":{return makeContext([searchItem.context&&deepCopy(searchItem.context)]);}
default:{return null;}}}
_getSearchItemDomain(activeItem){const{searchItemId}=activeItem;const searchItem=this.searchItems[searchItemId];switch(searchItem.type){case"field":{return this._getFieldDomain(searchItem,activeItem.autocompletValues);}
case"dateFilter":{const{dateFilterId}=this._getActiveComparison()||{};if(this.searchMenuTypes.has("comparison")&&dateFilterId===searchItemId){return new Domain([]);}
return this._getDateFilterDomain(searchItem,activeItem.generatorIds);}
case"filter":case"favorite":{return searchItem.domain;}
default:{return null;}}}
_getSearchItemGroupBys(activeItem){const{searchItemId}=activeItem;const searchItem=this.searchItems[searchItemId];switch(searchItem.type){case"dateGroupBy":{const{fieldName}=searchItem;return activeItem.intervalIds.map((intervalId)=>`${fieldName}:${intervalId}`);}
case"groupBy":{return[searchItem.fieldName];}
case"favorite":{return searchItem.groupBys;}
default:{return null;}}}
_getSelectedGeneratorIds(dateFilterId){const selectedOptionIds=[];for(const queryElem of this.query){if(queryElem.searchItemId===dateFilterId&&"generatorId"in queryElem){selectedOptionIds.push(queryElem.generatorId);}}
return selectedOptionIds;}
_getSearchPanelDomain(){return Domain.and([this._getCategoryDomain(),this._getFilterDomain()]);}
_importState(state){execute(arraytoMap,state,this);}
_irFilterToFavorite(irFilter){let userId=false;if(Array.isArray(irFilter.user_id)){userId=irFilter.user_id[0];}
const groupNumber=userId?FAVORITE_PRIVATE_GROUP:FAVORITE_SHARED_GROUP;const context=evaluateExpr(irFilter.context,this.userService.context);let groupBys=[];if(context.group_by){groupBys=context.group_by;delete context.group_by;}
let comparison;if(context.comparison){comparison=context.comparison;if(typeof comparison.range==="string"){comparison.range=new Domain(comparison.range).toList();}
if(typeof comparison.comparisonRange==="string"){comparison.comparisonRange=new Domain(comparison.comparisonRange).toList();}
delete context.comparison;}
let sort;try{sort=JSON.parse(irFilter.sort);}catch(err){if(err instanceof SyntaxError){sort=[];}else{throw err;}}
const orderBy=sort.map((order)=>{let fieldName;let asc;const sqlNotation=order.split(" ");if(sqlNotation.length>1){fieldName=sqlNotation[0];asc=sqlNotation[1]==="asc";}else{fieldName=order[0]==="-"?order.slice(1):order;asc=order[0]==="-"?false:true;}
return{asc:asc,name:fieldName,};});const favorite={context,description:irFilter.name,domain:irFilter.domain,groupBys,groupNumber,orderBy,removable:true,serverSideId:irFilter.id,type:"favorite",userId,};if(irFilter.is_default){favorite.isDefault=irFilter.is_default;}
if(comparison){favorite.comparison=comparison;}
return favorite;}
async _notify(){if(this.blockNotification){return;}
this._reset();await this._reloadSections();this.trigger("update");}
async _reloadSections(){this.blockNotification=true;const searchDomain=this._getDomain({withSearchPanel:false});const searchDomainChanged=this.searchPanelInfo.shouldReload||JSON.stringify(this.searchDomain)!==JSON.stringify(searchDomain);this.searchDomain=searchDomain;const toFetch=(section)=>section.enableCounters||(searchDomainChanged&&!section.expand);const categoriesToFetch=this.categories.filter(toFetch);const filtersToFetch=this.filters.filter(toFetch);if(searchDomainChanged||Boolean(categoriesToFetch.length+filtersToFetch.length)){if(this.display.searchPanel){this.sectionsPromise=this._fetchSections(categoriesToFetch,filtersToFetch);if(this._shouldWaitForData(searchDomainChanged)){await this.sectionsPromise;}}
this.searchPanelInfo.shouldReload=!this.display.searchPanel;}
this.blockNotification=false;}
_reset(){delete this._comparison;this._context=null;this._domain=null;this._groupBy=null;this._orderBy=null;}
_shouldWaitForData(searchDomainChanged){if(this.categories.length&&this.filters.some((filter)=>filter.domain!=="[]")){return true;}
if(!this.searchDomain.length){return false;}
return[...this.sections.values()].some((section)=>!section.expand&&searchDomainChanged);}
__legacyParseSearchPanelArchAnyway(searchViewDescription,searchViewFields){if(this.searchPanelInfo){return;}
const parser=new SearchArchParser(searchViewDescription,searchViewFields);const{searchPanelInfo}=parser.parse();this.searchPanelInfo={...searchPanelInfo,loaded:false,shouldReload:false};}}
return __exports;});;

/* /web/static/src/search/search_panel/search_panel.js */
odoo.define('@web/search/search_panel/search_panel',async function(require){'use strict';let __exports={};const{useBus}=require("@web/core/utils/hooks");const{Component,onMounted,onWillUpdateProps,onWillStart,useRef,useState}=require("@odoo/owl");const isFilter=(s)=>s.type==="filter";const isActiveCategory=(s)=>s.type==="category"&&s.activeValueId;const nameOfCheckedValues=(values)=>{const names=[];for(const[,value]of values){if(value.checked){names.push(value.display_name);}}
return names;};const SearchPanel=__exports.SearchPanel=class SearchPanel extends Component{setup(){this.state=useState({active:{},expanded:{},showMobileSearch:false,});this.root=useRef("root");this.scrollTop=0;this.hasImportedState=false;this.importState(this.props.importedState);useBus(this.env.searchModel,"update",async()=>{await this.env.searchModel.sectionsPromise;this.updateActiveValues();this.render();});onWillStart(async()=>{await this.env.searchModel.sectionsPromise;this.expandDefaultValue();this.updateActiveValues();});onWillUpdateProps(async()=>{await this.env.searchModel.sectionsPromise;this.updateActiveValues();});onMounted(()=>{this.updateGroupHeadersChecked();if(this.hasImportedState){this.root.el.scroll({top:this.scrollTop});}});}
get sections(){return this.env.searchModel.getSections((s)=>!s.empty);}
exportState(){const exported={expanded:this.state.expanded,scrollTop:this.root.el.scrollTop,};return JSON.stringify(exported);}
importState(stringifiedState){this.hasImportedState=Boolean(stringifiedState);if(this.hasImportedState){const state=JSON.parse(stringifiedState);this.state.expanded=state.expanded;this.scrollTop=state.scrollTop;}}
expandDefaultValue(){if(this.hasImportedState){return;}
const categories=this.env.searchModel.getSections((s)=>s.type==="category");for(const category of categories){this.state.expanded[category.id]={};if(category.activeValueId){const ancestorIds=this.getAncestorValueIds(category,category.activeValueId);for(const ancestorId of ancestorIds){this.state.expanded[category.id][ancestorId]=true;}}}}
getAncestorValueIds(category,categoryValueId){const{parentId}=category.values.get(categoryValueId);return parentId?[...this.getAncestorValueIds(category,parentId),parentId]:[];}
getCategorySelection(){const activeCategories=this.env.searchModel.getSections(isActiveCategory);const selection=[];for(const category of activeCategories){const parentIds=this.getAncestorValueIds(category,category.activeValueId);const orderedCategoryNames=[...parentIds,category.activeValueId].map((valueId)=>category.values.get(valueId).display_name);selection.push({values:orderedCategoryNames,icon:category.icon,color:category.color,});}
return selection;}
getFilterSelection(){const filters=this.env.searchModel.getSections(isFilter);const selection=[];for(const{groups,values,icon,color}of filters){let filterValues;if(groups){filterValues=Object.keys(groups).map((groupId)=>nameOfCheckedValues(groups[groupId].values)).flat();}else if(values){filterValues=nameOfCheckedValues(values);}
if(filterValues.length){selection.push({values:filterValues,icon,color});}}
return selection;}
async toggleCategory(category,value){if(value.childrenIds.length){const categoryState=this.state.expanded[category.id];if(categoryState[value.id]&&category.activeValueId===value.id){delete categoryState[value.id];}else{categoryState[value.id]=true;}}
if(category.activeValueId!==value.id){this.env.searchModel.toggleCategoryValue(category.id,value.id);}}
toggleFilterGroup(filterId,{values}){const valueIds=[];const checked=[...values.values()].every((value)=>this.state.active[filterId][value.id]);values.forEach(({id})=>{valueIds.push(id);this.state.active[filterId][id]=!checked;});this.env.searchModel.toggleFilterValues(filterId,valueIds,!checked);}
toggleFilterValue(filterId,valueId,{currentTarget}){this.state.active[filterId][valueId]=currentTarget.checked;this.updateGroupHeadersChecked();this.env.searchModel.toggleFilterValues(filterId,[valueId]);}
updateActiveValues(){for(const section of this.sections){if(section.type==="category"){this.state.active[section.id]=section.activeValueId;}else{this.state.active[section.id]={};if(section.groups){for(const group of section.groups.values()){for(const value of group.values.values()){this.state.active[section.id][value.id]=value.checked;}}}
if(section&&section.values){for(const value of section.values.values()){this.state.active[section.id][value.id]=value.checked;}}}}}
updateGroupHeadersChecked(){const groups=this.root.el.querySelectorAll(":scope .o_search_panel_filter_group");for(const group of groups){const header=group.querySelector(":scope .o_search_panel_group_header input");const vals=[...group.querySelectorAll(":scope .o_search_panel_filter_value input")];header.checked=false;header.indeterminate=false;if(vals.every((v)=>v.checked)){header.checked=true;}else if(vals.some((v)=>v.checked)){header.indeterminate=true;}}}}
SearchPanel.props={importedState:{type:String,optional:true},};SearchPanel.subTemplates={category:"web.SearchPanel.Category",filtersGroup:"web.SearchPanel.FiltersGroup",};SearchPanel.template="web.SearchPanel";return __exports;});;

/* /web/static/src/search/utils/dates.js */
odoo.define('@web/search/utils/dates',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{Domain}=require("@web/core/domain");const{serializeDate,serializeDateTime}=require("@web/core/l10n/dates");const{localization}=require("@web/core/l10n/localization");const DEFAULT_PERIOD=__exports.DEFAULT_PERIOD="this_month";const QUARTERS=__exports.QUARTERS={1:{description:_lt("Q1"),coveredMonths:[1,2,3]},2:{description:_lt("Q2"),coveredMonths:[4,5,6]},3:{description:_lt("Q3"),coveredMonths:[7,8,9]},4:{description:_lt("Q4"),coveredMonths:[10,11,12]},};const MONTH_OPTIONS=__exports.MONTH_OPTIONS={this_month:{id:"this_month",groupNumber:1,format:"MMMM",plusParam:{},granularity:"month",},last_month:{id:"last_month",groupNumber:1,format:"MMMM",plusParam:{months:-1},granularity:"month",},antepenultimate_month:{id:"antepenultimate_month",groupNumber:1,format:"MMMM",plusParam:{months:-2},granularity:"month",},};const QUARTER_OPTIONS=__exports.QUARTER_OPTIONS={fourth_quarter:{id:"fourth_quarter",groupNumber:1,description:QUARTERS[4].description,setParam:{quarter:4},granularity:"quarter",},third_quarter:{id:"third_quarter",groupNumber:1,description:QUARTERS[3].description,setParam:{quarter:3},granularity:"quarter",},second_quarter:{id:"second_quarter",groupNumber:1,description:QUARTERS[2].description,setParam:{quarter:2},granularity:"quarter",},first_quarter:{id:"first_quarter",groupNumber:1,description:QUARTERS[1].description,setParam:{quarter:1},granularity:"quarter",},};const YEAR_OPTIONS=__exports.YEAR_OPTIONS={this_year:{id:"this_year",groupNumber:2,format:"yyyy",plusParam:{},granularity:"year",},last_year:{id:"last_year",groupNumber:2,format:"yyyy",plusParam:{years:-1},granularity:"year",},antepenultimate_year:{id:"antepenultimate_year",groupNumber:2,format:"yyyy",plusParam:{years:-2},granularity:"year",},};const PERIOD_OPTIONS=__exports.PERIOD_OPTIONS=Object.assign({},MONTH_OPTIONS,QUARTER_OPTIONS,YEAR_OPTIONS);const DEFAULT_INTERVAL=__exports.DEFAULT_INTERVAL="month";const INTERVAL_OPTIONS=__exports.INTERVAL_OPTIONS={year:{description:_lt("Year"),id:"year",groupNumber:1},quarter:{description:_lt("Quarter"),id:"quarter",groupNumber:1},month:{description:_lt("Month"),id:"month",groupNumber:1},week:{description:_lt("Week"),id:"week",groupNumber:1},day:{description:_lt("Day"),id:"day",groupNumber:1},};const COMPARISON_OPTIONS=__exports.COMPARISON_OPTIONS={previous_period:{description:_lt("Previous Period"),id:"previous_period",},previous_year:{description:_lt("Previous Year"),id:"previous_year",plusParam:{years:-1},},};const PER_YEAR=__exports.PER_YEAR={year:1,quarter:4,month:12,};__exports.constructDateDomain=constructDateDomain;function constructDateDomain(referenceMoment,fieldName,fieldType,selectedOptionIds,comparisonOptionId){let plusParam;let selectedOptions;if(comparisonOptionId){[plusParam,selectedOptions]=getComparisonParams(referenceMoment,selectedOptionIds,comparisonOptionId);}else{selectedOptions=getSelectedOptions(referenceMoment,selectedOptionIds);}
const yearOptions=selectedOptions.year;const otherOptions=[...(selectedOptions.quarter||[]),...(selectedOptions.month||[])];sortPeriodOptions(yearOptions);sortPeriodOptions(otherOptions);const ranges=[];for(const yearOption of yearOptions){const constructRangeParams={referenceMoment,fieldName,fieldType,plusParam,};if(otherOptions.length){for(const option of otherOptions){const setParam=Object.assign({},yearOption.setParam,option?option.setParam:{});const{granularity}=option;const range=constructDateRange(Object.assign({granularity,setParam},constructRangeParams));ranges.push(range);}}else{const{granularity,setParam}=yearOption;const range=constructDateRange(Object.assign({granularity,setParam},constructRangeParams));ranges.push(range);}}
const domain=Domain.combine(ranges.map((range)=>range.domain),"OR");const description=ranges.map((range)=>range.description).join("/");return{domain,description};}
__exports.constructDateRange=constructDateRange;function constructDateRange(params){const{referenceMoment,fieldName,fieldType,granularity,setParam,plusParam}=params;if("quarter"in setParam){setParam.month=QUARTERS[setParam.quarter].coveredMonths[0];delete setParam.quarter;}
const date=referenceMoment.set(setParam).plus(plusParam||{});const leftDate=date.startOf(granularity);const rightDate=date.endOf(granularity);let leftBound;let rightBound;if(fieldType==="date"){leftBound=serializeDate(leftDate);rightBound=serializeDate(rightDate);}else{leftBound=serializeDateTime(leftDate);rightBound=serializeDateTime(rightDate);}
const domain=new Domain(["&",[fieldName,">=",leftBound],[fieldName,"<=",rightBound]]);const descriptions=[date.toFormat("yyyy")];const method=localization.direction==="rtl"?"push":"unshift";if(granularity==="month"){descriptions[method](date.toFormat("MMMM"));}else if(granularity==="quarter"){const quarter=date.quarter;descriptions[method](QUARTERS[quarter].description.toString());}
const description=descriptions.join(" ");return{domain,description};}
__exports.getComparisonOptions=getComparisonOptions;function getComparisonOptions(){return getOptionsWithDescriptions(COMPARISON_OPTIONS);}
__exports.getComparisonParams=getComparisonParams;function getComparisonParams(referenceMoment,selectedOptionIds,comparisonOptionId){const comparisonOption=COMPARISON_OPTIONS[comparisonOptionId];const selectedOptions=getSelectedOptions(referenceMoment,selectedOptionIds);if(comparisonOption.plusParam){return[comparisonOption.plusParam,selectedOptions];}
const plusParam={};let globalGranularity="year";if(selectedOptions.month){globalGranularity="month";}else if(selectedOptions.quarter){globalGranularity="quarter";}
const granularityFactor=PER_YEAR[globalGranularity];const years=selectedOptions.year.map((o)=>o.setParam.year);const yearMin=Math.min(...years);const yearMax=Math.max(...years);let optionMin=0;let optionMax=0;if(selectedOptions.quarter){const quarters=selectedOptions.quarter.map((o)=>o.setParam.quarter);if(globalGranularity==="month"){delete selectedOptions.quarter;for(const quarter of quarters){for(const month of QUARTERS[quarter].coveredMonths){const monthOption=selectedOptions.month.find((o)=>o.setParam.month===month);if(!monthOption){selectedOptions.month.push({setParam:{month},granularity:"month",});}}}}else{optionMin=Math.min(...quarters);optionMax=Math.max(...quarters);}}
if(selectedOptions.month){const months=selectedOptions.month.map((o)=>o.setParam.month);optionMin=Math.min(...months);optionMax=Math.max(...months);}
const num=-1+granularityFactor*(yearMin-yearMax)+optionMin-optionMax;const key=globalGranularity==="year"?"years":globalGranularity==="month"?"months":"quarters";plusParam[key]=num;return[plusParam,selectedOptions];}
__exports.getIntervalOptions=getIntervalOptions;function getIntervalOptions(){return getOptionsWithDescriptions(INTERVAL_OPTIONS);}
__exports.getPeriodOptions=getPeriodOptions;function getPeriodOptions(referenceMoment){const options=[];const originalOptions=Object.values(PERIOD_OPTIONS);for(const option of originalOptions){const{id,groupNumber}=option;let description;let defaultYear;switch(option.granularity){case"quarter":description=option.description.toString();defaultYear=referenceMoment.set(option.setParam).year;break;case"month":case"year":{const date=referenceMoment.plus(option.plusParam);description=date.toFormat(option.format);defaultYear=date.year;break;}}
const setParam=getSetParam(option,referenceMoment);options.push({id,groupNumber,description,defaultYear,setParam});}
const periodOptions=[];for(const option of options){const{id,groupNumber,description,defaultYear}=option;const yearOption=options.find((o)=>o.setParam&&o.setParam.year===defaultYear);periodOptions.push({id,groupNumber,description,defaultYearId:yearOption.id,});}
return periodOptions;}
__exports.getOptionsWithDescriptions=getOptionsWithDescriptions;function getOptionsWithDescriptions(OPTIONS){const options=[];for(const option of Object.values(OPTIONS)){options.push(Object.assign({},option,{description:option.description.toString()}));}
return options;}
__exports.getSelectedOptions=getSelectedOptions;function getSelectedOptions(referenceMoment,selectedOptionIds){const selectedOptions={year:[]};for(const optionId of selectedOptionIds){const option=PERIOD_OPTIONS[optionId];const setParam=getSetParam(option,referenceMoment);const granularity=option.granularity;if(!selectedOptions[granularity]){selectedOptions[granularity]=[];}
selectedOptions[granularity].push({granularity,setParam});}
return selectedOptions;}
__exports.getSetParam=getSetParam;function getSetParam(periodOption,referenceMoment){if(periodOption.granularity==="quarter"){return periodOption.setParam;}
const date=referenceMoment.plus(periodOption.plusParam);const granularity=periodOption.granularity;const setParam={[granularity]:date[granularity]};return setParam;}
__exports.rankInterval=rankInterval;function rankInterval(intervalOptionId){return Object.keys(INTERVAL_OPTIONS).indexOf(intervalOptionId);}
__exports.sortPeriodOptions=sortPeriodOptions;function sortPeriodOptions(options){options.sort((o1,o2)=>{var _a,_b;const granularity1=o1.granularity;const granularity2=o2.granularity;if(granularity1===granularity2){return(((_a=o1.setParam[granularity1])!==null&&_a!==void 0?_a:0)-
((_b=o2.setParam[granularity1])!==null&&_b!==void 0?_b:0));}
return granularity1<granularity2?-1:1;});}
__exports.yearSelected=yearSelected;function yearSelected(selectedOptionIds){return selectedOptionIds.some((optionId)=>Object.keys(YEAR_OPTIONS).includes(optionId));}
return __exports;});;

/* /web/static/src/search/utils/group_by.js */
odoo.define('@web/search/utils/group_by',async function(require){'use strict';let __exports={};const{DEFAULT_INTERVAL,INTERVAL_OPTIONS}=require("@web/search/utils/dates");function errorMsg(descr){return`Invalid groupBy description: ${descr}`;}
__exports.getGroupBy=getGroupBy;function getGroupBy(descr,fields){let fieldName;let interval;let spec;[fieldName,interval]=descr.split(":");if(!fieldName){throw Error();}
if(fields){if(!fields[fieldName]){throw Error(errorMsg(descr));}
const fieldType=fields[fieldName].type;if(["date","datetime"].includes(fieldType)){if(!interval){interval=DEFAULT_INTERVAL;}else if(!Object.keys(INTERVAL_OPTIONS).includes(interval)){throw Error(errorMsg(descr));}
spec=`${fieldName}:${interval}`;}else if(interval){throw Error(errorMsg(descr));}else{spec=fieldName;interval=null;}}else{if(interval){if(!Object.keys(INTERVAL_OPTIONS).includes(interval)){throw Error(errorMsg(descr));}
spec=`${fieldName}:${interval}`;}else{spec=fieldName;interval=null;}}
return{fieldName,interval,spec,toJSON(){return spec;},};}
return __exports;});;

/* /web/static/src/search/utils/misc.js */
odoo.define('@web/search/utils/misc',async function(require){'use strict';let __exports={};const FACET_ICONS=__exports.FACET_ICONS={filter:"fa fa-filter",groupBy:"oi oi-group",favorite:"fa fa-star",comparison:"fa fa-adjust",};const GROUPABLE_TYPES=__exports.GROUPABLE_TYPES=["boolean","char","date","datetime","integer","many2one","many2many","selection",];return __exports;});;

/* /web/static/src/search/with_search/with_search.js */
odoo.define('@web/search/with_search/with_search',async function(require){'use strict';let __exports={};const{useBus,useService}=require("@web/core/utils/hooks");const{SearchModel}=require("@web/search/search_model");const{CallbackRecorder,useSetupAction}=require("@web/webclient/actions/action_hook");const{Component,onWillStart,onWillUpdateProps,toRaw,useSubEnv}=require("@odoo/owl");const SEARCH_KEYS=__exports.SEARCH_KEYS=["comparison","context","domain","groupBy","orderBy"];const WithSearch=__exports.WithSearch=class WithSearch extends Component{setup(){if(!this.env.__getContext__){useSubEnv({__getContext__:new CallbackRecorder()});}
if(!this.env.__getOrderBy__){useSubEnv({__getOrderBy__:new CallbackRecorder()});}
const SearchModelClass=this.props.SearchModel||SearchModel;this.searchModel=new SearchModelClass(this.env,{user:useService("user"),orm:useService("orm"),view:useService("view"),});useSubEnv({searchModel:this.searchModel});useBus(this.searchModel,"update",this.render);useSetupAction({getGlobalState:()=>{return{searchModel:JSON.stringify(this.searchModel.exportState()),};},});onWillStart(async()=>{const config={...toRaw(this.props)};if(config.globalState&&config.globalState.searchModel){config.state=JSON.parse(config.globalState.searchModel);delete config.globalState;}
await this.searchModel.load(config);});onWillUpdateProps(async(nextProps)=>{const config={};for(const key of SEARCH_KEYS){if(nextProps[key]!==undefined){config[key]=nextProps[key];}}
await this.searchModel.reload(config);});}}
WithSearch.template="web.WithSearch";WithSearch.props={slots:Object,SearchModel:{type:Function,optional:true},resModel:String,globalState:{type:Object,optional:true},display:{type:Object,optional:true},comparison:{validate:()=>true,optional:true},context:{type:Object,optional:true},domain:{type:Array,element:[String,Array],optional:true},groupBy:{type:Array,element:String,optional:true},orderBy:{type:Array,element:Object,optional:true},searchViewArch:{type:String,optional:true},searchViewFields:{type:Object,optional:true},searchViewId:{type:[Number,Boolean],optional:true},irFilters:{type:Array,element:Object,optional:true},loadIrFilters:{type:Boolean,optional:true},activateFavorite:{type:Boolean,optional:true},dynamicFilters:{type:Array,element:Object,optional:true},hideCustomGroupBy:{type:Boolean,optional:true},searchMenuTypes:{type:Array,element:String,optional:true},};return __exports;});;

/* /web/static/src/views/basic_relational_model.js */
odoo.define('@web/views/basic_relational_model',async function(require){'use strict';let __exports={};const{makeContext}=require("@web/core/context");const{Domain}=require("@web/core/domain");const{WarningDialog}=require("@web/core/errors/error_dialogs");const{deserializeDate,deserializeDateTime}=require("@web/core/l10n/dates");const{KeepLast}=require("@web/core/utils/concurrency");const{escape}=require("@web/core/utils/strings");const{mapDoActionOptionAPI}=require("@web/legacy/backend_utils");const{Model}=require("@web/views/model");const{evalDomain}=require("@web/views/utils");const{mapWowlValueToLegacy,mapViews,mapActiveFieldsToFieldsInfo,}=require("@web/views/legacy_utils");const{localization}=require("@web/core/l10n/localization");const BasicModel=require("web.BasicModel");const Context=require("web.Context");const{markup,toRaw}=require("@odoo/owl");const DEFAULT_HANDLE_FIELD="sequence";let nextId=0;class DataPoint{constructor(model,params,state={}){this.id=`datapoint_${nextId++}`;this.model=model;let info;if(params.__bm_load_params__){this.__bm_load_params__=params.__bm_load_params__;info=this.__bm_load_params__;this.context=info.context;}else if(params.handle){this.__bm_handle__=params.handle;info=this.model.__bm__.get(this.__bm_handle__);this.context=this.model.__bm__.localData[this.__bm_handle__].getContext();}else{throw new Error("Datapoint needs load params or handle");}
this.resModel=info.model||info.modelName;this.fields=info.fields;this.activeFields={};this.__syncParent=params.__syncParent||(()=>{});this.__viewType=params.viewType||info.viewType;const fieldsInfo=(info.fieldsInfo&&info.fieldsInfo[this.__viewType])||{};for(const[name,descr]of Object.entries(fieldsInfo)){this.activeFields[name]=descr.__WOWL_FIELD_DESCR__||{};}
this.setup(params,state);}
setup(){}
get evalContext(){const datapoint=this.model.__bm__.localData[this.__bm_handle__];return this.model.__bm__._getLazyEvalContext(datapoint);}
get fieldNames(){return Object.keys(this.activeFields);}
exportState(){return{};}
async load(){throw new Error("load must be implemented");}}
const Record=__exports.Record=class Record extends DataPoint{setup(params,state){this.data={};this._invalidFields=new Set();this.preloadedData={};this.selected=false;this.isInQuickCreation=params.isInQuickCreation||false;this._onChangePromise=Promise.resolve({});this._savePromise=Promise.resolve();this._domains={};this._closeInvalidFieldsNotification=()=>{};this._requiredFields={};for(const[fieldName,activeField]of Object.entries(this.activeFields)){const{modifiers}=activeField;if(modifiers&&modifiers.required){this._requiredFields[fieldName]=modifiers.required;}}
if(!this.resId&&this.__viewType==="form"){this.mode="edit";}else{this.mode=params.mode||state.mode||"readonly";}
this._onWillSwitchMode=params.onRecordWillSwitchMode||(()=>{});if(this.__bm_handle__){this.__syncData();}}
get canBeAbandoned(){return this.model.__bm__.canBeAbandoned(this.__bm_handle__);}
get isActive(){if("active"in this.activeFields){return this.data.active;}else if("x_active"in this.activeFields){return this.data.x_active;}
return true;}
get isDirty(){return this.model.__bm__.isDirty(this.__bm_handle__);}
get dirtyFields(){const changes=this.model.__bm__.localData[this.__bm_handle__]._changes;if(!changes){return[];}
return Object.keys(changes).map((change)=>this.activeFields[change]);}
get translatableFields(){if(!localization.multiLang){return[];}
return Object.values(this.fields).filter((f)=>f.translate).map((f)=>this.activeFields[f.name]);}
get dirtyTranslatableFields(){return this.translatableFields.filter((f)=>this.dirtyFields.includes(f));}
get isInEdition(){return this.mode==="edit";}
get isNew(){return this.model.__bm__.isNew(this.__bm_handle__);}
get isVirtual(){return!this.resId;}
get isValid(){return!this._invalidFields.size;}
get resId(){if(this.__bm_handle__){const resId=this.model.__bm__.localData[this.__bm_handle__].res_id;if(typeof resId==="string"){return false;}
return resId;}else{return this.__bm_load_params__.res_id;}}
get resIds(){return this.model.__bm__.localData[this.__bm_handle__].res_ids;}
async askChanges(){const proms=[];this.model.env.bus.trigger("RELATIONAL_MODEL:NEED_LOCAL_CHANGES",{proms});return Promise.all([...proms,this._updatePromise]);}
async checkValidity(urgent){if(!urgent){await this.askChanges();}
for(const fieldName in this.activeFields){const fieldType=this.fields[fieldName].type;const activeField=this.activeFields[fieldName];if(fieldName in this._requiredFields){if(!evalDomain(this._requiredFields[fieldName],this.evalContext)||(activeField&&activeField.alwaysInvisible)){this._removeInvalidFields([fieldName]);continue;}}
const isSet=activeField&&activeField.FieldComponent&&activeField.FieldComponent.isSet;if(this.isRequired(fieldName)&&isSet&&!isSet(this.data[fieldName])){this.setInvalidField(fieldName);continue;}
switch(fieldType){case"boolean":case"float":case"integer":case"monetary":continue;case"properties":if(!this.checkPropertiesValidity(fieldName)){this._setInvalidField(fieldName);}
break;case"one2many":case"many2many":if(!(await this.checkX2ManyValidity(fieldName,urgent))){this._setInvalidField(fieldName);}
break;default:if(!isSet&&this.isRequired(fieldName)&&!this.data[fieldName]){this._setInvalidField(fieldName);}}}
return!this._invalidFields.size;}
openInvalidFieldsNotification(){if(this._invalidFields.size){const invalidFields=[...this._invalidFields].map((fieldName)=>{return`<li>${escape(this.fields[fieldName].string || fieldName)}</li>`;},this);this._closeInvalidFieldsNotification=this.model.notificationService.add(markup(`<ul>${invalidFields.join("")}</ul>`),{title:this.model.env._t("Invalid fields: "),type:"danger",});}}
async switchMode(mode,options){if(this.mode===mode){return true;}
const canSwitch=await this._onWillSwitchMode(this,mode,options);if(canSwitch===false){return false;}
if(mode==="edit"){await this.model.__bm__.mutex.getUnlockedDef();}
if(mode==="readonly"){for(const fieldName in this.activeFields){if(["one2many","many2many"].includes(this.fields[fieldName].type)){const editedRecord=this.data[fieldName]&&this.data[fieldName].editedRecord;if(editedRecord){editedRecord.switchMode("readonly");}}}}
this.mode=mode;this.model.notify();return true;}
isReadonly(fieldName){const{readonly}=this.activeFields[fieldName].modifiers||{};return evalDomain(readonly,this.evalContext);}
isRequired(fieldName){const{required}=this.activeFields[fieldName].modifiers||{};return evalDomain(required,this.evalContext);}
async checkX2ManyValidity(fieldName,urgent=false){const list=this.data[fieldName];const record=list.editedRecord;if(record&&!(await record.checkValidity(urgent))){if(record.canBeAbandoned&&!record.isDirty){list.abandonRecord(record.id);}else{return false;}}
return true;}
checkPropertiesValidity(fieldName){const value=this.data[fieldName];if(!value){return true;}
return value.every((propertyDefinition)=>!propertyDefinition.id||(propertyDefinition.string&&propertyDefinition.string.length));}
_setInvalidField(fieldName){this._invalidFields.add(fieldName);this.model.notify();}
setInvalidField(fieldName){const bm=this.model.__bm__;bm.setDirty(this.__bm_handle__);this._setInvalidField(fieldName);}
isInvalid(fieldName){return this._invalidFields.has(fieldName);}
async load(params={},options={}){if(!this.__bm_handle__){this.__bm_handle__=await this.model.__bm__.load({...this.__bm_load_params__,viewType:this.__viewType,});}else{this.__bm_handle__=await this.model.__bm__.reload(this.__bm_handle__,{viewType:this.__viewType,keepChanges:!!options.keepChanges,});}
this.__syncData();this._invalidFields=new Set();}
exportState(){return{mode:this.mode,resId:this.resId,resIds:this.resIds,};}
__syncData(force){const bm=this.model.__bm__;const legDP=bm.get(this.__bm_handle__);const data=Object.assign({},legDP.data);for(const fieldName of this.fieldNames){const fieldType=legDP.fields[fieldName].type;switch(fieldType){case"date":case"datetime":{if(data[fieldName]){const deserialize=fieldType==="date"?deserializeDate:deserializeDateTime;data[fieldName]=deserialize(data[fieldName].toJSON());}
break;}
case"one2many":case"many2many":{const currentVal=this.data[fieldName];if(!data[fieldName]||(currentVal&&currentVal.__bm_handle__===data[fieldName].id&&!force)){data[fieldName]=this.data[fieldName];data[fieldName].__syncData();}else{const{viewMode,views}=this.activeFields[fieldName];const handleField=(views&&views[viewMode]&&views[viewMode].handleField)||null;data[fieldName]=new StaticList(this.model,{handle:data[fieldName].id,handleField,viewType:viewMode,__syncParent:async(value)=>{await this.model.__bm__.save(this.__bm_handle__,{savePoint:true,});await this.update({[fieldName]:value});},});data[fieldName].__fieldName__=fieldName;}
break;}
case"many2one":{if(data[fieldName]){data[fieldName]=[data[fieldName].data.id,data[fieldName].data.display_name||"",];}else{data[fieldName]=false;}
break;}
case"reference":{data[fieldName]=data[fieldName]?{resModel:data[fieldName].model,resId:data[fieldName].data.id,displayName:data[fieldName].data.display_name,}:false;break;}
case"char":{data[fieldName]=data[fieldName]||"";break;}
case"html":{data[fieldName]=markup(data[fieldName]||"");break;}}
if(legDP.specialData[fieldName]){this.preloadedData[fieldName]=legDP.specialData[fieldName];}}
this.data=data;}
getFieldContext(fieldName){return this.model.__bm__.localData[this.__bm_handle__].getContext({fieldName,viewType:this.__viewType,});}
getFieldDomain(fieldName){const domain=this.model.__bm__.localData[this.__bm_handle__].getDomain({fieldName,viewType:this.__viewType,});return new Domain(JSON.parse(JSON.stringify(domain)));}
async update(changes){if(this.batchingUpdateProm){Object.assign(this.batchChanges,changes);return this._updatePromise;}
this.batchingUpdateProm=Promise.resolve();this.batchChanges=Object.assign({},changes);let resolveUpdatePromise;this._updatePromise=new Promise((r)=>{resolveUpdatePromise=r;});await this.batchingUpdateProm;changes=this.batchChanges;this.batchingUpdateProm=null;this.batchChanges=null;const data={};for(const[fieldName,value]of Object.entries(changes)){const fieldType=this.fields[fieldName].type;data[fieldName]=mapWowlValueToLegacy(value,fieldType);if(this.fields[fieldName].type==="many2one"&&Array.isArray(changes[fieldName])){const newName=changes[fieldName][1];if(newName||newName===""){const bm=this.model.__bm__;const m2oDatapointId=bm.get(this.__bm_handle__).data[fieldName].id;const m2oDatapoint=bm.localData[m2oDatapointId];if(m2oDatapoint&&m2oDatapoint.data.id===changes[fieldName][0]){m2oDatapoint.data.display_name=newName;}}}
if(this.fields[fieldName].type==="reference"&&changes[fieldName].displayName){const bm=this.model.__bm__;const m2oDatapointId=bm.get(this.__bm_handle__).data[fieldName].id;const m2oDatapoint=bm.localData[m2oDatapointId];if(m2oDatapoint){m2oDatapoint.data.display_name=changes[fieldName].displayName;}}}
if(this._urgentSave){const fieldNames=await this.model.__bm__.notifyChanges(this.__bm_handle__,data,{viewType:this.__viewType,notifyChange:false,});resolveUpdatePromise();this._removeInvalidFields(fieldNames);this.__syncData();return;}
const parentID=this.model.__bm__.localData[this.__bm_handle__].parentID;if(parentID&&this.__viewType==="list"){const mainRecordId=this.model.__bm__.localData[parentID].parentID;const mainRecordDP=this.model.__bm__.localData[mainRecordId];const mainRecordValues={...mainRecordDP.data,...mainRecordDP._changes};const x2manyFieldName=Object.keys(mainRecordValues).find((name)=>mainRecordValues[name]===parentID);if(!x2manyFieldName){throw new Error("couldn't find x2many field name");}
const operation={operation:"UPDATE",id:this.__bm_handle__,data};const prom=this.__syncParent(operation);prom.catch(resolveUpdatePromise);await prom;}else{const prom=this.model.__bm__.notifyChanges(this.__bm_handle__,data,{viewType:this.__viewType,});prom.catch(resolveUpdatePromise);const fieldNames=await prom;this._removeInvalidFields(fieldNames);for(const fieldName of fieldNames){if(["one2many","many2many"].includes(this.fields[fieldName].type)){const{editedRecord}=this.data[fieldName];if(editedRecord){editedRecord._removeAllInvalidFields();}}}
this.__syncData();}
this._removeInvalidFields(Object.keys(changes));this.model.notify();resolveUpdatePromise();}
async save(options={stayInEdition:true,noReload:false,savePoint:false,useSaveErrorDialog:false,}){const shouldSwitchToReadonly=!options.stayInEdition&&this.isInEdition;let resolveSavePromise;this._savePromise=new Promise((r)=>{resolveSavePromise=r;});this._closeInvalidFieldsNotification();if(!(await this.checkValidity())){this.openInvalidFieldsNotification();resolveSavePromise();return false;}
const saveOptions={reload:!options.noReload,savePoint:options.savePoint,};try{await this.model.__bm__.save(this.__bm_handle__,saveOptions);}catch(_e){resolveSavePromise();let canProceed=false;if(options.useSaveErrorDialog){_e.__raisedOnFormSave=true;canProceed=await new Promise((resolve)=>{_e.onDiscard=async()=>{await this.discard();resolve(true);};_e.onStayHere=()=>resolve(false);});}
if(!this.isInEdition){await this.load();this.model.notify();}
return canProceed;}
this.__syncData(true);if(shouldSwitchToReadonly){this.switchMode("readonly");}
this.model.notify();resolveSavePromise();return true;}
async urgentSave(){this.model.__bm__.bypassMutex=true;this._urgentSave=true;this.model.env.bus.trigger("RELATIONAL_MODEL:WILL_SAVE_URGENTLY");await Promise.resolve();this.__syncData();let isValid=true;if(this.isDirty){isValid=await this.checkValidity(true);if(isValid){this.model.__bm__.save(this.__bm_handle__,{reload:false});}}
this.model.__bm__.bypassMutex=false;return isValid;}
async archive(){await this.model.__bm__.actionArchive([this.resId],this.__bm_handle__);this.__syncData();this.model.notify();}
async unarchive(){await this.model.__bm__.actionUnarchive([this.resId],this.__bm_handle__);this.__syncData();this.model.notify();}
async duplicate(){this.__bm_handle__=await this.model.__bm__.duplicateRecord(this.__bm_handle__);this.__syncData();this.switchMode("edit");this.model.notify();}
async delete(){await this.model.__bm__.deleteRecords([this.__bm_handle__],this.resModel);if(this.resIds.length){await this.load();}
this.model.notify();}
toggleSelection(selected){if(typeof selected==="boolean"){this.selected=selected;}else{this.selected=!this.selected;}
this.model.notify();}
async discard(){await this._savePromise;this._closeInvalidFieldsNotification();this.model.__bm__.discardChanges(this.__bm_handle__);this._invalidFields=new Set();this.__syncData();this.model.notify();}
_removeInvalidFields(fieldNames){for(const fieldName of fieldNames){this._invalidFields.delete(fieldName);}}
_removeAllInvalidFields(){this._removeInvalidFields(Object.keys(this.activeFields));}}
const StaticList=__exports.StaticList=class StaticList extends DataPoint{setup(params){this.records=[];this.handleField=params.handleField;this.editedRecord=null;this.onRecordWillSwitchMode=async(record,mode,options={})=>{if(mode==="edit"){await this.model.__bm__.save(this.__bm_handle__,{savePoint:true});this.model.__bm__.freezeOrder(this.__bm_handle__);}
const editedRecord=this.editedRecord;this.editedRecord=null;if(editedRecord){const shouldCheckValidity=options.checkValidity||editedRecord.isDirty||editedRecord.canBeAbandoned;const isValid=!shouldCheckValidity||(await editedRecord.checkValidity());if(isValid){await editedRecord.switchMode("readonly");}else if(editedRecord.id!==record.id&&editedRecord.canBeAbandoned){this.abandonRecord(editedRecord.id);}else{this.editedRecord=editedRecord;return false;}}
if(mode==="edit"){this.editedRecord=record;}};this.__syncData();}
__syncData(){const legacyListDP=this.model.__bm__.get(this.__bm_handle__);this.records=legacyListDP.data.map((dp)=>{let record=this.records.find((r)=>r.__bm_handle__===dp.id);if(record){record.__syncData();}else{record=new this.model.constructor.Record(this.model,{handle:dp.id,onRecordWillSwitchMode:this.onRecordWillSwitchMode,mode:"readonly",viewType:this.__viewType,__syncParent:async(value)=>{await this.__syncParent(value);},});if(record.mode==="edit"&&this.editedRecord){this.editedRecord.mode="readonly";}}
return record;});this.editedRecord=this.records.find((r)=>r.mode==="edit")||null;}
get resIds(){return this.model.__bm__.get(this.__bm_handle__).res_ids;}
get currentIds(){return this.model.__bm__.get(this.__bm_handle__).res_ids;}
get orderBy(){return this.model.__bm__.localData[this.__bm_handle__].orderedBy;}
get limit(){return this.model.__bm__.localData[this.__bm_handle__].limit;}
get offset(){return this.model.__bm__.localData[this.__bm_handle__].offset;}
get count(){return this.currentIds.length;}
abandonRecord(recordId){const record=this.records.find((r)=>r.id===recordId);this.model.__bm__.removeLine(record.__bm_handle__);this.__syncData();this.model.notify();}
canResequence(){return this.handleField||DEFAULT_HANDLE_FIELD in this.fields;}
removeRecord(record){this.delete(record.id);}
async delete(recordId,operation="DELETE"){const record=this.records.find((r)=>r.id===recordId);await this.__syncParent({operation,ids:[record.__bm_handle__]});}
async add(object,params={isM2M:false}){let operation;const bm=this.model.__bm__;if(object instanceof Record){const recHandle=object.__bm_handle__;await bm.save(recHandle,{savePoint:!params.isM2M,viewType:object.__viewType});if(params.isM2M){const id=bm.localData[recHandle].res_id;operation={operation:"ADD_M2M",ids:[{id}]};}else{operation={operation:"ADD",id:recHandle};}}else if(Array.isArray(object)&&params.isM2M){const oldIds=this.resIds;const newIds=object.filter((id)=>!oldIds.includes(id)).map((id)=>({id}));operation={operation:"ADD_M2M",ids:newIds};}
await this.__syncParent(operation);}
async addNew(params){const position=params.position;const operation={context:[params.context],operation:"CREATE",position};await this.model.__bm__.save(this.__bm_handle__,{savePoint:true});this.model.__bm__.freezeOrder(this.__bm_handle__);await this.__syncParent(operation);const newRecord=this.records[position==="bottom"?this.records.length-1:0];if(params.mode==="edit"){await newRecord.switchMode("edit");}
return newRecord;}
exportState(){return{limit:this.limit,};}
async load(params){await this.model.__bm__._reload(this.__bm_handle__,params);this.__syncData();}
async sortBy(fieldName){await this.model.__bm__.setSort(this.__bm_handle__,fieldName);this.__syncData();this.model.notify();}
async replaceWith(resIds){const addedIds=resIds.filter((id)=>!this.currentIds.includes(id));const deletedIds=this.currentIds.filter((id)=>!resIds.includes(id));let operation;if(addedIds.length&&deletedIds.length){operation={ids:resIds,operation:"REPLACE_WITH",};}else if(addedIds.length){operation={ids:addedIds.map((id)=>({id})),operation:"ADD_M2M",};}else if(deletedIds.length){operation={ids:deletedIds,operation:"FORGET",};}else{return;}
await this.__syncParent(operation);}
async applyCommands(fieldName,commands){const commandsWithId=commands.map((command)=>{return{operation:command.operation,id:command.record.__bm_handle__,data:command.data,};});const parentID=this.model.__bm__.localData[this.__bm_handle__].parentID;await this.model.__bm__.notifyChanges(parentID,{[fieldName]:{operation:"MULTI",commands:commandsWithId,},});this.model.root.__syncData();this.model.notify();}
async moveRecord(dataRecordId,dataGroupId,refId,targetGroupId){await this.resequence(dataRecordId,refId);}
async resequence(movedId,targetId){if(!this.canResequence()){return;}
if(this.__viewType==="list"){await this.model.__bm__.save(this.__bm_handle__,{savePoint:true});this.model.__bm__.freezeOrder(this.__bm_handle__);}
const handleField=this.handleField||DEFAULT_HANDLE_FIELD;const records=[...this.records];const order=this.orderBy.find((o)=>o.name===handleField);const asc=!order||order.asc;const fromIndex=records.findIndex((r)=>r.id===movedId);let toIndex=0;if(targetId!==null){const targetIndex=records.findIndex((r)=>r.id===targetId);toIndex=fromIndex>targetIndex?targetIndex+1:targetIndex;}
const getSequence=(rec)=>rec&&rec.data[handleField];const firstIndex=Math.min(fromIndex,toIndex);const lastIndex=Math.max(fromIndex,toIndex)+1;let reorderAll=false;let lastSequence=(asc?-1:1)*Infinity;for(let index=0;index<records.length;index++){const sequence=getSequence(records[index]);if(((index<firstIndex||index>=lastIndex)&&((asc&&lastSequence>=sequence)||(!asc&&lastSequence<=sequence)))||(index>=firstIndex&&index<lastIndex&&lastSequence===sequence)){reorderAll=true;}
lastSequence=sequence;}
const[record]=records.splice(fromIndex,1);records.splice(toIndex,0,record);let toReorder=records;if(!reorderAll){toReorder=toReorder.slice(firstIndex,lastIndex).filter((r)=>r.id!==movedId);if(fromIndex<toIndex){toReorder.push(record);}else{toReorder.unshift(record);}}
if(!asc){toReorder.reverse();}
const sequences=toReorder.map(getSequence);const offset=sequences.length&&Math.min(...sequences);const operations=toReorder.map((record,i)=>({operation:"UPDATE",id:record.__bm_handle__,data:{[handleField]:offset+i},}));const lastOperation=operations.pop();const parentID=this.model.__bm__.localData[this.__bm_handle__].parentID;await Promise.all(operations.map((op)=>{this.model.__bm__.notifyChanges(parentID,{[this.__fieldName__]:op},{notifyChange:false,viewType:"form"});}));try{await this.model.__bm__.notifyChanges(parentID,{[this.__fieldName__]:lastOperation,},{viewType:"form"});}finally{if(this.__viewType==="list"){await this.model.__bm__.setSort(this.__bm_handle__,handleField);}}
this.records=records;this.__syncData();this.model.notify();}
async unselectRecord(canDiscard=false){const editedRecord=this.editedRecord;if(!editedRecord){return true;}
const isValid=await editedRecord.checkValidity();const handle=editedRecord.__bm_handle__;if(!editedRecord.isDirty&&((canDiscard&&editedRecord.isNew)||!isValid)){this.model.__bm__.discardChanges(handle);if(editedRecord.canBeAbandoned){this.model.__bm__.removeLine(handle);}
this.__syncData();this.editedRecord=null;return await editedRecord.switchMode("readonly");}else if(isValid){return await editedRecord.switchMode("readonly");}
return false;}}
const RelationalModel=__exports.RelationalModel=class RelationalModel extends Model{setup(params,{action,dialog,notification}){this.actionService=action;this.dialogService=dialog;this.notificationService=notification;this.keepLast=new KeepLast();if(params.rootType!=="record"){throw"only record root type is supported";}
this.__component=params.component;this.root=null;this.__bm__=new this.constructor.LegacyModel(this,{fields:params.fields||{},modelName:params.resModel,useSampleModel:false,});this.__activeFields=params.activeFields;this.__fields=params.fields;const res_id=params.resId||undefined;const res_ids=(params.resIds?toRaw(params.resIds):null)||(res_id?[res_id]:[]);this.__bm_load_params__={type:"record",modelName:params.resModel,res_id,res_ids,fields:params.fields||{},viewType:"form",};this.initialMode=params.mode;}
async duplicateDatapoint(record,params){const bm=this.__bm__;const fieldsInfo=mapViews(params.views,this.env);const handle=record.__bm_handle__;await bm.mutex.getUnlockedDef();await bm.addFieldsInfo(handle,{fields:params.fields,viewType:params.viewMode,fieldInfo:fieldsInfo[params.viewMode].fieldsInfo[params.viewMode],});const legRec=this.__bm__.get(record.__bm_handle__);const viewType=params.viewMode;const viewFields=Object.keys(legRec.fieldsInfo[viewType]);const fieldNames=_.difference(viewFields,Object.keys(legRec.data));const legFieldsInfo=legRec.fieldsInfo[viewType];for(const name of viewFields){if(!fieldNames.includes(name)){const fieldType=legRec.fields[name].type;const fieldInfo=legFieldsInfo[name];if(fieldInfo.specialData&&!(name in legRec.specialData)){fieldNames.push(name);continue;}
if(fieldType==="one2many"||fieldType==="many2many"){if(!("fieldsInfo"in legRec.data[name])){fieldNames.push(name);}else{const x2mFieldInfo=legRec.fieldsInfo[params.viewMode][name];const viewType=x2mFieldInfo.viewType||x2mFieldInfo.mode;const knownFields=Object.keys(legRec.data[name].fieldsInfo[legRec.data[name].viewType]||{});const newFields=Object.keys(legRec.data[name].fieldsInfo[viewType]||{});if(newFields.filter((f)=>!knownFields.includes(f)).length){fieldNames.push(name);}
if(legRec.data[name].viewType==="default"){const fieldViews=fieldInfo.views||fieldInfo.fieldsInfo||{};const defaultFieldInfo=legRec.data[name].fieldsInfo.default;_.each(fieldViews,function(fieldView){_.defaults(fieldView.fields,defaultFieldInfo);_.each(fieldView.fieldsInfo,function(x2mFieldInfo){_.defaults(x2mFieldInfo,defaultFieldInfo);});});}}}
if(fieldType==="many2one"){if(JSON.stringify(legRec.data[name].context)!==JSON.stringify(fieldInfo.context)){fieldNames.push(name);}}}}
if(fieldNames.length){if(this.__bm__.isNew(record.__bm_handle__)){await this.__bm__.generateDefaultValues(record.__bm_handle__,{fieldNames:fieldNames,viewType:viewType,});}else{await this.__bm__.reload(record.__bm_handle__,{fieldNames:fieldNames,keepChanges:true,viewType:viewType,});}}
const Record=this.constructor.Record;const newRecord=new Record(this,{handle,viewType:params.viewMode,mode:params.mode,});const recordSave=Record.prototype.save;record.save=recordSave;record.save=async(...args)=>{record.__syncData();const res=await recordSave.call(record,...args);record.save=recordSave;return res;};return newRecord;}
async addNewRecord(list,params,withParentId=true){const parentId=this.__bm__.localData[list.__bm_handle__].parentID;const fieldName=list.__fieldName__;const context=this.__bm__._getContext(this.__bm__.localData[parentId],{fieldName});params.context=makeContext([context,params.context]);params.__syncParent=()=>list.__syncData();const newRecord=this.createDataPoint("record",params);if(withParentId){newRecord.__bm_load_params__.parentID=list.__bm_handle__;}
await newRecord.load();return newRecord;}
async updateRecord(list,record,params={isM2M:false}){let operation;const isM2M=params.isM2M;if(!isM2M){operation={operation:"UPDATE",id:record.__bm_handle__};}else{await record.save({noReload:true});operation={operation:"TRIGGER_ONCHANGE"};}
await list.__syncParent(operation);if(isM2M){await record.load();}}
async load(params={}){if(!this.__bm_load_params__.fieldsInfo){this.__bm_load_params__.fieldsInfo=mapActiveFieldsToFieldsInfo(this.__activeFields||{},this.__fields||{},"form",this.env);}
const loadParams={...this.__bm_load_params__};if("resId"in params){loadParams.res_id=params.resId||undefined;}
if("context"in params){loadParams.context=params.context;}
const state=this.root?this.root.exportState():{};const nextRoot=new this.constructor.Record(this,{__bm_load_params__:loadParams,mode:this.initialMode,},state);await this.keepLast.add(nextRoot.load());this.root=nextRoot;this.__bm_load_params__=loadParams;this.notify();}
_trigger_up(ev){const evType=ev.name;const payload=ev.data;if(evType==="call_service"){let args=payload.args||[];if(payload.service==="ajax"&&payload.method==="rpc"){args=args.concat(ev.target);if(owl.status(this.__component)==="destroyed"){console.warn("Component is destroyed");return payload.callback(new Promise(()=>{}));}
const prom=new Promise((resolve,reject)=>{owl.Component.env.session.rpc(...args).then((value)=>{if(owl.status(this.__component)!=="destroyed"){resolve(value);}}).guardedCatch((reason)=>{if(owl.status(this.__component)!=="destroyed"){reject(reason);}});});return payload.callback(prom);}else if(payload.service==="notification"){return this.notificationService.add(payload.message,{className:payload.className,sticky:payload.sticky,title:payload.title,type:payload.type,});}
throw new Error(`call service ${payload.service} not handled in relational model`);}else if(evType==="warning"){if(payload.type==="dialog"){return this.dialogService.add(WarningDialog,{title:payload.title,message:payload.message,});}else{return this.notificationService.add(payload.message,{className:payload.className,sticky:payload.sticky,title:payload.title,type:"warning",});}}else if(evType==="do_action"){if(payload.action.context){payload.action.context=new Context(payload.action.context).eval();}
const legacyOptions=mapDoActionOptionAPI(payload.options);return this.actionService.doAction(payload.action,legacyOptions);}else if(evType==="reload"){return this.load().then(()=>{if(ev.data.onSuccess){ev.data.onSuccess();}});}
throw new Error(`trigger_up(${evType}) not handled in relational model`);}
createDataPoint(type,params,state={}){if(type!=="record"){throw new Error("LPE CRASH");}
const fieldsInfo=mapActiveFieldsToFieldsInfo(params.activeFields,params.fields,params.viewType,this.env);params=Object.assign({},params,{__bm_load_params__:{type:"record",modelName:params.resModel,fields:params.fields||{},viewType:"form",fieldsInfo,parentID:params.parentID,context:params.context,},});return new this.constructor.Record(this,params,state);}}
RelationalModel.services=["action","dialog","notification"];RelationalModel.LegacyModel=BasicModel;RelationalModel.Record=Record;return __exports;});;

/* /web/static/src/views/calendar/calendar_arch_parser.js */
odoo.define('@web/views/calendar/calendar_arch_parser',async function(require){'use strict';let __exports={};const{evaluateExpr}=require("@web/core/py_js/py");const{XMLParser}=require("@web/core/utils/xml");const{Field}=require("@web/views/fields/field");const{archParseBoolean}=require("@web/views/utils");const FIELD_ATTRIBUTE_NAMES=["date_start","date_delay","date_stop","all_day","recurrence_update","create_name_field","color",];const SCALES=["day","week","month","year"];const CalendarParseArchError=__exports.CalendarParseArchError=class CalendarParseArchError extends Error{}
const CalendarArchParser=__exports.CalendarArchParser=class CalendarArchParser extends XMLParser{parse(arch,models,modelName){const fields=models[modelName];const fieldNames=new Set(fields.display_name?["display_name"]:[]);const fieldMapping={date_start:"date_start"};let jsClass=null;let eventLimit=5;let scales=[...SCALES];let scale="week";let canCreate=true;let canDelete=true;let hasQuickCreate=true;let hasEditDialog=false;let showUnusualDays=false;let isDateHidden=false;let isTimeHidden=false;let formViewId=false;const popoverFields={};const filtersInfo={};this.visitXML(arch,(node)=>{switch(node.tagName){case"calendar":{if(!node.hasAttribute("date_start")){throw new CalendarParseArchError(`Calendar view has not defined "date_start" attribute.`);}
jsClass=node.getAttribute("js_class");for(const fieldAttrName of FIELD_ATTRIBUTE_NAMES){if(node.hasAttribute(fieldAttrName)){const fieldName=node.getAttribute(fieldAttrName);fieldNames.add(fieldName);fieldMapping[fieldAttrName]=fieldName;}}
if(node.hasAttribute("event_limit")){eventLimit=evaluateExpr(node.getAttribute("event_limit"));if(!Number.isInteger(eventLimit)){throw new CalendarParseArchError(`Calendar view's event limit should be a number`);}}
if(node.hasAttribute("scales")){const scalesAttr=node.getAttribute("scales");scales=scalesAttr.split(",").filter((scale)=>SCALES.includes(scale));}
if(node.hasAttribute("mode")){scale=node.getAttribute("mode");if(!scales.includes(scale)){throw new CalendarParseArchError(`Calendar view cannot display mode: ${scale}`);}}
if(node.hasAttribute("create")){canCreate=archParseBoolean(node.getAttribute("create"),true);}
if(node.hasAttribute("delete")){canDelete=archParseBoolean(node.getAttribute("delete"),true);}
if(node.hasAttribute("quick_add")){hasQuickCreate=archParseBoolean(node.getAttribute("quick_add"),true);}
if(node.hasAttribute("event_open_popup")){hasEditDialog=archParseBoolean(node.getAttribute("event_open_popup"));}
if(node.hasAttribute("show_unusual_days")){showUnusualDays=archParseBoolean(node.getAttribute("show_unusual_days"));}
if(node.hasAttribute("hide_date")){isDateHidden=archParseBoolean(node.getAttribute("hide_date"));}
if(node.hasAttribute("hide_time")){isTimeHidden=archParseBoolean(node.getAttribute("hide_time"));}
if(node.hasAttribute("form_view_id")){formViewId=parseInt(node.getAttribute("form_view_id"),10);}
break;}
case"field":{const fieldName=node.getAttribute("name");fieldNames.add(fieldName);const fieldInfo=Field.parseFieldNode(node,models,modelName,"calendar",jsClass);popoverFields[fieldName]=fieldInfo;const field=fields[fieldName];if(!node.hasAttribute("invisible")||node.hasAttribute("filters")){let filterInfo=null;if(node.hasAttribute("avatar_field")||node.hasAttribute("write_model")||node.hasAttribute("write_field")||node.hasAttribute("color")||node.hasAttribute("filters")){filtersInfo[fieldName]=filtersInfo[fieldName]||{avatarFieldName:null,colorFieldName:null,fieldName,filterFieldName:null,label:field.string,resModel:field.relation,writeFieldName:null,writeResModel:null,};filterInfo=filtersInfo[fieldName];}
if(node.hasAttribute("filter_field")){filterInfo.filterFieldName=node.getAttribute("filter_field");}
if(node.hasAttribute("avatar_field")){filterInfo.avatarFieldName=node.getAttribute("avatar_field");}
if(node.hasAttribute("write_model")){filterInfo.writeResModel=node.getAttribute("write_model");}
if(node.hasAttribute("write_field")){filterInfo.writeFieldName=node.getAttribute("write_field");}
if(node.hasAttribute("filters")){if(node.hasAttribute("color")){filterInfo.colorFieldName=node.getAttribute("color");}
if(node.hasAttribute("avatar_field")&&field.relation){if(field.relation.includes(["res.users","res.partners","hr.employee",])){filterInfo.avatarFieldName="image_128";}}}}
break;}}});return{canCreate,canDelete,eventLimit,fieldMapping,fieldNames:[...fieldNames],filtersInfo,formViewId,hasEditDialog,hasQuickCreate,isDateHidden,isTimeHidden,popoverFields,scale,scales,showUnusualDays,};}}
return __exports;});;

/* /web/static/src/views/calendar/calendar_common/calendar_common_popover.js */
odoo.define('@web/views/calendar/calendar_common/calendar_common_popover',async function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{is24HourFormat}=require("@web/core/l10n/dates");const{Field}=require("@web/views/fields/field");const{Record}=require("@web/views/record");const{getFormattedDateSpan}=require('@web/views/calendar/utils');const{Component}=require("@odoo/owl");const CalendarCommonPopover=__exports.CalendarCommonPopover=class CalendarCommonPopover extends Component{setup(){this.time=null;this.timeDuration=null;this.date=null;this.dateDuration=null;this.computeDateTimeAndDuration();}
get isEventEditable(){return true;}
get isEventDeletable(){return this.props.model.canDelete;}
computeDateTimeAndDuration(){const record=this.props.record;const{start,end}=record;const isSameDay=start.hasSame(end,"day");if(!record.isTimeHidden&&!record.isAllDay&&isSameDay){const timeFormat=is24HourFormat()?"HH:mm":"hh:mm a";this.time=`${start.toFormat(timeFormat)} - ${end.toFormat(timeFormat)}`;const duration=end.diff(start,["hours","minutes"]);const formatParts=[];if(duration.hours>0){const hourString=duration.hours===1?this.env._t("hour"):this.env._t("hours");formatParts.push(`h '${hourString}'`);}
if(duration.minutes>0){const minuteStr=duration.minutes===1?this.env._t("minute"):this.env._t("minutes");formatParts.push(`m '${minuteStr}'`);}
this.timeDuration=duration.toFormat(formatParts.join(", "));}
if(!this.props.model.isDateHidden){this.date=getFormattedDateSpan(start,end);if(record.isAllDay){if(isSameDay){this.dateDuration=this.env._t("All day");}else{const duration=end.plus({day:1}).diff(start,"days");this.dateDuration=duration.toFormat(`d '${this.env._t("days")}'`);}}}}
onEditEvent(){this.props.editRecord(this.props.record);this.props.close();}
onDeleteEvent(){this.props.deleteRecord(this.props.record);this.props.close();}}
CalendarCommonPopover.components={Dialog,Field,Record,};CalendarCommonPopover.template="web.CalendarCommonPopover";CalendarCommonPopover.subTemplates={popover:"web.CalendarCommonPopover.popover",body:"web.CalendarCommonPopover.body",footer:"web.CalendarCommonPopover.footer",};CalendarCommonPopover.props={close:Function,record:Object,model:Object,createRecord:Function,deleteRecord:Function,editRecord:Function,};return __exports;});;

/* /web/static/src/views/calendar/calendar_common/calendar_common_renderer.js */
odoo.define('@web/views/calendar/calendar_common/calendar_common_renderer',async function(require){'use strict';let __exports={};const{is24HourFormat}=require("@web/core/l10n/dates");const{localization}=require("@web/core/l10n/localization");const{renderToString}=require("@web/core/utils/render");const{useDebounced}=require("@web/core/utils/timing");const{getColor}=require("@web/views/calendar/colors");const{useCalendarPopover,useClickHandler,useFullCalendar}=require("@web/views/calendar/hooks");const{CalendarCommonPopover}=require("@web/views/calendar/calendar_common/calendar_common_popover");const{Component,useEffect}=require("@odoo/owl");const SCALE_TO_FC_VIEW={day:"timeGridDay",week:"timeGridWeek",month:"dayGridMonth",};const SCALE_TO_HEADER_FORMAT={day:"DDD",week:"EEE d",month:"EEEE",};const SHORT_SCALE_TO_HEADER_FORMAT={...SCALE_TO_HEADER_FORMAT,day:"D",month:"EEE",};const HOUR_FORMATS={12:{hour:"numeric",minute:"2-digit",omitZeroMinute:true,meridiem:"short",},24:{hour:"numeric",minute:"2-digit",hour12:false,},};const CalendarCommonRenderer=__exports.CalendarCommonRenderer=class CalendarCommonRenderer extends Component{setup(){this.fc=useFullCalendar("fullCalendar",this.options);this.click=useClickHandler(this.onClick,this.onDblClick);this.popover=useCalendarPopover(this.constructor.components.Popover);this.onWindowResizeDebounced=useDebounced(this.onWindowResize,200);useEffect(()=>{this.updateSize();});useEffect((view)=>{this.env.config.setDisplayName(`${this.props.displayName} (${view.title})`);},()=>[this.fc.api.view]);}
get options(){return{allDaySlot:this.props.model.hasAllDaySlot,allDayText:this.env._t("All day"),columnHeaderFormat:this.env.isSmall?SHORT_SCALE_TO_HEADER_FORMAT[this.props.model.scale]:SCALE_TO_HEADER_FORMAT[this.props.model.scale],dateClick:this.onDateClick,dayRender:this.onDayRender,defaultDate:this.props.model.date.toISO(),defaultView:SCALE_TO_FC_VIEW[this.props.model.scale],dir:localization.direction,droppable:true,editable:this.props.model.canEdit,eventClick:this.onEventClick,eventDragStart:this.onEventDragStart,eventDrop:this.onEventDrop,eventLimit:this.props.model.eventLimit,eventLimitClick:this.onEventLimitClick,eventMouseEnter:this.onEventMouseEnter,eventMouseLeave:this.onEventMouseLeave,eventRender:this.onEventRender,eventResizableFromStart:true,eventResize:this.onEventResize,eventResizeStart:this.onEventResizeStart,events:(_,successCb)=>successCb(this.mapRecordsToEvents()),firstDay:this.props.model.firstDayOfWeek%7,header:false,height:"parent",locale:luxon.Settings.defaultLocale,longPressDelay:500,navLinks:false,nowIndicator:true,plugins:["dayGrid","interaction","timeGrid","luxon"],select:this.onSelect,selectAllow:this.isSelectionAllowed,selectMinDistance:5,selectMirror:true,selectable:this.props.model.canCreate,slotLabelFormat:is24HourFormat()?HOUR_FORMATS[24]:HOUR_FORMATS[12],snapDuration:{minutes:15},timeZone:luxon.Settings.defaultZone.name,unselectAuto:false,weekLabel:this.props.model.scale==="month"&&this.env.isSmall?"":this.env._t("Week"),weekNumberCalculation:"ISO",weekNumbers:true,weekNumbersWithinDays:!this.env.isSmall,windowResize:this.onWindowResizeDebounced,};}
getStartTime(record){const timeFormat=is24HourFormat()?"HH:mm":"hh:mm a";return record.start.toFormat(timeFormat);}
computeEventSelector(event){return`[data-event-id="${event.id}"]`;}
highlightEvent(event,className){for(const el of this.fc.el.querySelectorAll(this.computeEventSelector(event))){el.classList.add(className);}}
unhighlightEvent(event,className){for(const el of this.fc.el.querySelectorAll(this.computeEventSelector(event))){el.classList.remove(className);}}
mapRecordsToEvents(){return Object.values(this.props.model.records).map((r)=>this.convertRecordToEvent(r));}
convertRecordToEvent(record){return{id:record.id,title:record.title,start:record.start.toISO(),end:["week","month"].includes(this.props.model.scale)&&record.isAllDay?record.end.plus({days:1}).toISO():record.end.toISO(),allDay:record.isAllDay,};}
getPopoverProps(record){return{record,model:this.props.model,createRecord:this.props.createRecord,deleteRecord:this.props.deleteRecord,editRecord:this.props.editRecord,};}
openPopover(target,record){const color=getColor(record.colorIndex);this.popover.open(target,this.getPopoverProps(record),`o_cw_popover o_calendar_color_${typeof(color) === "number" ? color : 0}`);}
updateSize(){const height=window.innerHeight-this.fc.el.getBoundingClientRect().top;this.fc.el.style.height=`${height}px`;this.fc.api.updateSize();}
onClick(info){this.openPopover(info.el,this.props.model.records[info.event.id]);this.highlightEvent(info.event,"o_cw_custom_highlight");}
onDateClick(info){if(this.env.isSmall&&this.props.model.scale==="month"){this.props.model.load({date:luxon.DateTime.fromISO(info.dateStr),scale:"day",});return;}
this.props.createRecord(this.fcEventToRecord(info));}
onDayRender(info){const date=luxon.DateTime.fromJSDate(info.date).toISODate();if(this.props.model.unusualDays.includes(date)){info.el.classList.add("o_calendar_disabled");}}
onDblClick(info){this.props.editRecord(this.props.model.records[info.event.id]);}
onEventClick(info){this.click(info);}
onEventRender(info){const{el,event}=info;el.dataset.eventId=event.id;el.classList.add("o_event","py-0");const record=this.props.model.records[event.id];if(record){const injectedContentStr=renderToString(this.constructor.eventTemplate,{...record,startTime:this.getStartTime(record),});const domParser=new DOMParser();const{children}=domParser.parseFromString(injectedContentStr,"text/html").body;el.querySelector(".fc-content").replaceWith(...children);const color=getColor(record.colorIndex);if(typeof color==="string"){el.style.backgroundColor=color;}else if(typeof color==="number"){el.classList.add(`o_calendar_color_${color}`);}else{el.classList.add("o_calendar_color_0");}
if(record.isHatched){el.classList.add("o_event_hatched");}
if(record.isStriked){el.classList.add("o_event_striked");}}
if(!el.querySelector(".fc-bg")){const bg=document.createElement("div");bg.classList.add("fc-bg");el.appendChild(bg);}}
async onSelect(info){this.popover.close();await this.props.createRecord(this.fcEventToRecord(info));this.fc.api.unselect();}
isSelectionAllowed(event){return event.end.getDate()===event.start.getDate()||event.allDay;}
onEventDrop(info){this.fc.api.unselect();this.props.model.updateRecord(this.fcEventToRecord(info.event),{moved:true});}
onEventResize(info){this.fc.api.unselect();this.props.model.updateRecord(this.fcEventToRecord(info.event));}
fcEventToRecord(event){const{id,allDay,date,start,end}=event;const res={start:luxon.DateTime.fromJSDate(date||start),isAllDay:allDay,};if(end){res.end=luxon.DateTime.fromJSDate(end);if(["week","month"].includes(this.props.model.scale)&&allDay){res.end=res.end.minus({days:1});}}
if(id){res.id=this.props.model.records[id].id;}
return res;}
onEventMouseEnter(info){this.highlightEvent(info.event,"o_cw_custom_highlight");}
onEventMouseLeave(info){if(!info.event.id){return;}
this.unhighlightEvent(info.event,"o_cw_custom_highlight");}
onEventDragStart(info){info.el.classList.add(info.view.type);this.fc.api.unselect();this.highlightEvent(info.event,"o_cw_custom_highlight");}
onEventResizeStart(info){this.fc.api.unselect();this.highlightEvent(info.event,"o_cw_custom_highlight");}
onEventLimitClick(){this.fc.api.unselect();return"popover";}
onWindowResize(){this.updateSize();}}
CalendarCommonRenderer.components={Popover:CalendarCommonPopover,};CalendarCommonRenderer.template="web.CalendarCommonRenderer";CalendarCommonRenderer.eventTemplate="web.CalendarCommonRenderer.event";return __exports;});;

/* /web/static/src/views/calendar/calendar_controller.js */
odoo.define('@web/views/calendar/calendar_controller',async function(require){'use strict';let __exports={};const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{_lt,_t}=require("@web/core/l10n/translation");const{useOwnedDialogs,useService}=require("@web/core/utils/hooks");const{Layout}=require("@web/search/layout");const{useModel}=require("@web/views/model");const{FormViewDialog}=require("@web/views/view_dialogs/form_view_dialog");const{useSetupView}=require("@web/views/view_hook");const{CalendarDatePicker}=require("@web/views/calendar/date_picker/calendar_date_picker");const{CalendarFilterPanel}=require("@web/views/calendar/filter_panel/calendar_filter_panel");const{CalendarMobileFilterPanel}=require("@web/views/calendar/mobile_filter_panel/calendar_mobile_filter_panel");const{CalendarQuickCreate}=require("@web/views/calendar/quick_create/calendar_quick_create");const{Component,useState}=require("@odoo/owl");const SCALE_LABELS={day:_lt("Day"),week:_lt("Week"),month:_lt("Month"),year:_lt("Year"),};function useUniqueDialog(){const displayDialog=useOwnedDialogs();let close=null;return(...args)=>{if(close){close();}
close=displayDialog(...args);};}
const CalendarController=__exports.CalendarController=class CalendarController extends Component{setup(){this.action=useService("action");this.orm=useService("orm");this.displayDialog=useUniqueDialog();this.model=useModel(this.props.Model,{...this.props.archInfo,resModel:this.props.resModel,domain:this.props.domain,fields:this.props.fields,});this.displayName=this.env.config.getDisplayName();useSetupView({getLocalState:()=>this.model.exportedState,});this.state=useState({showSideBar:!this.env.isSmall,});}
get rendererProps(){return{model:this.model,createRecord:this.createRecord.bind(this),deleteRecord:this.deleteRecord.bind(this),editRecord:this.editRecord.bind(this),setDate:this.setDate.bind(this),displayName:this.displayName,};}
get containerProps(){return{model:this.model,};}
get datePickerProps(){return{model:this.model,};}
get filterPanelProps(){return{model:this.model,};}
get mobileFilterPanelProps(){return{model:this.model,sideBarShown:this.state.showSideBar,toggleSideBar:()=>(this.state.showSideBar=!this.state.showSideBar),};}
get scaleLabels(){return SCALE_LABELS;}
get showCalendar(){return!this.env.isSmall||!this.state.showSideBar;}
get showSideBar(){return this.state.showSideBar;}
get className(){return this.props.className;}
getTodayDay(){return luxon.DateTime.local().day;}
async setDate(move){let date=null;switch(move){case"next":date=this.model.date.plus({[`${this.model.scale}s`]:1});break;case"previous":date=this.model.date.minus({[`${this.model.scale}s`]:1});break;case"today":date=luxon.DateTime.local().startOf("day");break;}
await this.model.load({date});}
async setScale(scale){await this.model.load({scale});}
getQuickCreateProps(record){return{record,model:this.model,editRecord:this.editRecordInCreation.bind(this),title:this.props.context.default_name,};}
createRecord(record){if(!this.model.canCreate){return;}
if(this.model.hasQuickCreate){return new Promise((resolve)=>{this.displayDialog(this.constructor.components.QuickCreate,this.getQuickCreateProps(record),{onClose:()=>resolve()});});}else{return this.editRecordInCreation(record);}}
async editRecord(record,context={},shouldFetchFormViewId=true){if(this.model.hasEditDialog){return new Promise((resolve)=>{this.displayDialog(FormViewDialog,{resModel:this.model.resModel,resId:record.id||false,context,title:record.id?`${_t("Open")}: ${record.title}`:_t("New Event"),viewId:this.model.formViewId,onRecordSaved:()=>this.model.load(),},{onClose:()=>resolve()});});}else{let formViewId=this.model.formViewId;if(shouldFetchFormViewId){formViewId=await this.orm.call(this.model.resModel,"get_formview_id",[[record.id]],context);}
const action={type:"ir.actions.act_window",res_model:this.model.resModel,views:[[formViewId||false,"form"]],target:"current",context,};if(record.id){action.res_id=record.id;}
this.action.doAction(action);}}
editRecordInCreation(record){const rawRecord=this.model.buildRawRecord(record);const context=this.model.makeContextDefaults(rawRecord);return this.editRecord(record,context,false);}
deleteRecord(record){this.displayDialog(ConfirmationDialog,{title:this.env._t("Confirmation"),body:this.env._t("Are you sure you want to delete this record ?"),confirm:()=>{this.model.unlinkRecord(record.id);},cancel:()=>{},});}}
CalendarController.components={DatePicker:CalendarDatePicker,FilterPanel:CalendarFilterPanel,MobileFilterPanel:CalendarMobileFilterPanel,QuickCreate:CalendarQuickCreate,Layout,Dropdown,DropdownItem,};CalendarController.template="web.CalendarController";return __exports;});;

/* /web/static/src/views/calendar/calendar_model.js */
odoo.define('@web/views/calendar/calendar_model',async function(require){'use strict';let __exports={};const{serializeDate,serializeDateTime,deserializeDate,deserializeDateTime,}=require("@web/core/l10n/dates");const{localization}=require("@web/core/l10n/localization");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{KeepLast}=require("@web/core/utils/concurrency");const{Model}=require("@web/views/model");const CalendarModel=__exports.CalendarModel=class CalendarModel extends Model{setup(params,services){this.user=services.user;this.keepLast=new KeepLast();const formViewFromConfig=(this.env.config.views||[]).find((view)=>view[1]==="form");const formViewIdFromConfig=formViewFromConfig?formViewFromConfig[0]:false;this.meta={...params,firstDayOfWeek:localization.weekStart,formViewId:params.formViewId||formViewIdFromConfig,};this.data={filters:{},filterSections:{},hasCreateRight:null,range:null,records:{},unusualDays:[],};}
async load(params={}){Object.assign(this.meta,params);if(!this.meta.date){this.meta.date=params.context&&params.context.initial_date?deserializeDateTime(params.context.initial_date):luxon.DateTime.local();}
if(!this.meta.scales.includes(this.meta.scale)){this.meta.scale=this.meta.scales[0];}
const data={...this.data};await this.keepLast.add(this.updateData(data));this.data=data;this.notify();}
get date(){return this.meta.date;}
get canCreate(){return this.meta.canCreate&&this.data.hasCreateRight;}
get canDelete(){return this.meta.canDelete;}
get canEdit(){return!this.meta.fields[this.meta.fieldMapping.date_start].readonly;}
get eventLimit(){return this.meta.eventLimit;}
get exportedState(){return this.meta;}
get fieldMapping(){return this.meta.fieldMapping;}
get fields(){return this.meta.fields;}
get filterSections(){return Object.values(this.data.filterSections);}
get firstDayOfWeek(){return this.meta.firstDayOfWeek;}
get formViewId(){return this.meta.formViewId;}
get hasAllDaySlot(){return(this.meta.fieldMapping.all_day||this.meta.fields[this.meta.fieldMapping.date_start].type==="date");}
get hasEditDialog(){return this.meta.hasEditDialog;}
get hasQuickCreate(){return this.meta.hasQuickCreate;}
get isDateHidden(){return this.meta.isDateHidden;}
get isTimeHidden(){return this.meta.isTimeHidden;}
get popoverFields(){return this.meta.popoverFields;}
get rangeEnd(){return this.data.range.end;}
get rangeStart(){return this.data.range.start;}
get records(){return this.data.records;}
get resModel(){return this.meta.resModel;}
get scale(){return this.meta.scale;}
get scales(){return this.meta.scales;}
get unusualDays(){return this.data.unusualDays;}
async createFilter(fieldName,filterValue){const info=this.meta.filtersInfo[fieldName];if(info&&info.writeFieldName&&info.writeResModel){const data={user_id:this.user.userId,[info.writeFieldName]:filterValue,};if(info.filterFieldName){data[info.filterFieldName]=true;}
await this.orm.create(info.writeResModel,[data]);await this.load();}}
async createRecord(record){const rawRecord=this.buildRawRecord(record);const context=this.makeContextDefaults(rawRecord);await this.orm.create(this.meta.resModel,[rawRecord],{context});await this.load();}
async unlinkFilter(fieldName,recordId){const info=this.meta.filtersInfo[fieldName];if(info&&info.writeResModel){await this.orm.unlink(info.writeResModel,[recordId]);await this.load();}}
async unlinkRecord(recordId){await this.orm.unlink(this.meta.resModel,[recordId]);await this.load();}
async updateFilters(fieldName,filters){const section=this.data.filterSections[fieldName];if(section){for(const value in filters){const active=filters[value];const filter=section.filters.find((filter)=>`${filter.value}`===value);if(filter){filter.active=active;const info=this.meta.filtersInfo[fieldName];if(filter.recordId&&info&&info.writeFieldName&&info.writeResModel&&info.filterFieldName){const data={[info.filterFieldName]:active,};await this.orm.write(info.writeResModel,[filter.recordId],data);}}}}
await this.load();}
async updateRecord(record,options={}){const rawRecord=this.buildRawRecord(record,options);delete rawRecord.name;await this.orm.write(this.meta.resModel,[record.id],rawRecord,{context:{from_ui:true},});await this.load();}
buildRawRecord(partialRecord,options={}){const data={};data[this.meta.fieldMapping.create_name_field||"name"]=partialRecord.title;let start=partialRecord.start;let end=partialRecord.end;if(!end||!end.isValid){if(partialRecord.isAllDay){end=start;}else{end=start.plus({hours:2});}}
const isDateEvent=this.fields[this.meta.fieldMapping.date_start].type==="date";if(partialRecord.isAllDay){if(!this.hasAllDaySlot&&!isDateEvent&&!partialRecord.id){start=start.set({hours:7});end=end.set({hours:19});}}
if(this.meta.fieldMapping.all_day){data[this.meta.fieldMapping.all_day]=partialRecord.isAllDay;}
data[this.meta.fieldMapping.date_start]=(partialRecord.isAllDay&&this.hasAllDaySlot?"date":this.fields[this.meta.fieldMapping.date_start].type)==="date"?serializeDate(start):serializeDateTime(start);if(this.meta.fieldMapping.date_stop){data[this.meta.fieldMapping.date_stop]=(partialRecord.isAllDay&&this.hasAllDaySlot?"date":this.fields[this.meta.fieldMapping.date_start].type)==="date"?serializeDate(end):serializeDateTime(end);}
if(this.meta.fieldMapping.date_delay){if(this.meta.scale!=="month"||!options.moved){data[this.meta.fieldMapping.date_delay]=end.diff(start,"hours").hours;}}
return data;}
makeContextDefaults(rawRecord){const{fieldMapping,scale}=this.meta;const context={...this.meta.context};const fieldNames=[fieldMapping.create_name_field||"name",fieldMapping.date_start,fieldMapping.date_stop,fieldMapping.date_delay,fieldMapping.all_day||"allday",];for(const fieldName of fieldNames){if(rawRecord[fieldName]!==undefined){context[`default_${fieldName}`]=rawRecord[fieldName];}}
if(["month","year"].includes(scale)){context[`default_${fieldMapping.all_day || "allday"}`]=true;}
return context;}
async updateData(data){if(data.hasCreateRight===null){data.hasCreateRight=await this.orm.call(this.meta.resModel,"check_access_rights",["create",false,]);}
data.range=this.computeRange();if(this.meta.showUnusualDays){data.unusualDays=await this.loadUnusualDays(data);}
const{sections,dynamicFiltersInfo}=await this.loadFilters(data);data.filterSections=sections;data.records=await this.loadRecords(data);const dynamicSections=await this.loadDynamicFilters(data,dynamicFiltersInfo);Object.assign(data.filterSections,dynamicSections);for(const[recordId,record]of Object.entries(data.records)){for(const[fieldName,filterInfo]of Object.entries(dynamicSections)){for(const filter of filterInfo.filters){const rawValue=record.rawRecord[fieldName];const value=Array.isArray(rawValue)?rawValue[0]:rawValue;if(filter.value===value&&!filter.active){delete data.records[recordId];}}}}}
computeRange(){const{scale,date,firstDayOfWeek}=this.meta;let start=date;let end=date;if(scale!=="week"){start=start.startOf(scale);end=end.endOf(scale);}
if(["week","month"].includes(scale)){const weekday=start.weekday<firstDayOfWeek?firstDayOfWeek-7:firstDayOfWeek;start=start.set({weekday});end=start.plus({weeks:scale==="week"?1:6,days:-1});}
start=start.startOf("day");end=end.endOf("day");return{start,end};}
computeDomain(data){return[...this.meta.domain,...this.computeRangeDomain(data),...this.computeFiltersDomain(data),];}
computeFiltersDomain(data){const authorizedValues={};const avoidValues={};for(const[fieldName,filterSection]of Object.entries(data.filterSections)){const filterAll=filterSection.filters.find((f)=>f.type==="all");if(!(filterAll&&filterAll.active)){const filterSectionInfo=this.meta.filtersInfo[fieldName];for(const filter of filterSection.filters){if(filterSectionInfo.writeResModel){if(!authorizedValues[fieldName]){authorizedValues[fieldName]=[];}
if(filter.active){authorizedValues[fieldName].push(filter.value);}}else{if(!filter.active){if(!avoidValues[fieldName]){avoidValues[fieldName]=[];}
avoidValues[fieldName].push(filter.value);}}}}}
const domain=[];for(const field in authorizedValues){domain.push([field,"in",authorizedValues[field]]);}
for(const field in avoidValues){if(avoidValues[field].length>0){domain.push([field,"not in",avoidValues[field]]);}}
return domain;}
computeRangeDomain(data){const{fieldMapping}=this.meta;const formattedEnd=serializeDateTime(data.range.end);const formattedStart=serializeDateTime(data.range.start);const domain=[[fieldMapping.date_start,"<=",formattedEnd]];if(fieldMapping.date_stop){domain.push([fieldMapping.date_stop,">=",formattedStart]);}else if(!fieldMapping.date_delay){domain.push([fieldMapping.date_start,">=",formattedStart]);}
return domain;}
fetchUnusualDays(data){return this.orm.call(this.meta.resModel,"get_unusual_days",[serializeDateTime(data.range.start),serializeDateTime(data.range.end),]);}
async loadUnusualDays(data){const unusualDays=await this.fetchUnusualDays(data);return Object.entries(unusualDays).filter((entry)=>entry[1]).map((entry)=>entry[0]);}
fetchRecords(data){const{fieldNames,resModel}=this.meta;return this.orm.searchRead(resModel,this.computeDomain(data),fieldNames);}
async loadRecords(data){const rawRecords=await this.fetchRecords(data);const records={};for(const rawRecord of rawRecords){records[rawRecord.id]=this.normalizeRecord(rawRecord);}
return records;}
normalizeRecord(rawRecord){const{fields,fieldMapping,isTimeHidden,scale}=this.meta;const startType=fields[fieldMapping.date_start].type;const isAllDay=startType==="date"||(fieldMapping.all_day&&rawRecord[fieldMapping.all_day])||false;let start=isAllDay?deserializeDate(rawRecord[fieldMapping.date_start]):deserializeDateTime(rawRecord[fieldMapping.date_start]);let end=start;let endType=startType;if(fieldMapping.date_stop){endType=fields[fieldMapping.date_stop].type;end=isAllDay?deserializeDate(rawRecord[fieldMapping.date_stop]):deserializeDateTime(rawRecord[fieldMapping.date_stop]);}
const duration=rawRecord[fieldMapping.date_delay]||1;if(isAllDay){start=start.startOf("day");end=end.startOf("day");}
if(!fieldMapping.date_stop&&duration){end=start.plus({hours:duration});}
const showTime=!(fieldMapping.all_day&&rawRecord[fieldMapping.all_day])&&scale==="month"&&startType!=="date"&&start.day===end.day;const colorValue=rawRecord[fieldMapping.color];const colorIndex=Array.isArray(colorValue)?colorValue[0]:colorValue;const title=rawRecord[fieldMapping.create_name_field||"display_name"];return{id:rawRecord.id,title,isAllDay,start,startType,end,endType,duration,colorIndex,isHatched:rawRecord["is_hatched"]||false,isStriked:rawRecord["is_striked"]||false,isTimeHidden:isTimeHidden||!showTime,rawRecord,};}
fetchFilters(resModel,fieldNames){return this.orm.searchRead(resModel,[["user_id","=",this.user.userId]],fieldNames);}
async loadFilters(data){const previousSections=data.filterSections;const sections={};const dynamicFiltersInfo={};for(const[fieldName,filterInfo]of Object.entries(this.meta.filtersInfo)){const previousSection=previousSections[fieldName];if(filterInfo.writeResModel){sections[fieldName]=await this.loadFilterSection(fieldName,filterInfo,previousSection);}else{dynamicFiltersInfo[fieldName]={filterInfo,previousSection};}}
return{sections,dynamicFiltersInfo};}
async loadFilterSection(fieldName,filterInfo,previousSection){const{filterFieldName,writeFieldName,writeResModel}=filterInfo;const fields=[writeFieldName,filterFieldName].filter(Boolean);const rawFilters=await this.fetchFilters(writeResModel,fields);const previousFilters=previousSection?previousSection.filters:[];const filters=rawFilters.map((rawFilter)=>{const previousRecordFilter=previousFilters.find((f)=>f.type==="record"&&f.recordId===rawFilter.id);return this.makeFilterRecord(filterInfo,previousRecordFilter,rawFilter);});const field=this.meta.fields[fieldName];const isUserOrPartner=["res.users","res.partner"].includes(field.relation);if(isUserOrPartner){const previousUserFilter=previousFilters.find((f)=>f.type==="user");filters.push(this.makeFilterUser(filterInfo,previousUserFilter,fieldName,rawFilters));}
const previousAllFilter=previousFilters.find((f)=>f.type==="all");filters.push(this.makeFilterAll(previousAllFilter,isUserOrPartner));return{label:filterInfo.label,fieldName,filters,avatar:{field:filterInfo.avatarFieldName,model:filterInfo.resModel,},hasAvatar:!!filterInfo.avatarFieldName,write:{field:writeFieldName,model:writeResModel,},canCollapse:filters.length>2,canAddFilter:!!filterInfo.writeResModel,};}
async loadDynamicFilters(data,filtersInfo){const sections={};for(const[fieldName,{filterInfo,previousSection}]of Object.entries(filtersInfo)){sections[fieldName]=await this.loadDynamicFilterSection(data,fieldName,filterInfo,previousSection);}
return sections;}
async loadDynamicFilterSection(data,fieldName,filterInfo,previousSection){const{fields,fieldMapping}=this.meta;const field=fields[fieldName];const previousFilters=previousSection?previousSection.filters:[];const rawFilters=Object.values(data.records).reduce((filters,record)=>{const rawValues=["many2many","one2many"].includes(field.type)?record.rawRecord[fieldName]:[record.rawRecord[fieldName]];for(const rawValue of rawValues){const value=Array.isArray(rawValue)?rawValue[0]:rawValue;if(!filters.find((f)=>f.id===value)){filters.push({id:value,[fieldName]:rawValue,colorIndex:record.colorIndex,});}}
return filters;},[]);const{colorFieldName}=filterInfo;const shouldFetchColor=colorFieldName&&`${fieldName}.${colorFieldName}`!==fields[fieldMapping.color].related;let rawColors=[];if(shouldFetchColor){const relatedIds=rawFilters.map(({id})=>id);if(relatedIds.length){rawColors=await this.orm.searchRead(field.relation,[["id","in",relatedIds]],[colorFieldName]);}}
const filters=rawFilters.map((rawFilter)=>{const previousDynamicFilter=previousFilters.find((f)=>f.type==="dynamic"&&f.value===rawFilter.id);return this.makeFilterDynamic(filterInfo,previousDynamicFilter,fieldName,rawFilter,rawColors);});return{label:filterInfo.label,fieldName,filters,avatar:{field:filterInfo.avatarFieldName,model:filterInfo.resModel,},hasAvatar:!!filterInfo.avatarFieldName,write:{field:filterInfo.writeFieldName,model:filterInfo.writeResModel,},canCollapse:filters.length>2,canAddFilter:!!filterInfo.writeResModel,};}
makeFilterDynamic(filterInfo,previousFilter,fieldName,rawFilter,rawColors){const{fieldMapping,fields}=this.meta;const rawValue=rawFilter[fieldName];const value=Array.isArray(rawValue)?rawValue[0]:rawValue;const field=fields[fieldName];const formatter=registry.category("formatters").get(field.type);const{colorFieldName}=filterInfo;const colorField=fields[fieldMapping.color];const hasFilterColorAttr=!!colorFieldName;const sameRelatedModel=colorField&&(colorField.relation===field.relation||(colorField.related&&colorField.related.startsWith(`${fieldName}.`)));let colorIndex=null;if(hasFilterColorAttr||sameRelatedModel){colorIndex=rawFilter.colorIndex;}
if(rawColors.length){const rawColor=rawColors.find(({id})=>id===value);colorIndex=rawColor?rawColor[colorFieldName]:0;}
return{type:"dynamic",recordId:null,value,label:formatter(rawValue,{field})||_t("Undefined"),active:previousFilter?previousFilter.active:true,canRemove:false,colorIndex,hasAvatar:!!value,};}
makeFilterRecord(filterInfo,previousFilter,rawRecord){const{colorFieldName,filterFieldName,writeFieldName}=filterInfo;const{fields,fieldMapping}=this.meta;const raw=rawRecord[writeFieldName];const value=Array.isArray(raw)?raw[0]:raw;const field=fields[writeFieldName];const isX2Many=["many2many","one2many"].includes(field.type);const formatter=registry.category("formatters").get(isX2Many?"many2one":field.type);const colorField=fields[fieldMapping.color];const colorValue=colorField&&(()=>{const sameRelatedModel=colorField.relation===field.relation;const sameRelatedField=colorField.related===`${writeFieldName}.${colorFieldName}`;const shouldHaveColor=sameRelatedModel||sameRelatedField;const colorToUse=raw?value:rawRecord[fieldMapping.color];return shouldHaveColor?colorToUse:null;})();const colorIndex=Array.isArray(colorValue)?colorValue[0]:colorValue;let active=false;if(previousFilter){active=previousFilter.active;}else if(filterFieldName){active=rawRecord[filterFieldName];}
return{type:"record",recordId:rawRecord.id,value,label:formatter(raw),active,canRemove:true,colorIndex,hasAvatar:!!value,};}
makeFilterUser(filterInfo,previousFilter,fieldName,rawRecords){const field=this.meta.fields[fieldName];const userFieldName=field.relation==="res.partner"?"partnerId":"userId";const value=this.user[userFieldName];let colorIndex=value;const rawRecord=rawRecords.find((r)=>r[filterInfo.writeFieldName][0]===value);if(filterInfo.colorFieldName&&rawRecord){const colorValue=rawRecord[filterInfo.colorFieldName];colorIndex=Array.isArray(colorValue)?colorValue[0]:colorValue;}
return{type:"user",recordId:null,value,label:this.user.name,active:previousFilter?previousFilter.active:true,canRemove:false,colorIndex,hasAvatar:!!value,};}
makeFilterAll(previousAllFilter,isUserOrPartner){return{type:"all",recordId:null,value:"all",label:isUserOrPartner?this.env._t("Everybody's calendars"):this.env._t("Everything"),active:previousAllFilter?previousAllFilter.active:false,canRemove:false,colorIndex:null,hasAvatar:false,};}}
CalendarModel.services=["user"];return __exports;});;

/* /web/static/src/views/calendar/calendar_renderer.js */
odoo.define('@web/views/calendar/calendar_renderer',async function(require){'use strict';let __exports={};const{ActionSwiper}=require("@web/core/action_swiper/action_swiper");const{CalendarCommonRenderer}=require("@web/views/calendar/calendar_common/calendar_common_renderer");const{CalendarYearRenderer}=require("@web/views/calendar/calendar_year/calendar_year_renderer");const{Component}=require("@odoo/owl");const CalendarRenderer=__exports.CalendarRenderer=class CalendarRenderer extends Component{get calendarComponent(){return this.constructor.components[this.props.model.scale];}
get calendarKey(){return`${this.props.model.scale}_${this.props.model.date.valueOf()}`;}
get actionSwiperProps(){return{onLeftSwipe:this.env.isSmall?{action:()=>this.props.setDate("next")}:undefined,onRightSwipe:this.env.isSmall?{action:()=>this.props.setDate("previous")}:undefined,animationOnMove:false,animationType:"forwards",swipeDistanceRatio:6,};}}
CalendarRenderer.components={day:CalendarCommonRenderer,week:CalendarCommonRenderer,month:CalendarCommonRenderer,year:CalendarYearRenderer,ActionSwiper,};CalendarRenderer.template="web.CalendarRenderer";return __exports;});;

/* /web/static/src/views/calendar/calendar_view.js */
odoo.define('@web/views/calendar/calendar_view',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{CalendarRenderer}=require("@web/views/calendar/calendar_renderer");const{CalendarArchParser}=require("@web/views/calendar/calendar_arch_parser");const{CalendarModel}=require("@web/views/calendar/calendar_model");const{CalendarController}=require("@web/views/calendar/calendar_controller");const calendarView=__exports.calendarView={type:"calendar",display_name:"Calendar",icon:"fa fa-calendar",multiRecord:true,searchMenuTypes:["filter","favorite"],ArchParser:CalendarArchParser,Controller:CalendarController,Model:CalendarModel,Renderer:CalendarRenderer,buttonTemplate:"web.CalendarController.controlButtons",props:(props,view)=>{const{ArchParser}=view;const{arch,relatedModels,resModel}=props;const archInfo=new ArchParser().parse(arch,relatedModels,resModel);return{...props,Model:view.Model,Renderer:view.Renderer,buttonTemplate:view.buttonTemplate,archInfo,};},};registry.category("views").add("calendar",calendarView);return __exports;});;

/* /web/static/src/views/calendar/calendar_year/calendar_year_popover.js */
odoo.define('@web/views/calendar/calendar_year/calendar_year_popover',async function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{formatDate}=require("@web/core/l10n/dates");const{getColor}=require("@web/views/calendar/colors");const{getFormattedDateSpan}=require('@web/views/calendar/utils');const{Component}=require("@odoo/owl");const CalendarYearPopover=__exports.CalendarYearPopover=class CalendarYearPopover extends Component{get recordGroups(){return this.computeRecordGroups();}
get dialogTitle(){return formatDate(this.props.date,{format:"DDD"});}
computeRecordGroups(){const recordGroups=this.groupRecords();return this.getSortedRecordGroups(recordGroups);}
groupRecords(){const recordGroups={};for(const record of this.props.records){const start=record.start;const end=record.end;const duration=end.diff(start,"days").days;const modifiedRecord=Object.create(record);modifiedRecord.startHour=!record.isAllDay&&duration<1?start.toFormat("HH:mm"):"";const formattedDate=getFormattedDateSpan(start,end);if(!(formattedDate in recordGroups)){recordGroups[formattedDate]={title:formattedDate,start,end,records:[],};}
recordGroups[formattedDate].records.push(modifiedRecord);}
return Object.values(recordGroups);}
getRecordClass(record){const{colorIndex}=record;const color=getColor(colorIndex);if(color&&typeof color==="number"){return`o_calendar_color_${color}`;}
return"";}
getRecordStyle(record){const{colorIndex}=record;const color=getColor(colorIndex);if(color&&typeof color==="string"){return`background-color: ${color};`;}
return"";}
getSortedRecordGroups(recordGroups){return recordGroups.sort((a,b)=>{if(a.start.hasSame(a.end,"days")){return Number.MIN_SAFE_INTEGER;}else if(b.start.hasSame(b.end,"days")){return Number.MAX_SAFE_INTEGER;}else if(a.start.toMillis()-b.start.toMillis()===0){return a.end.toMillis()-b.end.toMillis();}
return a.start.toMillis()-b.start.toMillis();});}
onCreateButtonClick(){this.props.createRecord({start:this.props.date,isAllDay:true,});this.props.close();}
onRecordClick(record){this.props.editRecord(record);this.props.close();}}
CalendarYearPopover.components={Dialog};CalendarYearPopover.template="web.CalendarYearPopover";CalendarYearPopover.subTemplates={popover:"web.CalendarYearPopover.popover",body:"web.CalendarYearPopover.body",footer:"web.CalendarYearPopover.footer",record:"web.CalendarYearPopover.record",};CalendarYearPopover.props={close:Function,date:true,model:Object,records:Array,createRecord:Function,deleteRecord:Function,editRecord:Function,};return __exports;});;

/* /web/static/src/views/calendar/calendar_year/calendar_year_renderer.js */
odoo.define('@web/views/calendar/calendar_year/calendar_year_renderer',async function(require){'use strict';let __exports={};const{formatDate}=require("@web/core/l10n/dates");const{localization}=require("@web/core/l10n/localization");const{useDebounced}=require("@web/core/utils/timing");const{getColor}=require("@web/views/calendar/colors");const{useCalendarPopover,useFullCalendar}=require("@web/views/calendar/hooks");const{CalendarYearPopover}=require("@web/views/calendar/calendar_year/calendar_year_popover");const{Component,useEffect,useRef,onRendered}=require("@odoo/owl");const CalendarYearRenderer=__exports.CalendarYearRenderer=class CalendarYearRenderer extends Component{setup(){this.months=luxon.Info.months();this.fcs={};for(const month of this.months){this.fcs[month]=useFullCalendar(`fullCalendar-${month}`,this.getOptionsForMonth(month));}
this.popover=useCalendarPopover(this.constructor.components.Popover);this.rootRef=useRef("root");this.onWindowResizeDebounced=useDebounced(this.onWindowResize,200);useEffect(()=>{this.updateSize();});onRendered(()=>{const year=formatDate(this.props.model.date,{format:"yyyy"});this.env.config.setDisplayName(`${this.props.displayName} (${year})`);});}
get options(){return{columnHeaderFormat:"EEEEE",contentHeight:0,dateClick:this.onDateClick,dayRender:this.onDayRender,defaultDate:this.props.model.date.toISO(),defaultView:"dayGridMonth",dir:localization.direction,droppable:true,editable:this.props.model.canEdit,eventLimit:this.props.model.eventLimit,eventRender:this.onEventRender,eventResizableFromStart:true,events:(_,successCb)=>successCb(this.mapRecordsToEvents()),firstDay:this.props.model.firstDayOfWeek,header:{left:false,center:"title",right:false},height:0,locale:luxon.Settings.defaultLocale,longPressDelay:500,navLinks:false,nowIndicator:true,plugins:["dayGrid","interaction","luxon"],select:this.onSelect,selectMinDistance:5,selectMirror:true,selectable:this.props.model.canCreate,showNonCurrentDates:false,timeZone:luxon.Settings.defaultZone.name,titleFormat:{month:"short",year:"numeric"},unselectAuto:false,weekNumberCalculation:"ISO",weekNumbers:false,windowResize:this.onWindowResizeDebounced,};}
mapRecordsToEvents(){return Object.values(this.props.model.records).map((r)=>this.convertRecordToEvent(r));}
convertRecordToEvent(record){return{id:record.id,title:record.title,start:record.start.toISO(),end:record.end.plus({day:1}).toISO(),allDay:true,rendering:"background",};}
getDateWithMonth(month){return this.props.model.date.set({month:this.months.indexOf(month)+1}).toISO();}
getOptionsForMonth(month){return{...this.options,defaultDate:this.getDateWithMonth(month),};}
getPopoverProps(date,records){return{date,records,model:this.props.model,createRecord:this.props.createRecord,deleteRecord:this.props.deleteRecord,editRecord:this.props.editRecord,};}
openPopover(target,date,records){this.popover.open(target,this.getPopoverProps(date,records),"o_cw_popover");}
unselect(){for(const fc of Object.values(this.fcs)){fc.api.unselect();}}
updateSize(){const height=window.innerHeight-this.rootRef.el.getBoundingClientRect().top;this.rootRef.el.style.height=`${height}px`;}
onDateClick(info){if(this.env.isSmall){this.props.model.load({date:luxon.DateTime.fromISO(info.dateStr),scale:"day",});return;}
const date=luxon.DateTime.fromISO(info.dateStr);const records=Object.values(this.props.model.records).filter((r)=>luxon.Interval.fromDateTimes(r.start.startOf("day"),r.end.endOf("day")).contains(date));this.popover.close();if(records.length){const target=info.dayEl;this.openPopover(target,date,records);}else if(this.props.model.canCreate){this.props.createRecord({start:luxon.DateTime.fromISO(info.dateStr),isAllDay:true,});}}
onDayRender(info){const date=luxon.DateTime.fromJSDate(info.date).toISODate();if(this.props.model.unusualDays.includes(date)){info.el.classList.add("o_calendar_disabled");}}
onEventRender(info){const{el,event}=info;el.dataset.eventId=event.id;el.classList.add("o_event");const record=this.props.model.records[event.id];if(record){const color=getColor(record.colorIndex);if(typeof color==="string"){el.style.backgroundColor=color;}else if(typeof color==="number"){el.classList.add(`o_calendar_color_${color}`);}else{el.classList.add("o_calendar_color_0");}
if(record.isHatched){el.classList.add("o_event_hatched");}
if(record.isStriked){el.classList.add("o_event_striked");}}}
async onSelect(info){this.popover.close();await this.props.createRecord({start:luxon.DateTime.fromISO(info.startStr),end:luxon.DateTime.fromISO(info.endStr).minus({days:1}),isAllDay:true,});this.unselect();}
onWindowResize(){this.updateSize();}}
CalendarYearRenderer.components={Popover:CalendarYearPopover,};CalendarYearRenderer.template="web.CalendarYearRenderer";return __exports;});;

/* /web/static/src/views/calendar/colors.js */
odoo.define('@web/views/calendar/colors',async function(require){'use strict';let __exports={};const CSS_COLOR_REGEX=/^((#[A-F0-9]{3})|(#[A-F0-9]{6})|((hsl|rgb)a?\(\s*(?:(\s*\d{1,3}%?\s*),?){3}(\s*,[0-9.]{1,4})?\))|)$/i;const colorMap=new Map();__exports.getColor=getColor;function getColor(key){if(!key){return false;}
if(colorMap.has(key)){return colorMap.get(key);}
if(typeof key==="string"&&key.match(CSS_COLOR_REGEX)){colorMap.set(key,key);}else if(typeof key==="number"){colorMap.set(key,((key-1)%55)+1);}else{colorMap.set(key,(((colorMap.size+1)*5)%24)+1);}
return colorMap.get(key);}
return __exports;});;

/* /web/static/src/views/calendar/date_picker/calendar_date_picker.js */
odoo.define('@web/views/calendar/date_picker/calendar_date_picker',async function(require){'use strict';let __exports={};const{Component,onMounted,onWillUnmount,useEffect,useRef,xml}=require("@odoo/owl");const{DateTime,Info}=luxon;const CalendarDatePicker=__exports.CalendarDatePicker=class CalendarDatePicker extends Component{setup(){this.rootRef=useRef("root");onMounted(()=>{this.$el.datepicker(this.options);});useEffect(()=>{this.highlight();});onWillUnmount(()=>{this.$el.datepicker("destroy");const picker=document.querySelector("#ui-datepicker-div:empty");if(picker){picker.remove();}});}
get options(){const weekdays=Array.from(Info.weekdays("narrow"));const last=weekdays.pop();return{dayNamesMin:[last,...weekdays],firstDay:(this.props.model.firstDayOfWeek||0)%7,monthNames:Info.months("short"),onSelect:this.onDateSelected.bind(this),showOtherMonths:true,dateFormat:"yy-mm-dd",};}
get $el(){return $(this.rootRef.el);}
highlight(){this.$el.datepicker("setDate",this.props.model.date.toFormat("yyyy-MM-dd")).find(".o_selected_range").removeClass("o_color o_selected_range");let $a;switch(this.props.model.scale){case"year":$a=this.$el.find("td");break;case"month":$a=this.$el.find("td");break;case"week":$a=this.$el.find("tr:has(.ui-state-active)");break;case"day":$a=this.$el.find("a.ui-state-active");break;}
$a.addClass("o_selected_range");$a.not(".ui-state-active").addClass("o_color");const{year,month,day}=DateTime.local();this.$el.find(".ui-datepicker-today").removeClass("ui-datepicker-today");this.$el.find(`td[data-year="${year}"][data-month="${month - 1}"]`).filter((i,e)=>{return e.textContent.trim()===day.toString();}).addClass("ui-datepicker-today");}
onDateSelected(_,info){const model=this.props.model;const date=DateTime.local(+info.currentYear,+info.currentMonth+1,+info.currentDay);let scale="week";if(model.date.hasSame(date,"day")){const scales=["month","week","day"];scale=scales[(scales.indexOf(model.scale)+1)%scales.length];}else{const currentDate=model.date.weekday===7?model.date.plus({day:1}):model.date;const pickedDate=date.weekday===7?date.plus({day:1}):date;if(currentDate.hasSame(pickedDate,"week")){scale="day";}}
model.load({scale,date});}}
CalendarDatePicker.props={model:Object,};CalendarDatePicker.template=xml`<div class="o_calendar_mini" t-ref="root" />`;return __exports;});;

/* /web/static/src/views/calendar/filter_panel/calendar_filter_panel.js */
odoo.define('@web/views/calendar/filter_panel/calendar_filter_panel',async function(require){'use strict';let __exports={};const{usePopover}=require("@web/core/popover/popover_hook");const{_t}=require("@web/core/l10n/translation");const{AutoComplete}=require("@web/core/autocomplete/autocomplete");const{Transition}=require("@web/core/transition");const{useOwnedDialogs,useService}=require("@web/core/utils/hooks");const{sprintf}=require("@web/core/utils/strings");const{SelectCreateDialog}=require("@web/views/view_dialogs/select_create_dialog");const{getColor}=require("@web/views/calendar/colors");const{Component,useState}=require("@odoo/owl");class CalendarFilterTooltip extends Component{}
CalendarFilterTooltip.template="web.CalendarFilterPanel.tooltip";let nextId=1;const CalendarFilterPanel=__exports.CalendarFilterPanel=class CalendarFilterPanel extends Component{setup(){this.state=useState({collapsed:{},fieldRev:1,});this.addDialog=useOwnedDialogs();this.orm=useService("orm");this.popover=usePopover();this.removePopover=null;}
getFilterColor(filter){return filter.colorIndex!==null?"o_cw_filter_color_"+getColor(filter.colorIndex):"";}
getAutoCompleteProps(section){return{autoSelect:true,resetOnSelect:true,placeholder:`+ ${_t("Add")} ${section.label}`,sources:[{placeholder:_t("Loading..."),options:(request)=>this.loadSource(section,request),},],onSelect:(option,params={})=>{if(option.action){option.action(params);return;}
this.props.model.createFilter(section.fieldName,option.value);},value:"",};}
async loadSource(section,request){const resModel=this.props.model.fields[section.fieldName].relation;const domain=[["id","not in",section.filters.filter((f)=>f.type!=="all").map((f)=>f.value)],];const records=await this.orm.call(resModel,"name_search",[],{name:request,operator:"ilike",args:domain,limit:8,context:{},});const options=records.map((result)=>({value:result[0],label:result[1],}));if(records.length>7){options.push({label:_t("Search More..."),action:()=>this.onSearchMore(section,resModel,domain,request),});}
if(records.length===0){options.push({label:_t("No records"),classList:"o_m2o_no_result",unselectable:true,});}
return options;}
async onSearchMore(section,resModel,domain,request){const dynamicFilters=[];if(request.length){const nameGets=await this.orm.call(resModel,"name_search",[],{name:request,args:domain,operator:"ilike",context:{},});dynamicFilters.push({description:sprintf(_t("Quick search: %s"),request),domain:[["id","in",nameGets.map((nameGet)=>nameGet[0])]],});}
const title=sprintf(_t("Search: %s"),section.label);this.addDialog(SelectCreateDialog,{title,noCreate:true,multiSelect:false,resModel,context:{},domain,onSelected:([resId])=>this.props.model.createFilter(section.fieldName,resId),dynamicFilters,});}
get nextFilterId(){nextId+=1;return nextId;}
isAllActive(section){let active=true;for(const filter of section.filters){if(filter.type!=="all"&&!filter.active){active=false;break;}}
return active;}
getFilterTypePriority(type){return["user","record","dynamic","all"].indexOf(type);}
getSortedFilters(section){return section.filters.slice().sort((a,b)=>{if(a.type===b.type){const va=a.value?-1:0;const vb=b.value?-1:0;if(a.type==="dynamic"&&va!==vb){return va-vb;}
return b.label.localeCompare(a.label);}else{return this.getFilterTypePriority(a.type)-this.getFilterTypePriority(b.type);}});}
toggleSection(section){if(section.canCollapse){this.state.collapsed[section.fieldName]=!this.state.collapsed[section.fieldName];}}
isSectionCollapsed(section){return this.state.collapsed[section.fieldName]||false;}
closeTooltip(){if(this.removePopover){this.removePopover();this.removePopover=null;}}
onFilterInputChange(section,filter,ev){this.props.model.updateFilters(section.fieldName,{[filter.value]:ev.target.checked,});}
onAllFilterInputChange(section,ev){const filters={};for(const filter of section.filters){if(filter.type!=="all"){filters[filter.value]=ev.target.checked;}}
this.props.model.updateFilters(section.fieldName,filters);}
onFilterMouseEnter(section,filter,ev){this.closeTooltip();if(!section.hasAvatar||!filter.hasAvatar){return;}
this.removePopover=this.popover.add(ev.currentTarget,CalendarFilterTooltip,{section,filter},{closeOnClickAway:false,popoverClass:"o-calendar-filter--tooltip",position:"top",});}
onFilterMouseLeave(){this.closeTooltip();}
onFilterRemoveBtnClick(section,filter){this.props.model.unlinkFilter(section.fieldName,filter.recordId);}
onFieldChanged(fieldName,filterValue){this.state.fieldRev+=1;this.props.model.createFilter(fieldName,filterValue);}}
CalendarFilterPanel.components={AutoComplete,Transition,};CalendarFilterPanel.template="web.CalendarFilterPanel";CalendarFilterPanel.subTemplates={filter:"web.CalendarFilterPanel.filter",};return __exports;});;

/* /web/static/src/views/calendar/hooks.js */
odoo.define('@web/views/calendar/hooks',async function(require){'use strict';let __exports={};const{loadCSS,loadJS}=require("@web/core/assets");const{browser}=require("@web/core/browser/browser");const{usePopover}=require("@web/core/popover/popover_hook");const{useService}=require("@web/core/utils/hooks");const{onMounted,onPatched,onWillStart,onWillUnmount,useComponent,useExternalListener,useRef,}=require("@odoo/owl");__exports.useCalendarPopover=useCalendarPopover;function useCalendarPopover(component){const owner=useComponent();const popover=usePopover();const dialog=useService("dialog");let remove=null;let fcPopover;useExternalListener(window,"mousedown",(ev)=>{if(fcPopover){ev.stopPropagation();}},{capture:true});function cleanup(){fcPopover=null;remove=null;}
function close(){if(remove){remove();}
cleanup();}
return{close,open(target,props,popoverClass){close();fcPopover=target.closest(".fc-popover");if(owner.env.isSmall){remove=dialog.add(component,props,{onClose:cleanup});}else{remove=popover.add(target,component,props,{popoverClass,position:"right",onClose:cleanup,});}},};}
__exports.useClickHandler=useClickHandler;function useClickHandler(singleClickCb,doubleClickCb){const component=useComponent();let clickTimeoutId=null;return function handle(...args){if(clickTimeoutId){doubleClickCb.call(component,...args);browser.clearTimeout(clickTimeoutId);clickTimeoutId=null;}else{clickTimeoutId=browser.setTimeout(()=>{singleClickCb.call(component,...args);clickTimeoutId=null;},250);}};}
__exports.useFullCalendar=useFullCalendar;function useFullCalendar(refName,params){const component=useComponent();const ref=useRef(refName);let instance=null;function boundParams(){const newParams={};for(const key in params){const value=params[key];newParams[key]=typeof value==="function"?value.bind(component):value;}
return newParams;}
async function loadJsFiles(){const files=["/web/static/lib/fullcalendar/core/main.js","/web/static/lib/fullcalendar/interaction/main.js","/web/static/lib/fullcalendar/daygrid/main.js","/web/static/lib/fullcalendar/luxon/main.js","/web/static/lib/fullcalendar/timegrid/main.js","/web/static/lib/fullcalendar/list/main.js",];for(const file of files){await loadJS(file);}}
async function loadCssFiles(){await Promise.all(["/web/static/lib/fullcalendar/core/main.css","/web/static/lib/fullcalendar/daygrid/main.css","/web/static/lib/fullcalendar/timegrid/main.css","/web/static/lib/fullcalendar/list/main.css",].map((file)=>loadCSS(file)));}
onWillStart(()=>Promise.all([loadJsFiles(),loadCssFiles()]));onMounted(()=>{try{instance=new FullCalendar.Calendar(ref.el,boundParams());instance.render();}catch(e){throw new Error(`Cannot instantiate FullCalendar\n${e.message}`);}});onPatched(()=>{instance.refetchEvents();});onWillUnmount(()=>{instance.destroy();});return{get api(){return instance;},get el(){return ref.el;},};}
return __exports;});;

/* /web/static/src/views/calendar/mobile_filter_panel/calendar_mobile_filter_panel.js */
odoo.define('@web/views/calendar/mobile_filter_panel/calendar_mobile_filter_panel',async function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{getColor}=require("@web/views/calendar/colors");const CalendarMobileFilterPanel=__exports.CalendarMobileFilterPanel=class CalendarMobileFilterPanel extends Component{get caretDirection(){return this.props.sideBarShown?"down":"left";}
getFilterColor(filter){return`o_color_${getColor(filter.colorIndex)}`;}
getFilterTypePriority(type){return["user","record","dynamic","all"].indexOf(type);}
getSortedFilters(section){return section.filters.slice().sort((a,b)=>{if(a.type===b.type){const va=a.value?-1:0;const vb=b.value?-1:0;if(a.type==="dynamic"&&va!==vb){return va-vb;}
return b.label.localeCompare(a.label);}else{return this.getFilterTypePriority(a.type)-this.getFilterTypePriority(b.type);}});}}
CalendarMobileFilterPanel.components={};CalendarMobileFilterPanel.template="web.CalendarMobileFilterPanel";return __exports;});;

/* /web/static/src/views/calendar/quick_create/calendar_quick_create.js */
odoo.define('@web/views/calendar/quick_create/calendar_quick_create',async function(require){'use strict';let __exports={};const{useAutofocus,useService}=require("@web/core/utils/hooks");const{Dialog}=require("@web/core/dialog/dialog");const{_lt}=require("@web/core/l10n/translation");const{Component}=require("@odoo/owl");const CalendarQuickCreate=__exports.CalendarQuickCreate=class CalendarQuickCreate extends Component{setup(){this.titleRef=useAutofocus({refName:"title"});this.notification=useService("notification");this.creatingRecord=false;}
get dialogTitle(){return _lt("New Event");}
get recordTitle(){return this.titleRef.el.value.trim();}
get record(){return{...this.props.record,title:this.recordTitle,};}
editRecord(){this.props.editRecord(this.record);this.props.close();}
async createRecord(){if(this.creatingRecord){return;}
if(this.recordTitle){try{this.creatingRecord=true;await this.props.model.createRecord(this.record);this.props.close();}catch{this.editRecord();}}else{this.titleRef.el.classList.add("o_field_invalid");this.notification.add(this.env._t("Meeting Subject"),{title:this.env._t("Invalid fields"),type:"danger",});}}
onInputKeyup(ev){switch(ev.key){case"Enter":this.createRecord();break;case"Escape":this.props.close();break;}}
onCreateBtnClick(){this.createRecord();}
onEditBtnClick(){this.editRecord();}
onCancelBtnClick(){this.props.close();}}
CalendarQuickCreate.template="web.CalendarQuickCreate";CalendarQuickCreate.components={Dialog,};CalendarQuickCreate.props={title:{type:String,optional:true},close:Function,record:Object,model:Object,editRecord:Function,};return __exports;});;

/* /web/static/src/views/calendar/utils.js */
odoo.define('@web/views/calendar/utils',async function(require){'use strict';let __exports={};__exports.getFormattedDateSpan=getFormattedDateSpan;function getFormattedDateSpan(start,end){const isSameDay=start.hasSame(end,"days");if(!isSameDay&&start.hasSame(end,"month")){return start.toFormat("LLLL d")+"-"+end.toFormat("d, y");}else{return isSameDay?start.toFormat("DDD"):start.toFormat("DDD")+" - "+end.toFormat("DDD");}}
return __exports;});;

/* /web/static/src/views/debug_items.js */
odoo.define('@web/views/debug_items',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{Dialog}=require("@web/core/dialog/dialog");const{editModelDebug}=require("@web/core/debug/debug_utils");const{formatDateTime,deserializeDateTime}=require("@web/core/l10n/dates");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{formatMany2one}=require("@web/views/fields/formatters");const{evalDomain}=require("@web/views/utils");const{FormViewDialog}=require("@web/views/view_dialogs/form_view_dialog");const{Component,onWillStart,useState,xml}=require("@odoo/owl");const debugRegistry=registry.category("debug");function viewSeparator(){return{type:"separator",sequence:300};}
debugRegistry.category("view").add("viewSeparator",viewSeparator);class GetViewDialog extends Component{}
GetViewDialog.template=xml`
<Dialog title="this.constructor.title">
    <pre t-esc="props.arch"/>
</Dialog>`;GetViewDialog.components={Dialog};GetViewDialog.props={arch:{type:String},close:{type:Function},};GetViewDialog.title=_lt("Get View");__exports.getView=getView;function getView({component,env}){let{arch}=component.props;if("viewInfo"in component.props){arch=component.props.viewInfo.arch;}
return{type:"item",description:env._t("Get View"),callback:()=>{env.services.dialog.add(GetViewDialog,{arch});},sequence:340,};}
debugRegistry.category("view").add("getView",getView);__exports.editView=editView;function editView({accessRights,component,env}){if(!accessRights.canEditView){return null;}
let{viewId,viewType:type}=component.env.config||{};if("viewInfo"in component.props){viewId=component.props.viewInfo.view_id;type=component.props.viewInfo.type;type=type==="tree"?"list":type;}
const displayName=type[0].toUpperCase()+type.slice(1);const description=env._t("Edit View: ")+displayName;return{type:"item",description,callback:()=>{editModelDebug(env,description,"ir.ui.view",viewId);},sequence:350,};}
debugRegistry.category("view").add("editView",editView);__exports.editSearchView=editSearchView;function editSearchView({accessRights,component,env}){if(!accessRights.canEditView){return null;}
let{searchViewId}=component.props.info||{};if("viewParams"in component.props){if(!component.props.viewParams.action.controlPanelFieldsView){return null;}
searchViewId=component.props.viewParams.action.controlPanelFieldsView.view_id;}
if(searchViewId===undefined){return null;}
const description=env._t("Edit SearchView");return{type:"item",description,callback:()=>{editModelDebug(env,description,"ir.ui.view",searchViewId);},sequence:360,};}
debugRegistry.category("view").add("editSearchView",editSearchView);class GetMetadataDialog extends Component{setup(){this.orm=useService("orm");this.dialogService=useService("dialog");this.title=this.env._t("View Metadata");this.state=useState({});onWillStart(()=>this.loadMetadata());}
onClickCreateXmlid(){const context=Object.assign({},this.context,{default_module:"__custom__",default_res_id:this.state.id,default_model:this.props.resModel,});this.dialogService.add(FormViewDialog,{context,onRecordSaved:()=>this.loadMetadata(),resModel:"ir.model.data",});}
async toggleNoupdate(){await this.env.services.orm.call("ir.model.data","toggle_noupdate",[this.props.resModel,this.state.id,]);await this.loadMetadata();}
async loadMetadata(){const args=[[this.props.resId]];const result=await this.orm.call(this.props.resModel,"get_metadata",args);const metadata=result[0];this.state.id=metadata.id;this.state.xmlid=metadata.xmlid;this.state.xmlids=metadata.xmlids;this.state.noupdate=metadata.noupdate;this.state.creator=formatMany2one(metadata.create_uid);this.state.lastModifiedBy=formatMany2one(metadata.write_uid);this.state.createDate=formatDateTime(deserializeDateTime(metadata.create_date));this.state.writeDate=formatDateTime(deserializeDateTime(metadata.write_date));}}
GetMetadataDialog.template="web.DebugMenu.GetMetadataDialog";GetMetadataDialog.components={Dialog};__exports.viewMetadata=viewMetadata;function viewMetadata({component,env}){const resId=component.model.root.resId;if(!resId){return null;}
return{type:"item",description:env._t("View Metadata"),callback:()=>{env.services.dialog.add(GetMetadataDialog,{resModel:component.props.resModel,resId,});},sequence:320,};}
debugRegistry.category("form").add("viewMetadata",viewMetadata);class SetDefaultDialog extends Component{setup(){this.orm=useService("orm");this.title=this.env._t("Set Defaults");this.state={fieldToSet:"",condition:"",scope:"self",};const root=this.props.component.model.root;this.fields=root.fields;this.fieldsInfo=root.activeFields;this.fieldNamesInView=root.fieldNames;this.fieldNamesBlackList=["message_attachment_count"];this.fieldsValues=root.data;this.modifierDatas={};this.fieldNamesInView.forEach((fieldName)=>{this.modifierDatas[fieldName]=this.fieldsInfo[fieldName].modifiers;});this.defaultFields=this.getDefaultFields();this.conditions=this.getConditions();}
getDefaultFields(){return this.fieldNamesInView.filter((fieldName)=>!this.fieldNamesBlackList.includes(fieldName)).map((fieldName)=>{const modifierData=this.modifierDatas[fieldName];let invisibleOrReadOnly;if(modifierData){const evalContext=this.props.component.model.root.evalContext;invisibleOrReadOnly=evalDomain(modifierData.invisible,evalContext)||evalDomain(modifierData.readonly,evalContext);}
const fieldInfo=this.fields[fieldName];const valueDisplayed=this.display(fieldInfo,this.fieldsValues[fieldName]);const value=valueDisplayed[0];const displayed=valueDisplayed[1];if(!value||invisibleOrReadOnly||fieldInfo.type==="one2many"||fieldInfo.type==="many2many"||fieldInfo.type==="binary"||this.fieldsInfo[fieldName].options.isPassword){return false;}
return{name:fieldName,string:fieldInfo.string,value,displayed,};}).filter((val)=>val).sort((field)=>field.string);}
getConditions(){return this.fieldNamesInView.filter((fieldName)=>{const fieldInfo=this.fields[fieldName];return fieldInfo.change_default;}).map((fieldName)=>{const fieldInfo=this.fields[fieldName];const valueDisplayed=this.display(fieldInfo,this.fieldsValues[fieldName]);const value=valueDisplayed[0];const displayed=valueDisplayed[1];return{name:fieldName,string:fieldInfo.string,value:value,displayed:displayed,};});}
display(fieldInfo,value){let displayed=value;if(value&&fieldInfo.type==="many2one"){displayed=value[1];value=value[0];}else if(value&&fieldInfo.type==="selection"){displayed=fieldInfo.selection.find((option)=>{return option[0]===value;})[1];}
return[value,displayed];}
async saveDefault(){if(!this.state.fieldToSet){return;}
const fieldToSet=this.defaultFields.find((field)=>{return field.name===this.state.fieldToSet;}).value;await this.orm.call("ir.default","set",[this.props.resModel,this.state.fieldToSet,fieldToSet,this.state.scope==="self",true,this.state.condition||false,]);this.props.close();}}
SetDefaultDialog.template="web.DebugMenu.SetDefaultDialog";SetDefaultDialog.components={Dialog};__exports.setDefaults=setDefaults;function setDefaults({component,env}){return{type:"item",description:env._t("Set Defaults"),callback:()=>{env.services.dialog.add(SetDefaultDialog,{resModel:component.props.resModel,component,});},sequence:310,};}
debugRegistry.category("form").add("setDefaults",setDefaults);__exports.manageAttachments=manageAttachments;function manageAttachments({component,env}){const resId=component.model.root.resId;if(!resId){return null;}
const description=env._t("Manage Attachments");return{type:"item",description,callback:()=>{env.services.action.doAction({res_model:"ir.attachment",name:description,views:[[false,"list"],[false,"form"],],type:"ir.actions.act_window",domain:[["res_model","=",component.props.resModel],["res_id","=",resId],],context:{default_res_model:component.props.resModel,default_res_id:resId,},});},sequence:330,};}
debugRegistry.category("form").add("manageAttachments",manageAttachments);return __exports;});;

/* /web/static/src/views/fields/ace/ace_field.js */
odoo.define('@web/views/fields/ace/ace_field',async function(require){'use strict';let __exports={};const{loadJS}=require("@web/core/assets");const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useBus,useService}=require("@web/core/utils/hooks");const{formatText}=require("@web/views/fields/formatters");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,onWillStart,onWillUpdateProps,useEffect,useRef}=require("@odoo/owl");const AceField=__exports.AceField=class AceField extends Component{setup(){this.aceEditor=null;this.editorRef=useRef("editor");this.cookies=useService("cookie");onWillStart(async()=>{await loadJS("/web/static/lib/ace/ace.js");const jsLibs=["/web/static/lib/ace/mode-python.js","/web/static/lib/ace/mode-xml.js","/web/static/lib/ace/mode-qweb.js",];const proms=jsLibs.map((url)=>loadJS(url));return Promise.all(proms);});onWillUpdateProps(this.updateAce);useEffect(()=>{this.setupAce();this.updateAce(this.props);return()=>this.destroyAce();},()=>[this.editorRef.el]);useBus(this.env.bus,"RELATIONAL_MODEL:WILL_SAVE_URGENTLY",()=>this.commitChanges());useBus(this.env.bus,"RELATIONAL_MODEL:NEED_LOCAL_CHANGES",({detail})=>detail.proms.push(this.commitChanges()));}
get aceSession(){return this.aceEditor.getSession();}
setupAce(){this.aceEditor=ace.edit(this.editorRef.el);this.aceEditor.setOptions({maxLines:Infinity,showPrintMargin:false,theme:this.cookies.current.color_scheme==="dark"?"ace/theme/monokai":"",});this.aceEditor.$blockScrolling=true;this.aceSession.setOptions({useWorker:false,tabSize:2,useSoftTabs:true,});this.aceEditor.on("blur",this.commitChanges.bind(this));}
updateAce({mode,readonly,value}){if(!this.aceEditor){return;}
this.aceSession.setOptions({mode:`ace/mode/${mode === "xml" ? "qweb" : mode}`,});this.aceEditor.setOptions({readOnly:readonly,highlightActiveLine:!readonly,highlightGutterLine:!readonly,});this.aceEditor.renderer.setOptions({displayIndentGuides:!readonly,showGutter:!readonly,});this.aceEditor.renderer.$cursorLayer.element.style.display=readonly?"none":"block";const formattedValue=formatText(value);if(this.aceSession.getValue()!==formattedValue){this.aceSession.setValue(formattedValue);}}
destroyAce(){if(this.aceEditor){this.aceEditor.destroy();}}
commitChanges(){if(!this.props.readonly){const value=this.aceSession.getValue();if((this.props.value||"")!==value){return this.props.update(value);}}}}
AceField.template="web.AceField";AceField.props={...standardFieldProps,mode:{type:String,optional:true},};AceField.defaultProps={mode:"qweb",};AceField.displayName=_lt("Ace Editor");AceField.supportedTypes=["text"];AceField.extractProps=({attrs})=>{return{mode:attrs.options.mode,};};registry.category("fields").add("ace",AceField);return __exports;});;

/* /web/static/src/views/fields/attachment_image/attachment_image_field.js */
odoo.define('@web/views/fields/attachment_image/attachment_image_field',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{Component}=require("@odoo/owl");const AttachmentImageField=__exports.AttachmentImageField=class AttachmentImageField extends Component{}
AttachmentImageField.template="web.AttachmentImageField";AttachmentImageField.displayName=_lt("Attachment Image");AttachmentImageField.supportedTypes=["many2one"];registry.category("fields").add("attachment_image",AttachmentImageField);return __exports;});;

/* /web/static/src/views/fields/badge/badge_field.js */
odoo.define('@web/views/fields/badge/badge_field',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const formatters=registry.category("formatters");const BadgeField=__exports.BadgeField=class BadgeField extends Component{get formattedValue(){const formatter=formatters.get(this.props.type);return formatter(this.props.value,{selection:this.props.record.fields[this.props.name].selection,});}
get classFromDecoration(){for(const decorationName in this.props.decorations){if(this.props.decorations[decorationName]){return`text-bg-${decorationName}`;}}
return"";}}
BadgeField.template="web.BadgeField";BadgeField.props={...standardFieldProps,};BadgeField.displayName=_lt("Badge");BadgeField.supportedTypes=["selection","many2one","char"];registry.category("fields").add("badge",BadgeField);return __exports;});;

/* /web/static/src/views/fields/badge_selection/badge_selection_field.js */
odoo.define('@web/views/fields/badge_selection/badge_selection_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_lt}=require("@web/core/l10n/translation");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const BadgeSelectionField=__exports.BadgeSelectionField=class BadgeSelectionField extends Component{get options(){switch(this.props.record.fields[this.props.name].type){case"many2one":return Object.values(this.props.record.preloadedData[this.props.name]).map((v)=>{return[v.id,v.display_name];});case"selection":return this.props.record.fields[this.props.name].selection;default:return[];}}
get string(){switch(this.props.type){case"many2one":return this.props.value?this.props.value[1]:"";case"selection":return this.props.value!==false?this.options.find((o)=>o[0]===this.props.value)[1]:"";default:return"";}}
get value(){const rawValue=this.props.value;return this.props.type==="many2one"&&rawValue?rawValue[0]:rawValue;}
stringify(value){return JSON.stringify(value);}
onChange(value){switch(this.props.type){case"many2one":if(value===false){this.props.update(false);}else{this.props.update(this.options.find((option)=>option[0]===value));}
break;case"selection":this.props.update(value);break;}}}
BadgeSelectionField.template="web.BadgeSelectionField";BadgeSelectionField.props={...standardFieldProps,};BadgeSelectionField.displayName=_lt("Badges");BadgeSelectionField.supportedTypes=["many2one","selection"];BadgeSelectionField.legacySpecialData="_fetchSpecialMany2ones";BadgeSelectionField.isEmpty=(record,fieldName)=>record.data[fieldName]===false;registry.category("fields").add("selection_badge",BadgeSelectionField);__exports.preloadSelection=preloadSelection;function preloadSelection(orm,record,fieldName){const field=record.fields[fieldName];const context=record.evalContext;const domain=record.getFieldDomain(fieldName).toList(context);return orm.call(field.relation,"name_search",["",domain]);}
registry.category("preloadedData").add("selection_badge",{loadOnTypes:["many2one"],preload:preloadSelection,});return __exports;});;

/* /web/static/src/views/fields/binary/binary_field.js */
odoo.define('@web/views/fields/binary/binary_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{isBinarySize}=require("@web/core/utils/binary");const{download}=require("@web/core/network/download");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{FileUploader}=require("@web/views/fields/file_handler");const{_lt}=require("@web/core/l10n/translation");const{Component,onWillUpdateProps,useState}=require("@odoo/owl");const BinaryField=__exports.BinaryField=class BinaryField extends Component{setup(){this.notification=useService("notification");this.state=useState({fileName:this.props.record.data[this.props.fileNameField]||"",});onWillUpdateProps((nextProps)=>{this.state.fileName=nextProps.record.data[nextProps.fileNameField]||"";});}
get fileName(){return this.state.fileName||this.props.value||"";}
update({data,name}){this.state.fileName=name||"";const{fileNameField,record}=this.props;const changes={[this.props.name]:data||false};if(fileNameField in record.fields&&record.data[fileNameField]!==name){changes[fileNameField]=name||false;}
return this.props.record.update(changes);}
async onFileDownload(){await download({data:{model:this.props.record.resModel,id:this.props.record.resId,field:this.props.name,filename_field:this.fileName,filename:this.fileName||"",download:true,data:isBinarySize(this.props.value)?null:this.props.value,},url:"/web/content",});}}
BinaryField.template="web.BinaryField";BinaryField.components={FileUploader,};BinaryField.props={...standardFieldProps,acceptedFileExtensions:{type:String,optional:true},fileNameField:{type:String,optional:true},};BinaryField.defaultProps={acceptedFileExtensions:"*",};BinaryField.displayName=_lt("File");BinaryField.supportedTypes=["binary"];BinaryField.extractProps=({attrs})=>{return{acceptedFileExtensions:attrs.options.accepted_file_extensions,fileNameField:attrs.filename,};};registry.category("fields").add("binary",BinaryField);return __exports;});;

/* /web/static/src/views/fields/boolean/boolean_field.js */
odoo.define('@web/views/fields/boolean/boolean_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_lt}=require("@web/core/l10n/translation");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{CheckBox}=require("@web/core/checkbox/checkbox");const{Component}=require("@odoo/owl");const BooleanField=__exports.BooleanField=class BooleanField extends Component{get isReadonly(){return!(this.props.record.isInEdition&&!this.props.record.isReadonly(this.props.name));}
onChange(newValue){this.props.update(newValue);}}
BooleanField.template="web.BooleanField";BooleanField.components={CheckBox};BooleanField.props={...standardFieldProps,};BooleanField.displayName=_lt("Checkbox");BooleanField.supportedTypes=["boolean"];BooleanField.isEmpty=()=>false;registry.category("fields").add("boolean",BooleanField);return __exports;});;

/* /web/static/src/views/fields/boolean_favorite/boolean_favorite_field.js */
odoo.define('@web/views/fields/boolean_favorite/boolean_favorite_field',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{archParseBoolean}=require("@web/views/utils");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const BooleanFavoriteField=__exports.BooleanFavoriteField=class BooleanFavoriteField extends Component{}
BooleanFavoriteField.template="web.BooleanFavoriteField";BooleanFavoriteField.props={...standardFieldProps,noLabel:{type:Boolean,optional:true},};BooleanFavoriteField.defaultProps={noLabel:false,};BooleanFavoriteField.displayName=_lt("Favorite");BooleanFavoriteField.supportedTypes=["boolean"];BooleanFavoriteField.isEmpty=()=>false;BooleanFavoriteField.extractProps=({attrs})=>{return{noLabel:archParseBoolean(attrs.nolabel),};};registry.category("fields").add("boolean_favorite",BooleanFavoriteField);return __exports;});;

/* /web/static/src/views/fields/boolean_toggle/boolean_toggle_field.js */
odoo.define('@web/views/fields/boolean_toggle/boolean_toggle_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_lt}=require("@web/core/l10n/translation");const{BooleanField}=require("@web/views/fields/boolean/boolean_field");const BooleanToggleField=__exports.BooleanToggleField=class BooleanToggleField extends BooleanField{get isReadonly(){return this.props.record.isReadonly(this.props.name);}
onChange(newValue){this.props.update(newValue,{save:this.props.autosave});}}
BooleanToggleField.template="web.BooleanToggleField";BooleanToggleField.displayName=_lt("Toggle");BooleanToggleField.props={...BooleanField.props,autosave:{type:Boolean,optional:true},};BooleanToggleField.extractProps=({attrs})=>{return{autosave:"autosave"in attrs.options?Boolean(attrs.options.autosave):true,};};registry.category("fields").add("boolean_toggle",BooleanToggleField);return __exports;});;

/* /web/static/src/views/fields/boolean_toggle/list_boolean_toggle_field.js */
odoo.define('@web/views/fields/boolean_toggle/list_boolean_toggle_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{BooleanToggleField}=require("@web/views/fields/boolean_toggle/boolean_toggle_field");const ListBooleanToggleField=__exports.ListBooleanToggleField=class ListBooleanToggleField extends BooleanToggleField{onClick(){if(!this.props.readonly){this.props.update(!this.props.value,{save:this.props.autosave});}}}
ListBooleanToggleField.template="web.ListBooleanToggleField";registry.category("fields").add("list.boolean_toggle",ListBooleanToggleField);return __exports;});;

/* /web/static/src/views/fields/char/char_field.js */
odoo.define('@web/views/fields/char/char_field',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{archParseBoolean}=require("@web/views/utils");const{formatChar}=require("@web/views/fields/formatters");const{useInputField}=require("@web/views/fields/input_field_hook");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{TranslationButton}=require("@web/views/fields/translation_button");const{useDynamicPlaceholder}=require("@web/views/fields/dynamicplaceholder_hook");const{Component,onMounted,onWillUnmount,useRef}=require("@odoo/owl");const CharField=__exports.CharField=class CharField extends Component{setup(){if(this.props.dynamicPlaceholder){this.dynamicPlaceholder=useDynamicPlaceholder();}
this.input=useRef("input");useInputField({getValue:()=>this.props.value||"",parse:(v)=>this.parse(v)});onMounted(this.onMounted);onWillUnmount(this.onWillUnmount);}
async onKeydownListener(ev){if(ev.key===this.dynamicPlaceholder.TRIGGER_KEY&&ev.target===this.input.el){const baseModel=this.props.record.data.mailing_model_real;if(baseModel){await this.dynamicPlaceholder.open(this.input.el,baseModel,{validateCallback:this.onDynamicPlaceholderValidate.bind(this),closeCallback:this.onDynamicPlaceholderClose.bind(this)});}}}
onMounted(){if(this.props.dynamicPlaceholder){this.keydownListenerCallback=this.onKeydownListener.bind(this);document.addEventListener('keydown',this.keydownListenerCallback);}}
onWillUnmount(){if(this.props.dynamicPlaceholder){document.removeEventListener('keydown',this.keydownListenerCallback);}}
onDynamicPlaceholderValidate(chain,defaultValue){if(chain){const triggerKeyReplaceRegex=new RegExp(`${this.dynamicPlaceholder.TRIGGER_KEY}$`);let dynamicPlaceholder="{{object."+chain.join('.');dynamicPlaceholder+=defaultValue&&defaultValue!==''?` or '''${defaultValue}'''}}`:'}}';this.props.update(this.input.el.value.replace(triggerKeyReplaceRegex,'')+dynamicPlaceholder);}}
onDynamicPlaceholderClose(){this.input.el.focus();}
get formattedValue(){return formatChar(this.props.value,{isPassword:this.props.isPassword});}
parse(value){if(this.props.shouldTrim){return value.trim();}
return value;}}
CharField.template="web.CharField";CharField.components={TranslationButton,};CharField.defaultProps={dynamicPlaceholder:false};CharField.props={...standardFieldProps,autocomplete:{type:String,optional:true},isPassword:{type:Boolean,optional:true},placeholder:{type:String,optional:true},dynamicPlaceholder:{type:Boolean,optional:true},shouldTrim:{type:Boolean,optional:true},maxLength:{type:Number,optional:true},isTranslatable:{type:Boolean,optional:true},};CharField.displayName=_lt("Text");CharField.supportedTypes=["char"];CharField.extractProps=({attrs,field})=>{return{shouldTrim:field.trim&&!archParseBoolean(attrs.password),maxLength:field.size,isTranslatable:field.translate,dynamicPlaceholder:attrs.options.dynamic_placeholder,autocomplete:attrs.autocomplete,isPassword:archParseBoolean(attrs.password),placeholder:attrs.placeholder,};};registry.category("fields").add("char",CharField);return __exports;});;

/* /web/static/src/views/fields/color/color_field.js */
odoo.define('@web/views/fields/color/color_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,useState,onWillUpdateProps}=require("@odoo/owl");const ColorField=__exports.ColorField=class ColorField extends Component{setup(){this.state=useState({color:this.props.value||'',});onWillUpdateProps((nextProps)=>{this.state.color=nextProps.value||'';});}
get isReadonly(){return this.props.record.isReadonly(this.props.name);}}
ColorField.template="web.ColorField";ColorField.props={...standardFieldProps,};ColorField.supportedTypes=["char"];registry.category("fields").add("color",ColorField);return __exports;});;

/* /web/static/src/views/fields/color_picker/color_picker_field.js */
odoo.define('@web/views/fields/color_picker/color_picker_field',async function(require){'use strict';let __exports={};const{ColorList}=require("@web/core/colorlist/colorlist");const{registry}=require("@web/core/registry");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const ColorPickerField=__exports.ColorPickerField=class ColorPickerField extends Component{get canToggle(){return this.props.record.activeFields[this.props.name].viewType!=="list";}
get isExpanded(){return!this.canToggle&&!this.props.readonly;}
switchColor(colorIndex){this.props.update(colorIndex);}}
ColorPickerField.template="web.ColorPickerField";ColorPickerField.components={ColorList,};ColorPickerField.props={...standardFieldProps,};ColorPickerField.supportedTypes=["integer"];ColorPickerField.RECORD_COLORS=[0,1,2,3,4,5,6,7,8,9,10,11];registry.category("fields").add("color_picker",ColorPickerField);return __exports;});;

/* /web/static/src/views/fields/copy_clipboard/copy_button.js */
odoo.define('@web/views/fields/copy_clipboard/copy_button',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{Tooltip}=require("@web/core/tooltip/tooltip");const{useService}=require("@web/core/utils/hooks");const{Component,useRef}=require("@odoo/owl");const CopyButton=__exports.CopyButton=class CopyButton extends Component{setup(){this.button=useRef("button");this.popover=useService("popover");}
showTooltip(){const closeTooltip=this.popover.add(this.button.el,Tooltip,{tooltip:this.props.successText,});browser.setTimeout(()=>{closeTooltip();},800);}
async onClick(){if(!browser.navigator.clipboard){return browser.console.warn("This browser doesn't allow to copy to clipboard");}
let write;if(typeof this.props.content==="string"||this.props.content instanceof String){write=(value)=>browser.navigator.clipboard.writeText(value);}else{write=(value)=>browser.navigator.clipboard.write(value);}
try{await write(this.props.content);}catch(error){return browser.console.warn(error);}
this.showTooltip();}}
CopyButton.template="web.CopyButton";CopyButton.props={className:{type:String,optional:true},copyText:{type:String,optional:true},successText:{type:String,optional:true},content:{type:[String,Object],optional:true},};return __exports;});;

/* /web/static/src/views/fields/copy_clipboard/copy_clipboard_field.js */
odoo.define('@web/views/fields/copy_clipboard/copy_clipboard_field',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{CopyButton}=require("@web/views/fields/copy_clipboard/copy_button");const{UrlField}=require("@web/views/fields/url/url_field");const{CharField}=require("@web/views/fields/char/char_field");const{TextField}=require("@web/views/fields/text/text_field");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");class CopyClipboardField extends Component{setup(){this.copyText=this.env._t("Copy");this.successText=this.env._t("Copied");}
get copyButtonClassName(){return`o_btn_${this.props.type}_copy`;}}
CopyClipboardField.template="web.CopyClipboardField";CopyClipboardField.props={...standardFieldProps,};const CopyClipboardButtonField=__exports.CopyClipboardButtonField=class CopyClipboardButtonField extends CopyClipboardField{get copyButtonClassName(){const classNames=[super.copyButtonClassName];classNames.push("rounded-2");return classNames.join(" ");}}
CopyClipboardButtonField.template="web.CopyClipboardButtonField";CopyClipboardButtonField.components={CopyButton};CopyClipboardButtonField.displayName=_lt("Copy to Clipboard");registry.category("fields").add("CopyClipboardButton",CopyClipboardButtonField);const CopyClipboardCharField=__exports.CopyClipboardCharField=class CopyClipboardCharField extends CopyClipboardField{}
CopyClipboardCharField.components={Field:CharField,CopyButton};CopyClipboardCharField.displayName=_lt("Copy Text to Clipboard");CopyClipboardCharField.supportedTypes=["char"];registry.category("fields").add("CopyClipboardChar",CopyClipboardCharField);const CopyClipboardTextField=__exports.CopyClipboardTextField=class CopyClipboardTextField extends CopyClipboardField{}
CopyClipboardTextField.components={Field:TextField,CopyButton};CopyClipboardTextField.displayName=_lt("Copy Multiline Text to Clipboard");CopyClipboardTextField.supportedTypes=["text"];registry.category("fields").add("CopyClipboardText",CopyClipboardTextField);const CopyClipboardURLField=__exports.CopyClipboardURLField=class CopyClipboardURLField extends CopyClipboardField{}
CopyClipboardURLField.components={Field:UrlField,CopyButton};CopyClipboardURLField.displayName=_lt("Copy URL to Clipboard");CopyClipboardURLField.supportedTypes=["char"];registry.category("fields").add("CopyClipboardURL",CopyClipboardURLField);return __exports;});;

/* /web/static/src/views/fields/date/date_field.js */
odoo.define('@web/views/fields/date/date_field',async function(require){'use strict';let __exports={};const{DatePicker}=require("@web/core/datepicker/datepicker");const{areDateEquals,formatDate,formatDateTime}=require("@web/core/l10n/dates");const{localization}=require("@web/core/l10n/localization");const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const DateField=__exports.DateField=class DateField extends Component{setup(){this.lastSetValue=null;}
get isDateTime(){return this.props.record.fields[this.props.name].type==="datetime";}
get date(){return this.props.value&&this.props.value.startOf("day");}
get formattedValue(){return this.isDateTime?formatDateTime(this.props.value,{format:localization.dateFormat}):formatDate(this.props.value);}
onDateTimeChanged(date){if(!areDateEquals(this.date||"",date)){this.props.update(date);}}
onDatePickerInput(ev){this.props.setDirty(ev.target.value!==this.lastSetValue);}
onUpdateInput(date){this.props.setDirty(false);this.lastSetValue=date;}}
DateField.template="web.DateField";DateField.components={DatePicker,};DateField.props={...standardFieldProps,pickerOptions:{type:Object,optional:true},placeholder:{type:String,optional:true},};DateField.defaultProps={pickerOptions:{},};DateField.displayName=_lt("Date");DateField.supportedTypes=["date","datetime"];DateField.extractProps=({attrs})=>{return{pickerOptions:attrs.options.datepicker,placeholder:attrs.placeholder,};};registry.category("fields").add("date",DateField);return __exports;});;

/* /web/static/src/views/fields/daterange/daterange_field.js */
odoo.define('@web/views/fields/daterange/daterange_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{loadJS}=require("@web/core/assets");const{luxonToMoment,momentToLuxon}=require("@web/core/l10n/dates");const{useService}=require("@web/core/utils/hooks");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,onWillStart,useExternalListener,useRef,useEffect}=require("@odoo/owl");const formatters=registry.category("formatters");const parsers=registry.category("parsers");const DateRangeField=__exports.DateRangeField=class DateRangeField extends Component{setup(){this.notification=useService("notification");this.root=useRef("root");this.isPickerShown=false;this.pickerContainer;useExternalListener(window,"scroll",this.onWindowScroll,{capture:true});onWillStart(()=>loadJS("/web/static/lib/daterangepicker/daterangepicker.js"));useEffect((el)=>{if(el){window.$(el).daterangepicker({timePicker:this.isDateTime,timePicker24Hour:true,timePickerIncrement:5,autoUpdateInput:false,locale:{applyLabel:this.env._t("Apply"),cancelLabel:this.env._t("Cancel"),},startDate:this.startDate?luxonToMoment(this.startDate):window.moment(),endDate:this.endDate?luxonToMoment(this.endDate):window.moment(),drops:"auto",});this.pickerContainer=window.$(el).data("daterangepicker").container[0];window.$(el).on("apply.daterangepicker",this.onPickerApply.bind(this));window.$(el).on("show.daterangepicker",this.onPickerShow.bind(this));window.$(el).on("hide.daterangepicker",this.onPickerHide.bind(this));this.pickerContainer.dataset.name=this.props.name;}
return()=>{if(el){this.pickerContainer.remove();}};},()=>[this.root.el,this.props.value]);}
get isDateTime(){return this.props.formatType==="datetime";}
get formattedValue(){return this.formatValue(this.props.formatType,this.props.value);}
get formattedEndDate(){return this.formatValue(this.props.formatType,this.endDate);}
get formattedStartDate(){return this.formatValue(this.props.formatType,this.startDate);}
get startDate(){return this.props.record.data[this.props.relatedStartDateField||this.props.name];}
get endDate(){return this.props.record.data[this.props.relatedEndDateField||this.props.name];}
get relatedDateRangeField(){return this.props.relatedStartDateField?this.props.relatedStartDateField:this.props.relatedEndDateField;}
formatValue(format,value){const formatter=formatters.get(format);let formattedValue;try{formattedValue=formatter(value);}catch{this.props.record.setInvalidField(this.props.name);}
return formattedValue;}
updateRange(start,end){return this.props.record.update({[this.props.relatedStartDateField||this.props.name]:start,[this.props.relatedEndDateField||this.props.name]:end,});}
onChangeInput(ev){const parse=parsers.get(this.props.formatType);let value;try{value=parse(ev.target.value);}catch{this.props.record.setInvalidField(this.props.name);return;}
this.props.update(value);}
onWindowScroll(ev){const target=ev.target;if(this.isPickerShown&&!this.env.isSmall&&(target===window||!this.pickerContainer.contains(target))){window.$(this.root.el).data("daterangepicker").hide();}}
async onPickerApply(ev,picker){const start=this.isDateTime?picker.startDate:picker.startDate.startOf("day");const end=this.isDateTime?picker.endDate:picker.endDate.startOf("day");const dates=[start,end].map(momentToLuxon);await this.updateRange(dates[0],dates[1]);const input=document.querySelector(`.o_field_daterange[name='${this.relatedDateRangeField}'] input`);if(!input){return;}
const target=window.$(input).data("daterangepicker");target.setStartDate(picker.startDate);target.setEndDate(picker.endDate);}
onPickerShow(){this.isPickerShown=true;}
onPickerHide(){this.isPickerShown=false;}}
DateRangeField.template="web.DateRangeField";DateRangeField.props={...standardFieldProps,relatedEndDateField:{type:String,optional:true},relatedStartDateField:{type:String,optional:true},formatType:{type:String,optional:true},placeholder:{type:String,optional:true},};DateRangeField.supportedTypes=["date","datetime"];DateRangeField.extractProps=({attrs,field})=>{return{relatedEndDateField:attrs.options.related_end_date,relatedStartDateField:attrs.options.related_start_date,formatType:attrs.options.format_type||field.type,placeholder:attrs.placeholder,};};registry.category("fields").add("daterange",DateRangeField);return __exports;});;

/* /web/static/src/views/fields/datetime/datetime_field.js */
odoo.define('@web/views/fields/datetime/datetime_field',async function(require){'use strict';let __exports={};const{DateTimePicker}=require("@web/core/datepicker/datepicker");const{areDateEquals,formatDateTime}=require("@web/core/l10n/dates");const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const DateTimeField=__exports.DateTimeField=class DateTimeField extends Component{setup(){this.lastSetValue=null;}
get formattedValue(){return formatDateTime(this.props.value);}
onDateTimeChanged(date){if(!areDateEquals(this.props.value||"",date)){this.props.update(date);}}
onDatePickerInput(ev){this.props.setDirty(ev.target.value!==this.lastSetValue);}
onUpdateInput(date){this.props.setDirty(false);this.lastSetValue=date;}}
DateTimeField.template="web.DateTimeField";DateTimeField.components={DateTimePicker,};DateTimeField.props={...standardFieldProps,pickerOptions:{type:Object,optional:true},placeholder:{type:String,optional:true},};DateTimeField.defaultProps={pickerOptions:{},};DateTimeField.displayName=_lt("Date & Time");DateTimeField.supportedTypes=["datetime"];DateTimeField.extractProps=({attrs})=>{return{pickerOptions:attrs.options.datepicker,placeholder:attrs.placeholder,};};registry.category("fields").add("datetime",DateTimeField);return __exports;});;

/* /web/static/src/views/fields/domain/domain_field.js */
odoo.define('@web/views/fields/domain/domain_field',async function(require){'use strict';let __exports={};const{DomainSelector}=require("@web/core/domain_selector/domain_selector");const{DomainSelectorDialog}=require("@web/core/domain_selector_dialog/domain_selector_dialog");const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useBus,useService,useOwnedDialogs}=require("@web/core/utils/hooks");const{Domain}=require("@web/core/domain");const{SelectCreateDialog}=require("@web/views/view_dialogs/select_create_dialog");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,onWillStart,onWillUpdateProps,useState}=require("@odoo/owl");const DomainField=__exports.DomainField=class DomainField extends Component{setup(){this.rpc=useService("rpc");this.orm=useService("orm");this.state=useState({recordCount:null,isValid:true,});this.addDialog=useOwnedDialogs();this.displayedDomain=null;this.isDebugEdited=false;onWillStart(()=>{this.displayedDomain=this.props.value;this.loadCount(this.props);});onWillUpdateProps((nextProps)=>{this.isDebugEdited=this.isDebugEdited&&this.props.readonly===nextProps.readonly;if(!this.isDebugEdited){this.displayedDomain=nextProps.value;this.loadCount(nextProps);}});useBus(this.env.bus,"RELATIONAL_MODEL:NEED_LOCAL_CHANGES",async(ev)=>{if(this.isDebugEdited){const props=this.props;const prom=this.quickValidityCheck(props);ev.detail.proms.push(prom);prom.then((isValid)=>{if(isValid){this.isDebugEdited=false;}else{this.state.isValid=false;this.state.recordCount=0;this.props.record.setInvalidField(props.name);}});}});}
async quickValidityCheck(p){const model=this.getResModel(p);if(!model){return false;}
try{const domain=this.getDomain(p.value).toList(this.getContext(p));return this.rpc("/web/domain/validate",{model,domain});}catch(_){return false;}}
getContext(p){return p.record.getFieldContext(p.name);}
getResModel(p){let resModel=p.resModel;if(p.record.fieldNames.includes(resModel)){resModel=p.record.data[resModel];}
return resModel;}
onButtonClick(){this.addDialog(SelectCreateDialog,{title:this.env._t("Selected records"),noCreate:true,multiSelect:false,resModel:this.getResModel(this.props),domain:this.getDomain(this.props.value).toList(this.getContext(this.props))||[],context:this.getContext(this.props)||{},},{onClose:()=>this.loadCount(this.props),});}
get isValidDomain(){try{this.getDomain(this.props.value).toList();return true;}catch(_e){return false;}}
getDomain(value){return new Domain(value||"[]");}
async loadCount(props){if(!this.getResModel(props)){Object.assign(this.state,{recordCount:0,isValid:true});}
let recordCount;try{const domain=this.getDomain(props.value).toList(this.getContext(props));recordCount=await this.orm.silent.call(this.getResModel(props),"search_count",[domain],{context:this.getContext(props)});}catch(_e){Object.assign(this.state,{recordCount:0,isValid:false});return;}
Object.assign(this.state,{recordCount,isValid:true});}
update(domain,isDebugEdited){this.isDebugEdited=isDebugEdited;return this.props.update(domain);}
onEditDialogBtnClick(){this.addDialog(DomainSelectorDialog,{resModel:this.getResModel(this.props),initialValue:this.props.value||"[]",readonly:this.props.readonly,isDebugMode:!!this.env.debug,onSelected:this.props.update,});}}
DomainField.template="web.DomainField";DomainField.components={DomainSelector,};DomainField.props={...standardFieldProps,editInDialog:{type:Boolean,optional:true},resModel:{type:String,optional:true},};DomainField.defaultProps={editInDialog:false,};DomainField.displayName=_lt("Domain");DomainField.supportedTypes=["char"];DomainField.isEmpty=()=>false;DomainField.extractProps=({attrs})=>{return{editInDialog:attrs.options.in_dialog,resModel:attrs.options.model,};};registry.category("fields").add("domain",DomainField);return __exports;});;

/* /web/static/src/views/fields/dynamicplaceholder_hook.js */
odoo.define('@web/views/fields/dynamicplaceholder_hook',async function(require){'use strict';let __exports={};const{useUniquePopover}=require("@web/core/model_field_selector/unique_popover_hook");const{useModelField}=require("@web/core/model_field_selector/model_field_hook");const{ModelFieldSelectorPopover}=require("@web/core/model_field_selector/model_field_selector_popover");__exports.useDynamicPlaceholder=useDynamicPlaceholder;function useDynamicPlaceholder(){const popover=useUniquePopover();const modelField=useModelField();let dynamicPlaceholderChain=[];function update(chain){dynamicPlaceholderChain=chain;}
return{TRIGGER_KEY:'#',async open(element,baseModel,options={}){dynamicPlaceholderChain=await modelField.loadChain(baseModel,"");popover.add(element,ModelFieldSelectorPopover,{chain:dynamicPlaceholderChain,update:update,validate:options.validateCallback,showSearchInput:true,isDebugMode:true,needDefaultValue:true,loadChain:modelField.loadChain,filter:(model)=>!["one2many","boolean","many2many"].includes(model.type),},{closeOnClickAway:true,onClose:options.closeCallback,onPositioned:options.positionCallback,});}};}
return __exports;});;

/* /web/static/src/views/fields/email/email_field.js */
odoo.define('@web/views/fields/email/email_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_lt}=require("@web/core/l10n/translation");const{useInputField}=require("@web/views/fields/input_field_hook");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const EmailField=__exports.EmailField=class EmailField extends Component{setup(){useInputField({getValue:()=>this.props.value||""});}}
EmailField.template="web.EmailField";EmailField.props={...standardFieldProps,placeholder:{type:String,optional:true},};EmailField.extractProps=({attrs})=>{return{placeholder:attrs.placeholder,};};EmailField.displayName=_lt("Email");EmailField.supportedTypes=["char"];class FormEmailField extends EmailField{}
FormEmailField.template="web.FormEmailField";registry.category("fields").add("email",EmailField);registry.category("fields").add("form.email",FormEmailField);return __exports;});;

/* /web/static/src/views/fields/field.js */
odoo.define('@web/views/fields/field',async function(require){'use strict';let __exports={};const{evaluateExpr}=require("@web/core/py_js/py");const{registry}=require("@web/core/registry");const{archParseBoolean,evalDomain,getClassNameFromDecoration,X2M_TYPES,}=require("@web/views/utils");const{getTooltipInfo}=require("@web/views/fields/field_tooltip");const{Component,xml}=require("@odoo/owl");const viewRegistry=registry.category("views");const fieldRegistry=registry.category("fields");class DefaultField extends Component{}
DefaultField.template=xml``;function getFieldClassFromRegistry(fieldType,widget,viewType,jsClass){if(jsClass&&widget){const name=`${jsClass}.${widget}`;if(fieldRegistry.contains(name)){return fieldRegistry.get(name);}}
if(viewType&&widget){const name=`${viewType}.${widget}`;if(fieldRegistry.contains(name)){return fieldRegistry.get(name);}}
if(widget){if(fieldRegistry.contains(widget)){return fieldRegistry.get(widget);}
console.warn(`Missing widget: ${widget} for field of type ${fieldType}`);}
if(viewType&&fieldType){const name=`${viewType}.${fieldType}`;if(fieldRegistry.contains(name)){return fieldRegistry.get(name);}}
if(fieldRegistry.contains(fieldType)){return fieldRegistry.get(fieldType);}
return DefaultField;}
__exports.fieldVisualFeedback=fieldVisualFeedback;function fieldVisualFeedback(FieldComponent,record,fieldName,fieldInfo){const modifiers=fieldInfo.modifiers||{};const readonly=evalDomain(modifiers.readonly,record.evalContext);const inEdit=record.isInEdition;let empty=!record.isVirtual;if("isEmpty"in FieldComponent){empty=empty&&FieldComponent.isEmpty(record,fieldName);}else{empty=empty&&!record.data[fieldName];}
empty=inEdit?empty&&readonly:empty;return{readonly,required:evalDomain(modifiers.required,record.evalContext),invalid:record.isInvalid(fieldName),empty,};}
const Field=__exports.Field=class Field extends Component{setup(){this.FieldComponent=this.props.fieldInfo.FieldComponent;if(!this.FieldComponent){const fieldType=this.props.record.fields[this.props.name].type;this.FieldComponent=getFieldClassFromRegistry(fieldType,this.props.type);}}
get classNames(){const{class:_class,fieldInfo,name,record}=this.props;const{readonly,required,invalid,empty}=fieldVisualFeedback(this.FieldComponent,record,name,fieldInfo);const classNames={o_field_widget:true,o_readonly_modifier:readonly,o_required_modifier:required,o_field_invalid:invalid,o_field_empty:empty,[`o_field_${this.type}`]:true,[_class]:Boolean(_class),};if(this.FieldComponent.additionalClasses){for(const cls of this.FieldComponent.additionalClasses){classNames[cls]=true;}}
const{decorations}=fieldInfo;const evalContext=record.evalContext;for(const decoName in decorations){const value=evaluateExpr(decorations[decoName],evalContext);classNames[getClassNameFromDecoration(decoName)]=value;}
return classNames;}
get type(){return this.props.type||this.props.record.fields[this.props.name].type;}
get fieldComponentProps(){const record=this.props.record;const evalContext=record.evalContext;const field=record.fields[this.props.name];const fieldInfo=this.props.fieldInfo;const modifiers=fieldInfo.modifiers||{};const readonlyFromModifiers=evalDomain(modifiers.readonly,evalContext);const decorationMap={};const{decorations}=fieldInfo;for(const decoName in decorations){const value=evaluateExpr(decorations[decoName],evalContext);decorationMap[decoName]=value;}
let propsFromAttrs=fieldInfo.propsFromAttrs;if(this.props.attrs){const extractProps=this.FieldComponent.extractProps||(()=>({}));propsFromAttrs=extractProps({field,attrs:{...this.props.attrs,options:evaluateExpr(this.props.attrs.options||"{}"),},});}
const props={...this.props};delete props.style;delete props.class;delete props.showTooltip;delete props.fieldInfo;delete props.attrs;return{...fieldInfo.props,update:async(value,options={})=>{const{save}=Object.assign({save:false},options);await record.update({[this.props.name]:value});if(record.selected&&record.model.multiEdit){return;}
const rootRecord=record.model.root instanceof record.constructor&&record.model.root;const isInEdition=rootRecord?rootRecord.isInEdition:record.isInEdition;if((!isInEdition&&!readonlyFromModifiers)||save){return record.save();}},value:this.props.record.data[this.props.name],decorations:decorationMap,readonly:!record.isInEdition||readonlyFromModifiers||false,...propsFromAttrs,...props,type:field.type,};}
get tooltip(){if(this.props.showTooltip){const tooltip=getTooltipInfo({field:this.props.record.fields[this.props.name],fieldInfo:this.props.fieldInfo,});if(Boolean(odoo.debug)||(tooltip&&JSON.parse(tooltip).field.help)){return tooltip;}}
return false;}}
Field.template="web.Field";Field.parseFieldNode=function(node,models,modelName,viewType,jsClass){const name=node.getAttribute("name");const widget=node.getAttribute("widget");const fields=models[modelName];const field=fields[name];const modifiers=JSON.parse(node.getAttribute("modifiers")||"{}");const fieldInfo={name,viewType,context:node.getAttribute("context")||"{}",string:node.getAttribute("string")||field.string,help:node.getAttribute("help"),widget,modifiers,onChange:archParseBoolean(node.getAttribute("on_change")),FieldComponent:getFieldClassFromRegistry(fields[name].type,widget,viewType,jsClass),forceSave:archParseBoolean(node.getAttribute("force_save")),decorations:{},noLabel:archParseBoolean(node.getAttribute("nolabel")),props:{},rawAttrs:{},options:evaluateExpr(node.getAttribute("options")||"{}"),alwaysInvisible:modifiers.invisible===true||modifiers.column_invisible===true,};if(node.getAttribute("domain")){fieldInfo.domain=node.getAttribute("domain");}
for(const attribute of node.attributes){if(attribute.name in Field.forbiddenAttributeNames){throw new Error(Field.forbiddenAttributeNames[attribute.name]);}
if(attribute.name.startsWith("decoration-")){const decorationName=attribute.name.replace("decoration-","");fieldInfo.decorations[decorationName]=attribute.value;continue;}
if(!attribute.name.startsWith("t-att")){fieldInfo.rawAttrs[attribute.name]=attribute.value;}}
if(viewType!=="kanban"){const extractProps=fieldInfo.FieldComponent.extractProps||(()=>({}));fieldInfo.propsFromAttrs=extractProps({field,attrs:{...fieldInfo.rawAttrs,options:fieldInfo.options},});}
if(X2M_TYPES.includes(field.type)){const views={};for(const child of node.children){const viewType=child.tagName==="tree"?"list":child.tagName;const{ArchParser}=viewRegistry.get(viewType);const xmlSerializer=new XMLSerializer();const subArch=xmlSerializer.serializeToString(child);const archInfo=new ArchParser().parse(subArch,models,field.relation);views[viewType]={...archInfo,fields:models[field.relation],};fieldInfo.relatedFields=models[field.relation];}
let viewMode=node.getAttribute("mode");if(!viewMode){if(views.list&&!views.kanban){viewMode="list";}else if(!views.list&&views.kanban){viewMode="kanban";}else if(views.list&&views.kanban){viewMode="list,kanban";}}else{viewMode=viewMode.replace("tree","list");}
fieldInfo.viewMode=viewMode;const fieldsToFetch={...fieldInfo.FieldComponent.fieldsToFetch};const colorField=fieldInfo.options.color_field;if(colorField){fieldsToFetch[colorField]={name:colorField,type:"integer",active:true};}
fieldInfo.fieldsToFetch=fieldsToFetch;fieldInfo.relation=field.relation;fieldInfo.views=views;}
return fieldInfo;};Field.forbiddenAttributeNames={decorations:`You cannot use the "decorations" attribute name as it is used as generated prop name for the composite decoration-<something> attributes.`,};Field.defaultProps={fieldInfo:{},setDirty:()=>{}};return __exports;});;

/* /web/static/src/views/fields/field_tooltip.js */
odoo.define('@web/views/fields/field_tooltip',async function(require){'use strict';let __exports={};__exports.getTooltipInfo=getTooltipInfo;function getTooltipInfo(params){let widgetDescription=undefined;if(params.fieldInfo.widget){widgetDescription=params.fieldInfo.FieldComponent.displayName;}
const info={viewMode:params.viewMode,resModel:params.resModel,debug:Boolean(odoo.debug),field:{label:params.field.string,name:params.field.name,help:params.fieldInfo.help!==null?params.fieldInfo.help:params.field.help,type:params.field.type,widget:params.fieldInfo.widget,widgetDescription,context:params.fieldInfo.context,domain:params.field.domain,modifiers:JSON.stringify(params.fieldInfo.modifiers),changeDefault:params.field.change_default,relation:params.field.relation,selection:params.field.selection,default:params.field.default,},};return JSON.stringify(info);}
return __exports;});;

/* /web/static/src/views/fields/file_handler.js */
odoo.define('@web/views/fields/file_handler',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{sprintf}=require("@web/core/utils/strings");const{getDataURLFromFile}=require("@web/core/utils/urls");const{session}=require("@web/session");const{formatFloat}=require("@web/views/fields/formatters");const{Component,useRef,useState}=require("@odoo/owl");const DEFAULT_MAX_FILE_SIZE=128*1024*1024;const FileUploader=__exports.FileUploader=class FileUploader extends Component{setup(){this.notification=useService("notification");this.fileInputRef=useRef("fileInput");this.state=useState({isUploading:false,});}
get maxUploadSize(){return session.max_file_upload_size||DEFAULT_MAX_FILE_SIZE;}
async onFileChange(ev){if(!ev.target.files.length){return;}
for(const file of ev.target.files){if(file.size>this.maxUploadSize){this.notification.add(sprintf(this.env._t("The selected file exceed the maximum file size of %s."),formatFloat(this.maxUploadSize,{humanReadable:true})),{title:this.env._t("File upload"),type:"danger",});}
this.state.isUploading=true;const data=await getDataURLFromFile(file);if(!file.size){console.warn(`Error while uploading file : ${file.name}`);this.notification.add(this.env._t("There was a problem while uploading your file."),{type:"danger",});}
try{await this.props.onUploaded({name:file.name,size:file.size,type:file.type,data:data.split(",")[1],objectUrl:file.type==="application/pdf"?URL.createObjectURL(file):null,});}finally{this.state.isUploading=false;}}
if(this.props.multiUpload&&this.props.onUploadComplete){this.props.onUploadComplete({});}}
onSelectFileButtonClick(){this.fileInputRef.el.click();}}
FileUploader.template="web.FileUploader";return __exports;});;

/* /web/static/src/views/fields/float/float_field.js */
odoo.define('@web/views/fields/float/float_field',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useInputField}=require("@web/views/fields/input_field_hook");const{useNumpadDecimal}=require("@web/views/fields/numpad_decimal_hook");const{formatFloat}=require("@web/views/fields/formatters");const{parseFloat}=require("@web/views/fields/parsers");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const FloatField=__exports.FloatField=class FloatField extends Component{setup(){this.inputRef=useInputField({getValue:()=>this.formattedValue,refName:"numpadDecimal",parse:(v)=>this.parse(v),});useNumpadDecimal();}
parse(value){return this.props.inputType==="number"?Number(value):parseFloat(value);}
get formattedValue(){if(this.props.inputType==="number"&&!this.props.readonly&&this.props.value){return this.props.value;}
return formatFloat(this.props.value,{digits:this.props.digits});}}
FloatField.template="web.FloatField";FloatField.props={...standardFieldProps,inputType:{type:String,optional:true},step:{type:Number,optional:true},digits:{type:Array,optional:true},placeholder:{type:String,optional:true},};FloatField.defaultProps={inputType:"text",};FloatField.displayName=_lt("Float");FloatField.supportedTypes=["float"];FloatField.isEmpty=()=>false;FloatField.extractProps=({attrs,field})=>{let digits;if(attrs.digits){digits=JSON.parse(attrs.digits);}else if(attrs.options.digits){digits=attrs.options.digits;}else if(Array.isArray(field.digits)){digits=field.digits;}
return{inputType:attrs.options.type,step:attrs.options.step,digits,placeholder:attrs.placeholder,};};registry.category("fields").add("float",FloatField);return __exports;});;

/* /web/static/src/views/fields/float_factor/float_factor_field.js */
odoo.define('@web/views/fields/float_factor/float_factor_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{FloatField}=require("@web/views/fields/float/float_field");const{Component}=require("@odoo/owl");const FloatFactorField=__exports.FloatFactorField=class FloatFactorField extends Component{get factor(){return this.props.factor;}
get floatFieldProps(){const result={...this.props,value:this.props.value*this.factor,update:(value)=>this.props.update(value/this.factor),};delete result.factor;return result;}}
FloatFactorField.template="web.FloatFactorField";FloatFactorField.components={FloatField};FloatFactorField.props={...FloatField.props,factor:{type:Number,optional:true},};FloatFactorField.defaultProps={...FloatField.defaultProps,factor:1,};FloatFactorField.supportedTypes=["float"];FloatFactorField.isEmpty=()=>false;FloatFactorField.extractProps=({attrs,field})=>{return{...FloatField.extractProps({attrs,field}),factor:attrs.options.factor,};};registry.category("fields").add("float_factor",FloatFactorField);return __exports;});;

/* /web/static/src/views/fields/float_time/float_time_field.js */
odoo.define('@web/views/fields/float_time/float_time_field',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{formatFloatTime}=require("@web/views/fields/formatters");const{parseFloatTime}=require("@web/views/fields/parsers");const{useInputField}=require("@web/views/fields/input_field_hook");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{useNumpadDecimal}=require("@web/views/fields/numpad_decimal_hook");const{Component}=require("@odoo/owl");const FloatTimeField=__exports.FloatTimeField=class FloatTimeField extends Component{setup(){useInputField({getValue:()=>this.formattedValue,refName:"numpadDecimal",parse:(v)=>parseFloatTime(v),});useNumpadDecimal();}
get formattedValue(){return formatFloatTime(this.props.value);}}
FloatTimeField.template="web.FloatTimeField";FloatTimeField.props={...standardFieldProps,inputType:{type:String,optional:true},placeholder:{type:String,optional:true},};FloatTimeField.defaultProps={inputType:"text",};FloatTimeField.displayName=_lt("Time");FloatTimeField.supportedTypes=["float"];FloatTimeField.isEmpty=()=>false;FloatTimeField.extractProps=({attrs})=>{return{inputType:attrs.options.type,placeholder:attrs.placeholder,};};registry.category("fields").add("float_time",FloatTimeField);return __exports;});;

/* /web/static/src/views/fields/float_toggle/float_toggle_field.js */
odoo.define('@web/views/fields/float_toggle/float_toggle_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{formatFloat}=require("@web/views/fields/formatters");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const FloatToggleField=__exports.FloatToggleField=class FloatToggleField extends Component{onChange(){let currentIndex=this.props.range.indexOf(this.props.value*this.factor);currentIndex++;if(currentIndex>this.props.range.length-1){currentIndex=0;}
this.props.update(this.props.range[currentIndex]/this.factor);}
get factor(){return this.props.factor;}
get formattedValue(){return formatFloat(this.props.value*this.factor,{digits:this.props.digits,});}}
FloatToggleField.template="web.FloatToggleField";FloatToggleField.props={...standardFieldProps,digits:{type:Array,optional:true},range:{type:Array,optional:true},factor:{type:Number,optional:true},disableReadOnly:{type:Boolean,optional:true},};FloatToggleField.defaultProps={range:[0.0,0.5,1.0],factor:1,disableReadOnly:false,};FloatToggleField.supportedTypes=["float"];FloatToggleField.isEmpty=()=>false;FloatToggleField.extractProps=({attrs,field})=>{let digits;if(attrs.digits){digits=JSON.parse(attrs.digits);}else if(attrs.options.digits){digits=attrs.options.digits;}else if(Array.isArray(field.digits)){digits=field.digits;}
return{digits,range:attrs.options.range,factor:attrs.options.factor,disableReadOnly:attrs.options.force_button||false,};};registry.category("fields").add("float_toggle",FloatToggleField);return __exports;});;

/* /web/static/src/views/fields/font_selection/font_selection_field.js */
odoo.define('@web/views/fields/font_selection/font_selection_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_lt}=require("@web/core/l10n/translation");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{formatSelection}=require("@web/views/fields/formatters");const{Component}=require("@odoo/owl");const FontSelectionField=__exports.FontSelectionField=class FontSelectionField extends Component{get options(){return this.props.record.fields[this.props.name].selection.filter((option)=>option[0]!==false&&option[1]!=="");}
get isRequired(){return this.props.record.isRequired(this.props.name);}
get string(){return formatSelection(this.props.value,{selection:this.options});}
stringify(value){return JSON.stringify(value);}
onChange(ev){const value=JSON.parse(ev.target.value);this.props.update(value);}}
FontSelectionField.template="web.FontSelectionField";FontSelectionField.props={...standardFieldProps,placeholder:{type:String,optional:true},};FontSelectionField.displayName=_lt("Font Selection");FontSelectionField.supportedTypes=["selection"];FontSelectionField.legacySpecialData="_fetchSpecialRelation";FontSelectionField.extractProps=({attrs})=>{return{placeholder:attrs.placeholder,};};registry.category("fields").add("font",FontSelectionField);return __exports;});;

/* /web/static/src/views/fields/formatters.js */
odoo.define('@web/views/fields/formatters',async function(require){'use strict';let __exports={};const{formatDate,formatDateTime}=require("@web/core/l10n/dates");const{localization:l10n}=require("@web/core/l10n/localization");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{escape,intersperse,nbsp,sprintf}=require("@web/core/utils/strings");const{isBinarySize}=require("@web/core/utils/binary");const{session}=require("@web/session");const{markup}=require("@odoo/owl");function insertThousandsSep(number,thousandsSep=",",grouping=[]){const negative=number[0]==="-";number=negative?number.slice(1):number;return(negative?"-":"")+intersperse(number,grouping,thousandsSep);}
function humanNumber(number,options={decimals:0,minDigits:1}){const decimals=options.decimals||0;const minDigits=options.minDigits||1;const d2=Math.pow(10,decimals);const numberMagnitude=+number.toExponential().split("e+")[1];number=Math.round(number*d2)/d2;if(numberMagnitude>=21){number=Math.round(number*Math.pow(10,decimals-numberMagnitude))/d2;return`${number}e+${numberMagnitude}`;}
const unitSymbols=_t("kMGTPE").toString();const sign=Math.sign(number);number=Math.abs(number);let symbol="";for(let i=unitSymbols.length;i>0;i--){const s=Math.pow(10,i*3);if(s<=number/Math.pow(10,minDigits-1)){number=Math.round((number*d2)/s)/d2;symbol=unitSymbols[i-1];break;}}
const{decimalPoint,grouping,thousandsSep}=l10n;const decimalsToKeep=number>=1000?0:decimals;number=sign*number;const[integerPart,decimalPart]=number.toFixed(decimalsToKeep).split(".");const int=insertThousandsSep(integerPart,thousandsSep,grouping);if(!decimalPart){return int+symbol;}
return int+decimalPoint+decimalPart+symbol;}
function humanSize(value){if(!value){return"";}
const suffix=value<1024?" "+_t("Bytes"):"b";return(humanNumber(value,{decimals:2,})+suffix);}
__exports.formatBinary=formatBinary;function formatBinary(value){if(!isBinarySize(value)){return humanSize(value.length/1.37);}
return value;}
__exports.formatBoolean=formatBoolean;function formatBoolean(value){return markup(`
        <div class="o-checkbox d-inline-block me-2">
            <input id="boolean_checkbox" type="checkbox" class="form-check-input" disabled ${
                value ? "checked" : ""
            }/>
            <label for="boolean_checkbox" class="form-check-label"/>
        </div>`);}
__exports.formatChar=formatChar;function formatChar(value,options){value=typeof value==="string"?value:"";if(options&&options.isPassword){return"*".repeat(value?value.length:0);}
if(options&&options.escape){value=escape(value);}
return value;}
__exports.formatFloat=formatFloat;function formatFloat(value,options={}){if(value===false){return"";}
if(options.humanReadable){return humanNumber(value,options);}
const grouping=options.grouping||l10n.grouping;const thousandsSep="thousandsSep"in options?options.thousandsSep:l10n.thousandsSep;const decimalPoint="decimalPoint"in options?options.decimalPoint:l10n.decimalPoint;let precision;if(options.digits&&options.digits[1]!==undefined){precision=options.digits[1];}else{precision=2;}
const formatted=(value||0).toFixed(precision).split(".");formatted[0]=insertThousandsSep(formatted[0],thousandsSep,grouping);if(options.noTrailingZeros){formatted[1]=formatted[1].replace(/0+$/,"");}
return formatted[1]?formatted.join(decimalPoint):formatted[0];}
__exports.formatFloatFactor=formatFloatFactor;function formatFloatFactor(value,options={}){if(value===false){return"";}
const factor=options.factor||1;return formatFloat(value*factor,options);}
__exports.formatFloatTime=formatFloatTime;function formatFloatTime(value,options={}){if(value===false){return"";}
const isNegative=value<0;value=Math.abs(value);let hour=Math.floor(value);const milliSecLeft=Math.round(value*3600000)-hour*3600000;let min=milliSecLeft/60000;if(options.displaySeconds){min=Math.floor(min);}else{min=Math.round(min);}
if(min===60){min=0;hour=hour+1;}
min=String(min).padStart(2,"0");if(!options.noLeadingZeroHour){hour=String(hour).padStart(2,"0");}
let sec="";if(options.displaySeconds){sec=":"+String(Math.floor((milliSecLeft%60000)/1000)).padStart(2,"0");}
return`${isNegative ? "-" : ""}${hour}:${min}${sec}`;}
__exports.formatInteger=formatInteger;function formatInteger(value,options={}){if(value===false||value===null){return"";}
if(options.isPassword){return"*".repeat(value.length);}
if(options.humanReadable){return humanNumber(value,options);}
const grouping=options.grouping||l10n.grouping;const thousandsSep="thousandsSep"in options?options.thousandsSep:l10n.thousandsSep;return insertThousandsSep(value.toFixed(0),thousandsSep,grouping);}
__exports.formatMany2one=formatMany2one;function formatMany2one(value,options){if(!value){value="";}else{value=value[1]||"";}
if(options&&options.escape){value=encodeURIComponent(value);}
return value;}
__exports.formatX2many=formatX2many;function formatX2many(value){const count=value.currentIds.length;if(count===0){return _t("No records");}else if(count===1){return _t("1 record");}else{return sprintf(_t("%s records"),count);}}
__exports.formatMonetary=formatMonetary;function formatMonetary(value,options={}){if(value===false){return"";}
let currencyId=options.currencyId;if(!currencyId&&options.data){const currencyField=options.currencyField||(options.field&&options.field.currency_field)||"currency_id";const dataValue=options.data[currencyField];currencyId=Array.isArray(dataValue)?dataValue[0]:dataValue;}
const currency=session.currencies[currencyId];const digits=options.digits||(currency&&currency.digits);let formattedValue;if(options.humanReadable){formattedValue=humanNumber(value,{decimals:digits?digits[1]:2});}else{formattedValue=formatFloat(value,{digits});}
if(!currency||options.noSymbol){return formattedValue;}
const formatted=[currency.symbol,formattedValue];if(currency.position==="after"){formatted.reverse();}
return formatted.join(nbsp);}
__exports.formatPercentage=formatPercentage;function formatPercentage(value,options={}){value=value||0;options=Object.assign({noTrailingZeros:true,thousandsSep:""},options);const formatted=formatFloat(value*100,options);return`${formatted}${options.noSymbol ? "" : "%"}`;}
function formatProperties(value,field){if(!value||!value.length){return"";}
return value.map((property)=>property["string"]).join(", ");}
__exports.formatReference=formatReference;function formatReference(value,options){return formatMany2one(value?[value.resId,value.displayName]:false,options);}
__exports.formatSelection=formatSelection;function formatSelection(value,options={}){const selection=options.selection||(options.field&&options.field.selection)||[];const option=selection.find((option)=>option[0]===value);return option?option[1]:"";}
__exports.formatText=formatText;function formatText(value){return value||"";}
__exports.formatJson=formatJson;function formatJson(value){return(value&&JSON.stringify(value))||"";}
registry.category("formatters").add("binary",formatBinary).add("boolean",formatBoolean).add("char",formatChar).add("date",formatDate).add("datetime",formatDateTime).add("float",formatFloat).add("float_factor",formatFloatFactor).add("float_time",formatFloatTime).add("html",(value)=>value).add("integer",formatInteger).add("json",formatJson).add("many2one",formatMany2one).add("many2one_reference",formatInteger).add("one2many",formatX2many).add("many2many",formatX2many).add("monetary",formatMonetary).add("percentage",formatPercentage).add("properties",formatProperties).add("properties_definition",formatProperties).add("reference",formatReference).add("selection",formatSelection).add("text",formatText);return __exports;});;

/* /web/static/src/views/fields/handle/handle_field.js */
odoo.define('@web/views/fields/handle/handle_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_lt}=require("@web/core/l10n/translation");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const HandleField=__exports.HandleField=class HandleField extends Component{}
HandleField.template="web.HandleField";HandleField.props={...standardFieldProps,};HandleField.displayName=_lt("Handle");HandleField.supportedTypes=["integer"];HandleField.isEmpty=()=>false;registry.category("fields").add("handle",HandleField);return __exports;});;

/* /web/static/src/views/fields/html/html_field.js */
odoo.define('@web/views/fields/html/html_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{TextField}=require("@web/views/fields/text/text_field");const HtmlField=__exports.HtmlField=class HtmlField extends TextField{}
HtmlField.template="web.HtmlField";registry.category("fields").add("html",HtmlField);return __exports;});;

/* /web/static/src/views/fields/iframe_wrapper/iframe_wrapper_field.js */
odoo.define('@web/views/fields/iframe_wrapper/iframe_wrapper_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_lt}=require("@web/core/l10n/translation");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,useEffect,useRef}=require("@odoo/owl");const IframeWrapperField=__exports.IframeWrapperField=class IframeWrapperField extends Component{setup(){this.iframeRef=useRef("iframe");useEffect((value)=>{const iframeDoc=this.iframeRef.el.contentDocument;iframeDoc.open();iframeDoc.write(value);iframeDoc.close();},()=>[this.props.value]);}}
IframeWrapperField.template="web.IframeWrapperField";IframeWrapperField.props={...standardFieldProps,};IframeWrapperField.displayName=_lt("Wrap raw html within an iframe");IframeWrapperField.supportedTypes=["text","html"];registry.category("fields").add("iframe_wrapper",IframeWrapperField);return __exports;});;

/* /web/static/src/views/fields/image/image_field.js */
odoo.define('@web/views/fields/image/image_field',async function(require){'use strict';let __exports={};const{isMobileOS}=require("@web/core/browser/feature_detection");const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{url}=require("@web/core/utils/urls");const{isBinarySize}=require("@web/core/utils/binary");const{FileUploader}=require("@web/views/fields/file_handler");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,useState,onWillUpdateProps}=require("@odoo/owl");const{DateTime}=luxon;const fileTypeMagicWordMap=__exports.fileTypeMagicWordMap={"/":"jpg",R:"gif",i:"png",P:"svg+xml",};const placeholder="/web/static/img/placeholder.png";__exports.imageCacheKey=imageCacheKey;function imageCacheKey(value){if(value instanceof DateTime){return value.ts;}
return"";}
const ImageField=__exports.ImageField=class ImageField extends Component{setup(){this.notification=useService("notification");this.isMobile=isMobileOS();this.state=useState({isValid:true,});this.rawCacheKey=this.props.record.data.__last_update;onWillUpdateProps((nextProps)=>{const{record}=this.props;const{record:nextRecord}=nextProps;if(record.resId!==nextRecord.resId||nextRecord.mode==="readonly"){this.rawCacheKey=nextRecord.data.__last_update;}});}
get sizeStyle(){let style="";if(this.props.width){style+=`max-width: ${this.props.width}px;`;if(!this.props.height){style+=`height: auto; max-height: 100%;`;}}
if(this.props.height){style+=`max-height: ${this.props.height}px;`;if(!this.props.width){style+=`width: auto; max-width: 100%;`;}}
return style;}
get hasTooltip(){return this.props.enableZoom&&this.props.readonly&&this.props.value;}
get tooltipAttributes(){return{template:"web.ImageZoomTooltip",info:JSON.stringify({url:this.getUrl(this.props.name)}),};}
getUrl(previewFieldName){if(this.state.isValid&&this.props.value){if(isBinarySize(this.props.value)){if(!this.rawCacheKey){this.rawCacheKey=this.props.record.data.__last_update;}
return url("/web/image",{model:this.props.record.resModel,id:this.props.record.resId,field:previewFieldName,unique:imageCacheKey(this.rawCacheKey),});}else{const magic=fileTypeMagicWordMap[this.props.value[0]]||"png";return`data:image/${magic};base64,${this.props.value}`;}}
return placeholder;}
onFileRemove(){this.state.isValid=true;this.props.update(false);}
onFileUploaded(info){this.state.isValid=true;this.rawCacheKey=null;this.props.update(info.data);}
onLoadFailed(){this.state.isValid=false;this.notification.add(this.env._t("Could not display the selected image"),{type:"danger",});}}
ImageField.template="web.ImageField";ImageField.components={FileUploader,};ImageField.props={...standardFieldProps,enableZoom:{type:Boolean,optional:true},zoomDelay:{type:Number,optional:true},previewImage:{type:String,optional:true},acceptedFileExtensions:{type:String,optional:true},width:{type:Number,optional:true},height:{type:Number,optional:true},};ImageField.defaultProps={acceptedFileExtensions:"image/*",};ImageField.displayName=_lt("Image");ImageField.supportedTypes=["binary"];ImageField.fieldDependencies={__last_update:{type:"datetime"},};ImageField.extractProps=({attrs})=>{return{enableZoom:attrs.options.zoom,zoomDelay:attrs.options.zoom_delay,previewImage:attrs.options.preview_image,acceptedFileExtensions:attrs.options.accepted_file_extensions,width:attrs.options.size&&Boolean(attrs.options.size[0])?attrs.options.size[0]:attrs.width,height:attrs.options.size&&Boolean(attrs.options.size[1])?attrs.options.size[1]:attrs.height,};};registry.category("fields").add("image",ImageField);registry.category("fields").add("kanban.image",ImageField);return __exports;});;

/* /web/static/src/views/fields/image_url/image_url_field.js */
odoo.define('@web/views/fields/image_url/image_url_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{_lt}=require("@web/core/l10n/translation");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,onWillUpdateProps,useState}=require("@odoo/owl");const ImageUrlField=__exports.ImageUrlField=class ImageUrlField extends Component{setup(){this.notification=useService("notification");this.state=useState({src:this.props.value,});onWillUpdateProps((nextProps)=>{if(this.props.value!==nextProps.value){this.state.value=nextProps.value;}});}
get sizeStyle(){let style="";if(this.props.width){style+=`max-width: ${this.props.width}px;`;}
if(this.props.height){style+=`max-height: ${this.props.height}px;`;}
return style;}
onLoadFailed(){this.state.src=this.constructor.fallbackSrc;this.notification.add(this.env._t("Could not display the specified image url."),{type:"info",});}}
ImageUrlField.fallbackSrc="/web/static/img/placeholder.png";ImageUrlField.template="web.ImageUrlField";ImageUrlField.props={...standardFieldProps,width:{type:Number,optional:true},height:{type:Number,optional:true},};ImageUrlField.displayName=_lt("Image");ImageUrlField.supportedTypes=["char"];ImageUrlField.extractProps=({attrs})=>{return{width:attrs.options.size?attrs.options.size[0]:attrs.width,height:attrs.options.size?attrs.options.size[1]:attrs.height,};};registry.category("fields").add("image_url",ImageUrlField);registry.category("fields").add("kanban.image_url",ImageUrlField);return __exports;});;

/* /web/static/src/views/fields/input_field_hook.js */
odoo.define('@web/views/fields/input_field_hook',async function(require){'use strict';let __exports={};const{getActiveHotkey}=require("@web/core/hotkeys/hotkey_service");const{useBus}=require("@web/core/utils/hooks");const{useComponent,useEffect,useRef,useEnv}=require("@odoo/owl");__exports.useInputField=useInputField;function useInputField(params){const env=useEnv();const inputRef=params.ref||useRef(params.refName||"input");const component=useComponent();let isDirty=false;let lastSetValue=null;let pendingUpdate=false;function onInput(ev){isDirty=ev.target.value!==lastSetValue;if(component.props.setDirty){component.props.setDirty(isDirty);}}
function onChange(ev){if(isDirty){isDirty=false;let isInvalid=false;let val=ev.target.value;if(params.parse){try{val=params.parse(val);}catch(_e){if(component.props.record){component.props.record.setInvalidField(component.props.name);}
isInvalid=true;}}
if(!isInvalid){pendingUpdate=true;Promise.resolve(component.props.update(val)).then(()=>{pendingUpdate=false;});lastSetValue=ev.target.value;}
if(component.props.setDirty){component.props.setDirty(isDirty);}}}
function onKeydown(ev){const hotkey=getActiveHotkey(ev);if(["enter","tab","shift+tab"].includes(hotkey)){commitChanges(false);}}
useEffect((inputEl)=>{if(inputEl){inputEl.addEventListener("input",onInput);inputEl.addEventListener("change",onChange);inputEl.addEventListener("keydown",onKeydown);return()=>{inputEl.removeEventListener("input",onInput);inputEl.removeEventListener("change",onChange);inputEl.removeEventListener("keydown",onKeydown);};}},()=>[inputRef.el]);useEffect(()=>{const isInvalid=component.props.record?component.props.record.isInvalid(component.props.name):false;if(inputRef.el&&!isDirty&&!isInvalid){inputRef.el.value=params.getValue();lastSetValue=inputRef.el.value;}});useBus(env.bus,"RELATIONAL_MODEL:WILL_SAVE_URGENTLY",()=>commitChanges(true));useBus(env.bus,"RELATIONAL_MODEL:NEED_LOCAL_CHANGES",(ev)=>ev.detail.proms.push(commitChanges()));async function commitChanges(urgent){if(!inputRef.el){return;}
isDirty=inputRef.el.value!==lastSetValue;if(isDirty||(urgent&&pendingUpdate)){let isInvalid=false;isDirty=false;let val=inputRef.el.value;if(params.parse){try{val=params.parse(val);}catch(_e){isInvalid=true;if(urgent){return;}else if(component.props.record){component.props.record.setInvalidField(component.props.name);}}}
if(isInvalid){return;}
if((val||false)!==(component.props.value||false)){await component.props.update(val);lastSetValue=inputRef.el.value;if(component.props.setDirty){component.props.setDirty(isDirty);}}}}
return inputRef;}
return __exports;});;

/* /web/static/src/views/fields/integer/integer_field.js */
odoo.define('@web/views/fields/integer/integer_field',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{formatInteger}=require("@web/views/fields/formatters");const{parseInteger}=require("@web/views/fields/parsers");const{useInputField}=require("@web/views/fields/input_field_hook");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{useNumpadDecimal}=require("@web/views/fields/numpad_decimal_hook");const{Component}=require("@odoo/owl");const IntegerField=__exports.IntegerField=class IntegerField extends Component{setup(){useInputField({getValue:()=>this.formattedValue,refName:"numpadDecimal",parse:(v)=>parseInteger(v),});useNumpadDecimal();}
get formattedValue(){if(!this.props.readonly&&this.props.inputType==="number"){return this.props.value;}
return formatInteger(this.props.value);}}
IntegerField.template="web.IntegerField";IntegerField.props={...standardFieldProps,inputType:{type:String,optional:true},step:{type:Number,optional:true},placeholder:{type:String,optional:true},};IntegerField.defaultProps={inputType:"text",};IntegerField.displayName=_lt("Integer");IntegerField.supportedTypes=["integer"];IntegerField.isEmpty=(record,fieldName)=>(record.data[fieldName]===false?true:false);IntegerField.extractProps=({attrs})=>{return{inputType:attrs.options.type,step:attrs.options.step,placeholder:attrs.placeholder,};};registry.category("fields").add("integer",IntegerField);return __exports;});;

/* /web/static/src/views/fields/journal_dashboard_graph/journal_dashboard_graph_field.js */
odoo.define('@web/views/fields/journal_dashboard_graph/journal_dashboard_graph_field',async function(require){'use strict';let __exports={};const{loadJS}=require("@web/core/assets");const{registry}=require("@web/core/registry");const{getColor,hexToRGBA}=require("@web/views/graph/colors");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{useService}=require("@web/core/utils/hooks");const{Component,onWillStart,useEffect,useRef}=require("@odoo/owl");const JournalDashboardGraphField=__exports.JournalDashboardGraphField=class JournalDashboardGraphField extends Component{setup(){this.chart=null;this.cookies=useService("cookie");this.canvasRef=useRef("canvas");this.data=JSON.parse(this.props.value);onWillStart(()=>loadJS("/web/static/lib/Chart/Chart.js"));useEffect(()=>{this.renderChart();return()=>{if(this.chart){this.chart.destroy();}};});}
renderChart(){if(this.chart){this.chart.destroy();}
let config;if(this.props.graphType==="line"){config=this.getLineChartConfig();}else if(this.props.graphType==="bar"){config=this.getBarChartConfig();}
this.chart=new Chart(this.canvasRef.el,config);Chart.animationService.advance();}
getLineChartConfig(){const labels=this.data[0].values.map(function(pt){return pt.x;});const color10=getColor(10,this.cookies.current.color_scheme);const borderColor=this.data[0].is_sample_data?hexToRGBA(color10,0.1):color10;const backgroundColor=this.data[0].is_sample_data?hexToRGBA(color10,0.05):hexToRGBA(color10,0.2);return{type:"line",data:{labels,datasets:[{backgroundColor,borderColor,data:this.data[0].values,fill:"start",label:this.data[0].key,borderWidth:2,},],},options:{legend:{display:false},scales:{yAxes:[{display:false}],xAxes:[{display:false}],},maintainAspectRatio:false,elements:{line:{tension:0.000001,},},tooltips:{intersect:false,position:"nearest",caretSize:0,},},};}
getBarChartConfig(){const data=[];const labels=[];const backgroundColor=[];const color13=getColor(13,this.cookies.current.color_scheme);const color19=getColor(19,this.cookies.current.color_scheme);this.data[0].values.forEach((pt)=>{data.push(pt.value);labels.push(pt.label);if(pt.type==="past"){backgroundColor.push(color13);}else if(pt.type==="future"){backgroundColor.push(color19);}else{backgroundColor.push("#ebebeb");}});return{type:"bar",data:{labels,datasets:[{backgroundColor,data,fill:"start",label:this.data[0].key,},],},options:{legend:{display:false},scales:{yAxes:[{display:false}],},maintainAspectRatio:false,tooltips:{intersect:false,position:"nearest",caretSize:0,},elements:{line:{tension:0.000001,},},},};}}
JournalDashboardGraphField.template="web.JournalDashboardGraphField";JournalDashboardGraphField.props={...standardFieldProps,graphType:String,};JournalDashboardGraphField.supportedTypes=["text"];JournalDashboardGraphField.extractProps=({attrs})=>{return{graphType:attrs.graph_type,};};registry.category("fields").add("dashboard_graph",JournalDashboardGraphField);return __exports;});;

/* /web/static/src/views/fields/label_selection/label_selection_field.js */
odoo.define('@web/views/fields/label_selection/label_selection_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_lt}=require("@web/core/l10n/translation");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{formatSelection}=require("@web/views/fields/formatters");const{Component}=require("@odoo/owl");const LabelSelectionField=__exports.LabelSelectionField=class LabelSelectionField extends Component{get className(){return this.props.classesObj[this.props.value]||"primary";}
get string(){return formatSelection(this.props.value,{selection:Array.from(this.props.record.fields[this.props.name].selection),});}}
LabelSelectionField.template="web.LabelSelectionField";LabelSelectionField.props={...standardFieldProps,classesObj:{type:Object,optional:true},};LabelSelectionField.defaultProps={classesObj:{},};LabelSelectionField.displayName=_lt("Label Selection");LabelSelectionField.supportedTypes=["selection"];LabelSelectionField.extractProps=({attrs})=>{return{classesObj:attrs.options.classes,};};registry.category("fields").add("label_selection",LabelSelectionField);return __exports;});;

/* /web/static/src/views/fields/many2many_binary/many2many_binary_field.js */
odoo.define('@web/views/fields/many2many_binary/many2many_binary_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{FileInput}=require("@web/core/file_input/file_input");const{useX2ManyCrud}=require("@web/views/fields/relational_utils");const{Component}=require("@odoo/owl");const Many2ManyBinaryField=__exports.Many2ManyBinaryField=class Many2ManyBinaryField extends Component{setup(){this.orm=useService("orm");this.notification=useService("notification");this.operations=useX2ManyCrud(()=>this.props.value,true);}
get files(){return this.props.value.records.map((record)=>record.data);}
getUrl(id){return"/web/content/"+id+"?download=true";}
getExtension(file){return file.name.replace(/^.*\./,"");}
async onFileUploaded(files){for(const file of files){if(file.error){return this.notification.add(file.error,{title:this.env._t("Uploading error"),type:"danger",});}
await this.operations.saveRecord([file.id]);}}
async onFileRemove(deleteId){const record=this.props.value.records.find((record)=>record.data.id===deleteId);this.operations.removeRecord(record);}}
Many2ManyBinaryField.template="web.Many2ManyBinaryField";Many2ManyBinaryField.components={FileInput,};Many2ManyBinaryField.props={...standardFieldProps,acceptedFileExtensions:{type:String,optional:true},className:{type:String,optional:true},uploadText:{type:String,optional:true},};Many2ManyBinaryField.supportedTypes=["many2many"];Many2ManyBinaryField.fieldsToFetch={name:{type:"char"},mimetype:{type:"char"},};Many2ManyBinaryField.isEmpty=()=>false;Many2ManyBinaryField.extractProps=({attrs,field})=>{return{acceptedFileExtensions:attrs.options.accepted_file_extensions,className:attrs.class,uploadText:field.string,};};registry.category("fields").add("many2many_binary",Many2ManyBinaryField);return __exports;});;

/* /web/static/src/views/fields/many2many_checkboxes/many2many_checkboxes_field.js */
odoo.define('@web/views/fields/many2many_checkboxes/many2many_checkboxes_field',async function(require){'use strict';let __exports={};const{CheckBox}=require("@web/core/checkbox/checkbox");const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const Many2ManyCheckboxesField=__exports.Many2ManyCheckboxesField=class Many2ManyCheckboxesField extends Component{get items(){return this.props.record.preloadedData[this.props.name];}
isSelected(item){return this.props.value.currentIds.includes(item[0]);}
onChange(resId,checked){if(checked){this.props.value.replaceWith([...this.props.value.currentIds,resId]);}else{const currentIds=[...this.props.value.currentIds];const index=currentIds.indexOf(resId);if(index>-1){currentIds.splice(index,1);}
this.props.value.replaceWith(currentIds);}}}
Many2ManyCheckboxesField.template="web.Many2ManyCheckboxesField";Many2ManyCheckboxesField.components={CheckBox};Many2ManyCheckboxesField.props={...standardFieldProps,};Many2ManyCheckboxesField.legacySpecialData="_fetchSpecialRelation";Many2ManyCheckboxesField.displayName=_lt("Checkboxes");Many2ManyCheckboxesField.supportedTypes=["many2many"];Many2ManyCheckboxesField.isEmpty=()=>false;registry.category("fields").add("many2many_checkboxes",Many2ManyCheckboxesField);__exports.preloadMany2ManyCheckboxes=preloadMany2ManyCheckboxes;function preloadMany2ManyCheckboxes(orm,record,fieldName){const field=record.fields[fieldName];const context=record.evalContext;const domain=record.getFieldDomain(fieldName).toList(context);return orm.call(field.relation,"name_search",["",domain]);}
registry.category("preloadedData").add("many2many_checkboxes",{loadOnTypes:["many2many"],preload:preloadMany2ManyCheckboxes,});return __exports;});;

/* /web/static/src/views/fields/many2many_tags/kanban_many2many_tags_field.js */
odoo.define('@web/views/fields/many2many_tags/kanban_many2many_tags_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{Many2ManyTagsField}=require("@web/views/fields/many2many_tags/many2many_tags_field");const KanbanMany2ManyTagsField=__exports.KanbanMany2ManyTagsField=class KanbanMany2ManyTagsField extends Many2ManyTagsField{get tags(){return super.tags.reduce((kanbanTags,tag)=>{if(tag.colorIndex!==0){delete tag.onClick;kanbanTags.push(tag);}
return kanbanTags;},[]);}}
KanbanMany2ManyTagsField.template="web.KanbanMany2ManyTagsField";registry.category("fields").add("kanban.many2many_tags",KanbanMany2ManyTagsField);return __exports;});;

/* /web/static/src/views/fields/many2many_tags/many2many_tags_field.js */
odoo.define('@web/views/fields/many2many_tags/many2many_tags_field',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{CheckBox}=require("@web/core/checkbox/checkbox");const{ColorList}=require("@web/core/colorlist/colorlist");const{Domain}=require("@web/core/domain");const{getActiveHotkey}=require("@web/core/hotkeys/hotkey_service");const{Many2XAutocomplete,useActiveActions,useX2ManyCrud,}=require("@web/views/fields/relational_utils");const{registry}=require("@web/core/registry");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{TagsList}=require("@web/views/fields/many2many_tags/tags_list");const{usePopover}=require("@web/core/popover/popover_hook");const{useService}=require("@web/core/utils/hooks");const{Component,useRef}=require("@odoo/owl");class Many2ManyTagsFieldColorListPopover extends Component{}
Many2ManyTagsFieldColorListPopover.template="web.Many2ManyTagsFieldColorListPopover";Many2ManyTagsFieldColorListPopover.components={CheckBox,ColorList,};const Many2ManyTagsField=__exports.Many2ManyTagsField=class Many2ManyTagsField extends Component{setup(){this.orm=useService("orm");this.previousColorsMap={};this.popover=usePopover();this.dialog=useService("dialog");this.dialogClose=[];this.autoCompleteRef=useRef("autoComplete");const{saveRecord,removeRecord}=useX2ManyCrud(()=>this.props.value,true);this.activeActions=useActiveActions({fieldType:"many2many",crudOptions:{create:this.props.canCreate&&this.props.createDomain,createEdit:this.props.canCreateEdit,onDelete:removeRecord,},getEvalParams:(props)=>{return{evalContext:this.evalContext,readonly:props.readonly,};},});this.update=(recordlist)=>{if(!recordlist){return;}
if(Array.isArray(recordlist)){const resIds=recordlist.map((rec)=>rec.id);return saveRecord(resIds);}
return saveRecord(recordlist);};if(this.props.canQuickCreate){this.quickCreate=async(name)=>{const created=await this.orm.call(this.props.relation,"name_create",[name],{context:this.context,});return saveRecord([created[0]]);};}}
get domain(){return this.props.record.getFieldDomain(this.props.name);}
get context(){return this.props.record.getFieldContext(this.props.name);}
get evalContext(){return this.props.record.evalContext;}
get string(){return this.props.record.activeFields[this.props.name].string;}
getTagProps(record){return{id:record.id,resId:record.resId,text:record.data.display_name,colorIndex:record.data[this.props.colorField],onDelete:!this.props.readonly?()=>this.deleteTag(record.id):undefined,onKeydown:this.onTagKeydown.bind(this),};}
get tags(){return this.props.value.records.map((record)=>this.getTagProps(record));}
get showM2OSelectionField(){return!this.props.readonly;}
deleteTag(id){const tagRecord=this.props.value.records.find((record)=>record.id===id);const ids=this.props.value.currentIds.filter((id)=>id!==tagRecord.resId);this.props.value.replaceWith(ids);}
getDomain(){return Domain.and([this.domain,Domain.not([["id","in",this.props.value.currentIds]]),]).toList(this.context);}
focusTag(index){const autoCompleteParent=this.autoCompleteRef.el.parentElement;const tags=autoCompleteParent.getElementsByClassName("badge");if(tags.length){if(index===undefined){tags[tags.length-1].focus();}else{tags[index].focus();}}}
onAutoCompleteKeydown(ev){if(ev.isComposing){return;}
const hotkey=getActiveHotkey(ev);const input=ev.target.closest(".o-autocomplete--input");const autoCompleteMenuOpened=!!this.autoCompleteRef.el.querySelector(".o-autocomplete--dropdown-menu");switch(hotkey){case"arrowleft":{if(input.selectionStart||autoCompleteMenuOpened){return;}
this.focusTag();break;}
case"arrowright":{if(input.selectionStart!==input.value.length||autoCompleteMenuOpened){return;}
this.focusTag(0);break;}
case"backspace":{if(input.value){return;}
const tags=this.tags;if(tags.length){const{id}=tags[tags.length-1];this.deleteTag(id);}
break;}
default:return;}
ev.preventDefault();ev.stopPropagation();}
onTagKeydown(ev){if(this.props.readonly){return;}
const hotkey=getActiveHotkey(ev);const autoCompleteParent=this.autoCompleteRef.el.parentElement;const tags=[...autoCompleteParent.getElementsByClassName("badge")];const closestTag=ev.target.closest(".badge");const tagIndex=tags.indexOf(closestTag);const input=this.autoCompleteRef.el.querySelector(".o-autocomplete--input");switch(hotkey){case"arrowleft":{if(tagIndex===0){input.focus();}else{this.focusTag(tagIndex-1);}
break;}
case"arrowright":{if(tagIndex===tags.length-1){input.focus();}else{this.focusTag(tagIndex+1);}
break;}
case"backspace":{input.focus();const{id}=this.tags[tagIndex]||{};this.deleteTag(id);break;}
default:return;}
ev.preventDefault();ev.stopPropagation();}}
Many2ManyTagsField.RECORD_COLORS=[1,2,3,4,5,6,7,8,9,10,11];Many2ManyTagsField.SEARCH_MORE_LIMIT=320;Many2ManyTagsField.template="web.Many2ManyTagsField";Many2ManyTagsField.components={TagsList,Many2XAutocomplete,};Many2ManyTagsField.props={...standardFieldProps,canCreate:{type:Boolean,optional:true},canQuickCreate:{type:Boolean,optional:true},canCreateEdit:{type:Boolean,optional:true},colorField:{type:String,optional:true},createDomain:{type:[Array,Boolean],optional:true},placeholder:{type:String,optional:true},relation:{type:String},nameCreateField:{type:String,optional:true},};Many2ManyTagsField.defaultProps={canCreate:true,canQuickCreate:true,canCreateEdit:true,nameCreateField:"name",};Many2ManyTagsField.displayName=_lt("Tags");Many2ManyTagsField.supportedTypes=["many2many"];Many2ManyTagsField.fieldsToFetch={display_name:{name:"display_name",type:"char"},};Many2ManyTagsField.isSet=(value)=>value.count>0;Many2ManyTagsField.extractProps=({attrs,field})=>{const noCreate=Boolean(attrs.options.no_create);const canCreate=attrs.can_create&&Boolean(JSON.parse(attrs.can_create))&&!noCreate;const noQuickCreate=Boolean(attrs.options.no_quick_create);const noCreateEdit=Boolean(attrs.options.no_create_edit);return{colorField:attrs.options.color_field,nameCreateField:attrs.options.create_name_field,relation:field.relation,canCreate,canQuickCreate:canCreate&&!noQuickCreate,canCreateEdit:canCreate&&!noCreateEdit,createDomain:attrs.options.create,placeholder:attrs.placeholder,};};registry.category("fields").add("many2many_tags",Many2ManyTagsField);const Many2ManyTagsFieldColorEditable=__exports.Many2ManyTagsFieldColorEditable=class Many2ManyTagsFieldColorEditable extends Many2ManyTagsField{getTagProps(record){const props=super.getTagProps(record);props.onClick=(ev)=>this.onBadgeClick(ev,record);return props;}
closePopover(){this.popoverCloseFn();this.popoverCloseFn=null;}
onBadgeClick(ev,record){if(!this.props.canEditColor){return;}
const isClosed=!document.querySelector(".o_tag_popover");if(isClosed){this.currentPopoverEl=null;}
if(this.popoverCloseFn){this.closePopover();}
if(isClosed||this.currentPopoverEl!==ev.currentTarget){this.currentPopoverEl=ev.currentTarget;this.popoverCloseFn=this.popover.add(ev.currentTarget,this.constructor.components.Popover,{colors:this.constructor.RECORD_COLORS,tag:{id:record.id,colorIndex:record.data[this.props.colorField],},switchTagColor:this.switchTagColor.bind(this),onTagVisibilityChange:this.onTagVisibilityChange.bind(this),});}}
onTagVisibilityChange(isHidden,tag){const tagRecord=this.props.value.records.find((record)=>record.id===tag.id);if(tagRecord.data[this.props.colorField]!=0){this.previousColorsMap[tagRecord.resId]=tagRecord.data[this.props.colorField];}
tagRecord.update({[this.props.colorField]:isHidden?0:this.previousColorsMap[tagRecord.resId]||1,});tagRecord.save();this.closePopover();}
switchTagColor(colorIndex,tag){const tagRecord=this.props.value.records.find((record)=>record.id===tag.id);tagRecord.update({[this.props.colorField]:colorIndex});tagRecord.save();this.closePopover();}}
Many2ManyTagsFieldColorEditable.components={...Many2ManyTagsField.components,Popover:Many2ManyTagsFieldColorListPopover,};Many2ManyTagsFieldColorEditable.props={...Many2ManyTagsField.props,canEditColor:{type:Boolean,optional:true},};Many2ManyTagsFieldColorEditable.defaultProps={...Many2ManyTagsField.defaultProps,canEditColor:true,};Many2ManyTagsFieldColorEditable.extractProps=(params)=>{const props=Many2ManyTagsField.extractProps(params);const attrs=params.attrs;const noEditColor=Boolean(attrs.options.no_edit_color);const hasColorField=Boolean(attrs.options.color_field);return{...props,canEditColor:!noEditColor&&hasColorField,};};registry.category("fields").add("form.many2many_tags",Many2ManyTagsFieldColorEditable);registry.category("fields").add("calendar.one2many",Many2ManyTagsField);registry.category("fields").add("calendar.many2many",Many2ManyTagsField);return __exports;});;

/* /web/static/src/views/fields/many2many_tags/tags_list.js */
odoo.define('@web/views/fields/many2many_tags/tags_list',async function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const TagsList=__exports.TagsList=class TagsList extends Component{get visibleTags(){if(this.props.itemsVisible&&this.props.tags.length>this.props.itemsVisible){return this.props.tags.slice(0,this.props.itemsVisible-1);}
return this.props.tags;}
get otherTags(){if(!this.props.itemsVisible||this.props.tags.length<=this.props.itemsVisible){return[];}
return this.props.tags.slice(this.props.itemsVisible-1);}
get tooltipInfo(){return JSON.stringify({tags:this.otherTags.map((tag)=>({text:tag.text,id:tag.id,})),});}}
TagsList.template="web.TagsList";TagsList.defaultProps={className:"",displayBadge:true,displayText:true,};TagsList.props={className:{type:String,optional:true},displayBadge:{type:Boolean,optional:true},displayText:{type:Boolean,optional:true},name:{type:String,optional:true},itemsVisible:{type:Number,optional:true},tags:{type:Object,optional:true},};return __exports;});;

/* /web/static/src/views/fields/many2many_tags_avatar/many2many_tags_avatar_field.js */
odoo.define('@web/views/fields/many2many_tags_avatar/many2many_tags_avatar_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{Many2XAutocomplete}=require("@web/views/fields/relational_utils");const{Many2ManyTagsField}=require("@web/views/fields/many2many_tags/many2many_tags_field");const{TagsList}=require("@web/views/fields/many2many_tags/tags_list");const Many2ManyTagsAvatarField=__exports.Many2ManyTagsAvatarField=class Many2ManyTagsAvatarField extends Many2ManyTagsField{get tags(){return super.tags.map((tag)=>({...tag,img:`/web/image/${this.relation}/${tag.resId}/avatar_128`,onDelete:!this.props.readonly?()=>this.deleteTag(tag.id):undefined,}));}
get relation(){return this.props.relation;}}
Many2ManyTagsAvatarField.template="web.Many2ManyTagsAvatarField";Many2ManyTagsAvatarField.components={Many2XAutocomplete,TagsList,};registry.category("fields").add("many2many_tags_avatar",Many2ManyTagsAvatarField);const ListKanbanMany2ManyTagsAvatarField=__exports.ListKanbanMany2ManyTagsAvatarField=class ListKanbanMany2ManyTagsAvatarField extends Many2ManyTagsAvatarField{get itemsVisible(){return this.props.record.activeFields[this.props.name].viewType==="list"?5:3;}
getTagProps(record){return{...super.getTagProps(record),img:`/web/image/${this.props.relation}/${record.resId}/avatar_128`,};}}
registry.category("fields").add("list.many2many_tags_avatar",ListKanbanMany2ManyTagsAvatarField);registry.category("fields").add("kanban.many2many_tags_avatar",ListKanbanMany2ManyTagsAvatarField);return __exports;});;

/* /web/static/src/views/fields/many2one/many2one_field.js */
odoo.define('@web/views/fields/many2one/many2one_field',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{isMobileOS}=require("@web/core/browser/feature_detection");const{Dialog}=require("@web/core/dialog/dialog");const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useChildRef,useOwnedDialogs,useService}=require("@web/core/utils/hooks");const{sprintf}=require("@web/core/utils/strings");const{Many2XAutocomplete,useOpenMany2XRecord}=require("@web/views/fields/relational_utils");const BarcodeScanner=require("@web/webclient/barcode/barcode_scanner");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,onWillUpdateProps,useState}=require("@odoo/owl");class CreateConfirmationDialog extends Component{get title(){return sprintf(this.env._t("New: %s"),this.props.name);}
async onCreate(){await this.props.create();this.props.close();}}
CreateConfirmationDialog.components={Dialog};CreateConfirmationDialog.template="web.Many2OneField.CreateConfirmationDialog";__exports.m2oTupleFromData=m2oTupleFromData;function m2oTupleFromData(data){const id=data.id;let name;if("display_name"in data){name=data.display_name;}else{const _name=data.name;name=Array.isArray(_name)?_name[1]:_name;}
return[id,name];}
const Many2OneField=__exports.Many2OneField=class Many2OneField extends Component{setup(){this.orm=useService("orm");this.action=useService("action");this.dialog=useService("dialog");this.notification=useService("notification");this.autocompleteContainerRef=useChildRef();this.addDialog=useOwnedDialogs();this.focusInput=()=>{this.autocompleteContainerRef.el.querySelector("input").focus();};this.state=useState({isFloating:!this.props.value,});this.computeActiveActions(this.props);this.openMany2X=useOpenMany2XRecord({resModel:this.relation,activeActions:this.state.activeActions,isToMany:false,onRecordSaved:async(record)=>{const resId=this.props.value[0];const fields=["display_name"];const context=this.props.record.getFieldContext(this.props.name);const records=await this.orm.read(this.relation,[resId],fields,{context});await this.props.update(m2oTupleFromData(records[0]));if(this.props.record.model.root.id!==this.props.record.id){this.props.record.switchMode("readonly");}},onClose:()=>this.focusInput(),fieldString:this.props.string,});this.update=(value,params={})=>{if(value){value=m2oTupleFromData(value[0]);}
this.state.isFloating=false;return this.props.update(value);};if(this.props.canQuickCreate){this.quickCreate=(name,params={})=>{if(params.triggeredOnBlur){return this.openConfirmationDialog(name);}
return this.props.update([false,name]);};}
this.setFloating=(bool)=>{this.state.isFloating=bool;};onWillUpdateProps(async(nextProps)=>{this.state.isFloating=!nextProps.value;this.computeActiveActions(nextProps);});}
get relation(){return this.props.relation||this.props.record.fields[this.props.name].relation;}
get context(){return this.props.record.getFieldContext(this.props.name);}
get domain(){return this.props.record.getFieldDomain(this.props.name);}
get hasExternalButton(){return this.props.canOpen&&!!this.props.value&&!this.state.isFloating;}
get classFromDecoration(){for(const decorationName in this.props.decorations){if(this.props.decorations[decorationName]){return`text-${decorationName}`;}}
return"";}
get displayName(){return this.props.value?this.props.value[1].split("\n")[0]:"";}
get extraLines(){return this.props.value?this.props.value[1].split("\n").map((line)=>line.trim()).slice(1):[];}
get resId(){return this.props.value&&this.props.value[0];}
get value(){return this.props.record.data[this.props.name];}
get Many2XAutocompleteProps(){return{value:this.displayName,id:this.props.id,placeholder:this.props.placeholder,resModel:this.relation,autoSelect:true,fieldString:this.props.string,activeActions:this.state.activeActions,update:this.update,quickCreate:this.quickCreate,context:this.context,getDomain:this.getDomain.bind(this),nameCreateField:this.props.nameCreateField,setInputFloats:this.setFloating,autocomplete_container:this.autocompleteContainerRef,kanbanViewId:this.props.kanbanViewId,};}
computeActiveActions(props){this.state.activeActions={create:props.canCreate,createEdit:props.canCreateEdit,write:props.canWrite,};}
getDomain(){return this.domain.toList(this.context);}
async openAction(){const action=await this.orm.call(this.relation,"get_formview_action",[[this.resId]],{context:this.context,});await this.action.doAction(action);}
async openDialog(resId){return this.openMany2X({resId,context:this.context});}
async openConfirmationDialog(request){return new Promise((resolve,reject)=>{this.addDialog(CreateConfirmationDialog,{value:request,name:this.props.string,create:async()=>{try{await this.quickCreate(request);resolve();}catch(e){reject(e);}},});});}
onClick(ev){if(this.props.canOpen&&this.props.readonly){ev.stopPropagation();this.openAction();}}
onExternalBtnClick(){if(this.props.openTarget==="current"&&!this.env.inDialog){this.openAction();}else{this.openDialog(this.resId);}}
async onBarcodeBtnClick(){const barcode=await BarcodeScanner.scanBarcode();if(barcode){await this.onBarcodeScanned(barcode);if("vibrate"in browser.navigator){browser.navigator.vibrate(100);}}else{this.notification.add(this.env._t("Please, scan again !"),{type:"warning",});}}
async search(barcode){const results=await this.orm.call(this.relation,"name_search",[],{name:barcode,args:this.getDomain(),operator:"ilike",limit:2,context:this.context,});return results.map((result)=>{const[id,displayName]=result;return{id,name:displayName,};});}
async onBarcodeScanned(barcode){const results=await this.search(barcode);const records=results.filter((r)=>!!r.id);if(records.length===1){this.update([{id:records[0].id,name:records[0].name}]);}else{const searchInput=this.autocompleteContainerRef.el.querySelector("input");searchInput.value=barcode;searchInput.dispatchEvent(new Event("input"));if(this.env.isSmall){searchInput.dispatchEvent(new Event("barcode-search"));}}}
get hasBarcodeButton(){const canScanBarcode=this.props.canScanBarcode;const supported=BarcodeScanner.isBarcodeScannerSupported();return canScanBarcode&&isMobileOS()&&supported&&!this.hasExternalButton;}}
Many2OneField.SEARCH_MORE_LIMIT=320;Many2OneField.template="web.Many2OneField";Many2OneField.components={Many2XAutocomplete,};Many2OneField.props={...standardFieldProps,placeholder:{type:String,optional:true},canOpen:{type:Boolean,optional:true},canCreate:{type:Boolean,optional:true},canWrite:{type:Boolean,optional:true},canQuickCreate:{type:Boolean,optional:true},canCreateEdit:{type:Boolean,optional:true},nameCreateField:{type:String,optional:true},searchLimit:{type:Number,optional:true},relation:{type:String,optional:true},string:{type:String,optional:true},canScanBarcode:{type:Boolean,optional:true},openTarget:{type:String,validate:(v)=>["current","new"].includes(v),optional:true},kanbanViewId:{type:[Number,Boolean],optional:true},};Many2OneField.defaultProps={canOpen:true,canCreate:true,canWrite:true,canQuickCreate:true,canCreateEdit:true,nameCreateField:"name",searchLimit:7,string:"",canScanBarcode:false,openTarget:"current",};Many2OneField.displayName=_lt("Many2one");Many2OneField.supportedTypes=["many2one"];Many2OneField.extractProps=({attrs,field})=>{const noOpen=Boolean(attrs.options.no_open);const noCreate=Boolean(attrs.options.no_create);const canCreate=attrs.can_create&&Boolean(JSON.parse(attrs.can_create))&&!noCreate;const canWrite=attrs.can_write&&Boolean(JSON.parse(attrs.can_write));const noQuickCreate=Boolean(attrs.options.no_quick_create);const noCreateEdit=Boolean(attrs.options.no_create_edit);const canScanBarcode=Boolean(attrs.options.can_scan_barcode);return{placeholder:attrs.placeholder,canOpen:!noOpen,canCreate,canWrite,canQuickCreate:canCreate&&!noQuickCreate,canCreateEdit:canCreate&&!noCreateEdit,relation:field.relation,string:attrs.string||field.string,nameCreateField:attrs.options.create_name_field,canScanBarcode:canScanBarcode,openTarget:attrs.open_target,kanbanViewId:attrs.kanban_view_ref?JSON.parse(attrs.kanban_view_ref):false,};};registry.category("fields").add("many2one",Many2OneField);registry.category("fields").add("list.many2one",Many2OneField);registry.category("fields").add("kanban.many2one",Many2OneField);return __exports;});;

/* /web/static/src/views/fields/many2one_avatar/many2one_avatar_field.js */
odoo.define('@web/views/fields/many2one_avatar/many2one_avatar_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{Many2OneField}=require("@web/views/fields/many2one/many2one_field");const{Component}=require("@odoo/owl");const Many2OneAvatarField=__exports.Many2OneAvatarField=class Many2OneAvatarField extends Component{get relation(){return this.props.relation;}}
Many2OneAvatarField.template="web.Many2OneAvatarField";Many2OneAvatarField.components={Many2OneField,};Many2OneAvatarField.props={...Many2OneField.props,};Many2OneAvatarField.supportedTypes=["many2one"];Many2OneAvatarField.extractProps=Many2OneField.extractProps;registry.category("fields").add("many2one_avatar",Many2OneAvatarField);return __exports;});;

/* /web/static/src/views/fields/many2one_barcode/many2one_barcode_field.js */
odoo.define('@web/views/fields/many2one_barcode/many2one_barcode_field',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{Many2OneField}=require("@web/views/fields/many2one/many2one_field");const Many2OneBarcodeField=__exports.Many2OneBarcodeField=class Many2OneBarcodeField extends Many2OneField{}
Many2OneBarcodeField.props={...Many2OneField.props,};Many2OneBarcodeField.defaultProps={...Many2OneField.defaultProps,canScanBarcode:true,};Many2OneBarcodeField.displayName=_lt("Many2OneBarcode");Many2OneBarcodeField.template="web.Many2OneField";Many2OneBarcodeField.supportedTypes=["many2one"];Many2OneBarcodeField.extractProps=(args)=>{return{...Many2OneField.extractProps(args),canScanBarcode:true,};};registry.category("fields").add("many2one_barcode",Many2OneBarcodeField);return __exports;});;

/* /web/static/src/views/fields/many2one_reference/many2one_reference_field.js */
odoo.define('@web/views/fields/many2one_reference/many2one_reference_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{IntegerField}=require("@web/views/fields/integer/integer_field");registry.category("fields").add("many2one_reference",IntegerField);return __exports;});;

/* /web/static/src/views/fields/monetary/monetary_field.js */
odoo.define('@web/views/fields/monetary/monetary_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_lt}=require("@web/core/l10n/translation");const{formatMonetary}=require("@web/views/fields/formatters");const{parseMonetary}=require("@web/views/fields/parsers");const{useInputField}=require("@web/views/fields/input_field_hook");const{useNumpadDecimal}=require("@web/views/fields/numpad_decimal_hook");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{session}=require("@web/session");const{Component}=require("@odoo/owl");const MonetaryField=__exports.MonetaryField=class MonetaryField extends Component{setup(){useInputField({getValue:()=>this.formattedValue,refName:"numpadDecimal",parse:parseMonetary,});useNumpadDecimal();}
get currencyId(){const currencyField=this.props.currencyField||this.props.record.fields[this.props.name].currency_field||"currency_id";const currency=this.props.record.data[currencyField];return currency&&currency[0];}
get currency(){if(!isNaN(this.currencyId)&&this.currencyId in session.currencies){return session.currencies[this.currencyId];}
return null;}
get currencySymbol(){return this.currency?this.currency.symbol:"";}
get currencyDigits(){if(this.props.useFieldDigits){return this.props.record.fields[this.props.name].digits;}
if(!this.currency){return null;}
return session.currencies[this.currencyId].digits;}
get formattedValue(){if(this.props.inputType==="number"&&!this.props.readonly&&this.props.value){return this.props.value;}
return formatMonetary(this.props.value,{digits:this.currencyDigits,currencyId:this.currencyId,noSymbol:!this.props.readonly||this.props.hideSymbol,});}}
MonetaryField.template="web.MonetaryField";MonetaryField.props={...standardFieldProps,currencyField:{type:String,optional:true},inputType:{type:String,optional:true},useFieldDigits:{type:Boolean,optional:true},hideSymbol:{type:Boolean,optional:true},placeholder:{type:String,optional:true},};MonetaryField.defaultProps={hideSymbol:false,inputType:"text",};MonetaryField.supportedTypes=["monetary","float"];MonetaryField.displayName=_lt("Monetary");MonetaryField.extractProps=({attrs})=>{return{currencyField:attrs.options.currency_field,inputType:attrs.type,useFieldDigits:attrs.options.field_digits,hideSymbol:attrs.options.no_symbol,placeholder:attrs.placeholder,};};registry.category("fields").add("monetary",MonetaryField);return __exports;});;

/* /web/static/src/views/fields/numpad_decimal_hook.js */
odoo.define('@web/views/fields/numpad_decimal_hook',async function(require){'use strict';let __exports={};const{localization}=require("@web/core/l10n/localization");const{isIOS}=require("@web/core/browser/feature_detection");const{useRef,useEffect}=require("@odoo/owl");__exports.useNumpadDecimal=useNumpadDecimal;function useNumpadDecimal(){const decimalPoint=localization.decimalPoint;const ref=useRef("numpadDecimal");const isIOSDevice=isIOS();const handler=(ev)=>{if(!([".",","].includes(ev.key)&&ev.code==="NumpadDecimal")||ev.key===decimalPoint||ev.target.type==="number"){return;}
ev.preventDefault();ev.target.setRangeText(decimalPoint,ev.target.selectionStart,ev.target.selectionEnd,"end");};useEffect(()=>{let inputs=[];const el=ref.el;if(el){inputs=el.nodeName==="INPUT"?[el]:el.querySelectorAll("input");inputs.forEach((input)=>{input.addEventListener("keydown",handler);if(isIOSDevice){input.removeAttribute("inputmode");}});}
return()=>{inputs.forEach((input)=>input.removeEventListener("keydown",handler));};});}
return __exports;});;

/* /web/static/src/views/fields/parsers.js */
odoo.define('@web/views/fields/parsers',async function(require){'use strict';let __exports={};const{parseDate,parseDateTime}=require("@web/core/l10n/dates");const{localization}=require("@web/core/l10n/localization");const{evaluateExpr}=require("@web/core/py_js/py");const{registry}=require("@web/core/registry");const{escapeRegExp}=require("@web/core/utils/strings");function evaluateMathematicalExpression(expr,context={}){var val=expr.replace(new RegExp(/( )/g),"");var safeEvalString="";for(let v of val.split(new RegExp(/([-+*/()^])/g))){if(!["+","-","*","/","(",")","^"].includes(v)&&v.length){v=parseFloat(v);}
if(v==="^"){v="**";}
safeEvalString+=v;}
return evaluateExpr(safeEvalString,context);}
function parseNumber(value,options={}){if(value.startsWith("=")){value=evaluateMathematicalExpression(value.substring(1));if(options.truncate){value=Math.trunc(value);}}else{const thousandsSepRegex=options.thousandsSep.match(/\s+/)?/\s+/g:new RegExp(escapeRegExp(options.thousandsSep),"g")||",";value=value.replaceAll(thousandsSepRegex,"");value=value.replace(new RegExp(escapeRegExp(options.decimalPoint),"g")||".",".");}
return Number(value);}
const InvalidNumberError=__exports.InvalidNumberError=class InvalidNumberError extends Error{}
__exports.parseFloat=parseFloat;function parseFloat(value){const thousandsSepRegex=localization.thousandsSep||"";const decimalPointRegex=localization.decimalPoint;let parsed=parseNumber(value,{thousandsSep:thousandsSepRegex,decimalPoint:decimalPointRegex,});if(isNaN(parsed)){parsed=parseNumber(value,{thousandsSep:",",decimalPoint:".",});if(isNaN(parsed)){throw new InvalidNumberError(`"${value}" is not a correct number`);}}
return parsed;}
__exports.parseFloatTime=parseFloatTime;function parseFloatTime(value){let sign=1;if(value[0]==="-"){value=value.slice(1);sign=-1;}
const values=value.split(":");if(values.length>2){throw new InvalidNumberError(`"${value}" is not a correct number`);}
if(values.length===1){return sign*parseFloat(value);}
const hours=parseInteger(values[0]);const minutes=parseInteger(values[1]);return sign*(hours+minutes/60);}
__exports.parseInteger=parseInteger;function parseInteger(value){const thousandsSepRegex=localization.thousandsSep||"";const decimalPointRegex=localization.decimalPoint;let parsed=parseNumber(value,{thousandsSep:thousandsSepRegex,decimalPoint:decimalPointRegex,truncate:true,});if(!Number.isInteger(parsed)){parsed=parseNumber(value,{thousandsSep:",",decimalPoint:".",truncate:true,});if(!Number.isInteger(parsed)){throw new InvalidNumberError(`"${value}" is not a correct number`);}}
if(parsed<-2147483648||parsed>2147483647){throw new InvalidNumberError(`"${value}" is out of bounds (integers should be between -2,147,483,648 and 2,147,483,647)`);}
return parsed;}
__exports.parsePercentage=parsePercentage;function parsePercentage(value){if(value[value.length-1]==="%"){value=value.slice(0,value.length-1);}
return parseFloat(value)/100;}
__exports.parseMonetary=parseMonetary;function parseMonetary(value){value=value.trim();const startMatch=value.match(new RegExp(`[\\d\\-+=]|${escapeRegExp(localization.decimalPoint)}`));if(startMatch){value=value.substring(startMatch.index);}
value=value.replace(/\D*$/,"");return parseFloat(value);}
registry.category("parsers").add("date",parseDate).add("datetime",parseDateTime).add("float",parseFloat).add("float_time",parseFloatTime).add("integer",parseInteger).add("many2one_reference",parseInteger).add("monetary",parseMonetary).add("percentage",parsePercentage);return __exports;});;

/* /web/static/src/views/fields/pdf_viewer/pdf_viewer_field.js */
odoo.define('@web/views/fields/pdf_viewer/pdf_viewer_field',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{url}=require("@web/core/utils/urls");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{FileUploader}=require("@web/views/fields/file_handler");const{Component,onWillUpdateProps,useState}=require("@odoo/owl");const PdfViewerField=__exports.PdfViewerField=class PdfViewerField extends Component{setup(){this.notification=useService("notification");this.state=useState({fileName:this.props.record.data[this.props.fileNameField]||"",isValid:true,objectUrl:"",});onWillUpdateProps((nextProps)=>{if(nextProps.readonly){this.state.fileName=nextProps.record.data[nextProps.fileNameField]||"";this.state.objectUrl="";}});}
get fileName(){return this.state.fileName||this.props.value||"";}
get url(){if(!this.state.isValid||!this.props.value){return null;}
const page=this.props.record.data[`${this.props.name}_page`]||1;const file=encodeURIComponent(this.state.objectUrl||url("/web/content",{model:this.props.record.resModel,field:this.props.previewImage||this.props.name,id:this.props.record.resId,}));return`/web/static/lib/pdfjs/web/viewer.html?file=${file}#page=${page}`;}
update({data,name}){this.state.fileName=name||"";const{fileNameField,record}=this.props;const changes={[this.props.name]:data||false};if(fileNameField in record.fields&&record.data[fileNameField]!==name){changes[fileNameField]=name||false;}
return this.props.record.update(changes);}
onFileRemove(){this.state.isValid=true;this.update({});}
onFileUploaded({data,name,objectUrl}){this.state.fileName=name;this.state.isValid=true;this.state.objectUrl=objectUrl;this.update({data,name});}
onLoadFailed(){this.state.isValid=false;this.notification.add(this.env._t("Could not display the selected pdf"),{type:"danger",});}}
PdfViewerField.template="web.PdfViewerField";PdfViewerField.components={FileUploader,};PdfViewerField.props={...standardFieldProps,fileNameField:{type:String,optional:true},previewImage:{type:String,optional:true},};PdfViewerField.displayName=_lt("PDF Viewer");PdfViewerField.supportedTypes=["binary"];PdfViewerField.extractProps=({attrs})=>{return{fileNameField:attrs.filename,previewImage:attrs.options.preview_image,};};registry.category("fields").add("pdf_viewer",PdfViewerField);return __exports;});;

/* /web/static/src/views/fields/percent_pie/percent_pie_field.js */
odoo.define('@web/views/fields/percent_pie/percent_pie_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_lt}=require("@web/core/l10n/translation");const{formatPercentage}=require("@web/views/fields/formatters");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const PercentPieField=__exports.PercentPieField=class PercentPieField extends Component{get transform(){const rotateDeg=(360*this.props.value)/100;return{left:rotateDeg<180?180:rotateDeg,right:rotateDeg<180?rotateDeg:0,value:rotateDeg,};}
get formattedValue(){const value=Math.round(this.props.value)
return formatPercentage(value/100);}}
PercentPieField.template="web.PercentPieField";PercentPieField.props={...standardFieldProps,string:{type:String,optional:true},};PercentPieField.displayName=_lt("PercentPie");PercentPieField.supportedTypes=["float","integer"];PercentPieField.extractProps=({attrs})=>{return{string:attrs.string,};};PercentPieField.additionalClasses=["o_field_percent_pie"];registry.category("fields").add("percentpie",PercentPieField);return __exports;});;

/* /web/static/src/views/fields/percentage/percentage_field.js */
odoo.define('@web/views/fields/percentage/percentage_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_lt}=require("@web/core/l10n/translation");const{formatPercentage}=require("@web/views/fields/formatters");const{parsePercentage}=require("@web/views/fields/parsers");const{useInputField}=require("@web/views/fields/input_field_hook");const{useNumpadDecimal}=require("@web/views/fields/numpad_decimal_hook");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const PercentageField=__exports.PercentageField=class PercentageField extends Component{setup(){useInputField({getValue:()=>formatPercentage(this.props.value,{digits:this.props.digits,noSymbol:true,}),refName:"numpadDecimal",parse:(v)=>parsePercentage(v),});useNumpadDecimal();}
get formattedValue(){return formatPercentage(this.props.value,{digits:this.props.digits,});}}
PercentageField.template="web.PercentageField";PercentageField.props={...standardFieldProps,digits:{type:Array,optional:true},placeholder:{type:String,optional:true},};PercentageField.displayName=_lt("Percentage");PercentageField.supportedTypes=["integer","float"];PercentageField.extractProps=({attrs,field})=>{let digits;if(attrs.digits){digits=JSON.parse(attrs.digits);}else if(attrs.options.digits){digits=attrs.options.digits;}else if(Array.isArray(field.digits)){digits=field.digits;}
return{digits,placeholder:attrs.placeholder,};};registry.category("fields").add("percentage",PercentageField);return __exports;});;

/* /web/static/src/views/fields/phone/phone_field.js */
odoo.define('@web/views/fields/phone/phone_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_lt}=require("@web/core/l10n/translation");const{useInputField}=require("@web/views/fields/input_field_hook");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const PhoneField=__exports.PhoneField=class PhoneField extends Component{setup(){useInputField({getValue:()=>this.props.value||""});}
get phoneHref(){return"tel:"+this.props.value.replace(/\s+/g,"");}}
PhoneField.template="web.PhoneField";PhoneField.props={...standardFieldProps,placeholder:{type:String,optional:true},};PhoneField.displayName=_lt("Phone");PhoneField.supportedTypes=["char"];PhoneField.extractProps=({attrs})=>{return{placeholder:attrs.placeholder,};};class FormPhoneField extends PhoneField{}
FormPhoneField.template="web.FormPhoneField";registry.category("fields").add("phone",PhoneField);registry.category("fields").add("form.phone",FormPhoneField);return __exports;});;

/* /web/static/src/views/fields/priority/priority_field.js */
odoo.define('@web/views/fields/priority/priority_field',async function(require){'use strict';let __exports={};const{useCommand}=require("@web/core/commands/command_hook");const{registry}=require("@web/core/registry");const{_lt}=require("@web/core/l10n/translation");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,useState}=require("@odoo/owl");const PriorityField=__exports.PriorityField=class PriorityField extends Component{setup(){this.state=useState({index:-1,});if(this.props.record.activeFields[this.props.name].viewType==="form"){const commandName=this.env._t("Set priority...");useCommand(commandName,()=>{return{placeholder:commandName,providers:[{provide:()=>this.options.map((value)=>({name:value[1],action:()=>{this.props.update(value[0]);},})),},],};},{category:"smart_action",hotkey:"alt+r"});}}
get options(){return Array.from(this.props.record.fields[this.props.name].selection);}
get index(){return this.state.index>-1?this.state.index:this.options.findIndex((o)=>o[0]===this.props.value);}
get isReadonly(){return this.props.record.isReadonly(this.props.name);}
getTooltip(value){return this.props.tooltipLabel?`${this.props.tooltipLabel}: ${value}`:value;}
onStarClicked(value){if(this.props.value===value){this.state.index=-1;this.props.update(this.options[0][0],{save:this.props.autosave});}else{this.props.update(value,{save:this.props.autosave});}}}
PriorityField.template="web.PriorityField";PriorityField.props={...standardFieldProps,tooltipLabel:{type:String,optional:true},autosave:{type:Boolean,optional:true},};PriorityField.displayName=_lt("Priority");PriorityField.supportedTypes=["selection"];PriorityField.extractProps=({field,attrs})=>{return{tooltipLabel:field.string,autosave:"autosave"in attrs.options?!!attrs.options.autosave:true,};};registry.category("fields").add("priority",PriorityField);return __exports;});;

/* /web/static/src/views/fields/progress_bar/kanban_progress_bar_field.js */
odoo.define('@web/views/fields/progress_bar/kanban_progress_bar_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{ProgressBarField}=require("@web/views/fields/progress_bar/progress_bar_field");const KanbanProgressBarField=__exports.KanbanProgressBarField=class KanbanProgressBarField extends ProgressBarField{get isEditable(){return this.props.isEditable;}}
registry.category("fields").add("kanban.progressbar",KanbanProgressBarField);return __exports;});;

/* /web/static/src/views/fields/progress_bar/progress_bar_field.js */
odoo.define('@web/views/fields/progress_bar/progress_bar_field',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useNumpadDecimal}=require("@web/views/fields/numpad_decimal_hook");const{parseFloat}=require("@web/views/fields/parsers");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,onWillUpdateProps,useRef,useState}=require("@odoo/owl");const formatters=registry.category("formatters");const parsers=registry.category("parsers");const ProgressBarField=__exports.ProgressBarField=class ProgressBarField extends Component{setup(){useNumpadDecimal();this.root=useRef("numpadDecimal");this.maxValueRef=useRef("maxValue");this.currentValueRef=useRef("currentValue");this.state=useState({currentValue:this.getCurrentValue(this.props),maxValue:this.getMaxValue(this.props),isEditing:false,});onWillUpdateProps((nextProps)=>{Object.assign(this.state,{currentValue:this.getCurrentValue(nextProps),maxValue:this.getMaxValue(nextProps),});});}
get isCurrentValueInteger(){return this.state.currentValue%1===0;}
get isEditable(){return this.props.isEditable&&!this.props.readonly;}
get isMaxValueInteger(){return this.state.maxValue%1===0;}
get isPercentage(){return!this.props.maxValueField||!isNaN(this.props.maxValueField);}
getCurrentValueField(p){return typeof p.currentValueField==="string"?p.currentValueField:p.name;}
getMaxValueField(p){return typeof p.maxValueField==="string"?p.maxValueField:p.name;}
getCurrentValue(p){return p.record.data[this.getCurrentValueField(p)]||0;}
getMaxValue(p){if(p.maxValueField){return p.record.data[p.maxValueField]||100;}
return 100;}
formatCurrentValue(humanReadable=!this.state.isEditing){const formatter=formatters.get(this.isCurrentValueInteger?"integer":"float");return formatter(this.state.currentValue,{humanReadable});}
formatMaxValue(humanReadable=!this.state.isEditing){const formatter=formatters.get(this.isMaxValueInteger?"integer":"float");return formatter(this.state.maxValue,{humanReadable});}
onCurrentValueChange(ev){let parsedValue;try{parsedValue=parseFloat(ev.target.value);}catch{this.props.record.setInvalidField(this.props.name);return;}
if(this.isCurrentValueInteger){parsedValue=Math.floor(parsedValue);}
this.state.currentValue=parsedValue;this.props.record.update({[this.getCurrentValueField(this.props)]:parsedValue});if(this.props.readonly){this.props.record.save();}}
onInputBlur(){if(document.activeElement!==this.maxValueRef.el&&document.activeElement!==this.currentValueRef.el){this.state.isEditing=false;}}
onInputFocus(){this.state.isEditing=true;}
onMaxValueChange(ev){let parsedValue;try{parsedValue=parseFloat(ev.target.value);}catch{this.props.record.setInvalidField(this.props.name);return;}
if(this.isMaxValueInteger){parsedValue=Math.floor(parsedValue);}
this.state.maxValue=parsedValue;this.props.record.update({[this.getMaxValueField(this.props)]:parsedValue});if(this.props.readonly){this.props.record.save();}}
onCurrentValueInput(ev){const parser=parsers.get(this.isCurrentValueInteger?"integer":"float");try{this.state.currentValue=parser(ev.target.value);}catch{}}
onMaxValueInput(ev){const parser=parsers.get(this.isMaxValueInteger?"integer":"float");try{this.state.maxValue=parser(ev.target.value);}catch{}}}
ProgressBarField.template="web.ProgressBarField";ProgressBarField.props={...standardFieldProps,maxValueField:{type:[String,Number],optional:true},currentValueField:{type:String,optional:true},isEditable:{type:Boolean,optional:true},isCurrentValueEditable:{type:Boolean,optional:true},isMaxValueEditable:{type:Boolean,optional:true},title:{type:String,optional:true},};ProgressBarField.displayName=_lt("Progress Bar");ProgressBarField.supportedTypes=["integer","float"];ProgressBarField.extractProps=({attrs})=>{return{maxValueField:attrs.options.max_value,currentValueField:attrs.options.current_value,isEditable:!attrs.options.readonly&&attrs.options.editable,isCurrentValueEditable:attrs.options.editable&&!attrs.options.edit_max_value,isMaxValueEditable:attrs.options.editable&&attrs.options.edit_max_value,title:attrs.title,};};registry.category("fields").add("progressbar",ProgressBarField);return __exports;});;

/* /web/static/src/views/fields/properties/kanban_properties_field.js */
odoo.define('@web/views/fields/properties/kanban_properties_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{PropertiesField}=require("@web/views/fields/properties/properties_field");const KanbanPropertiesField=__exports.KanbanPropertiesField=class KanbanPropertiesField extends PropertiesField{async _checkDefinitionAccess(){this.state.canChangeDefinition=false;}}
KanbanPropertiesField.template="web.KanbanPropertiesField";registry.category("fields").add("kanban.properties",KanbanPropertiesField);return __exports;});;

/* /web/static/src/views/fields/properties/properties_field.js */
odoo.define('@web/views/fields/properties/properties_field',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{uuid}=require("@web/views/utils");const{PropertyDefinition}=require("@web/views/fields/properties/property_definition");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{PropertyValue}=require("@web/views/fields/properties/property_value");const{useService}=require("@web/core/utils/hooks");const{usePopover}=require("@web/core/popover/popover_hook");const{sprintf}=require("@web/core/utils/strings");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{reposition}=require('@web/core/position_hook');const{archParseBoolean}=require('@web/views/utils');const{Component,useRef,useState,useEffect,onWillStart}=require("@odoo/owl");const PropertiesField=__exports.PropertiesField=class PropertiesField extends Component{setup(){this.notification=useService("notification");this.orm=useService("orm");this.dialogService=useService("dialog");this.popover=usePopover();this.propertiesRef=useRef("properties");this.state=useState({canChangeDefinition:true,movedPropertyName:null,});this._saveInitialPropertiesValues();const field=this.props.record.fields[this.props.name];this.definitionRecordField=field.definition_record;onWillStart(async()=>{await this._checkDefinitionAccess();});useEffect(()=>{this._movePopoverIfNeeded();if(this.openLastPropertyDefinition){this.openLastPropertyDefinition=null;const propertiesList=this.propertiesList;const lastPropertyName=propertiesList[propertiesList.length-1].name;const labels=this.propertiesRef.el.querySelectorAll(`.o_property_field[property-name="${lastPropertyName}"] .o_field_property_open_popover`);const lastLabel=labels[labels.length-1];this._openPropertyDefinition(lastLabel,lastPropertyName,true);}});}
get context(){return this.props.record.getFieldContext(this.props.name);}
get propertiesList(){const propertiesValues=JSON.parse(JSON.stringify(this.props.value||[]));return propertiesValues.filter((definition)=>!definition.definition_deleted);}
get groupedPropertiesList(){const columns=this.env.isSmall?1:this.props.columns;const res=[...Array(columns)].map(col=>[]);this.propertiesList.forEach((val,index)=>{res[index%columns].push(val);});return res;}
checkPopoverClose(event){if(document.activeElement.closest(".o_field_property_definition")){return true;}
if(event.target.closest(".bootstrap-datetimepicker-widget")){return true;}
if(event.target.closest(".modal")){return true;}
if(event.target.closest(".o_tag_popover")){return true;}
if(event.target.closest(".o_field_selector_popover")){return true;}
return false;}
generateUniqueDomID(){return`property_${uuid()}`;}
onPropertyMove(propertyName,direction){const propertiesValues=this.propertiesList||[];const propertyIndex=propertiesValues.findIndex((property)=>property.name===propertyName);const targetIndex=propertyIndex+(direction==="down"?1:-1);if(targetIndex<0||targetIndex>=propertiesValues.length){this.notification.add(direction==="down"?_lt("This field is already last"):_lt("This field is already first"),{type:"warning"},);return;}
this.state.movedPropertyName=propertyName;const prop=propertiesValues[targetIndex];propertiesValues[targetIndex]=propertiesValues[propertyIndex];propertiesValues[propertyIndex]=prop;propertiesValues[propertyIndex].definition_changed=true;this.props.update(propertiesValues).then(()=>{this.shouldUpdatePopoverPosition=true;});}
onPropertyValueChange(propertyName,propertyValue){const propertiesValues=this.propertiesList;propertiesValues.find((property)=>property.name===propertyName).value=propertyValue;this.props.update(propertiesValues);}
async onPropertyEdit(event,propertyName){event.stopPropagation();event.preventDefault();if(!await this.checkDefinitionWriteAccess()){this.notification.add(_lt("You need to be able to edit parent first to configure property fields"),{type:"warning",});return;}
if(event.target.classList.contains("disabled")){return;}
event.target.classList.add("disabled");this._openPropertyDefinition(event.target,propertyName,false);}
onPropertyDefinitionChange(propertyDefinition){propertyDefinition["definition_changed"]=true;const propertiesValues=this.propertiesList;const propertyIndex=propertiesValues.findIndex((property)=>property.name===propertyDefinition.name);this._regeneratePropertyName(propertyDefinition);propertiesValues[propertyIndex]=propertyDefinition;this.props.update(propertiesValues);}
onPropertyDelete(propertyName){if(this.popoverCloseFn){this.popoverCloseFn();this.popoverCloseFn=null;}
const dialogProps={title:_lt("Delete Property Field"),body:sprintf(_lt('Are you sure you want to delete this property field? It will be removed for everyone using the "%s" %s.'),this.parentName,this.parentString),confirmLabel:_lt("Delete"),confirm:()=>{const propertiesDefinitions=this.propertiesList;propertiesDefinitions.find((property)=>property.name===propertyName).definition_deleted=true;this.props.update(propertiesDefinitions);},cancel:()=>{},};this.dialogService.add(ConfirmationDialog,dialogProps);}
async onPropertyCreate(){if(!await this.checkDefinitionWriteAccess()){this.notification.add(_lt("You need to be able to edit parent first to configure property fields"),{type:"warning",});return;}
const propertiesDefinitions=this.propertiesList||[];if(propertiesDefinitions.length&&propertiesDefinitions.some((prop)=>!prop.string||!prop.string.length)){this.propertiesRef.el.closest(".o_field_properties").classList.add("o_field_invalid");this.notification.add(_lt("Please complete your properties before adding a new one"),{type:"warning",});return;}
this.propertiesRef.el.closest(".o_field_properties").classList.remove("o_field_invalid");propertiesDefinitions.push({name:uuid(),string:sprintf(_lt("Property %s"),propertiesDefinitions.length+1),type:"char",definition_changed:true,});this.openLastPropertyDefinition=true;this.props.update(propertiesDefinitions);}
async checkDefinitionWriteAccess(){const definitionRecordId=this.props.record.data[this.definitionRecordField][0];const definitionRecordModel=this.props.record.fields[this.definitionRecordField].relation;try{await this.orm.call(definitionRecordModel,"check_access_rule",[definitionRecordId],{operation:"write",});}catch(_e){return false;}
return true;}
onTagsChange(propertyName,newTags,newValue=null){const propertyDefinition=this.propertiesList.find((property)=>property.name===propertyName);propertyDefinition.tags=newTags;if(newValue!==null){propertyDefinition.value=newValue;}
propertyDefinition.definition_changed=true;this.onPropertyDefinitionChange(propertyDefinition);}
_movePopoverIfNeeded(){if(!this.shouldUpdatePopoverPosition){return;}
this.shouldUpdatePopoverPosition=false;const propertyName=this.state.movedPropertyName;const popover=document.querySelector(".o_field_property_definition").closest(".o_popover");const targetElement=document.querySelector(`.o_property_field[property-name="${propertyName}"] .o_field_property_open_popover`);reposition(targetElement,popover,{position:"top",margin:10},);const arrow=popover.querySelector(".popover-arrow");if(arrow){arrow.classList.add("d-none");}}
async _checkDefinitionAccess(){const definitionRecordId=this.props.record.data[this.definitionRecordField][0];this.parentName=this.props.record.data[this.definitionRecordField][1];const definitionRecordModel=this.props.record.fields[this.definitionRecordField].relation;this.parentString=this.props.record.fields[this.definitionRecordField].string;if(!definitionRecordId||!definitionRecordModel){return;}
this.state.canChangeDefinition=await this.orm.call(definitionRecordModel,"check_access_rights",["write",false],);}
_regeneratePropertyName(propertyDefinition){const initialValues=this.initialValues[propertyDefinition.name];if(initialValues&&propertyDefinition.type===initialValues.type&&propertyDefinition.comodel===initialValues.comodel){propertyDefinition.name=initialValues.name;}else if(initialValues&&initialValues.name===propertyDefinition.name){const newName=uuid();this.initialValues[newName]=initialValues;propertyDefinition.name=newName;}}
_saveInitialPropertiesValues(){this.initialValues={};for(const propertiesValues of this.props.value||[]){this.initialValues[propertiesValues.name]={name:propertiesValues.name,type:propertiesValues.type,comodel:propertiesValues.comodel,};}}
_openPropertyDefinition(target,propertyName,isNewlyCreated=false){const propertiesList=this.propertiesList;const propertyIndex=propertiesList.findIndex((property)=>property.name===propertyName);const currentName=(propertyName)=>{const propertiesList=this.propertiesList;for(const[newName,initialValue]of Object.entries(this.initialValues)){if(initialValue.name===propertyName){const prop=propertiesList.find((prop)=>prop.name===newName);if(prop){return newName;}}}
return propertyName;};this.popoverCloseFn=this.popover.add(target,PropertyDefinition,{readonly:this.props.readonly||!this.state.canChangeDefinition,canChangeDefinition:this.state.canChangeDefinition,checkDefinitionWriteAccess:()=>this.checkDefinitionWriteAccess(),propertyDefinition:this.propertiesList.find((property)=>property.name===currentName(propertyName)),context:this.context,onChange:this.onPropertyDefinitionChange.bind(this),onDelete:()=>this.onPropertyDelete(currentName(propertyName)),onPropertyMove:(direction)=>this.onPropertyMove(currentName(propertyName),direction),isNewlyCreated:isNewlyCreated,propertyIndex:propertyIndex,propertiesSize:propertiesList.length,hideKanbanOption:this.props.hideKanbanOption,},{preventClose:this.checkPopoverClose,popoverClass:"o_property_field_popover",position:"top",onClose:()=>{this.state.movedPropertyName=null;target.classList.remove("disabled");if(isNewlyCreated){this._setDefaultPropertyValue(currentName(propertyName));}},},);}
_setDefaultPropertyValue(propertyName){const propertiesValues=this.propertiesList;const newProperty=propertiesValues.find((property)=>property.name===propertyName);newProperty.value=newProperty.default;this.props.value=propertiesValues;this.props.update(propertiesValues);}}
PropertiesField.template="web.PropertiesField";PropertiesField.components={Dropdown,DropdownItem,PropertyDefinition,PropertyValue,};PropertiesField.props={...standardFieldProps,columns:{type:Number,optional:true},hideKanbanOption:{type:Boolean,optional:true},};PropertiesField.extractProps=({attrs,field})=>{const columns=parseInt(attrs.columns||"1");const hideKanbanOption=archParseBoolean(attrs.hideKanbanOption);return{columns,hideKanbanOption};};PropertiesField.displayName=_lt("Properties");PropertiesField.supportedTypes=["properties"];registry.category("fields").add("properties",PropertiesField);return __exports;});;

/* /web/static/src/views/fields/properties/property_definition.js */
odoo.define('@web/views/fields/properties/property_definition',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{PropertyValue}=require("@web/views/fields/properties/property_value");const{CheckBox}=require("@web/core/checkbox/checkbox");const{DomainSelector}=require("@web/core/domain_selector/domain_selector");const{Domain}=require("@web/core/domain");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{ModelSelector}=require("@web/core/model_selector/model_selector");const{Many2XAutocomplete}=require("@web/views/fields/relational_utils");const{useService,useOwnedDialogs}=require("@web/core/utils/hooks");const{PropertyDefinitionSelection}=require("@web/views/fields/properties/property_definition_selection");const{PropertyTags}=require("@web/views/fields/properties/property_tags");const{sprintf}=require("@web/core/utils/strings");const{SelectCreateDialog}=require("@web/views/view_dialogs/select_create_dialog");const{uuid}=require("@web/views/utils");const{Component,useState,onWillUpdateProps,useEffect,useRef}=require("@odoo/owl");const PropertyDefinition=__exports.PropertyDefinition=class PropertyDefinition extends Component{setup(){this.orm=useService("orm");this.propertyDefinitionRef=useRef("propertyDefinition");this.addDialog=useOwnedDialogs();const defaultDefinition={name:false,string:"",type:"char",default:"",};const propertyDefinition={...defaultDefinition,...this.props.propertyDefinition,};this.state=useState({propertyDefinition:propertyDefinition,typeLabel:this._typeLabel(propertyDefinition.type),resModel:"",resModelDescription:"",matchingRecordsCount:undefined,propertyIndex:this.props.propertyIndex,});this._syncStateWithProps(propertyDefinition);this._domInputIdPrefix=uuid();onWillUpdateProps((newProps)=>this._syncStateWithProps(newProps.value));useEffect((event)=>{if(this.labelFocused){return;}
this.labelFocused=true;const labelInput=this.propertyDefinitionRef.el.querySelectorAll("input")[0];if(labelInput){if(this.props.isNewlyCreated){labelInput.select();}else{labelInput.focus();}}});}
get availablePropertyTypes(){return[["char",_lt("Text")],["boolean",_lt("Checkbox")],["integer",_lt("Integer")],["float",_lt("Decimal")],["date",_lt("Date")],["datetime",_lt("Date & Time")],["selection",_lt("Selection")],["tags",_lt("Tags")],["many2one",_lt("Many2one")],["many2many",_lt("Many2many")],];}
get isFirst(){return this.state.propertyIndex===0;}
get isLast(){return this.state.propertyIndex===this.props.propertiesSize-1;}
get propertyTagValues(){return(this.state.propertyDefinition.tags||[]).map((tag)=>tag[0]);}
getUniqueDomID(suffix){return`property_definition_${this._domInputIdPrefix}_${suffix}`;}
onPropertyLabelChange(event){const newString=event.target.value;const propertyDefinition={...this.state.propertyDefinition,string:newString,};this.props.onChange(propertyDefinition);this.state.propertyDefinition=propertyDefinition;}
onPropertyLabelKeypress(event){if(event.key!=='Enter'){return;}
this.props.close();}
onDefaultChange(newDefault){const propertyDefinition={...this.state.propertyDefinition,default:newDefault,};this.props.onChange(propertyDefinition);this.state.propertyDefinition=propertyDefinition;}
onPropertyTypeChange(newType){const propertyDefinition={...this.state.propertyDefinition,type:newType,};if(["integer","float"].includes(newType)){propertyDefinition.value=0;propertyDefinition.default=0;}else{propertyDefinition.value=false;propertyDefinition.default=false;}
delete propertyDefinition.comodel;this.props.onChange(propertyDefinition);this.state.propertyDefinition=propertyDefinition;this.state.resModel='';this.state.resModelDescription='';this.state.typeLabel=this._typeLabel(newType);}
async onModelChange(newModel){const{label,technical}=newModel;const modelChanged=technical!==this.state.resModel;this.state.resModel=technical;this.state.resModelDescription=label;const propertyDefinition={...this.state.propertyDefinition,comodel:technical,default:modelChanged?false:this.state.propertyDefinition.default,value:modelChanged?false:this.state.propertyDefinition.value,domain:modelChanged?false:this.state.propertyDefinition.domain,};this.props.onChange(propertyDefinition);this.state.propertyDefinition=propertyDefinition;await this._updateMatchingRecordsCount();}
async onDomainChange(newDomain){const propertyDefinition={...this.state.propertyDefinition,domain:newDomain,default:false,};this.props.onChange(propertyDefinition);this.state.propertyDefinition=propertyDefinition;await this._updateMatchingRecordsCount();}
onButtonDomainClick(){this.addDialog(SelectCreateDialog,{title:this.env._t("Selected records"),noCreate:true,multiSelect:false,resModel:this.state.propertyDefinition.comodel,domain:new Domain(this.state.propertyDefinition.domain||"[]").toList(),context:this.props.context||{},});}
onPropertyMove(direction){if(direction==='up'){this.state.propertyIndex--;}else{this.state.propertyIndex++;}
this.props.onPropertyMove(direction);}
onSelectionOptionChange(newOptions){const propertyDefinition={...this.state.propertyDefinition,selection:newOptions,};this.props.onChange(propertyDefinition);this.state.propertyDefinition=propertyDefinition;}
onTagsChange(newTags){const propertyDefinition={...this.state.propertyDefinition,tags:newTags,};this.props.onChange(propertyDefinition);this.state.propertyDefinition=propertyDefinition;}
onViewInKanbanChange(newValue){const propertyDefinition={...this.state.propertyDefinition,view_in_kanban:newValue,};this.props.onChange(propertyDefinition);this.state.propertyDefinition=propertyDefinition;}
async _syncStateWithProps(propertyDefinition){const newModel=propertyDefinition.comodel;const currentModel=this.state.resModel;this.state.propertyDefinition=propertyDefinition;this.state.resModel=propertyDefinition.comodel;this.state.typeLabel=this._typeLabel(propertyDefinition.type);this.state.resModel=newModel;if(newModel&&newModel!==currentModel){try{const result=await this.orm.call("ir.model","display_name_for",[[newModel]]);if(!result||!result.length){return;}
this.state.resModelDescription=result[0].display_name;}catch(_){this.state.resModelDescription=sprintf(_lt('You do not have access to the model "%s".'),newModel);}
await this._updateMatchingRecordsCount();}else if(!newModel){this.state.resModelDescription="";}}
async _updateMatchingRecordsCount(){if(this.state.resModel&&this.state.resModel.length){const domainList=new Domain(this.state.propertyDefinition.domain||"[]").toList();const result=await this.orm.call(this.state.propertyDefinition.comodel,"search_count",[domainList]);this.state.matchingRecordsCount=result;}else{this.state.matchingRecordsCount=undefined;}}
_typeLabel(propertyType){const allTypes=this.availablePropertyTypes;return allTypes.find((type)=>type[0]===propertyType)[1];}}
PropertyDefinition.template="web.PropertyDefinition";PropertyDefinition.components={CheckBox,DomainSelector,Dropdown,DropdownItem,PropertyValue,Many2XAutocomplete,ModelSelector,PropertyDefinitionSelection,PropertyTags,};PropertyDefinition.props={readonly:{type:Boolean,optional:true},canChangeDefinition:{type:Boolean,optional:true},checkDefinitionWriteAccess:{type:Function,optional:true},propertyDefinition:{optional:true},hideKanbanOption:{type:Boolean,optional:true},context:{type:Object},isNewlyCreated:{type:Boolean,optional:true},propertyIndex:{type:Number},propertiesSize:{type:Number},onChange:{type:Function,optional:true},onDelete:{type:Function,optional:true},onPropertyMove:{type:Function,optional:true},close:{type:Function,optional:true},};return __exports;});;

/* /web/static/src/views/fields/properties/property_definition_selection.js */
odoo.define('@web/views/fields/properties/property_definition_selection',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{uuid}=require("@web/views/utils");const{Component,useState,useRef,useEffect}=require("@odoo/owl");const PropertyDefinitionSelection=__exports.PropertyDefinitionSelection=class PropertyDefinitionSelection extends Component{setup(){this.notification=useService("notification");this.state=useState({newOption:null});this.propertyDefinitionSelectionRef=useRef("propertyDefinitionSelection");this.addButtonRef=useRef("addButton");useEffect(()=>{const inputs=this.propertyDefinitionSelectionRef.el.querySelectorAll(".o_field_property_selection_option input");if(inputs&&inputs.length&&!inputs[inputs.length-1].value){inputs[inputs.length-1].focus();}});}
get options(){return JSON.parse(JSON.stringify(this.props.options||[]));}
get optionsVisible(){const options=this.options||[];return this.state.newOption?[...options,this.state.newOption]:options;}
onOptionCreate(){this.state.newOption=[uuid(),""];}
onOptionChange(event,optionIndex){const target=event.target;const newLabel=target.value;if(this.options[optionIndex]&&this.options[optionIndex][1]===newLabel){return;}
const options=this.optionsVisible;if(!newLabel||!newLabel.length){options.splice(optionIndex,1);}else{options[optionIndex][1]=newLabel;}
const nonEmptyOptions=options.filter((option)=>option[1]&&option[1].length);this.props.onOptionsChange(nonEmptyOptions);if(this.state.newOption&&this.state.newOption[1]&&this.state.newOption[1].length){this.state.newOption=null;}}
onOptionBlur(event,optionIndex){if(event.target.value&&event.target.value.length){return;}
if(event.relatedTarget===this.addButtonRef.el){event.stopPropagation();event.preventDefault();}else if(optionIndex>=this.options.length){this.state.newOption=null;}}
onOptionKeyDown(event,optionIndex){if(event.key==="Enter"){const newLabel=event.target.value;if(!newLabel||!newLabel.length){event.stopPropagation();event.preventDefault();return;}
this.onOptionChange(event,optionIndex);this.onOptionCreate();}else if(["ArrowUp","ArrowDown"].includes(event.key)){event.stopPropagation();event.preventDefault();if(event.key==="ArrowUp"&&optionIndex>0){const previousInput=event.target.closest(".o_field_property_selection_option").previousElementSibling.querySelector("input");previousInput.focus();}else if(event.key==="ArrowDown"&&optionIndex<this.optionsVisible.length-1){const nextInput=event.target.closest(".o_field_property_selection_option").nextElementSibling.querySelector("input");nextInput.focus();}}}
onOptionSetDefault(optionIndex){if(!this.props.canChangeDefinition){return;}
const newValue=this.optionsVisible[optionIndex][0];this.props.onDefaultOptionChange(newValue!==this.props.default?newValue:false);}
onOptionDelete(optionIndex){const options=this.optionsVisible;options.splice(optionIndex,1);this.props.onOptionsChange(options);}}
PropertyDefinitionSelection.template="web.PropertyDefinitionSelection";PropertyDefinitionSelection.props={default:{type:String,optional:true},options:{},readonly:{type:Boolean,optional:true},canChangeDefinition:{type:Boolean,optional:true},onOptionsChange:{type:Function,optional:true},onDefaultOptionChange:{type:Function,optional:true},};return __exports;});;

/* /web/static/src/views/fields/properties/property_tags.js */
odoo.define('@web/views/fields/properties/property_tags',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{useService}=require("@web/core/utils/hooks");const{TagsList}=require("@web/views/fields/many2many_tags/tags_list");const{ColorList}=require("@web/core/colorlist/colorlist");const{usePopover}=require("@web/core/popover/popover_hook");const{AutoComplete}=require("@web/core/autocomplete/autocomplete");const{sprintf}=require("@web/core/utils/strings");const{Component}=require("@odoo/owl");class PropertyTagsColorListPopover extends Component{}
PropertyTagsColorListPopover.template="web.PropertyTagsColorListPopover";PropertyTagsColorListPopover.components={ColorList,};const PropertyTagAutoComplete=__exports.PropertyTagAutoComplete=class PropertyTagAutoComplete extends AutoComplete{};Object.assign(PropertyTagAutoComplete,{timeout:0});const PropertyTags=__exports.PropertyTags=class PropertyTags extends Component{setup(){this.notification=useService("notification");this.popover=usePopover();}
get displayBadge(){return!this.env.config||this.env.config.viewType!=="kanban";}
get tagListItems(){if(!this.props.selectedTags||!this.props.selectedTags.length){return[];}
let value=this.props.tags.filter((tag)=>this.props.selectedTags.indexOf(tag[0])>=0);if(!this.displayBadge){value=value.filter(tag=>tag[2]);}
const canDeleteTag=!this.props.readonly&&this.props.canChangeTags;return value.map((tag)=>{const[tagId,tagLabel,tagColorIndex]=tag;return{id:tagId,text:tagLabel,colorIndex:tagColorIndex||0,onClick:(event)=>this.onTagClick(event,tagId,tagColorIndex),onDelete:canDeleteTag&&(()=>this.onTagDelete(tagId)),};});}
get selectedTags(){return JSON.parse(JSON.stringify(this.props.selectedTags||[]));}
get availableTags(){return JSON.parse(JSON.stringify(this.props.tags||[]));}
get autocompleteSources(){return[{options:(request)=>{const tagsFiltered=this.props.tags.filter((tag)=>(!this.props.selectedTags||this.props.selectedTags.indexOf(tag[0])<0)&&(!request||!request.length||tag[1].toLocaleLowerCase().indexOf(request.toLocaleLowerCase())>=0));if(!tagsFiltered||!tagsFiltered.length){if(!request||!request.length){return[{value:null,label:_lt("Start typing..."),classList:"fst-italic",},];}else if(!this.props.canChangeTags){return[{value:null,label:_lt("No result"),classList:"fst-italic",},];}
return[{value:{toCreate:true,value:request},label:sprintf(_lt('Create "%s"'),request),classList:"o_field_property_dropdown_add",},];}
return tagsFiltered.map((tag)=>{return{value:tag[0],label:tag[1],};});},},];}
onOptionSelected(tagValue){if(!tagValue){return;}
if(tagValue.toCreate){this.onTagCreate(tagValue.value);}else{const selectedTags=this.selectedTags;const newValue=[...selectedTags,tagValue];this.props.onValueChange(newValue);}}
async onTagCreate(newLabel){if(!newLabel||!newLabel.length){return;}
if(!await this.props.checkDefinitionWriteAccess()){this.notification.add(_lt("You need to be able to edit parent first to add property tags"),{type:"warning",});return;}
const newValue=newLabel?newLabel.toLowerCase().replace(" ","_"):"";const existingTag=this.props.tags.find((tag)=>tag[0]===newValue);if(existingTag){this.notification.add(_lt("This tag is already available"),{type:"warning",});return;}
const tagColor=this.props.tags&&this.props.tags.length?(this.props.tags[this.props.tags.length-1][2]+1)%ColorList.COLORS.length:parseInt(Math.random()*ColorList.COLORS.length);const newTag=[newValue,newLabel,tagColor];const updatedTags=[...this.availableTags,newTag];const newValues=[...this.props.selectedTags,newTag[0]];this.props.onTagsChange(updatedTags,newValues);}
onTagDelete(deleteTag){if(this.props.deleteAction==="value"){const selectedTags=this.selectedTags;const newValue=selectedTags.filter((tag)=>tag!==deleteTag);this.props.onValueChange(newValue);}else{const availableTags=this.availableTags;this.props.onTagsChange(availableTags.filter((tag)=>tag[0]!==deleteTag));}}
onTagClick(event,tagId,tagColor){if(!this.props.canChangeTags){event.currentTarget.blur();return;}
this.popoverCloseFn=this.popover.add(event.currentTarget,this.constructor.components.Popover,{colors:[...Array(ColorList.COLORS.length).keys()],tag:{id:tagId,colorIndex:tagColor},switchTagColor:this.onTagColorSwitch.bind(this),},{closeOnClickAway:true,});}
onTagColorSwitch(colorIndex,currentTag){const availableTags=this.availableTags;availableTags.find((tag)=>tag[0]===currentTag.id)[2]=colorIndex;this.props.onTagsChange(availableTags);this.popoverCloseFn();this.popoverCloseFn=null;}}
PropertyTags.template="web.PropertyTags";PropertyTags.components={AutoComplete:PropertyTagAutoComplete,TagsList,ColorList,Popover:PropertyTagsColorListPopover,};PropertyTags.props={id:{type:String,optional:true},selectedTags:{},tags:{},deleteAction:{type:String},readonly:{type:Boolean,optional:true},canChangeTags:{type:Boolean,optional:true},checkDefinitionWriteAccess:{type:Function,optional:true},onValueChange:{type:Function,optional:true},onTagsChange:{type:Function,optional:true},};return __exports;});;

/* /web/static/src/views/fields/properties/property_value.js */
odoo.define('@web/views/fields/properties/property_value',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{CheckBox}=require("@web/core/checkbox/checkbox");const{DateTimePicker,DatePicker}=require("@web/core/datepicker/datepicker");const{Domain}=require("@web/core/domain");const{Many2XAutocomplete,useOpenMany2XRecord}=require("@web/views/fields/relational_utils");const{useService}=require("@web/core/utils/hooks");const{TagsList}=require("@web/views/fields/many2many_tags/tags_list");const{m2oTupleFromData}=require("@web/views/fields/many2one/many2one_field");const{PropertyTags}=require("@web/views/fields/properties/property_tags");const{AutoComplete}=require("@web/core/autocomplete/autocomplete");const{formatFloat,formatInteger,formatMany2one}=require("@web/views/fields/formatters");const{parseFloat,parseInteger}=require("@web/views/fields/parsers");const{deserializeDate,deserializeDateTime,formatDate,formatDateTime,serializeDate,serializeDateTime,}=require("@web/core/l10n/dates");const{Component}=require("@odoo/owl");const PropertyValue=__exports.PropertyValue=class PropertyValue extends Component{setup(){this.orm=useService("orm");this.action=useService("action");this.openMany2X=useOpenMany2XRecord({resModel:this.props.model,activeActions:{create:false,createEdit:false,write:true,},isToMany:false,onRecordSaved:async(record)=>{if(!record){return;}
await record.load();const recordData=m2oTupleFromData(record.data);await this.onValueChange([{id:recordData[0],name:recordData[1]}]);},fieldString:this.props.string,});}
get propertyValue(){const value=this.props.value;if(this.props.type==="float"){return value;}else if(this.props.type==="datetime"){const datetimeValue=typeof value==="string"?deserializeDateTime(value):value;return datetimeValue&&!datetimeValue.invalid?datetimeValue:false;}else if(this.props.type==="date"){const dateValue=typeof value==="string"?deserializeDate(value):value;return dateValue&&!dateValue.invalid?dateValue:false;}else if(this.props.type==="boolean"){return!!value;}else if(this.props.type==="selection"){const options=this.props.selection||[];const option=options.find((option)=>option[0]===value);return option&&option.length===2&&option[0]?option[0]:"";}else if(this.props.type==="many2one"){return!value||value.length!==2||!value[0]?false:value;}else if(this.props.type==="many2many"){if(!value||!value.length){return[];}
return value.map((many2manyValue)=>{const hasAccess=many2manyValue[1]!==null;return{id:many2manyValue[0],text:hasAccess?many2manyValue[1]:_lt('No Access'),onClick:hasAccess&&this.clickableRelational&&(async()=>await this._openRecord(this.props.comodel,many2manyValue[0])),onDelete:!this.props.readonly&&hasAccess&&(()=>this.onMany2manyDelete(many2manyValue[0])),colorIndex:0,img:this.showAvatar&&hasAccess?`/web/image/${this.props.comodel}/${many2manyValue[0]}/avatar_128`:null,};});}else if(this.props.type==="tags"){return value||[];}
return value;}
get propertyDomain(){if(!this.props.domain||!this.props.domain.length){return[];}
let domain=new Domain(this.props.domain);if(this.props.type==="many2many"&&this.props.value){domain=Domain.and([domain,[['id','not in',this.props.value.map(rec=>rec[0])]]])}
return domain.toList();}
get displayValue(){const value=this.propertyValue;if(this.props.type==="many2one"&&value&&value.length===2){return formatMany2one(value);}else if(this.props.type==="integer"){return formatInteger(value||0);}else if(this.props.type==="float"){return formatFloat(value||0);}else if(!value){return false;}else if(this.props.type==="datetime"&&value){return formatDateTime(value);}else if(this.props.type==="date"&&value){return formatDate(value);}else if(this.props.type==="selection"){return this.props.selection.find((option)=>option[0]===value)[1];}
return value.toString();}
get clickableRelational(){return!this.env.config||this.env.config.viewType!=="kanban";}
get showAvatar(){return["many2one","many2many"].includes(this.props.type)&&["res.users","res.partner"].includes(this.props.comodel);}
async onValueChange(newValue){if(this.props.type==="datetime"){newValue=newValue&&serializeDateTime(newValue);}else if(this.props.type==="date"){newValue=newValue&&serializeDate(newValue);}else if(this.props.type==="integer"){try{newValue=parseInteger(newValue)||0;}catch{newValue=0;}}else if(this.props.type==="float"){try{newValue=parseFloat(newValue)||0;}catch{newValue=0;}}else if(["many2one","many2many"].includes(this.props.type)){newValue=newValue&&newValue.length&&newValue[0].id?[newValue[0].id,newValue[0].name]:false;if(newValue&&newValue[0]&&newValue[1]===undefined){newValue=await this._nameGet(newValue[0]);}
if(this.props.type==="many2many"&&newValue){const currentValue=this.props.value||[];const recordId=newValue[0];const exists=currentValue.find((rec)=>rec[0]===recordId);if(exists){return;}
newValue=[...currentValue,newValue];}}
this.props.onChange(newValue);}
async onMany2oneClick(event){if(this.props.readonly){event.stopPropagation();await this._openRecord(this.props.comodel,this.propertyValue[0]);}}
onExternalLinkClick(){return this.openMany2X({resId:this.propertyValue[0],forceModel:this.props.comodel,context:this.context,});}
onMany2manyDelete(many2manyId){const currentValue=JSON.parse(JSON.stringify(this.props.value||[]));const newValue=currentValue.filter((value)=>value[0]!==many2manyId);this.props.onChange(newValue);}
async onQuickCreate(name,params={}){if(params.triggeredOnBlur){this.onValueChange(false);return;}
const result=await this.orm.call(this.props.comodel,"name_create",[name],{context:this.props.context,});this.onValueChange([{id:result[0],name:result[1]}]);}
async _openRecord(recordModel,recordId){const action=await this.orm.call(recordModel,"get_formview_action",[[recordId]],{context:this.props.context,});this.action.doAction(action);}
async _nameGet(recordId){const result=await this.orm.call(this.props.comodel,"name_get",[[recordId]],{context:this.props.context,});return result[0];}}
PropertyValue.template="web.PropertyValue";PropertyValue.components={Dropdown,DropdownItem,CheckBox,DateTimePicker,DatePicker,Many2XAutocomplete,TagsList,AutoComplete,PropertyTags,};PropertyValue.props={id:{type:String,optional:true},type:{type:String,optional:true},comodel:{type:String,optional:true},domain:{type:String,optional:true},string:{type:String,optional:true},value:{optional:true},context:{type:Object},readonly:{type:Boolean,optional:true},canChangeDefinition:{type:Boolean,optional:true},checkDefinitionWriteAccess:{type:Function,optional:true},selection:{type:Array,optional:true},tags:{type:Array,optional:true},onChange:{type:Function,optional:true},onTagsChange:{type:Function,optional:true},};return __exports;});;

/* /web/static/src/views/fields/radio/radio_field.js */
odoo.define('@web/views/fields/radio/radio_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_lt}=require("@web/core/l10n/translation");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const RadioField=__exports.RadioField=class RadioField extends Component{setup(){this.id=`radio_field_${++RadioField.nextId}`;}
get items(){return RadioField.getItems(this.props.name,this.props.record);}
get string(){return this.props.record.activeFields[this.props.name].string;}
get value(){switch(this.props.type){case"selection":return this.props.value;case"many2one":return Array.isArray(this.props.value)?this.props.value[0]:this.props.value;default:return null;}}
onChange(value){switch(this.props.type){case"selection":this.props.update(value[0]);break;case"many2one":this.props.update(value);break;}}}
RadioField.nextId=0;RadioField.template="web.RadioField";RadioField.props={...standardFieldProps,orientation:{type:String,optional:true},};RadioField.defaultProps={orientation:"vertical",};RadioField.displayName=_lt("Radio");RadioField.supportedTypes=["many2one","selection"];RadioField.legacySpecialData="_fetchSpecialMany2ones";RadioField.isEmpty=(record,fieldName)=>record.data[fieldName]===false;RadioField.extractProps=({attrs})=>{return{orientation:attrs.options.horizontal?"horizontal":"vertical",};};RadioField.getItems=(fieldName,record)=>{switch(record.fields[fieldName].type){case"selection":return record.fields[fieldName].selection;case"many2one":{const value=record.preloadedData[fieldName]||[];return value.map((item)=>[item.id,item.display_name]);}
default:return[];}};registry.category("fields").add("radio",RadioField);__exports.preloadRadio=preloadRadio;async function preloadRadio(orm,record,fieldName){const field=record.fields[fieldName];const context=record.evalContext;const domain=record.getFieldDomain(fieldName).toList(context);const records=await orm.searchRead(field.relation,domain,["id"]);return await orm.call(field.relation,"name_get",[records.map((record)=>record.id)]);}
registry.category("preloadedData").add("radio",{loadOnTypes:["many2one"],preload:preloadRadio,});return __exports;});;

/* /web/static/src/views/fields/reference/reference_field.js */
odoo.define('@web/views/fields/reference/reference_field',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{Many2OneField}=require("@web/views/fields/many2one/many2one_field");const{Component,onWillUpdateProps,useState}=require("@odoo/owl");function valuesEqual(a,b){return a.resId===b.resId&&a.resModel===b.resModel;}
const ReferenceField=__exports.ReferenceField=class ReferenceField extends Component{setup(){this.state=useState({resModel:this.relation,});onWillUpdateProps((nextProps)=>{if(valuesEqual(this.getValue(this.props)||{},this.getValue(nextProps)||{})&&this.state.resModel&&this.getRelation(nextProps)!==this.state.resModel){nextProps.update(false);}});}
getPreloadedData(p){return p.record.preloadedData[p.name];}
getValue(p){if(p.type==="char"){const pdata=this.getPreloadedData(p);if(!pdata){return null;}
return{resModel:pdata.model,resId:pdata.data.id,displayName:pdata.data.display_name,};}else{return p.value;}}
get m2oProps(){const value=this.getValue(this.props);const p={...this.props,relation:this.relation,value:value&&[value.resId,value.displayName],update:this.updateM2O.bind(this),};delete p.hideModelSelector;return p;}
get selection(){if(this.props.type!=="char"&&!this.props.hideModelSelector){return this.props.record.fields[this.props.name].selection;}
return[];}
get relation(){return this.getRelation(this.props);}
getRelation(props){const modelName=this.getModelName(props);if(modelName){return modelName;}
const value=this.getValue(props);if(value&&value.resModel){return value.resModel;}else{return this.state&&this.state.resModel;}}
getModelName(p){if(p.hideModelSelector&&p.record.preloadedData[p.name]){return p.record.preloadedData[p.name].modelName;}
return null;}
updateModel(value){this.state.resModel=value;this.props.update(false);}
updateM2O(value){if(!this.state.resModel){this.state.resModel=this.relation;}
this.props.update(value&&{resModel:this.state.resModel,resId:value[0],displayName:value[1],});}}
ReferenceField.template="web.ReferenceField";ReferenceField.components={Many2OneField,};ReferenceField.props={...Many2OneField.props,hideModelSelector:{type:Boolean,optional:true},};ReferenceField.defaultProps={...Many2OneField.defaultProps,};ReferenceField.displayName=_lt("Reference");ReferenceField.supportedTypes=["reference","char"];ReferenceField.legacySpecialData="_fetchSpecialReference";ReferenceField.extractProps=({attrs,field})=>{const displayModelSelector=!attrs.options["hide_model"]&&!attrs.options["model_field"];return{...Many2OneField.extractProps({attrs,field}),hideModelSelector:!displayModelSelector,};};registry.category("fields").add("reference",ReferenceField);return __exports;});;

/* /web/static/src/views/fields/relational_utils.js */
odoo.define('@web/views/fields/relational_utils',async function(require){'use strict';let __exports={};const{AutoComplete}=require("@web/core/autocomplete/autocomplete");const{makeContext}=require("@web/core/context");const{Dialog}=require("@web/core/dialog/dialog");const{useBus,useChildRef,useForwardRefToParent,useOwnedDialogs,useService,}=require("@web/core/utils/hooks");const{sprintf}=require("@web/core/utils/strings");const{createElement}=require("@web/core/utils/xml");const{FormArchParser}=require("@web/views/form/form_arch_parser");const{loadSubViews}=require("@web/views/form/form_controller");const{FormRenderer}=require("@web/views/form/form_renderer");const{evalDomain,isNull}=require("@web/views/utils");const{ViewButton}=require("@web/views/view_button/view_button");const{useViewButtons}=require("@web/views/view_button/view_button_hook");const{FormViewDialog}=require("@web/views/view_dialogs/form_view_dialog");const{SelectCreateDialog}=require("@web/views/view_dialogs/select_create_dialog");const{Component,useComponent,useEffect,useEnv,useSubEnv,onWillUpdateProps,}=require("@odoo/owl");__exports.useSelectCreate=useSelectCreate;function useSelectCreate({resModel,activeActions,onSelected,onCreateEdit,onUnselect}){const env=useEnv();const addDialog=useOwnedDialogs();function selectCreate({domain,context,filters,title,kanbanViewId}){addDialog(SelectCreateDialog,{title:title||env._t("Select records"),noCreate:!activeActions.create,multiSelect:"link"in activeActions?activeActions.link:false,resModel,context,domain,onSelected,onCreateEdit:()=>onCreateEdit({context}),dynamicFilters:filters,onUnselect,kanbanViewId,});}
return selectCreate;}
const STANDARD_ACTIVE_ACTIONS=["create","createEdit","delete","link","unlink","write"];__exports.useActiveActions=useActiveActions;function useActiveActions({fieldType,subViewActiveActions={},crudOptions={},getEvalParams=()=>({}),}){const compute=({evalContext={},readonly=true})=>{const result={type:fieldType,onDelete:null};const evalAction=(actionName)=>evals[actionName](evalContext);result.create=!readonly&&evalAction("create");result.createEdit=!readonly&&result.create&&crudOptions.createEdit;result.delete=!readonly&&evalAction("delete");if(isMany2Many){result.link=!readonly&&evalAction("link");result.unlink=!readonly&&evalAction("unlink");result.write=evalAction("write");}
if(result.unlink||(!isMany2Many&&result.delete)){result.onDelete=crudOptions.onDelete;}
return result;};const props=useComponent().props;const isMany2Many=fieldType==="many2many";const evals={};for(const actionName of STANDARD_ACTIVE_ACTIONS){let evalFn=()=>actionName!=="write";if(!isNull(crudOptions[actionName])){const action=crudOptions[actionName];evalFn=(evalContext)=>evalDomain(action,evalContext);}
if(actionName in subViewActiveActions){const viewActiveAction=subViewActiveActions[actionName];evals[actionName]=(evalContext)=>viewActiveAction&&evalFn(evalContext);}else{evals[actionName]=evalFn;}}
const activeActions=compute(getEvalParams(props));onWillUpdateProps((nextProps)=>{Object.assign(activeActions,compute(getEvalParams(nextProps)));});return activeActions;}
const Many2XAutocomplete=__exports.Many2XAutocomplete=class Many2XAutocomplete extends Component{setup(){this.orm=useService("orm");this.autoCompleteContainer=useForwardRefToParent("autocomplete_container");const{activeActions,resModel,update,isToMany,fieldString}=this.props;this.openMany2X=useOpenMany2XRecord({resModel,activeActions,isToMany,onRecordSaved:(record)=>{return update([record.data]);},onRecordDiscarded:()=>{if(!isToMany){this.props.update(false);}},fieldString,onClose:()=>{const autoCompleteInput=this.autoCompleteContainer.el.querySelector("input");if(this.props.value!==autoCompleteInput.value){autoCompleteInput.value="";}
autoCompleteInput.focus();},});this.selectCreate=useSelectCreate({resModel,activeActions,onSelected:(resId)=>{const resIds=Array.isArray(resId)?resId:[resId];const values=resIds.map((id)=>({id}));return update(values);},onCreateEdit:({context})=>this.openMany2X({context}),onUnselect:isToMany?false:()=>update(),});}
get sources(){return[this.optionsSource];}
get optionsSource(){return{placeholder:this.env._t("Loading..."),options:this.loadOptionsSource.bind(this),};}
get activeActions(){return this.props.activeActions||{};}
getCreationContext(value){return makeContext([this.props.context,{[`default_${this.props.nameCreateField}`]:value},]);}
onInput({inputValue}){if(!this.props.value||this.props.value!==inputValue){this.props.setInputFloats(true);}}
onSelect(option,params={}){if(option.action){return option.action(params);}
const record={id:option.value,name:option.label,};this.props.update([record],params);}
async loadOptionsSource(request){if(this.lastProm){this.lastProm.abort(false);}
this.lastProm=this.orm.call(this.props.resModel,"name_search",[],{name:request,operator:"ilike",args:this.props.getDomain(),limit:this.props.searchLimit+1,context:this.props.context,});const records=await this.lastProm;const options=records.map((result)=>({value:result[0],label:result[1].split("\n")[0],}));if(this.props.quickCreate&&request.length){options.push({label:sprintf(this.env._t(`Create "%s"`),request),classList:"o_m2o_dropdown_option o_m2o_dropdown_option_create",action:async(params)=>{try{await this.props.quickCreate(request,params);}catch(e){if(e&&e.name==="RPC_ERROR"&&e.exceptionName==="odoo.exceptions.ValidationError"){const context=this.getCreationContext(request);return this.openMany2X({context});}
if(e&&e.message&&e.message.name==="RPC_ERROR"&&e.message.exceptionName==="odoo.exceptions.ValidationError"){e.event.preventDefault();const context=this.getCreationContext(request);return this.openMany2X({context});}
throw e;}},});}
if(!this.props.noSearchMore&&this.props.searchLimit<records.length){options.push({label:this.env._t("Search More..."),action:this.onSearchMore.bind(this,request),classList:"o_m2o_dropdown_option o_m2o_dropdown_option_search_more",});}
const canCreateEdit="createEdit"in this.activeActions?this.activeActions.createEdit:this.activeActions.create;if(!request.length&&!this.props.value&&(this.props.quickCreate||canCreateEdit)){options.push({label:this.env._t("Start typing..."),classList:"o_m2o_start_typing",unselectable:true,});}
if(request.length&&canCreateEdit){const context=this.getCreationContext(request);options.push({label:this.env._t("Create and edit..."),classList:"o_m2o_dropdown_option o_m2o_dropdown_option_create_edit",action:()=>this.openMany2X({context}),});}
if(!records.length&&!this.activeActions.create){options.push({label:this.env._t("No records"),classList:"o_m2o_no_result",unselectable:true,});}
return options;}
async onBarcodeSearch(){const autoCompleteInput=this.autoCompleteContainer.el.querySelector("input");return this.onSearchMore(autoCompleteInput.value);}
async onSearchMore(request){const{resModel,getDomain,context,fieldString}=this.props;const domain=getDomain();let dynamicFilters=[];if(request.length){const nameGets=await this.orm.call(resModel,"name_search",[],{name:request,args:domain,operator:"ilike",limit:this.props.searchMoreLimit,context,});dynamicFilters=[{description:sprintf(this.env._t("Quick search: %s"),request),domain:[["id","in",nameGets.map((nameGet)=>nameGet[0])]],},];}
const title=sprintf(this.env._t("Search: %s"),fieldString);this.selectCreate({domain,context,filters:dynamicFilters,title,kanbanViewId:this.props.kanbanViewId,});}
onChange({inputValue}){if(!inputValue.length){this.props.update(false);}}}
Many2XAutocomplete.template="web.Many2XAutocomplete";Many2XAutocomplete.components={AutoComplete};Many2XAutocomplete.defaultProps={searchLimit:7,searchMoreLimit:320,nameCreateField:"name",value:"",setInputFloats:()=>{},quickCreate:null,};__exports.useOpenMany2XRecord=useOpenMany2XRecord;function useOpenMany2XRecord({resModel,onRecordSaved,onRecordDiscarded,fieldString,activeActions,isToMany,onClose=(isNew)=>{},}){const env=useEnv();const addDialog=useOwnedDialogs();const orm=useService("orm");return async function openDialog({resId=false,forceModel=null,title,context},immediate=false){const model=forceModel||resModel;let viewId;if(resId!==false){viewId=await orm.call(model,"get_formview_id",[[resId]],{context,});}
let resolve=()=>{};if(!title){title=resId?env._t("Open: %s"):env._t("Create %s");title=sprintf(title,fieldString);}
const{create:canCreate,write:canWrite}=activeActions;const mode=(resId?canWrite:canCreate)?"edit":"readonly";addDialog(FormViewDialog,{preventCreate:!canCreate,preventEdit:!canWrite,title,context,mode,resId,resModel:model,viewId,onRecordSaved,onRecordDiscarded,isToMany,},{onClose:()=>{resolve();const isNew=!resId;onClose(isNew);},});if(!immediate){return new Promise((_resolve)=>{resolve=_resolve;});}};}
const X2ManyFieldDialog=__exports.X2ManyFieldDialog=class X2ManyFieldDialog extends Component{setup(){this.archInfo=this.props.archInfo;this.record=this.props.record;this.title=this.props.title;useSubEnv({config:this.props.config});useBus(this.record.model,"update",()=>this.render(true));this.modalRef=useChildRef();const reload=()=>this.record.load();useViewButtons(this.props.record.model,this.modalRef,{reload,beforeExecuteAction:this.beforeExecuteActionButton.bind(this),});this.canCreate=!this.record.resId;if(this.archInfo.xmlDoc.querySelector("footer")){this.footerArchInfo=Object.assign({},this.archInfo);this.footerArchInfo.xmlDoc=createElement("t");this.footerArchInfo.xmlDoc.append(...[...this.archInfo.xmlDoc.querySelectorAll("footer")]);this.footerArchInfo.arch=this.footerArchInfo.xmlDoc.outerHTML;[...this.archInfo.xmlDoc.querySelectorAll("footer")].forEach((x)=>x.remove());this.archInfo.arch=this.archInfo.xmlDoc.outerHTML;}
const{autofocusFieldId,disableAutofocus}=this.archInfo;if(!disableAutofocus){useEffect((isInEdition)=>{let elementToFocus;if(isInEdition){elementToFocus=(autofocusFieldId&&this.modalRef.el.querySelector(`#${autofocusFieldId}`))||this.modalRef.el.querySelector(".o_field_widget input");}else{elementToFocus=this.modalRef.el.querySelector("button.btn-primary");}
if(elementToFocus){elementToFocus.focus();}else{this.modalRef.el.focus();}},()=>[this.record.isInEdition]);}}
async beforeExecuteActionButton(clickParams){if(clickParams.special!=="cancel"){return this.record.save();}}
disableButtons(){const btns=this.modalRef.el.querySelectorAll(".modal-footer button");for(const btn of btns){btn.setAttribute("disabled","1");}
return btns;}
discard(){if(this.record.isInEdition){this.record.discard();}
this.props.close();}
enableButtons(btns){for(const btn of btns){btn.removeAttribute("disabled");}}
async save({saveAndNew}){if(await this.record.checkValidity()){this.record=(await this.props.save(this.record,{saveAndNew}))||this.record;}else{this.record.openInvalidFieldsNotification();return false;}
if(!saveAndNew){this.props.close();}
return true;}
async remove(){await this.props.delete();this.props.close();}
async saveAndNew(){const disabledButtons=this.disableButtons();const saved=await this.save({saveAndNew:true});this.enableButtons(disabledButtons);if(saved){if(this.title){this.title=this.title.replace(this.env._t("Open:"),this.env._t("New:"));}
this.render(true);}}}
X2ManyFieldDialog.components={Dialog,FormRenderer,ViewButton};X2ManyFieldDialog.props={archInfo:Object,close:Function,record:Object,save:Function,title:String,delete:{optional:true},deleteButtonLabel:{optional:true},config:Object,};X2ManyFieldDialog.template="web.X2ManyFieldDialog";async function getFormViewInfo({list,activeField,viewService,userService,env}){let formViewInfo=activeField.views.form;const comodel=list.resModel;if(!formViewInfo){const{fields,relatedModels,views}=await viewService.loadViews({context:list.context,resModel:comodel,views:[[false,"form"]],});const archInfo=new FormArchParser().parse(views.form.arch,relatedModels,comodel);formViewInfo={...archInfo,fields:{...list.fields,...fields}};}
await loadSubViews(formViewInfo.activeFields,formViewInfo.fields,{},comodel,viewService,userService,env.isSmall);return formViewInfo;}
__exports.useAddInlineRecord=useAddInlineRecord;function useAddInlineRecord({addNew}){let creatingRecord=false;async function addInlineRecord({context,editable}){if(!creatingRecord){creatingRecord=true;try{await addNew({context,mode:"edit",position:editable});}finally{creatingRecord=false;}}}
return addInlineRecord;}
__exports.useOpenX2ManyRecord=useOpenX2ManyRecord;function useOpenX2ManyRecord({resModel,activeField,activeActions,getList,updateRecord,saveRecord,withParentId,}){const viewService=useService("view");const userService=useService("user");const env=useEnv();const addDialog=useOwnedDialogs();const viewMode=activeField.viewMode;async function openRecord({record,mode,context,title,onClose}){if(!title){title=record?env._t("Open: %s"):env._t("Create %s");title=sprintf(title,activeField.string);}
const list=getList();const model=list.model;const form=await getFormViewInfo({list,activeField,viewService,userService,env});let deleteRecord;let deleteButtonLabel=undefined;const isDuplicate=!!record;if(record){const _record=record;record=await model.duplicateDatapoint(record,{mode,viewMode:"form",fields:{...form.fields},views:{form},});const{delete:canDelete,onDelete}=activeActions;deleteRecord=viewMode==="kanban"&&canDelete?()=>onDelete(_record):null;deleteButtonLabel=activeActions.type==='one2many'?env._t('Delete'):env._t('Remove');}else{const recordParams={context:makeContext([list.context,context]),resModel:resModel,activeFields:form.activeFields,fields:{...form.fields},views:{form},mode:"edit",viewType:"form",};record=await model.addNewRecord(list,recordParams,withParentId);}
addDialog(X2ManyFieldDialog,{config:env.config,archInfo:form,record,save:async(rec,{saveAndNew})=>{if(isDuplicate&&rec.id===record.id){await updateRecord(rec);}else{await saveRecord(rec);}
if(saveAndNew){return model.addNewRecord(list,{context:makeContext([list.context,context]),resModel:resModel,activeFields:form.activeFields,fields:{...form.fields},views:{form},mode:"edit",viewType:"form",},withParentId);}},title,delete:deleteRecord,deleteButtonLabel:deleteButtonLabel,},{onClose});}
return openRecord;}
__exports.useX2ManyCrud=useX2ManyCrud;function useX2ManyCrud(getList,isMany2Many){let saveRecord;if(isMany2Many){saveRecord=async(object)=>{const list=getList();const currentIds=list.currentIds;let resIds;if(Array.isArray(object)){resIds=[...currentIds,...object];}else if(object.resId){if(object.isDirty){await object.save();}
resIds=[...currentIds,object.resId];}else{return list.add(object,{isM2M:isMany2Many});}
return list.replaceWith(resIds);};}else{saveRecord=(record)=>{return getList().add(record);};}
const updateRecord=(record)=>{const list=getList();return list.model.updateRecord(list,record,{isM2M:isMany2Many});};const operation=isMany2Many?"FORGET":"DELETE";const removeRecord=(record)=>{const list=getList();return list.delete(record.id,operation);};return{saveRecord,updateRecord,removeRecord,};}
return __exports;});;

/* /web/static/src/views/fields/remaining_days/remaining_days_field.js */
odoo.define('@web/views/fields/remaining_days/remaining_days_field',async function(require){'use strict';let __exports={};const{DatePicker,DateTimePicker}=require("@web/core/datepicker/datepicker");const{formatDate,formatDateTime}=require("@web/core/l10n/dates");const{localization}=require("@web/core/l10n/localization");const{_lt,_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{sprintf}=require("@web/core/utils/strings");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const RemainingDaysField=__exports.RemainingDaysField=class RemainingDaysField extends Component{get hasTime(){return this.props.type==="datetime";}
get pickerComponent(){return this.hasTime?DateTimePicker:DatePicker;}
get diffDays(){if(!this.props.value){return null;}
const today=luxon.DateTime.local().startOf("day");return Math.floor(this.props.value.startOf("day").diff(today,"days").days);}
get diffString(){if(this.diffDays===null){return"";}
switch(this.diffDays){case-1:return _t("Yesterday");case 0:return _t("Today");case 1:return _t("Tomorrow");}
if(Math.abs(this.diffDays)>99){return this.formattedValue;}
if(this.diffDays<0){return sprintf(_t("%s days ago"),-this.diffDays);}
return sprintf(_t("In %s days"),this.diffDays);}
get formattedValue(){return this.hasTime?formatDateTime(this.props.value,{format:localization.dateFormat}):formatDate(this.props.value);}
onDateTimeChanged(datetime){if(datetime){this.props.update(datetime);}else if(typeof datetime==="string"){this.props.update(false);}}}
RemainingDaysField.template="web.RemainingDaysField";RemainingDaysField.props={...standardFieldProps,};RemainingDaysField.displayName=_lt("Remaining Days");RemainingDaysField.supportedTypes=["date","datetime"];registry.category("fields").add("remaining_days",RemainingDaysField);return __exports;});;

/* /web/static/src/views/fields/selection/selection_field.js */
odoo.define('@web/views/fields/selection/selection_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_lt}=require("@web/core/l10n/translation");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const SelectionField=__exports.SelectionField=class SelectionField extends Component{get options(){switch(this.props.record.fields[this.props.name].type){case"many2one":return[...this.props.record.preloadedData[this.props.name]];case"selection":return this.props.record.fields[this.props.name].selection.filter((option)=>option[0]!==false&&option[1]!=="");default:return[];}}
get string(){switch(this.props.type){case"many2one":return this.props.value?this.props.value[1]:"";case"selection":return this.props.value!==false?this.options.find((o)=>o[0]===this.props.value)[1]:"";default:return"";}}
get value(){const rawValue=this.props.value;return this.props.type==="many2one"&&rawValue?rawValue[0]:rawValue;}
get isRequired(){return this.props.record.isRequired(this.props.name);}
stringify(value){return JSON.stringify(value);}
onChange(ev){const value=JSON.parse(ev.target.value);switch(this.props.type){case"many2one":if(value===false){this.props.update(false);}else{this.props.update(this.options.find((option)=>option[0]===value));}
break;case"selection":this.props.update(value);break;}}}
SelectionField.template="web.SelectionField";SelectionField.props={...standardFieldProps,placeholder:{type:String,optional:true},};SelectionField.displayName=_lt("Selection");SelectionField.supportedTypes=["many2one","selection"];SelectionField.legacySpecialData="_fetchSpecialRelation";SelectionField.isEmpty=(record,fieldName)=>record.data[fieldName]===false;SelectionField.extractProps=({attrs})=>{return{placeholder:attrs.placeholder,};};registry.category("fields").add("selection",SelectionField);__exports.preloadSelection=preloadSelection;function preloadSelection(orm,record,fieldName){const field=record.fields[fieldName];const context=record.evalContext;const domain=record.getFieldDomain(fieldName).toList(context);return orm.call(field.relation,"name_search",["",domain]);}
registry.category("preloadedData").add("selection",{loadOnTypes:["many2one"],preload:preloadSelection,});return __exports;});;

/* /web/static/src/views/fields/signature/signature_field.js */
odoo.define('@web/views/fields/signature/signature_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{SignatureDialog}=require("@web/core/signature/signature_dialog");const{useService}=require("@web/core/utils/hooks");const{url}=require("@web/core/utils/urls");const{isBinarySize}=require("@web/core/utils/binary");const{fileTypeMagicWordMap,imageCacheKey}=require("@web/views/fields/image/image_field");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,onWillUpdateProps,useState}=require("@odoo/owl");const placeholder="/web/static/img/placeholder.png";const SignatureField=__exports.SignatureField=class SignatureField extends Component{setup(){this.displaySignatureRatio=3;this.dialogService=useService("dialog");this.state=useState({isValid:true,});this.rawCacheKey=this.props.record.data.__last_update;onWillUpdateProps((nextProps)=>{const{record}=this.props;const{record:nextRecord}=nextProps;if(record.resId!==nextRecord.resId||nextRecord.mode==="readonly"){this.rawCacheKey=nextRecord.data.__last_update;}});}
get getUrl(){const{name,previewImage,record,value}=this.props;if(this.state.isValid&&value){if(isBinarySize(value)){if(!this.rawCacheKey){this.rawCacheKey=this.props.record.data.__last_update;}
return url("/web/image",{model:record.resModel,id:record.resId,field:previewImage||name,unique:imageCacheKey(this.rawCacheKey),});}else{const magic=fileTypeMagicWordMap[this.props.value[0]]||"png";return`data:image/${magic};base64,${this.props.value}`;}}
return placeholder;}
get sizeStyle(){let{width,height,value}=this.props;if(!value){if(width&&height){width=Math.min(width,this.displaySignatureRatio*height);height=width/this.displaySignatureRatio;}else if(width){height=width/this.displaySignatureRatio;}else if(height){width=height*this.displaySignatureRatio;}}
let style="";if(width){style+=`width:${width}px; max-width:${width}px;`;}
if(height){style+=`height:${height}px; max-height:${height}px;`;}
return style;}
onClickSignature(){if(!this.props.readonly){const nameAndSignatureProps={mode:"draw",displaySignatureRatio:3,signatureType:"signature",noInputName:true,};const{fullName,record}=this.props;let defaultName="";if(fullName){let signName;const fullNameData=record.data[fullName];if(record.fields[fullName].type==="many2one"){signName=fullNameData&&fullNameData[1];}else{signName=fullNameData;}
defaultName=signName===""?undefined:signName;}
nameAndSignatureProps.defaultFont=this.props.defaultFont;const dialogProps={defaultName,nameAndSignatureProps,uploadSignature:(signature)=>this.uploadSignature(signature),};this.dialogService.add(SignatureDialog,dialogProps);}}
onLoadFailed(){this.state.isValid=false;this.notification.add(this.env._t("Could not display the selected image"),{type:"danger",});}
uploadSignature({signatureImage}){this.rawCacheKey=null;return this.props.update(signatureImage[1]||false);}}
SignatureField.template="web.SignatureField";SignatureField.props={...standardFieldProps,defaultFont:{type:String},fullName:{type:String,optional:true},height:{type:Number,optional:true},previewImage:{type:String,optional:true},width:{type:Number,optional:true},};SignatureField.fieldDependencies={__last_update:{type:"datetime"},};SignatureField.extractProps=({attrs})=>{const{options,width,height}=attrs;return{defaultFont:attrs.options.default_font||"",fullName:attrs.options.full_name,height:options.size?options.size[1]||undefined:height,previewImage:attrs.options.preview_image,width:options.size?options.size[0]||undefined:width,};};registry.category("fields").add("signature",SignatureField);return __exports;});;

/* /web/static/src/views/fields/standard_field_props.js */
odoo.define('@web/views/fields/standard_field_props',async function(require){'use strict';let __exports={};const standardFieldProps=__exports.standardFieldProps={id:{type:String,optional:true},name:{type:String,optional:true},readonly:{type:Boolean,optional:true},record:{type:Object,optional:true},type:{type:String,optional:true},update:{type:Function,optional:true},value:true,decorations:{type:Object,optional:true},setDirty:{type:Function,optional:true},};return __exports;});;

/* /web/static/src/views/fields/stat_info/stat_info_field.js */
odoo.define('@web/views/fields/stat_info/stat_info_field',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{archParseBoolean}=require("@web/views/utils");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const formatters=registry.category("formatters");const StatInfoField=__exports.StatInfoField=class StatInfoField extends Component{get formattedValue(){const formatter=formatters.get(this.props.type);return formatter(this.props.value||0,{digits:this.props.digits});}
get label(){return this.props.labelField?this.props.record.data[this.props.labelField]:this.props.record.activeFields[this.props.name].string;}}
StatInfoField.template="web.StatInfoField";StatInfoField.props={...standardFieldProps,labelField:{type:String,optional:true},noLabel:{type:Boolean,optional:true},digits:{type:Array,optional:true},};StatInfoField.displayName=_lt("Stat Info");StatInfoField.supportedTypes=["float","integer","monetary"];StatInfoField.isEmpty=()=>false;StatInfoField.extractProps=({attrs,field})=>{let digits;if(attrs.digits){digits=JSON.parse(attrs.digits);}else if(attrs.options.digits){digits=attrs.options.digits;}else if(Array.isArray(field.digits)){digits=field.digits;}
return{labelField:attrs.options.label_field,noLabel:archParseBoolean(attrs.nolabel),digits,};};registry.category("fields").add("statinfo",StatInfoField);return __exports;});;

/* /web/static/src/views/fields/state_selection/state_selection_field.js */
odoo.define('@web/views/fields/state_selection/state_selection_field',async function(require){'use strict';let __exports={};const{useCommand}=require("@web/core/commands/command_hook");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{registry}=require("@web/core/registry");const{_lt}=require("@web/core/l10n/translation");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{formatSelection}=require("@web/views/fields/formatters");const{Component}=require("@odoo/owl");const StateSelectionField=__exports.StateSelectionField=class StateSelectionField extends Component{setup(){if(this.props.record.activeFields[this.props.name].viewType==="form"){const commandName=this.env._t("Set kanban state...");useCommand(commandName,()=>{return{placeholder:commandName,providers:[{provide:()=>this.options.map((value)=>({name:value[1],action:()=>{this.props.update(value[0],{save:this.props.autosave});},})),},],};},{category:"smart_action",hotkey:"alt+shift+r"});}
this.colorPrefix="o_status_";this.colors={blocked:"red",done:"green",};}
get options(){return this.props.record.fields[this.props.name].selection.map(([state,label])=>{return[state,this.props.record.data[`legend_${state}`]||label];});}
get availableOptions(){return this.options.filter((o)=>o[0]!==this.currentValue);}
get currentValue(){return this.props.value||this.options[0][0];}
get label(){if(this.props.value&&this.props.record.data[`legend_${this.props.value[0]}`]){return this.props.record.data[`legend_${this.props.value[0]}`];}
return formatSelection(this.currentValue,{selection:this.options});}
get showLabel(){return(this.props.record.activeFields[this.props.name].viewType==="list"&&!this.props.hideLabel);}
get isReadonly(){return this.props.record.isReadonly(this.props.name);}
statusColor(value){return this.colors[value]?this.colorPrefix+this.colors[value]:"";}}
StateSelectionField.template="web.StateSelectionField";StateSelectionField.components={Dropdown,DropdownItem,};StateSelectionField.props={...standardFieldProps,hideLabel:{type:Boolean,optional:true},autosave:{type:Boolean,optional:true},};StateSelectionField.defaultProps={hideLabel:false,};StateSelectionField.displayName=_lt("Label Selection");StateSelectionField.supportedTypes=["selection"];StateSelectionField.extractProps=({attrs})=>{return{hideLabel:!!attrs.options.hide_label,autosave:"autosave"in attrs.options?!!attrs.options.autosave:true,};};registry.category("fields").add("state_selection",StateSelectionField);registry.category("fields").add("list.state_selection",StateSelectionField);return __exports;});;

/* /web/static/src/views/fields/statusbar/statusbar_field.js */
odoo.define('@web/views/fields/statusbar/statusbar_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{useCommand}=require("@web/core/commands/command_hook");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{groupBy}=require("@web/core/utils/arrays");const{escape,sprintf}=require("@web/core/utils/strings");const{Domain}=require("@web/core/domain");const{_lt}=require("@web/core/l10n/translation");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const StatusBarField=__exports.StatusBarField=class StatusBarField extends Component{setup(){if(this.props.record.activeFields[this.props.name].viewType==="form"){const commandName=sprintf(this.env._t(`Move to %s...`),escape(this.props.displayName));useCommand(commandName,()=>{return{placeholder:commandName,providers:[{provide:()=>this.computeItems().unfolded.map((value)=>({name:value.name,action:()=>{this.selectItem(value);},})),},],};},{category:"smart_action",hotkey:"alt+shift+x",isAvailable:()=>!this.props.readonly&&!this.props.isDisabled,});}}
get currentName(){switch(this.props.record.fields[this.props.name].type){case"many2one":{const item=this.options.find((item)=>this.props.value&&item.id===this.props.value[0]);return item?item.display_name:"";}
case"selection":{const item=this.options.find((item)=>item[0]===this.props.value);return item?item[1]:"";}}
throw new Error("Unsupported field type for StatusBarField");}
get options(){switch(this.props.record.fields[this.props.name].type){case"many2one":return this.props.record.preloadedData[this.props.name];case"selection":return this.props.record.fields[this.props.name].selection;default:return[];}}
getDropdownItemClassNames(item){const classNames=["btn",item.isSelected?"btn-primary":"btn-secondary","o_arrow_button",];if(item.isSelected||this.props.isDisabled){classNames.push("disabled");}
return classNames.join(" ");}
getVisibleMany2Ones(){let items=this.options;items=items.map((i)=>{return{id:i.id,name:i.display_name,isFolded:i.fold,};});return items.map((item)=>({...item,isSelected:this.props.value&&item.id===this.props.value[0],}));}
getVisibleSelection(){let selection=this.options;if(this.props.visibleSelection.length){selection=selection.filter((item)=>this.props.visibleSelection.includes(item[0])||item[0]===this.props.value);}
return selection.map((item)=>({id:item[0],name:item[1],isSelected:item[0]===this.props.value,isFolded:false,}));}
computeItems(){let items=null;if(this.props.type==="many2one"){items=this.getVisibleMany2Ones();}else{items=this.getVisibleSelection();}
if(this.env.isSmall){return{folded:items,unfolded:[],};}else{const groups=groupBy(items,(item)=>item.isSelected||!item.isFolded);return{folded:groups.false||[],unfolded:groups.true||[],};}}
selectItem(item){switch(this.props.type){case"many2one":this.props.update([item.id,item.name],{save:true});break;case"selection":this.props.update(item.id,{save:true});break;}}
onDropdownItemSelected(ev){this.selectItem(ev.detail.payload);}}
StatusBarField.template="web.StatusBarField";StatusBarField.defaultProps={visibleSelection:[],};StatusBarField.props={...standardFieldProps,canCreate:{type:Boolean,optional:true},canWrite:{type:Boolean,optional:true},displayName:{type:String,optional:true},isDisabled:{type:Boolean,optional:true},visibleSelection:{type:Array,optional:true},};StatusBarField.components={Dropdown,DropdownItem,};StatusBarField.displayName=_lt("Status");StatusBarField.supportedTypes=["many2one","selection"];StatusBarField.legacySpecialData="_fetchSpecialStatus";StatusBarField.isEmpty=(record,fieldName)=>{return record.model.env.isSmall?!record.data[fieldName]:false;};StatusBarField.extractProps=({attrs,field})=>{return{canCreate:Boolean(attrs.can_create),canWrite:Boolean(attrs.can_write),displayName:field.string,isDisabled:!attrs.options.clickable,visibleSelection:attrs.statusbar_visible&&attrs.statusbar_visible.trim().split(/\s*,\s*/g),};};registry.category("fields").add("statusbar",StatusBarField);__exports.preloadStatusBar=preloadStatusBar;async function preloadStatusBar(orm,record,fieldName){const fieldNames=["id","display_name"];const foldField=record.activeFields[fieldName].options.fold_field;if(foldField){fieldNames.push(foldField);}
const context=record.evalContext;let domain=record.getFieldDomain(fieldName).toList(context);if(domain.length&&record.data[fieldName]){domain=Domain.or([[["id","=",record.data[fieldName][0]]],domain]).toList(context);}
const relation=record.fields[fieldName].relation;return await orm.searchRead(relation,domain,fieldNames);}
registry.category("preloadedData").add("statusbar",{loadOnTypes:["many2one"],extraMemoizationKey:(record,fieldName)=>{return record.data[fieldName];},preload:preloadStatusBar,});return __exports;});;

/* /web/static/src/views/fields/text/text_field.js */
odoo.define('@web/views/fields/text/text_field',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useDynamicPlaceholder}=require("@web/views/fields/dynamicplaceholder_hook");const{useInputField}=require("@web/views/fields/input_field_hook");const{parseInteger}=require("@web/views/fields/parsers");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{TranslationButton}=require("@web/views/fields/translation_button");const{Component,onMounted,onWillUnmount,useEffect,useRef}=require("@odoo/owl");const TextField=__exports.TextField=class TextField extends Component{setup(){if(this.props.dynamicPlaceholder){this.dynamicPlaceholder=useDynamicPlaceholder();}
this.divRef=useRef("div");this.textareaRef=useRef("textarea");useInputField({getValue:()=>this.props.value||"",refName:"textarea"});useEffect(()=>{if(!this.props.readonly){this.resize();}});onMounted(this.onMounted);onWillUnmount(this.onWillUnmount);}
async onKeydownListener(ev){if(ev.key===this.dynamicPlaceholder.TRIGGER_KEY&&ev.target===this.textareaRef.el){const baseModel=this.props.record.data.mailing_model_real;if(baseModel){await this.dynamicPlaceholder.open(this.textareaRef.el,baseModel,{validateCallback:this.onDynamicPlaceholderValidate.bind(this),closeCallback:this.onDynamicPlaceholderClose.bind(this),});}}}
onMounted(){if(this.props.dynamicPlaceholder){this.keydownListenerCallback=this.onKeydownListener.bind(this);document.addEventListener("keydown",this.keydownListenerCallback);}}
onWillUnmount(){if(this.props.dynamicPlaceholder){document.removeEventListener("keydown",this.keydownListenerCallback);}}
onDynamicPlaceholderValidate(chain,defaultValue){if(chain){const triggerKeyReplaceRegex=new RegExp(`${this.dynamicPlaceholder.TRIGGER_KEY}$`);let dynamicPlaceholder="{{object."+chain.join(".");dynamicPlaceholder+=defaultValue&&defaultValue!==""?` or '''${defaultValue}'''}}`:"}}";this.props.update(this.textareaRef.el.value.replace(triggerKeyReplaceRegex,"")+dynamicPlaceholder);}}
onDynamicPlaceholderClose(){this.textareaRef.el.focus();}
get minimumHeight(){return 50;}
get rowCount(){return this.props.rowCount;}
resize(){const textarea=this.textareaRef.el;let heightOffset=0;const style=window.getComputedStyle(textarea);if(style.boxSizing==="border-box"){const paddingHeight=parseFloat(style.paddingTop)+parseFloat(style.paddingBottom);const borderHeight=parseFloat(style.borderTopWidth)+parseFloat(style.borderBottomWidth);heightOffset=borderHeight+paddingHeight;}
const previousStyle={borderTopWidth:style.borderTopWidth,borderBottomWidth:style.borderBottomWidth,padding:style.padding,};Object.assign(textarea.style,{height:"auto",borderTopWidth:0,borderBottomWidth:0,padding:0,});textarea.style.height="auto";const height=Math.max(this.minimumHeight,textarea.scrollHeight+heightOffset);Object.assign(textarea.style,previousStyle,{height:`${height}px`});this.divRef.el.style.height=`${height}px`;}
onInput(){this.resize();}}
TextField.template="web.TextField";TextField.components={TranslationButton,};TextField.defaultProps={dynamicPlaceholder:false,rowCount:2,};TextField.props={...standardFieldProps,isTranslatable:{type:Boolean,optional:true},placeholder:{type:String,optional:true},dynamicPlaceholder:{type:Boolean,optional:true},rowCount:{type:Number,optional:true},};TextField.displayName=_lt("Multiline Text");TextField.supportedTypes=["html","text"];TextField.extractProps=({attrs,field})=>{const props={isTranslatable:field.translate,placeholder:attrs.placeholder,dynamicPlaceholder:attrs.options.dynamic_placeholder,};if(attrs.rows){props.rowCount=parseInteger(attrs.rows);}
return props;};registry.category("fields").add("text",TextField);const ListTextField=__exports.ListTextField=class ListTextField extends TextField{get minimumHeight(){return 0;}
get rowCount(){return this.props.rowCount;}}
ListTextField.defaultProps={...TextField.defaultProps,rowCount:1,};registry.category("fields").add("list.text",ListTextField);return __exports;});;

/* /web/static/src/views/fields/timezone_mismatch/timezone_mismatch_field.js */
odoo.define('@web/views/fields/timezone_mismatch/timezone_mismatch_field',async function(require){'use strict';let __exports={};const{formatDateTime}=require("@web/core/l10n/dates");const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{SelectionField}=require("@web/views/fields/selection/selection_field");const{DateTime}=luxon;const TimezoneMismatchField=__exports.TimezoneMismatchField=class TimezoneMismatchField extends SelectionField{get mismatch(){const userOffset=this.props.record.data[this.props.tzOffsetField];if(userOffset&&this.props.value){const offset=-new Date().getTimezoneOffset();let browserOffset=offset<0?"-":"+";browserOffset+=_.str.sprintf("%02d",Math.abs(offset/60));browserOffset+=_.str.sprintf("%02d",Math.abs(offset%60));return browserOffset!==userOffset;}else if(!this.props.value){return true;}
return false;}
get mismatchTitle(){if(!this.props.value){return this.env._t("Set a timezone on your user");}
return this.props.mismatchTitle;}
get options(){if(!this.mismatch){return super.options;}
return super.options.map((option)=>{const[value,label]=option;if(value===this.props.value){const offset=this.props.record.data[this.props.tzOffsetField].match(/([+-])([0-9]{2})([0-9]{2})/);const sign=offset[1]==="-"?-1:1;const userOffset=sign*(parseInt(offset[2])*60+parseInt(offset[3]));const browserOffset=-new Date().getTimezoneOffset();const userUTCDatetime=DateTime.utc().plus({minutes:userOffset-browserOffset,});return[value,`${label} (${formatDateTime(userUTCDatetime)})`];}
return[value,label];});}}
TimezoneMismatchField.template="web.TimezoneMismatchField";TimezoneMismatchField.additionalClasses=["d-flex"];TimezoneMismatchField.props={...SelectionField.props,tzOffsetField:{type:String,optional:true},mismatchTitle:{type:String,optional:true},};TimezoneMismatchField.defaultProps={...SelectionField.defaultProps,tzOffsetField:"tz_offset",mismatchTitle:_lt("Timezone Mismatch : This timezone is different from that of your browser.\nPlease, set the same timezone as your browser's to avoid time discrepancies in your system."),};TimezoneMismatchField.extractProps=({attrs})=>{return{...SelectionField.extractProps({attrs}),tzOffsetField:attrs.options.tz_offset_field,mismatchTitle:attrs.options.mismatch_title,};};registry.category("fields").add("timezone_mismatch",TimezoneMismatchField);return __exports;});;

/* /web/static/src/views/fields/translation_button.js */
odoo.define('@web/views/fields/translation_button',async function(require){'use strict';let __exports={};const{localization}=require("@web/core/l10n/localization");const{useOwnedDialogs,useService}=require("@web/core/utils/hooks");const{TranslationDialog}=require("@web/views/fields/translation_dialog");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{Component,useEnv}=require("@odoo/owl");__exports.useTranslationDialog=useTranslationDialog;function useTranslationDialog(){const addDialog=useOwnedDialogs();const env=useEnv();async function openTranslationDialog({record,fieldName}){if(!record.resId){let _continue=true;await new Promise((resolve)=>{addDialog(ConfirmationDialog,{async confirm(){_continue=await record.save({stayInEdition:true});resolve();},cancel(){_continue=false;resolve();},body:env._t("You need to save this new record before editing the translation. Do you want to proceed?"),title:env._t("Warning"),});});if(!_continue){return;}}
const{resModel,resId}=record;addDialog(TranslationDialog,{fieldName:fieldName,resId:resId,resModel:resModel,userLanguageValue:record.data[fieldName]||"",isComingFromTranslationAlert:false,onSave:async()=>{await record.load({},{keepChanges:true});record.model.notify();},});}
return openTranslationDialog;}
const TranslationButton=__exports.TranslationButton=class TranslationButton extends Component{setup(){this.user=useService("user");this.translationDialog=useTranslationDialog();}
get isMultiLang(){return localization.multiLang;}
get lang(){return this.user.lang.split("_")[0].toUpperCase();}
onClick(){const{fieldName,record}=this.props;this.translationDialog({fieldName,record});}}
TranslationButton.template="web.TranslationButton";TranslationButton.props={fieldName:{type:String},record:{type:Object},};return __exports;});;

/* /web/static/src/views/fields/translation_dialog.js */
odoo.define('@web/views/fields/translation_dialog',async function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{useService}=require("@web/core/utils/hooks");const{sprintf}=require("@web/core/utils/strings");const{loadLanguages}=require("@web/core/l10n/translation");const{Component,onWillStart}=require("@odoo/owl");const TranslationDialog=__exports.TranslationDialog=class TranslationDialog extends Component{setup(){super.setup();this.title=sprintf(this.env._t("Translate: %s"),this.props.fieldName);this.orm=useService("orm");this.user=useService("user");this.terms=[];this.updatedTerms={};onWillStart(async()=>{const languages=await loadLanguages(this.orm);const[translations,context]=await this.loadTranslations(languages);let id=1;translations.forEach((t)=>(t.id=id++));this.props.isText=context.translation_type==="text";this.props.showSource=context.translation_show_source;this.terms=translations.map((term)=>{const relatedLanguage=languages.find((l)=>l[0]===term.lang);const termInfo={...term,langName:relatedLanguage[1],value:term.value||"",};if(term.lang===this.user.lang&&!this.props.showSource&&!this.props.isComingFromTranslationAlert){this.updatedTerms[term.id]=this.props.userLanguageValue;termInfo.value=this.props.userLanguageValue;}
return termInfo;});this.terms.sort((a,b)=>a.langName.localeCompare(b.langName));});}
get domain(){const domain=this.props.domain;if(this.props.searchName){domain.push(["name","=",`${this.props.searchName}`]);}
return domain;}
async loadTranslations(languages){return this.orm.call(this.props.resModel,"get_field_translations",[[this.props.resId],this.props.fieldName,]);}
async onSave(){const translations={};this.terms.map((term)=>{const updatedTermValue=this.updatedTerms[term.id];if(term.id in this.updatedTerms&&term.value!==updatedTermValue){if(this.props.showSource){if(!translations[term.lang]){translations[term.lang]={};}
const oldTermValue=term.value?term.value:term.source;translations[term.lang][oldTermValue]=updatedTermValue||term.source;}else{translations[term.lang]=updatedTermValue||false;}}});await this.orm.call(this.props.resModel,"update_field_translations",[[this.props.resId],this.props.fieldName,translations,]);await this.props.onSave();this.props.close();}}
TranslationDialog.template="web.TranslationDialog";TranslationDialog.components={Dialog};return __exports;});;

/* /web/static/src/views/fields/url/url_field.js */
odoo.define('@web/views/fields/url/url_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_lt}=require("@web/core/l10n/translation");const{useInputField}=require("@web/views/fields/input_field_hook");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const UrlField=__exports.UrlField=class UrlField extends Component{setup(){useInputField({getValue:()=>this.props.value||""});}
get formattedHref(){let value="";if(typeof this.props.value==="string"){const shouldaddPrefix=!(this.props.websitePath||this.props.value.includes("://")||/^\//.test(this.props.value));value=shouldaddPrefix?`http://${this.props.value}`:this.props.value;}
return value;}}
UrlField.template="web.UrlField";UrlField.props={...standardFieldProps,placeholder:{type:String,optional:true},text:{type:String,optional:true},websitePath:{type:Boolean,optional:true},};UrlField.displayName=_lt("URL");UrlField.supportedTypes=["char"];UrlField.extractProps=({attrs})=>{return{text:attrs.text,websitePath:attrs.options.website_path,placeholder:attrs.placeholder,};};class FormUrlField extends UrlField{}
FormUrlField.template="web.FormUrlField";registry.category("fields").add("url",UrlField);registry.category("fields").add("form.url",FormUrlField);return __exports;});;

/* /web/static/src/views/fields/x2many/list_x2many_field.js */
odoo.define('@web/views/fields/x2many/list_x2many_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{formatX2many}=require("@web/views/fields/formatters");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const ListX2ManyField=__exports.ListX2ManyField=class ListX2ManyField extends Component{get formattedValue(){return formatX2many(this.props.value);}}
ListX2ManyField.template="web.ListX2ManyField";ListX2ManyField.props={...standardFieldProps};ListX2ManyField.useSubView=false;registry.category("fields").add("list.one2many",ListX2ManyField);registry.category("fields").add("list.many2many",ListX2ManyField);return __exports;});;

/* /web/static/src/views/fields/x2many/x2many_field.js */
odoo.define('@web/views/fields/x2many/x2many_field',async function(require){'use strict';let __exports={};const{makeContext}=require("@web/core/context");const{registry}=require("@web/core/registry");const{Pager}=require("@web/core/pager/pager");const{sprintf}=require("@web/core/utils/strings");const{useActiveActions,useAddInlineRecord,useOpenX2ManyRecord,useSelectCreate,useX2ManyCrud,}=require("@web/views/fields/relational_utils");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{KanbanRenderer}=require("@web/views/kanban/kanban_renderer");const{ListRenderer}=require("@web/views/list/list_renderer");const{evalDomain}=require("@web/views/utils");const{_lt}=require("@web/core/l10n/translation");const{Component}=require("@odoo/owl");const X2ManyField=__exports.X2ManyField=class X2ManyField extends Component{setup(){this.activeField=this.props.record.activeFields[this.props.name];this.field=this.props.record.fields[this.props.name];this.isMany2Many=this.field.type==="many2many"||this.activeField.widget==="many2many";this.addButtonText=this.props.addLabel||this.env._t("Add");this.viewMode=this.activeField.viewMode;const{saveRecord,updateRecord,removeRecord}=useX2ManyCrud(()=>this.list,this.isMany2Many);let archInfo;if(this.viewMode){archInfo=this.activeField.views[this.viewMode];}else{archInfo={};}
const subViewActiveActions=archInfo.activeActions;this.activeActions=useActiveActions({crudOptions:Object.assign({},this.activeField.options,{onDelete:removeRecord,}),fieldType:this.isMany2Many?"many2many":"one2many",subViewActiveActions,getEvalParams:(props)=>{return{evalContext:props.record.evalContext,readonly:props.readonly,};},});this.addInLine=useAddInlineRecord({addNew:(...args)=>this.list.addNew(...args),});const openRecord=useOpenX2ManyRecord({resModel:this.list.resModel,activeField:this.activeField,activeActions:this.activeActions,getList:()=>this.list,saveRecord,updateRecord,withParentId:this.activeField.widget!=="many2many",});this._openRecord=(params)=>{const activeElement=document.activeElement;openRecord({...params,onClose:()=>{if(activeElement){activeElement.focus();}},});};const selectCreate=useSelectCreate({resModel:this.props.value.resModel,activeActions:this.activeActions,onSelected:(resIds)=>saveRecord(resIds),onCreateEdit:({context})=>this._openRecord({context}),onUnselect:this.isMany2Many?false:()=>saveRecord(),});this.selectCreate=(params)=>{const p=Object.assign({},params);p.domain=[...(p.domain||[]),"!",["id","in",this.props.value.currentIds]];return selectCreate(p);};}
get displayAddButton(){return(this.viewMode==="kanban"&&("link"in this.activeActions?this.activeActions.link:this.activeActions.create)&&!this.props.readonly);}
get list(){return this.props.value;}
get nestedKeyOptionalFieldsData(){return{field:this.props.name,model:this.props.record.resModel,viewMode:this.props.record.viewMode||this.props.record.__viewType,};}
get pagerProps(){const list=this.list;return{offset:list.offset,limit:list.limit,total:list.count,onUpdate:async({offset,limit})=>{const initialLimit=this.list.limit;const unselected=await list.unselectRecord(true);if(unselected){if(initialLimit===limit&&initialLimit===this.list.limit+1){offset-=1;limit-=1;}
await list.load({limit,offset});this.render();}},withAccessKey:false,};}
get rendererProps(){const archInfo=this.activeField.views[this.viewMode];const props={archInfo,list:this.list,openRecord:this.openRecord.bind(this),};if(this.viewMode==="kanban"){const recordsDraggable=!this.props.readonly&&archInfo.recordsDraggable;props.archInfo={...archInfo,recordsDraggable};props.readonly=this.props.readonly;return props;}
const columns=archInfo.columns.map((col)=>{if(col.type==="button_group"){const buttons=col.buttons.filter((button)=>{return!this.evalColumnInvisibleModifier(button.modifiers);});return{...col,buttons};}
return col;}).filter((col)=>{if(col.type==="field"){return!this.evalColumnInvisibleModifier(col.modifiers);}else if(col.type==="button_group"){return col.buttons.length>0;}
return true;});const editable=archInfo.editable||this.props.editable;props.activeActions=this.activeActions;props.archInfo={...archInfo,columns};props.cycleOnTab=false;props.editable=!this.props.readonly&&editable;props.readonly=this.props.readonly;props.nestedKeyOptionalFieldsData=this.nestedKeyOptionalFieldsData;props.onAdd=(params)=>{params.editable=!this.props.readonly&&("editable"in params?params.editable:editable);this.onAdd(params);};return props;}
evalColumnInvisibleModifier(modifiers){if("column_invisible"in modifiers){return evalDomain(modifiers.column_invisible,this.list.evalContext);}
return false;}
async onAdd({context,editable}={}){const record=this.props.record;const domain=record.getFieldDomain(this.props.name).toList();context=makeContext([record.getFieldContext(this.props.name),context]);if(this.isMany2Many){const{string}=this.props.record.activeFields[this.props.name];const title=sprintf(this.env._t("Add: %s"),string);return this.selectCreate({domain,context,title});}
if(editable){if(this.list.editedRecord){const proms=[];this.list.model.env.bus.trigger("RELATIONAL_MODEL:NEED_LOCAL_CHANGES",{proms});await Promise.all([...proms,this.list.editedRecord._updatePromise]);if(this.list.editedRecord){await this.list.editedRecord.switchMode("readonly",{checkValidity:true});}}
if(!this.list.editedRecord){return this.addInLine({context,editable});}
return;}
return this._openRecord({context});}
async openRecord(record){return this._openRecord({record,mode:this.props.readonly?"readonly":"edit"});}}
X2ManyField.components={Pager,KanbanRenderer,ListRenderer};X2ManyField.props={...standardFieldProps,addLabel:{type:String,optional:true},editable:{type:String,optional:true},};X2ManyField.supportedTypes=["one2many","many2many"];X2ManyField.displayName=_lt("Relational table");X2ManyField.template="web.X2ManyField";X2ManyField.useSubView=true;X2ManyField.extractProps=({attrs})=>{return{addLabel:attrs["add-label"],};};registry.category("fields").add("one2many",X2ManyField);registry.category("fields").add("many2many",X2ManyField);return __exports;});;

/* /web/static/src/views/form/button_box/button_box.js */
odoo.define('@web/views/form/button_box/button_box',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{Component}=require("@odoo/owl");const ButtonBox=__exports.ButtonBox=class ButtonBox extends Component{setup(){const ui=useService("ui");this.getMaxButtons=()=>[2,2,2,4][ui.size]||7;}
getButtons(){const maxVisibleButtons=this.getMaxButtons();const visible=[];const additional=[];for(const[slotName,slot]of Object.entries(this.props.slots)){if(!("isVisible"in slot)||slot.isVisible){if(visible.length>=maxVisibleButtons){additional.push(slotName);}else{visible.push(slotName);}}}
return{visible,additional};}}
ButtonBox.template="web.Form.ButtonBox";ButtonBox.components={Dropdown,DropdownItem};ButtonBox.props={slots:Object,class:{type:String,optional:true},};ButtonBox.defaultProps={class:"",};return __exports;});;

/* /web/static/src/views/form/control_panel/form_control_panel.js */
odoo.define('@web/views/form/control_panel/form_control_panel',async function(require){'use strict';let __exports={};const{ControlPanel}=require("@web/search/control_panel/control_panel");const FormControlPanel=__exports.FormControlPanel=class FormControlPanel extends ControlPanel{}
FormControlPanel.template="web.FormControlPanel";return __exports;});;

/* /web/static/src/views/form/form_arch_parser.js */
odoo.define('@web/views/form/form_arch_parser',async function(require){'use strict';let __exports={};const{addFieldDependencies,archParseBoolean,getActiveActions}=require("@web/views/utils");const{Field}=require("@web/views/fields/field");const{XMLParser}=require("@web/core/utils/xml");const{Widget}=require("@web/views/widgets/widget");const FormArchParser=__exports.FormArchParser=class FormArchParser extends XMLParser{parse(arch,models,modelName){const xmlDoc=this.parseXML(arch);const jsClass=xmlDoc.getAttribute("js_class");const disableAutofocus=archParseBoolean(xmlDoc.getAttribute("disable_autofocus")||"");const activeActions=getActiveActions(xmlDoc);const fieldNodes={};const fieldNextIds={};let autofocusFieldId=null;const activeFields={};this.visitXML(xmlDoc,(node)=>{if(node.tagName==="field"){const fieldInfo=Field.parseFieldNode(node,models,modelName,"form",jsClass);let fieldId=fieldInfo.name;if(fieldInfo.name in fieldNextIds){fieldId=`${fieldInfo.name}_${fieldNextIds[fieldInfo.name]++}`;}else{fieldNextIds[fieldInfo.name]=1;}
fieldNodes[fieldId]=fieldInfo;node.setAttribute("field_id",fieldId);if(archParseBoolean(node.getAttribute("default_focus")||"")){autofocusFieldId=fieldId;}
addFieldDependencies(activeFields,models[modelName],fieldInfo.FieldComponent.fieldDependencies);return false;}else if(node.tagName==="div"&&node.classList.contains("oe_chatter")){return false;}else if(node.tagName==="widget"){const{WidgetComponent}=Widget.parseWidgetNode(node);addFieldDependencies(activeFields,models[modelName],WidgetComponent.fieldDependencies);}});for(const fieldNode of Object.values(fieldNodes)){const fieldName=fieldNode.name;if(activeFields[fieldName]){const{alwaysInvisible}=fieldNode;activeFields[fieldName]={...fieldNode,alwaysInvisible:activeFields[fieldName].alwaysInvisible&&alwaysInvisible,};}else{activeFields[fieldName]=fieldNode;}}
return{arch,activeActions,activeFields,autofocusFieldId,disableAutofocus,fieldNodes,xmlDoc,__rawArch:arch,};}}
return __exports;});;

/* /web/static/src/views/form/form_compiler.js */
odoo.define('@web/views/form/form_compiler',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{SIZES}=require("@web/core/ui/ui_service");const{append,combineAttributes,createElement,createTextNode,getTag,}=require("@web/core/utils/xml");const{toStringExpression}=require("@web/views/utils");const{copyAttributes,getModifier,isComponentNode,isTextNode,makeSeparator,}=require("@web/views/view_compiler");const{ViewCompiler}=require("@web/views/view_compiler");const compilersRegistry=registry.category("form_compilers");function appendAttf(el,attr,string){const attrKey=`t-attf-${attr}`;const attrVal=el.getAttribute(attrKey);el.setAttribute(attrKey,appendToExpr(attrVal,string));}
function appendToExpr(expr,string){const re=/{{.*}}/;const oldString=re.exec(expr);return oldString?`${oldString} {{${string} }}`:`{{${string} }}`;}
__exports.objectToString=objectToString;function objectToString(obj){return`{${Object.entries(obj)
        .map((t) => t.join(":"))
        .join(",")}}`;}
const FormCompiler=__exports.FormCompiler=class FormCompiler extends ViewCompiler{setup(){this.encounteredFields={};this.labels={};this.noteBookId=0;this.compilers.push(...compilersRegistry.getAll(),{selector:"div[name='button_box']",fn:this.compileButtonBox},{selector:"form",fn:this.compileForm},{selector:"group",fn:this.compileGroup},{selector:"header",fn:this.compileHeader},{selector:"label",fn:this.compileLabel,doNotCopyAttributes:true},{selector:"notebook",fn:this.compileNotebook},{selector:"separator",fn:this.compileSeparator},{selector:"sheet",fn:this.compileSheet});}
compile(){const compiled=super.compile(...arguments);compiled.children[0].setAttribute("t-ref","compiled_view_root");return compiled;}
createLabelFromField(fieldId,fieldName,fieldString,label,params){let labelText=label.textContent||fieldString;if(label.hasAttribute("data-no-label")){labelText=toStringExpression("");}else{labelText=labelText?toStringExpression(labelText):`props.record.fields['${fieldName}'].string`;}
const formLabel=createElement("FormLabel",{id:`'${fieldId}'`,fieldName:`'${fieldName}'`,record:`props.record`,fieldInfo:`props.archInfo.fieldNodes['${fieldId}']`,className:`"${label.className}"`,string:labelText,});const condition=label.getAttribute("t-if");if(condition){formLabel.setAttribute("t-if",condition);}
return formLabel;}
getLabels(fieldName){const labels=this.labels[fieldName]||[];this.labels[fieldName]=null;return labels;}
pushLabel(fieldName,label){this.labels[fieldName]=this.labels[fieldName]||[];this.labels[fieldName].push(label);}
compileButtonBox(el,params){if(!el.childNodes.length){return this.compileGenericNode(el,params);}
el.classList.remove("oe_button_box");const buttonBox=createElement("ButtonBox");let slotId=0;let hasContent=false;for(const child of el.children){const invisible=getModifier(child,"invisible");if(this.isAlwaysInvisible(invisible,params)){continue;}
hasContent=true;let isVisibleExpr;if(typeof invisible==="boolean"){isVisibleExpr=`${invisible ? false : true}`;}else{isVisibleExpr=`!evalDomainFromRecord(props.record,${JSON.stringify(invisible)})`;}
const mainSlot=createElement("t",{"t-set-slot":`slot_${slotId++}`,isVisible:isVisibleExpr,});if(child.tagName==="button"||child.children.tagName==="button"){child.classList.add("oe_stat_button","btn-light","flex-shrink-0","mb-0","py-0","border-0","border-start","border-bottom","rounded-0","text-start","text-nowrap","text-capitalize");}
if(child.tagName==="field"){child.classList.add("d-inline-block","mb-0");}
append(mainSlot,this.compileNode(child,params,false));append(buttonBox,mainSlot);}
return hasContent?buttonBox:null;}
compileButton(el,params){const compiled=super.compileButton(el,params);compiled.setAttribute("disable","props.disableViewButtons");compiled.setAttribute("enable","props.enableViewButtons");return compiled;}
compileField(el,params){const field=super.compileField(el,params);const fieldName=el.getAttribute("name");const fieldString=el.getAttribute("string");const fieldId=el.getAttribute("field_id")||fieldName;const labelsForAttr=el.getAttribute("id")||fieldName;const labels=this.getLabels(labelsForAttr);const dynamicLabel=(label)=>{const formLabel=this.createLabelFromField(fieldId,fieldName,fieldString,label,{...params,currentFieldArchNode:el,});if(formLabel){label.replaceWith(formLabel);}else{label.remove();}
return formLabel;};for(const label of labels){dynamicLabel(label);}
this.encounteredFields[fieldName]=dynamicLabel;field.setAttribute("setDirty.alike",`props.setFieldAsDirty`);return field;}
compileForm(el,params){const sheetNode=el.querySelector("sheet");const displayClasses=sheetNode?`d-flex {{ uiService.size < ${SIZES.XXL} ? "flex-column" : "flex-nowrap h-100" }}`:"d-block";const stateClasses="{{ props.record.isDirty ? 'o_form_dirty' : !props.record.isVirtual ? 'o_form_saved' : '' }}";const form=createElement("div",{"t-att-class":"props.class","t-attf-class":`{{props.record.isInEdition ? 'o_form_editable' : 'o_form_readonly'}} ${displayClasses} ${stateClasses}`,});if(!sheetNode){for(const child of el.childNodes){append(form,this.compileNode(child,params));}
form.className="o_form_nosheet";}else{let compiledList=[];for(const child of el.childNodes){const compiled=this.compileNode(child,params);if(getTag(child,true)==="sheet"){append(form,compiled);compiled.prepend(...compiledList);compiledList=[];}else if(compiled){compiledList.push(compiled);}}
append(form,compiledList);}
return form;}
compileGroup(el,params){const isOuterGroup=[...el.children].some((c)=>getTag(c,true)==="group");const formGroup=createElement(isOuterGroup?"OuterGroup":"InnerGroup");let slotId=0;let sequence=0;if(el.hasAttribute("col")){formGroup.setAttribute("maxCols",el.getAttribute("col"));}
if(el.hasAttribute("string")){const titleSlot=createElement("t",{"t-set-slot":"title"},[makeSeparator(el.getAttribute("string")),]);append(formGroup,titleSlot);}
let forceNewline=false;for(const child of el.children){if(getTag(child,true)==="newline"){forceNewline=true;continue;}
const invisible=getModifier(child,"invisible");if(this.isAlwaysInvisible(invisible,params)){continue;}
const mainSlot=createElement("t",{"t-set-slot":`item_${slotId++}`,type:"'item'",sequence:sequence++,"t-slot-scope":"scope",});let itemSpan=parseInt(child.getAttribute("colspan")||"1",10);if(forceNewline){mainSlot.setAttribute("newline",true);forceNewline=false;}
if(getTag(child,true)==="separator"){itemSpan=parseInt(formGroup.getAttribute("maxCols")||2,10);}
if(child.matches("div[class='clearfix']:empty")){itemSpan=parseInt(formGroup.getAttribute("maxCols")||2,10);}
let slotContent;if(getTag(child,true)==="field"){const addLabel=child.hasAttribute("nolabel")?child.getAttribute("nolabel")!=="1":true;slotContent=this.compileNode(child,{...params,currentSlot:mainSlot},false);if(slotContent&&addLabel&&!isOuterGroup&&!isTextNode(slotContent)){itemSpan=itemSpan===1?itemSpan+1:itemSpan;const fieldName=child.getAttribute("name");const fieldId=slotContent.getAttribute("id")||fieldName;const props={id:`${fieldId}`,fieldName:`'${fieldName}'`,record:`props.record`,string:child.hasAttribute("string")?toStringExpression(child.getAttribute("string")):`props.record.fields.${fieldName}.string`,fieldInfo:`props.archInfo.fieldNodes[${fieldId}]`,};mainSlot.setAttribute("props",objectToString(props));mainSlot.setAttribute("Component","constructor.components.FormLabel");mainSlot.setAttribute("subType","'item_component'");}}else{if(child.classList.contains("o_wrap_label")||child.classList.contains("o_td_label")||getTag(child,true)==="label"){mainSlot.setAttribute("subType","'label'");child.classList.remove("o_wrap_label");}
slotContent=this.compileNode(child,{...params,currentSlot:mainSlot},false);}
if(slotContent&&!isTextNode(slotContent)){let isVisibleExpr;if(typeof invisible==="boolean"){isVisibleExpr=`${invisible ? false : true}`;}else{isVisibleExpr=`!evalDomainFromRecord(props.record,${JSON.stringify(
                        invisible
                    )})`;}
mainSlot.setAttribute("isVisible",isVisibleExpr);if(itemSpan>0){mainSlot.setAttribute("itemSpan",`${itemSpan}`);}
const groupClassExpr=`scope && scope.className`;if(isComponentNode(slotContent)){if(getTag(slotContent)==="FormLabel"){mainSlot.prepend(createElement("t",{"t-set":"addClass","t-value":groupClassExpr,}));combineAttributes(slotContent,"className",`(addClass ? " " + addClass : "")`,`+`);}else if(getTag(child,true)!=="button"){if(slotContent.hasAttribute("class")){mainSlot.prepend(createElement("t",{"t-set":"addClass","t-value":groupClassExpr,}));combineAttributes(slotContent,"class",`(addClass ? " " + addClass : "")`,`+`);}else{slotContent.setAttribute("class",groupClassExpr);}}}else{appendAttf(slotContent,"class",`${groupClassExpr} || ""`);}
append(mainSlot,slotContent);append(formGroup,mainSlot);}}
return formGroup;}
compileHeader(el,params){const statusBar=createElement("div");statusBar.className="o_form_statusbar position-relative d-flex justify-content-between border-bottom";const buttons=[];const others=[];for(const child of el.childNodes){const compiled=this.compileNode(child,params);if(!compiled||isTextNode(compiled)){continue;}
if(getTag(child,true)==="field"){compiled.setAttribute("showTooltip",true);others.push(compiled);}else{if(compiled.tagName==="ViewButton"){compiled.setAttribute("defaultRank","'btn-secondary'");}
buttons.push(compiled);}}
let slotId=0;const statusBarButtons=createElement("StatusBarButtons");statusBarButtons.setAttribute("readonly","!props.record.isInEdition");for(const button of buttons){const slot=createElement("t",{"t-set-slot":`button_${slotId++}`,isVisible:button.getAttribute("t-if")||true,});append(slot,button);append(statusBarButtons,slot);}
append(statusBar,statusBarButtons);append(statusBar,others);return statusBar;}
compileLabel(el,params){const forAttr=el.getAttribute("for");if(forAttr){let label=createElement("label");copyAttributes(el,label);const string=el.getAttribute("string");if(string){append(label,createTextNode(string));}else if(string===""){label.setAttribute("data-no-label","true");}
if(this.encounteredFields[forAttr]){label=this.encounteredFields[forAttr](label);}else{this.pushLabel(forAttr,label);}
return label;}
const res=this.compileGenericNode(el,params);copyAttributes(el,res);return res;}
compileNotebook(el,params){const noteBookId=this.noteBookId++;const noteBook=createElement("Notebook");const pageAnchors=[...document.querySelectorAll("[href^=\\#]")].map((a)=>CSS.escape(a.getAttribute("href").substring(1))).filter((a)=>a.length);const noteBookAnchors={};if(el.hasAttribute("class")){noteBook.setAttribute("className",toStringExpression(el.getAttribute("class")));el.removeAttribute("class");}
noteBook.setAttribute("defaultPage",`props.record.isNew ? undefined : props.activeNotebookPages[${noteBookId}]`);noteBook.setAttribute("onPageUpdate",`(page) => this.props.onNotebookPageChange(${noteBookId}, page)`);for(const child of el.children){if(getTag(child,true)!=="page"){continue;}
const invisible=getModifier(child,"invisible");if(this.isAlwaysInvisible(invisible,params)){continue;}
const pageSlot=createElement("t");append(noteBook,pageSlot);const pageId=`page_${this.id++}`;const pageTitle=toStringExpression(child.getAttribute("string")||child.getAttribute("name")||"");const pageNodeName=toStringExpression(child.getAttribute("name")||"");pageSlot.setAttribute("t-set-slot",pageId);pageSlot.setAttribute("title",pageTitle);pageSlot.setAttribute("name",pageNodeName);if(child.className){pageSlot.setAttribute("className",`"${child.className}"`);}
if(child.getAttribute("autofocus")==="autofocus"){noteBook.setAttribute("defaultPage",`props.record.isNew ? "${pageId}" : (props.activeNotebookPages[${noteBookId}] || "${pageId}")`);}
for(const anchor of child.querySelectorAll("[href^=\\#]")){const anchorValue=CSS.escape(anchor.getAttribute("href").substring(1));if(!anchorValue.length){continue;}
pageAnchors.push(anchorValue);noteBookAnchors[anchorValue]={origin:`'${pageId}'`,};}
let isVisible;if(typeof invisible==="boolean"){isVisible=`${!invisible}`;}else{isVisible=`!evalDomainFromRecord(props.record,${JSON.stringify(invisible)})`;}
pageSlot.setAttribute("isVisible",isVisible);for(const contents of child.children){append(pageSlot,this.compileNode(contents,{...params,currentSlot:pageSlot}));}}
if(pageAnchors.length){for(const anchor of pageAnchors){let pageId=1;for(const child of el.children){if(child.querySelector(`#${anchor}`)){noteBookAnchors[anchor].target=`'page_${pageId}'`;noteBookAnchors[anchor]=objectToString(noteBookAnchors[anchor]);break;}
pageId++;}}
noteBook.setAttribute("anchors",objectToString(noteBookAnchors));}
return noteBook;}
compileSeparator(el,params={}){const separator=makeSeparator(el.getAttribute("string"));copyAttributes(el,separator);return this.applyInvisible(getModifier(el,"invisible"),separator,params);}
compileSheet(el,params){const sheetBG=createElement("div");sheetBG.className="o_form_sheet_bg";const sheetFG=createElement("div");sheetFG.className="o_form_sheet position-relative clearfix";append(sheetBG,sheetFG);for(const child of el.childNodes){const compiled=this.compileNode(child,params);if(!compiled){continue;}
if(getTag(child,true)==="field"){compiled.setAttribute("showTooltip",true);}
append(sheetFG,compiled);}
return sheetBG;}
compileWidget(el){const widget=super.compileWidget(el);widget.setAttribute("readonly",`!props.record.isInEdition`);return widget;}}
return __exports;});;

/* /web/static/src/views/form/form_controller.js */
odoo.define('@web/views/form/form_controller',async function(require){'use strict';let __exports={};const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{makeContext}=require("@web/core/context");const{useDebugCategory}=require("@web/core/debug/debug_context");const{registry}=require("@web/core/registry");const{SIZES}=require("@web/core/ui/ui_service");const{useBus,useService}=require("@web/core/utils/hooks");const{createElement}=require("@web/core/utils/xml");const{ActionMenus}=require("@web/search/action_menus/action_menus");const{Layout}=require("@web/search/layout");const{usePager}=require("@web/search/pager_hook");const{useModel}=require("@web/views/model");const{standardViewProps}=require("@web/views/standard_view_props");const{isX2Many}=require("@web/views/utils");const{useViewButtons}=require("@web/views/view_button/view_button_hook");const{useSetupView}=require("@web/views/view_hook");const{hasTouch}=require("@web/core/browser/feature_detection");const{FormStatusIndicator}=require("@web/views/form/form_status_indicator/form_status_indicator");const{Component,onWillStart,useEffect,useRef,onRendered,useState}=require("@odoo/owl");const viewRegistry=registry.category("views");__exports.loadSubViews=loadSubViews;async function loadSubViews(activeFields,fields,context,resModel,viewService,userService,isSmall){for(const fieldName in activeFields){const field=fields[fieldName];if(!isX2Many(field)){continue;}
const fieldInfo=activeFields[fieldName];if(fieldInfo.modifiers.invisible===true){continue;}
if(!fieldInfo.FieldComponent.useSubView){continue;}
let viewType=fieldInfo.viewMode||"list,kanban";viewType=viewType.replace("tree","list");if(viewType.includes(",")){viewType=isSmall?"kanban":"list";}
fieldInfo.viewMode=viewType;if(fieldInfo.views[viewType]){continue;}
const fieldContext={};const regex=/'([a-z]*_view_ref)' *: *'(.*?)'/g;let matches;while((matches=regex.exec(fieldInfo.context))!==null){fieldContext[matches[1]]=matches[2];}
const refinedContext={};for(const key in context){if(key.indexOf("_view_ref")===-1){refinedContext[key]=context[key];}}
refinedContext.base_model_name=resModel;const comodel=field.relation;const{fields:comodelFields,relatedModels,views}=await viewService.loadViews({resModel:comodel,views:[[false,viewType]],context:makeContext([fieldContext,userService.context,refinedContext]),});const{ArchParser}=viewRegistry.get(viewType);const archInfo=new ArchParser().parse(views[viewType].arch,relatedModels,comodel);fieldInfo.views[viewType]={...archInfo,fields:comodelFields};fieldInfo.relatedFields=comodelFields;}}
const FormController=__exports.FormController=class FormController extends Component{setup(){this.dialogService=useService("dialog");this.router=useService("router");this.user=useService("user");this.viewService=useService("view");this.ui=useService("ui");this.state=useState({isDisabled:false,fieldIsDirty:false,});useBus(this.ui.bus,"resize",this.render);this.archInfo=this.props.archInfo;const activeFields=this.archInfo.activeFields;this.beforeLoadResolver=null;const beforeLoadProm=new Promise((r)=>{this.beforeLoadResolver=r;});const{create,edit}=this.archInfo.activeActions;this.canCreate=create&&!this.props.preventCreate;this.canEdit=edit&&!this.props.preventEdit;let mode=this.props.mode||"edit";if(!this.canEdit){mode="readonly";}
this.model=useModel(this.props.Model,{resModel:this.props.resModel,resId:this.props.resId||false,resIds:this.props.resIds,fields:this.props.fields,activeFields,viewMode:"form",rootType:"record",mode,beforeLoadProm,component:this,},{ignoreUseSampleModel:true,});this.cpButtonsRef=useRef("cpButtons");this.display={...this.props.display};if(this.env.inDialog){this.display.controlPanel=false;}
useEffect(()=>{if(!this.env.inDialog){this.updateURL();}});this.archiveEnabled="active"in activeFields?!this.props.fields.active.readonly:"x_active"in activeFields?!this.props.fields.x_active.readonly:false;const footers=[...this.archInfo.xmlDoc.querySelectorAll("footer:not(field footer)")];if(footers.length){this.footerArchInfo=Object.assign({},this.archInfo);this.footerArchInfo.xmlDoc=createElement("t");this.footerArchInfo.xmlDoc.append(...footers);this.footerArchInfo.arch=this.footerArchInfo.xmlDoc.outerHTML;this.archInfo.arch=this.archInfo.xmlDoc.outerHTML;}
const rootRef=useRef("root");useViewButtons(this.model,rootRef,{beforeExecuteAction:this.beforeExecuteActionButton.bind(this),afterExecuteAction:this.afterExecuteActionButton.bind(this),});const state=this.props.state||{};const activeNotebookPages={...state.activeNotebookPages};this.onNotebookPageChange=(notebookId,page)=>{if(page){activeNotebookPages[notebookId]=page;}};useSetupView({rootRef,beforeLeave:()=>this.beforeLeave(),beforeUnload:(ev)=>this.beforeUnload(ev),getLocalState:()=>{return{activeNotebookPages:!this.model.root.isNew&&activeNotebookPages,resId:this.model.root.resId,};},});useDebugCategory("form",{component:this});usePager(()=>{if(!this.model.root.isVirtual){const resIds=this.model.root.resIds;return{offset:resIds.indexOf(this.model.root.resId),limit:1,total:resIds.length,onUpdate:({offset})=>this.onPagerUpdate({offset,resIds}),};}});onWillStart(async()=>{await loadSubViews(this.archInfo.activeFields,this.props.fields,this.props.context,this.props.resModel,this.viewService,this.user,this.env.isSmall);this.beforeLoadResolver();});onRendered(()=>{this.env.config.setDisplayName(this.displayName());});const{disableAutofocus}=this.archInfo;if(!disableAutofocus){useEffect((isInEdition)=>{if(!isInEdition&&!rootRef.el.querySelector(".o_content").contains(document.activeElement)){const elementToFocus=rootRef.el.querySelector(".o_content button.btn-primary");if(elementToFocus){elementToFocus.focus();}}},()=>[this.model.root.isInEdition]);}}
displayName(){return this.model.root.data.display_name||this.env._t("New");}
async onPagerUpdate({offset,resIds}){await this.model.root.askChanges();let canProceed=true;if(this.model.root.isDirty){canProceed=await this.model.root.save({stayInEdition:true,useSaveErrorDialog:true,});}
if(canProceed){return this.model.load({resId:resIds[offset]});}}
async beforeLeave(){if(this.model.root.isDirty){return this.model.root.save({noReload:true,stayInEdition:true,useSaveErrorDialog:true,});}}
async beforeUnload(ev){const isValid=await this.model.root.urgentSave();if(!isValid){ev.preventDefault();ev.returnValue="Unsaved changes";}}
updateURL(){this.router.pushState({id:this.model.root.resId||undefined});}
getActionMenuItems(){const otherActionItems=[];if(this.archiveEnabled){if(this.model.root.isActive){otherActionItems.push({key:"archive",description:this.env._t("Archive"),callback:()=>{const dialogProps={body:this.env._t("Are you sure that you want to archive this record?"),confirmLabel:this.env._t("Archive"),confirm:()=>this.model.root.archive(),cancel:()=>{},};this.dialogService.add(ConfirmationDialog,dialogProps);},});}else{otherActionItems.push({key:"unarchive",description:this.env._t("Unarchive"),callback:()=>this.model.root.unarchive(),});}}
if(this.archInfo.activeActions.create&&this.archInfo.activeActions.duplicate){otherActionItems.push({key:"duplicate",description:this.env._t("Duplicate"),callback:()=>this.duplicateRecord(),});}
if(this.archInfo.activeActions.delete&&!this.model.root.isVirtual){otherActionItems.push({key:"delete",description:this.env._t("Delete"),callback:()=>this.deleteRecord(),skipSave:true,});}
return Object.assign({},this.props.info.actionMenus,{other:otherActionItems});}
async shouldExecuteAction(item){if((this.model.root.isDirty||this.model.root.isVirtual)&&!item.skipSave){return this.model.root.save({stayInEdition:true,useSaveErrorDialog:true});}
return true;}
async duplicateRecord(){await this.model.root.duplicate();}
get deleteConfirmationDialogProps(){return{body:this.env._t("Are you sure you want to delete this record?"),confirm:async()=>{await this.model.root.delete();if(!this.model.root.resId){this.env.config.historyBack();}},cancel:()=>{},};}
async deleteRecord(){this.dialogService.add(ConfirmationDialog,this.deleteConfirmationDialogProps);}
disableButtons(){this.state.isDisabled=true;}
enableButtons(){this.state.isDisabled=false;}
setFieldAsDirty(dirty){this.state.fieldIsDirty=dirty;}
async beforeExecuteActionButton(clickParams){if(clickParams.special!=="cancel"){return this.model.root.save({stayInEdition:true,useSaveErrorDialog:!this.env.inDialog}).then((saved)=>{if(saved&&this.props.onSave){this.props.onSave(this.model.root);}
return saved;});}else if(this.props.onDiscard){this.props.onDiscard(this.model.root);}}
async afterExecuteActionButton(clickParams){}
async edit(){await this.model.root.switchMode("edit");}
async create(){await this.model.root.askChanges();let canProceed=true;if(this.model.root.isDirty){canProceed=await this.model.root.save({stayInEdition:true,useSaveErrorDialog:true,});}
if(canProceed){this.disableButtons();await this.model.load({resId:null});this.enableButtons();}}
async saveButtonClicked(params={}){this.disableButtons();const record=this.model.root;let saved=false;if(this.props.saveRecord){saved=await this.props.saveRecord(record,params);}else{saved=await record.save();}
this.enableButtons();if(saved&&this.props.onSave){this.props.onSave(record,params);}
return saved;}
async discard(){if(this.props.discardRecord){this.props.discardRecord(this.model.root);return;}
await this.model.root.discard();if(this.props.onDiscard){this.props.onDiscard(this.model.root);}
if(this.model.root.isVirtual||this.env.inDialog){this.env.config.historyBack();}}
get className(){const result={};const{size}=this.ui;if(size<=SIZES.XS){result.o_xxs_form_view=true;}else if(!this.env.inDialog&&size===SIZES.XXL){result["o_xxl_form_view h-100"]=true;}
if(this.props.className){result[this.props.className]=true;}
result["o_field_highlight"]=size<SIZES.SM||hasTouch();return result;}}
FormController.template=`web.FormView`;FormController.components={ActionMenus,FormStatusIndicator,Layout};FormController.props={...standardViewProps,discardRecord:{type:Function,optional:true},mode:{optional:true,validate:(m)=>["edit","readonly"].includes(m),},saveRecord:{type:Function,optional:true},removeRecord:{type:Function,optional:true},Model:Function,Renderer:Function,Compiler:Function,archInfo:Object,buttonTemplate:String,preventCreate:{type:Boolean,optional:true},preventEdit:{type:Boolean,optional:true},onDiscard:{type:Function,optional:true},onSave:{type:Function,optional:true},};FormController.defaultProps={preventCreate:false,preventEdit:false,};return __exports;});;

/* /web/static/src/views/form/form_error_dialog/form_error_dialog.js */
odoo.define('@web/views/form/form_error_dialog/form_error_dialog',async function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{registry}=require("@web/core/registry");const{Component}=require("@odoo/owl");const errorHandlerRegistry=registry.category("error_handlers");const FormErrorDialog=__exports.FormErrorDialog=class FormErrorDialog extends Component{setup(){const{data,message}=this.props;if(data&&data.arguments&&data.arguments.length>0){this.message=data.arguments[0];}else{this.message=message;}}
async discard(){await this.props.onDiscard();this.props.close();}
async stay(){await this.props.onStayHere();this.props.close();}}
FormErrorDialog.template="web.FormErrorDialog";FormErrorDialog.components={Dialog};function formSaveErrorHandler(env,error,originalError){if(originalError.__raisedOnFormSave){const event=originalError.event;error.unhandledRejectionEvent.preventDefault();if(event.isDefaultPrevented()){return true;}
event.preventDefault();env.services.dialog.add(FormErrorDialog,{message:originalError.message.message,data:originalError.message.data,onDiscard:originalError.onDiscard,onStayHere:originalError.onStayHere,},{onClose:originalError.onStayHere,});return true;}}
errorHandlerRegistry.add("formSaveErrorHandler",formSaveErrorHandler);return __exports;});;

/* /web/static/src/views/form/form_group/form_group.js */
odoo.define('@web/views/form/form_group/form_group',async function(require){'use strict';let __exports={};const{sortBy}=require("@web/core/utils/arrays");class Group extends owl.Component{_getItems(){const items=Object.entries(this.props.slots||{}).filter(([k,v])=>v.type==="item");return sortBy(items,(i)=>i[1].sequence);}
getItems(){return this._getItems();}
get allClasses(){return this.props.class;}}
Group.props=["class?","slots?","maxCols?","style?"];Group.defaultProps={maxCols:2,};const OuterGroup=__exports.OuterGroup=class OuterGroup extends Group{getItems(){const nbCols=this.props.maxCols;const colSize=Math.max(1,Math.round(12/nbCols));const items=super.getItems().filter(([k,v])=>!("isVisible"in v)||v.isVisible);return items.map((item)=>{const[slotName,slot]=item;const itemSpan=slot.itemSpan||1;return{name:slotName,size:itemSpan*colSize,newline:slot.newline,colspan:itemSpan,};});}}
OuterGroup.template="web.Form.OuterGroup";OuterGroup.defaultProps={...Group.defaultProps,slots:[],hasOuterTemplate:true,};const InnerGroup=__exports.InnerGroup=class InnerGroup extends Group{getTemplate(subType){return this.constructor.templates[subType]||this.constructor.templates.default;}
getRows(){const maxCols=this.props.maxCols;const rows=[];let currentRow=[];let reservedSpace=0;const items=this.getItems();while(items.length){const[slotName,slot]=items.shift();if(!slot.isVisible){continue;}
const{newline,itemSpan}=slot;if(newline){rows.push(currentRow);currentRow=[];reservedSpace=0;}
const fullItemSpan=itemSpan||1;if(fullItemSpan+reservedSpace>maxCols){rows.push(currentRow);currentRow=[];reservedSpace=0;}
const isVisible=!("isVisible"in slot)||slot.isVisible;currentRow.push({...slot,name:slotName,itemSpan,isVisible});reservedSpace+=itemSpan||1;currentRow.isVisible=currentRow.isVisible||isVisible;}
rows.push(currentRow);rows.forEach((row)=>{let labelCount=0;const dataCells=[];for(const c of row){if(c.subType==="label"){labelCount++;}else if(c.subType==="item_component"){labelCount++;dataCells.push(c);}else{dataCells.push(c);}}
const sizeOfDataCell=100/(maxCols-labelCount);dataCells.forEach((c)=>{const itemSpan=c.subType==="item_component"?c.itemSpan-1:c.itemSpan;c.width=(itemSpan||1)*sizeOfDataCell;});});return rows;}}
InnerGroup.template="web.Form.InnerGroup";return __exports;});;

/* /web/static/src/views/form/form_label.js */
odoo.define('@web/views/form/form_label',async function(require){'use strict';let __exports={};const{fieldVisualFeedback}=require("@web/views/fields/field");const{session}=require("@web/session");const{getTooltipInfo}=require("@web/views/fields/field_tooltip");const{Component}=require("@odoo/owl");const FormLabel=__exports.FormLabel=class FormLabel extends Component{get className(){const{invalid,empty,readonly}=fieldVisualFeedback(this.props.fieldInfo.FieldComponent,this.props.record,this.props.fieldName,this.props.fieldInfo);const classes=this.props.className?[this.props.className]:[];if(invalid){classes.push("o_field_invalid");}
if(empty){classes.push("o_form_label_empty");}
if(readonly){classes.push("o_form_label_readonly");}
return classes.join(" ");}
get hasTooltip(){return Boolean(odoo.debug)||this.tooltipHelp;}
get tooltipHelp(){const field=this.props.record.fields[this.props.fieldName];let help=field.help||"";if(field.company_dependent&&session.display_switch_company_menu){help+=(help?"\n\n":"")+this.env._t("Values set here are company-specific.");}
return help;}
get tooltipInfo(){if(!odoo.debug){return JSON.stringify({field:{help:this.tooltipHelp,},});}
return getTooltipInfo({viewMode:"form",resModel:this.props.record.resModel,field:this.props.record.fields[this.props.fieldName],fieldInfo:this.props.fieldInfo,help:this.tooltipHelp,});}}
FormLabel.template="web.FormLabel";return __exports;});;

/* /web/static/src/views/form/form_renderer.js */
odoo.define('@web/views/form/form_renderer',async function(require){'use strict';let __exports={};const{Notebook}=require("@web/core/notebook/notebook");const{Field}=require("@web/views/fields/field");const{browser}=require("@web/core/browser/browser");const{useService}=require("@web/core/utils/hooks");const{useDebounced}=require("@web/core/utils/timing");const{ButtonBox}=require("@web/views/form/button_box/button_box");const{InnerGroup,OuterGroup}=require("@web/views/form/form_group/form_group");const{ViewButton}=require("@web/views/view_button/view_button");const{useViewCompiler}=require("@web/views/view_compiler");const{useBounceButton}=require("@web/views/view_hook");const{Widget}=require("@web/views/widgets/widget");const{evalDomain}=require("@web/views/utils");const{FormCompiler}=require("@web/views/form/form_compiler");const{FormLabel}=require("@web/views/form/form_label");const{StatusBarButtons}=require("@web/views/form/status_bar_buttons/status_bar_buttons");const{Component,onMounted,onWillUnmount,useEffect,useSubEnv,useRef,useState,xml}=require("@odoo/owl");const FormRenderer=__exports.FormRenderer=class FormRenderer extends Component{setup(){const{archInfo,Compiler,record}=this.props;const{arch,xmlDoc}=archInfo;const templates={FormRenderer:xmlDoc};this.state=useState({});this.templates=useViewCompiler(Compiler||FormCompiler,arch,templates,this.compileParams);useSubEnv({model:record.model});useBounceButton(useRef("compiled_view_root"),(target)=>{return!record.isInEdition&&!!target.closest(".oe_title, .o_inner_group");});this.uiService=useService("ui");this.onResize=useDebounced(this.render,200);onMounted(()=>browser.addEventListener("resize",this.onResize));onWillUnmount(()=>browser.removeEventListener("resize",this.onResize));const{autofocusFieldId}=archInfo;if(this.shouldAutoFocus){const rootRef=useRef("compiled_view_root");useEffect((isVirtual,rootEl)=>{if(!rootEl){return;}
let elementToFocus;if(isVirtual){const focusableSelectors=['input[type="text"]','textarea','[contenteditable]'];elementToFocus=(autofocusFieldId&&rootEl.querySelector(`#${autofocusFieldId}`))||rootEl.querySelector(focusableSelectors.map(sel=>`.o_content .o_field_widget ${sel}`).join(', '));}
if(elementToFocus){elementToFocus.focus();}},()=>[this.props.record.isVirtual,rootRef.el]);}}
get shouldAutoFocus(){return!this.props.archInfo.disableAutofocus;}
evalDomainFromRecord(record,expr){return evalDomain(expr,record.evalContext);}
get compileParams(){return{};}}
FormRenderer.template=xml`<t t-call="{{ templates.FormRenderer }}" />`;FormRenderer.components={Field,FormLabel,ButtonBox,ViewButton,Widget,Notebook,OuterGroup,InnerGroup,StatusBarButtons,};FormRenderer.defaultProps={activeNotebookPages:{},onNotebookPageChange:()=>{},};return __exports;});;

/* /web/static/src/views/form/form_status_indicator/form_status_indicator.js */
odoo.define('@web/views/form/form_status_indicator/form_status_indicator',async function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const FormStatusIndicator=__exports.FormStatusIndicator=class FormStatusIndicator extends Component{get displayButtons(){return this.indicatorMode!=="saved";}
get indicatorMode(){if(this.props.model.root.isVirtual){return this.props.model.root.isValid?"dirty":"invalid";}else if(!this.props.model.root.isValid){return"invalid";}else if(this.props.model.root.isDirty||this.props.fieldIsDirty){return"dirty";}else{return"saved";}}
async discard(){await this.props.discard();}
async save(){await this.props.save();}}
FormStatusIndicator.template="web.FormStatusIndicator";FormStatusIndicator.props={model:Object,save:Function,discard:Function,isDisabled:Boolean,fieldIsDirty:Boolean,};return __exports;});;

/* /web/static/src/views/form/form_view.js */
odoo.define('@web/views/form/form_view',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{FormRenderer}=require("@web/views/form/form_renderer");const{RelationalModel}=require("@web/views/basic_relational_model");const{FormArchParser}=require("@web/views/form/form_arch_parser");const{FormController}=require("@web/views/form/form_controller");const{FormCompiler}=require("@web/views/form/form_compiler");const{FormControlPanel}=require("@web/views/form/control_panel/form_control_panel");const formView=__exports.formView={type:"form",display_name:"Form",multiRecord:false,searchMenuTypes:[],ControlPanel:FormControlPanel,Controller:FormController,Renderer:FormRenderer,ArchParser:FormArchParser,Model:RelationalModel,Compiler:FormCompiler,buttonTemplate:"web.FormView.Buttons",props:(genericProps,view)=>{const{ArchParser}=view;const{arch,relatedModels,resModel}=genericProps;const archInfo=new ArchParser().parse(arch,relatedModels,resModel);return{...genericProps,Model:view.Model,Renderer:view.Renderer,buttonTemplate:genericProps.buttonTemplate||view.buttonTemplate,Compiler:view.Compiler,archInfo,};},};registry.category("views").add("form",formView);return __exports;});;

/* /web/static/src/views/form/status_bar_buttons/status_bar_buttons.js */
odoo.define('@web/views/form/status_bar_buttons/status_bar_buttons',async function(require){'use strict';let __exports={};const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{Component}=require("@odoo/owl");const StatusBarButtons=__exports.StatusBarButtons=class StatusBarButtons extends Component{get visibleSlotNames(){if(!this.props.slots){return[];}
return Object.entries(this.props.slots).filter((entry)=>entry[1].isVisible).map((entry)=>entry[0]);}}
StatusBarButtons.template="web.StatusBarButtons";StatusBarButtons.components={Dropdown,DropdownItem,};return __exports;});;

/* /web/static/src/views/graph/colors.js */
odoo.define('@web/views/graph/colors',async function(require){'use strict';let __exports={};const COLORS_BRIGHT=["#1f77b4","#ff7f0e","#aec7e8","#ffbb78","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5","#875a7b","#c49c94","#e377c2","#dcd0d9","#7f7f7f","#c7c7c7","#bcbd22","#dbdb8d","#17becf","#a5d8d7",];const COLORS_DARK=["#00ffff","#ff6347","#00ced1","#ffd700","#29ef29","#c5fabb","#fe4b4c","#ffb6c1","#ba87e9","#eadbf6","#c568af","#ecc1b8","#fda9e3","#BB86FC","#808080","#f2e8e8","#fcfe2d","#f8f8bc","#17becf","#10efed",];__exports.getColors=getColors;function getColors(colorScheme){return colorScheme==="dark"?COLORS_DARK:COLORS_BRIGHT;}
__exports.getColor=getColor;function getColor(index,colorScheme){const colors=getColors(colorScheme);return colors[index%colors.length];}
const DEFAULT_BG=__exports.DEFAULT_BG="#d3d3d3";__exports.getBorderWhite=getBorderWhite;function getBorderWhite(colorScheme){return colorScheme==="dark"?"rgba(0, 0, 0, 0.6)":"rgba(255,255,255,0.6)";}
const RGB_REGEX=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i;__exports.hexToRGBA=hexToRGBA;function hexToRGBA(hex,opacity){const rgb=RGB_REGEX.exec(hex).slice(1,4).map((n)=>parseInt(n,16)).join(",");return`rgba(${rgb},${opacity})`;}
return __exports;});;

/* /web/static/src/views/graph/graph_arch_parser.js */
odoo.define('@web/views/graph/graph_arch_parser',async function(require){'use strict';let __exports={};const{XMLParser}=require("@web/core/utils/xml");const{GROUPABLE_TYPES}=require("@web/search/utils/misc");const{archParseBoolean}=require("@web/views/utils");const MODES=["bar","line","pie"];const ORDERS=["ASC","DESC","asc","desc",null];const GraphArchParser=__exports.GraphArchParser=class GraphArchParser extends XMLParser{parse(arch,fields={}){const archInfo={fields,fieldAttrs:{},groupBy:[]};this.visitXML(arch,(node)=>{switch(node.tagName){case"graph":{if(node.hasAttribute("disable_linking")){archInfo.disableLinking=archParseBoolean(node.getAttribute("disable_linking"));}
if(node.hasAttribute("stacked")){archInfo.stacked=archParseBoolean(node.getAttribute("stacked"));}
if(node.hasAttribute("cumulated")){archInfo.cumulated=archParseBoolean(node.getAttribute("cumulated"));}
const mode=node.getAttribute("type");if(mode&&MODES.includes(mode)){archInfo.mode=mode;}
const order=node.getAttribute("order");if(order&&ORDERS.includes(order)){archInfo.order=order.toUpperCase();}
const title=node.getAttribute("string");if(title){archInfo.title=title;}
break;}
case"field":{const fieldName=node.getAttribute("name");if(fieldName==="id"){break;}
const string=node.getAttribute("string");if(string){if(!archInfo.fieldAttrs[fieldName]){archInfo.fieldAttrs[fieldName]={};}
archInfo.fieldAttrs[fieldName].string=string;}
const modifiers=JSON.parse(node.getAttribute("modifiers")||"{}");if(modifiers.invisible===true){if(!archInfo.fieldAttrs[fieldName]){archInfo.fieldAttrs[fieldName]={};}
archInfo.fieldAttrs[fieldName].isInvisible=true;break;}
const isMeasure=node.getAttribute("type")==="measure";if(isMeasure){archInfo.measure=fieldName;}else{const{type}=archInfo.fields[fieldName];if(GROUPABLE_TYPES.includes(type)){let groupBy=fieldName;const interval=node.getAttribute("interval");if(interval){groupBy+=`:${interval}`;}
archInfo.groupBy.push(groupBy);}}
break;}}});return archInfo;}}
return __exports;});;

/* /web/static/src/views/graph/graph_controller.js */
odoo.define('@web/views/graph/graph_controller',async function(require){'use strict';let __exports={};const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{useService}=require("@web/core/utils/hooks");const{Layout}=require("@web/search/layout");const{GroupByMenu}=require("@web/search/group_by_menu/group_by_menu");const{useModel}=require("@web/views/model");const{standardViewProps}=require("@web/views/standard_view_props");const{useSetupView}=require("@web/views/view_hook");const{Component,useRef}=require("@odoo/owl");const GraphController=__exports.GraphController=class GraphController extends Component{setup(){this.actionService=useService("action");this.model=useModel(this.props.Model,this.props.modelParams);useSetupView({rootRef:useRef("root"),getLocalState:()=>{return{metaData:this.model.metaData};},getContext:()=>this.getContext(),});}
getContext(){const{measure,groupBy,mode}=this.model.metaData;const context={graph_measure:measure,graph_mode:mode,graph_groupbys:groupBy.map((gb)=>gb.spec),};if(mode!=="pie"){context.graph_order=this.model.metaData.order;context.graph_stacked=this.model.metaData.stacked;if(mode==="line"){context.graph_cumulated=this.model.metaData.cumulated;}}
return context;}
openView(domain,views,context){this.actionService.doAction({context,domain,name:this.model.metaData.title,res_model:this.model.metaData.resModel,target:"current",type:"ir.actions.act_window",views,},{viewType:"list",});}
onGraphClicked(domain){const{context}=this.model.metaData;Object.keys(context).forEach((x)=>{if(x==="group_by"||x.startsWith("search_default_")){delete context[x];}});const views={};for(const[viewId,viewType]of this.env.config.views||[]){views[viewType]=viewId;}
function getView(viewType){return[views[viewType]||false,viewType];}
const actionViews=[getView("list"),getView("form")];this.openView(domain,actionViews,context);}
onMeasureSelected({measure}){this.model.updateMetaData({measure});}
onModeSelected(mode){this.model.updateMetaData({mode});}
toggleOrder(order){const{order:currentOrder}=this.model.metaData;const nextOrder=currentOrder===order?null:order;this.model.updateMetaData({order:nextOrder});}
toggleStacked(){const{stacked}=this.model.metaData;this.model.updateMetaData({stacked:!stacked});}
toggleCumulated(){const{cumulated}=this.model.metaData;this.model.updateMetaData({cumulated:!cumulated});}}
GraphController.template="web.GraphView";GraphController.components={Dropdown,DropdownItem,GroupByMenu,Layout};GraphController.props={...standardViewProps,Model:Function,modelParams:Object,Renderer:Function,buttonTemplate:String,};return __exports;});;

/* /web/static/src/views/graph/graph_model.js */
odoo.define('@web/views/graph/graph_model',async function(require){'use strict';let __exports={};const{sortBy}=require("@web/core/utils/arrays");const{KeepLast,Race}=require("@web/core/utils/concurrency");const{rankInterval}=require("@web/search/utils/dates");const{getGroupBy}=require("@web/search/utils/group_by");const{GROUPABLE_TYPES}=require("@web/search/utils/misc");const{Model}=require("@web/views/model");const{computeReportMeasures,processMeasure}=require("@web/views/utils");const SEP=__exports.SEP=" / ";class DateClasses{constructor(array){this.__referenceIndex=null;this.__array=array;for(let i=0;i<this.__array.length;i++){const arr=this.__array[i];if(arr.length&&this.__referenceIndex===null){this.__referenceIndex=i;}}}
classLabel(index,o){return`${this.__array[index].indexOf(o)}`;}
classMembers(classLabel){const classNumber=Number(classLabel);const classMembers=new Set();for(const arr of this.__array){if(arr[classNumber]!==undefined){classMembers.add(arr[classNumber]);}}
return[...classMembers];}
representative(classLabel,index){const classNumber=Number(classLabel);const i=index===undefined?this.__referenceIndex:index;if(i===null){return null;}
return this.__array[i][classNumber];}
arrayLength(index){return this.__array[index].length;}}
const GraphModel=__exports.GraphModel=class GraphModel extends Model{setup(params){this.keepLast=new KeepLast();this.race=new Race();const _fetchDataPoints=this._fetchDataPoints.bind(this);this._fetchDataPoints=(...args)=>{return this.race.add(_fetchDataPoints(...args));};this.initialGroupBy=null;this.metaData=params;this.data=null;this.searchParams=null;}
async load(searchParams){this.searchParams=searchParams;if(!this.initialGroupBy){this.initialGroupBy=searchParams.context.graph_groupbys||this.metaData.groupBy;}
const metaData=this._buildMetaData();return this._fetchDataPoints(metaData);}
hasData(){return this.dataPoints.length>0;}
async updateMetaData(params){if("measure"in params){const metaData=this._buildMetaData(params);await this._fetchDataPoints(metaData);this.useSampleModel=false;}else{await this.race.getCurrentProm();this.metaData=Object.assign({},this.metaData,params);this._prepareData();}
this.notify();}
_buildMetaData(params){const{comparison,domain,context,groupBy}=this.searchParams;const metaData=Object.assign({},this.metaData,{context});if(comparison){metaData.domains=comparison.domains;metaData.comparisonField=comparison.fieldName;}else{metaData.domains=[{arrayRepr:domain,description:null}];}
metaData.measure=context.graph_measure||metaData.measure;metaData.mode=context.graph_mode||metaData.mode;metaData.groupBy=groupBy.length?groupBy:this.initialGroupBy;if(metaData.mode!=="pie"){metaData.order="graph_order"in context?context.graph_order:metaData.order;metaData.stacked="graph_stacked"in context?context.graph_stacked:metaData.stacked;if(metaData.mode==="line"){metaData.cumulated="graph_cumulated"in context?context.graph_cumulated:metaData.cumulated;}}
this._normalize(metaData);metaData.measures=computeReportMeasures(metaData.fields,metaData.fieldAttrs,[metaData.measure,]);return Object.assign(metaData,params);}
async _fetchDataPoints(metaData){this.dataPoints=await this.keepLast.add(this._loadDataPoints(metaData));this.metaData=metaData;this._prepareData();}
_getData(dataPoints){const{comparisonField,groupBy,mode}=this.metaData;let identify=false;if(comparisonField&&groupBy.length&&groupBy[0].fieldName===comparisonField){identify=true;}
const dateClasses=identify?this._getDateClasses(dataPoints):null;let labels=[];const labelMap={};for(const dataPt of dataPoints){const x=dataPt.labels.slice(0,mode==="pie"?undefined:1);const trueLabel=x.length?x.join(SEP):this.env._t("Total");if(dateClasses){x[0]=dateClasses.classLabel(dataPt.originIndex,x[0]);}
const key=JSON.stringify(x);if(labelMap[key]===undefined){labelMap[key]=labels.length;if(dateClasses){if(mode==="pie"){x[0]=dateClasses.classMembers(x[0]).join(", ");}else{x[0]=dateClasses.representative(x[0]);}}
const label=x.length?x.join(SEP):this.env._t("Total");labels.push(label);}
dataPt.labelIndex=labelMap[key];dataPt.trueLabel=trueLabel;}
const datasetsTmp={};for(const dataPt of dataPoints){const{domain,labelIndex,originIndex,trueLabel,value}=dataPt;const datasetLabel=this._getDatasetLabel(dataPt);if(!(datasetLabel in datasetsTmp)){let dataLength=labels.length;if(mode!=="pie"&&dateClasses){dataLength=dateClasses.arrayLength(originIndex);}
datasetsTmp[datasetLabel]={data:new Array(dataLength).fill(0),trueLabels:labels.slice(0,dataLength),domains:new Array(dataLength).fill([]),label:datasetLabel,originIndex:originIndex,};}
datasetsTmp[datasetLabel].data[labelIndex]=value;datasetsTmp[datasetLabel].domains[labelIndex]=domain;datasetsTmp[datasetLabel].trueLabels[labelIndex]=trueLabel;}
let datasets=sortBy(Object.values(datasetsTmp),"originIndex");if(mode==="pie"){datasets=datasets.filter((dataset)=>dataset.data.some((v)=>Boolean(v)));const labelsToKeepIndexes={};labels.forEach((_,index)=>{if(datasets.some((dataset)=>Boolean(dataset.data[index]))){labelsToKeepIndexes[index]=true;}});labels=labels.filter((_,index)=>labelsToKeepIndexes[index]);for(const dataset of datasets){dataset.data=dataset.data.filter((_,index)=>labelsToKeepIndexes[index]);dataset.domains=dataset.domains.filter((_,index)=>labelsToKeepIndexes[index]);dataset.trueLabels=dataset.trueLabels.filter((_,index)=>labelsToKeepIndexes[index]);}}
return{datasets,labels};}
_getDatasetLabel(dataPoint){const{measure,measures,domains,mode}=this.metaData;const{labels,originIndex}=dataPoint;if(mode==="pie"){return domains[originIndex].description||"";}
let datasetLabel=labels.slice(1).join(SEP);if(domains.length>1){datasetLabel=domains[originIndex].description+(datasetLabel?SEP+datasetLabel:"");}
datasetLabel=datasetLabel||measures[measure].string;return datasetLabel;}
_getDateClasses(dataPoints){const{domains}=this.metaData;const dateSets=domains.map(()=>new Set());for(const{labels,originIndex}of dataPoints){const date=labels[0];dateSets[originIndex].add(date);}
const arrays=dateSets.map((dateSet)=>[...dateSet]);return new DateClasses(arrays);}
_getProcessedDataPoints(){const{domains,groupBy,mode,order}=this.metaData;let processedDataPoints=[];if(mode==="line"){processedDataPoints=this.dataPoints.filter((dataPoint)=>dataPoint.labels[0]!==this.env._t("Undefined"));}else{processedDataPoints=this.dataPoints.filter((dataPoint)=>dataPoint.count!==0);}
if(order!==null&&mode!=="pie"&&domains.length===1&&groupBy.length>0){const groupedDataPoints={};for(const dataPt of processedDataPoints){const key=dataPt.labels[0];if(!groupedDataPoints[key]){groupedDataPoints[key]=[];}
groupedDataPoints[key].push(dataPt);}
const groups=Object.values(groupedDataPoints);const groupTotal=(group)=>group.reduce((sum,dataPt)=>sum+dataPt.value,0);processedDataPoints=sortBy(groups,groupTotal,order.toLowerCase()).flat();}
return processedDataPoints;}
_isValidData(dataPoints){const{mode}=this.metaData;let somePositive=false;if(mode==="pie"){for(const dataPt of dataPoints){if(dataPt.value>0){somePositive=true;}}
return somePositive;}
return true;}
async _loadDataPoints(metaData){const{measure,domains,fields,groupBy,resModel}=metaData;const measures=["__count"];if(measure!=="__count"){let{group_operator,type}=fields[measure];if(type==="many2one"){group_operator="count_distinct";}
if(group_operator===undefined){throw new Error(`No aggregate function has been provided for the measure '${measure}'`);}
measures.push(`${measure}:${group_operator}`);}
const proms=[];const numbering={};domains.forEach((domain,originIndex)=>{proms.push(this.orm.webReadGroup(resModel,domain.arrayRepr,measures,groupBy.map((gb)=>gb.spec),{lazy:false,context:{fill_temporal:true,...this.searchParams.context},}).then((data)=>{const dataPoints=[];for(const group of data.groups){const{__domain,__count}=group;const labels=[];for(const gb of groupBy){let label;const val=group[gb.spec];const fieldName=gb.fieldName;const{type}=fields[fieldName];if(type==="boolean"){label=`${val}`;}else if(val===false){label=this.env._t("Undefined");}else if(["many2many","many2one"].includes(type)){const[id,name]=val;const key=JSON.stringify([fieldName,name]);if(!numbering[key]){numbering[key]={};}
const numbers=numbering[key];if(!numbers[id]){numbers[id]=Object.keys(numbers).length+1;}
const num=numbers[id];label=num===1?name:`${name} (${num})`;}else if(type==="selection"){const selected=fields[fieldName].selection.find((s)=>s[0]===val);label=selected[1];}else{label=val;}
labels.push(label);}
let value=group[measure];if(value instanceof Array){value=1;}
if(!Number.isInteger(value)){metaData.allIntegers=false;}
dataPoints.push({count:__count,domain:__domain,value,labels,originIndex,});}
return dataPoints;}));});const promResults=await Promise.all(proms);return promResults.flat();}
_normalize(metaData){const{fields}=metaData;const groupBy=[];for(const gb of metaData.groupBy){let ngb=gb;if(typeof gb==="string"){ngb=getGroupBy(gb,fields);}
groupBy.push(ngb);}
const processedGroupBy=[];for(const gb of groupBy){const{fieldName,interval}=gb;const{sortable,type,store}=fields[fieldName];if((type==="many2many"?!store:!sortable)||["id","__count"].includes(fieldName)||!GROUPABLE_TYPES.includes(type)){continue;}
const index=processedGroupBy.findIndex((gb)=>gb.fieldName===fieldName);if(index===-1){processedGroupBy.push(gb);}else if(interval){const registeredInterval=processedGroupBy[index].interval;if(rankInterval(registeredInterval)<rankInterval(interval)){processedGroupBy.splice(index,1,gb);}}}
metaData.groupBy=processedGroupBy;metaData.measure=processMeasure(metaData.measure);}
async _prepareData(){let processedDataPoints=this._getProcessedDataPoints();this.data=null;if(this._isValidData(processedDataPoints)&&this.metaData.mode==='pie'){const positiveValues=[];for(const dataPt of processedDataPoints){if(dataPt.value>0){positiveValues.push(dataPt);}}
processedDataPoints=positiveValues;}else if(this.metaData.mode==='pie'){processedDataPoints=[];}
this.data=this._getData(processedDataPoints);}}
return __exports;});;

/* /web/static/src/views/graph/graph_renderer.js */
odoo.define('@web/views/graph/graph_renderer',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{getBorderWhite,DEFAULT_BG,getColor,hexToRGBA}=require("@web/views/graph/colors");const{formatFloat}=require("@web/views/fields/formatters");const{SEP}=require("@web/views/graph/graph_model");const{sortBy}=require("@web/core/utils/arrays");const{loadJS}=require("@web/core/assets");const{renderToString}=require("@web/core/utils/render");const{useService}=require("@web/core/utils/hooks");const{Component,onWillUnmount,useEffect,useRef,onWillStart}=require("@odoo/owl");const NO_DATA=_lt("No data");const LINE_FILL_TRANSPARENCY=__exports.LINE_FILL_TRANSPARENCY=0.4;function getMaxWidth(chartArea){const{left,right}=chartArea;return Math.floor((right-left)/1.618)+"px";}
function shortenLabel(label){const groups=label.toString().split(SEP);let shortLabel=groups.slice(0,3).join(SEP);if(shortLabel.length>30){shortLabel=`${shortLabel.slice(0, 30)}...`;}else if(groups.length>3){shortLabel=`${shortLabel}${SEP}...`;}
return shortLabel;}
const GraphRenderer=__exports.GraphRenderer=class GraphRenderer extends Component{setup(){this.model=this.props.model;this.rootRef=useRef("root");this.canvasRef=useRef("canvas");this.containerRef=useRef("container");this.cookies=useService("cookie");this.chart=null;this.tooltip=null;this.legendTooltip=null;onWillStart(()=>loadJS("/web/static/lib/Chart/Chart.js"));useEffect(()=>this.renderChart());onWillUnmount(this.onWillUnmount);}
onWillUnmount(){if(this.chart){this.chart.destroy();}}
adjustTooltipHeight(tooltip,maxTooltipHeight){const sizeOneLine=tooltip.querySelector("tbody tr").clientHeight;const tbodySize=tooltip.querySelector("tbody").clientHeight;const toKeep=Math.max(0,Math.floor((maxTooltipHeight-(tooltip.clientHeight-tbodySize))/sizeOneLine)-1);const lines=tooltip.querySelectorAll("tbody tr");const toRemove=lines.length-toKeep;if(toRemove>0){for(let index=toKeep;index<lines.length;++index){lines[index].remove();}
const tr=document.createElement("tr");const td=document.createElement("td");tr.classList.add("o_show_more","text-center","fw-bold");td.setAttribute("colspan","2");td.innerText=this.env._t("...");tr.appendChild(td);tooltip.querySelector("tbody").appendChild(tr);}}
customTooltip(data,metaData,tooltipModel){const{measure,measures,disableLinking,mode}=metaData;this.rootRef.el.style.cursor="";this.removeTooltips();if(tooltipModel.opacity===0||tooltipModel.dataPoints.length===0){return;}
if(!disableLinking&&mode!=="line"){this.rootRef.el.style.cursor="pointer";}
const chartAreaTop=this.chart.chartArea.top;const viewContentTop=this.rootRef.el.getBoundingClientRect().top;const innerHTML=renderToString("web.GraphRenderer.CustomTooltip",{maxWidth:getMaxWidth(this.chart.chartArea),measure:measures[measure].string,mode:this.model.metaData.mode,tooltipItems:this.getTooltipItems(data,metaData,tooltipModel),});const template=Object.assign(document.createElement("template"),{innerHTML});const tooltip=template.content.firstChild;this.containerRef.el.prepend(tooltip);let top;const tooltipHeight=tooltip.clientHeight;const minTopAllowed=Math.floor(chartAreaTop);const maxTopAllowed=Math.floor(window.innerHeight-(viewContentTop+tooltipHeight))-2;const y=Math.floor(tooltipModel.y);if(minTopAllowed<=maxTopAllowed){if(y<=maxTopAllowed){if(y>=minTopAllowed){top=y;}else{top=minTopAllowed;}}else{top=maxTopAllowed;}}else{top=minTopAllowed;const maxTooltipHeight=window.innerHeight-(viewContentTop+chartAreaTop)-2;this.adjustTooltipHeight(tooltip,maxTooltipHeight);}
this.fixTooltipLeftPosition(tooltip,tooltipModel.x);tooltip.style.top=Math.floor(top)+"px";this.tooltip=tooltip;}
fixTooltipLeftPosition(tooltip,x){let left;const tooltipWidth=tooltip.clientWidth;const minLeftAllowed=Math.floor(this.chart.chartArea.left+2);const maxLeftAllowed=Math.floor(this.chart.chartArea.right-tooltipWidth-2);x=Math.floor(x);if(x<minLeftAllowed){left=minLeftAllowed;}else if(x>maxLeftAllowed){left=maxLeftAllowed;}else{left=x;}
tooltip.style.left=`${left}px`;}
formatValue(value,allIntegers=true){const largeNumber=Math.abs(value)>=1000;if(allIntegers&&!largeNumber){return String(value);}
if(largeNumber){return formatFloat(value,{humanReadable:true,decimals:2,minDigits:1});}
return formatFloat(value);}
getBarChartData(){const{domains,stacked}=this.model.metaData;const data=this.model.data;for(let index=0;index<data.datasets.length;++index){const dataset=data.datasets[index];if(stacked){dataset.stack=domains[dataset.originIndex].description||"";}
dataset.backgroundColor=getColor(index,this.cookies.current.color_scheme);}
return data;}
getChartConfig(){const{mode}=this.model.metaData;let data;switch(mode){case"bar":data=this.getBarChartData();break;case"line":data=this.getLineChartData();break;case"pie":data=this.getPieChartData();}
const options=this.prepareOptions();return{data,options,type:mode};}
getElementOptions(){const{mode,stacked}=this.model.metaData;const elementOptions={};if(mode==="bar"){elementOptions.rectangle={borderWidth:1};}else if(mode==="line"){elementOptions.line={fill:stacked,tension:0};}
return elementOptions;}
getLegendOptions(){const{mode}=this.model.metaData;const data=this.model.data;const refLength=mode==="pie"?data.labels.length:data.datasets.length;const legendOptions={display:refLength<=20,position:"top",onHover:this.onlegendHover.bind(this),onLeave:this.onLegendLeave.bind(this),};if(mode==="line"){legendOptions.onClick=this.onLegendClick.bind(this);}
if(mode==="pie"){legendOptions.labels={generateLabels:(chart)=>{const{data}=chart;const metaData=data.datasets.map((_,index)=>chart.getDatasetMeta(index).data);const labels=data.labels.map((label,index)=>{const hidden=metaData.some((data)=>data[index]&&data[index].hidden);const fullText=label;const text=shortenLabel(fullText);const fillStyle=label===NO_DATA?DEFAULT_BG:getColor(index,this.cookies.current.color_scheme);return{text,fullText,fillStyle,hidden,index};});return labels;},};}else{const referenceColor=mode==="bar"?"backgroundColor":"borderColor";legendOptions.labels={generateLabels:(chart)=>{const{data}=chart;const labels=data.datasets.map((dataset,index)=>{return{text:shortenLabel(dataset.label),fullText:dataset.label,fillStyle:dataset[referenceColor],hidden:!chart.isDatasetVisible(index),lineCap:dataset.borderCapStyle,lineDash:dataset.borderDash,lineDashOffset:dataset.borderDashOffset,lineJoin:dataset.borderJoinStyle,lineWidth:dataset.borderWidth,strokeStyle:dataset[referenceColor],pointStyle:dataset.pointStyle,datasetIndex:index,};});return labels;},};}
return legendOptions;}
getLineChartData(){const{groupBy,domains,stacked,cumulated}=this.model.metaData;const data=this.model.data;const color0=getColor(0,this.cookies.current.color_scheme);const color1=getColor(1,this.cookies.current.color_scheme);for(let index=0;index<data.datasets.length;++index){const dataset=data.datasets[index];if(groupBy.length<=1&&domains.length>1){if(dataset.originIndex===0){dataset.fill="origin";dataset.backgroundColor=hexToRGBA(color0,LINE_FILL_TRANSPARENCY);dataset.borderColor=color0;}else if(dataset.originIndex===1){dataset.borderColor=color1;}else{dataset.borderColor=getColor(index,this.cookies.current.color_scheme);}}else{dataset.borderColor=getColor(index,this.cookies.current.color_scheme);}
if(data.labels.length===1){dataset.data.unshift(undefined);dataset.trueLabels.unshift(undefined);dataset.domains.unshift(undefined);}
dataset.pointBackgroundColor=dataset.borderColor;dataset.pointBorderColor="rgba(0,0,0,0.2)";if(stacked){dataset.backgroundColor=hexToRGBA(dataset.borderColor,LINE_FILL_TRANSPARENCY);}
if(cumulated){let accumulator=0;dataset.data=dataset.data.map((value)=>{accumulator+=value;return accumulator;});}}
if(data.datasets.length===1&&data.datasets[0].originIndex===0){const dataset=data.datasets[0];dataset.fill="origin";dataset.backgroundColor=hexToRGBA(color0,LINE_FILL_TRANSPARENCY);}
data.labels=data.labels.length>1?data.labels:["",...data.labels,""];return data;}
getPieChartData(){const{domains}=this.model.metaData;const data=this.model.data;const colors=data.labels.map((_,index)=>getColor(index,this.cookies.current.color_scheme));const borderColor=getBorderWhite(this.cookies.current.color_scheme);for(const dataset of data.datasets){dataset.backgroundColor=colors;dataset.borderColor=borderColor;}
const representedOriginIndexes=new Set(data.datasets.map((dataset)=>dataset.originIndex));let addNoDataToLegend=false;const fakeData=new Array(data.labels.length+1);fakeData[data.labels.length]=1;const fakeTrueLabels=new Array(data.labels.length+1);fakeTrueLabels[data.labels.length]=NO_DATA;for(let index=0;index<domains.length;++index){if(!representedOriginIndexes.has(index)){data.datasets.push({label:domains[index].description,data:fakeData,trueLabels:fakeTrueLabels,backgroundColor:[...colors,DEFAULT_BG],borderColor,});addNoDataToLegend=true;}}
if(addNoDataToLegend){data.labels.push(NO_DATA);}
return data;}
getScaleOptions(){const{allIntegers,fields,groupBy,measure,measures,mode,stacked,}=this.model.metaData;if(mode==="pie"){return{};}
const xAxe={type:"category",scaleLabel:{display:Boolean(groupBy.length),labelString:groupBy.length?fields[groupBy[0].fieldName].string:"",},ticks:{callback:(value)=>shortenLabel(value)},};const yAxe={type:"linear",scaleLabel:{labelString:measures[measure].string,},ticks:{callback:(value)=>this.formatValue(value,allIntegers),suggestedMax:0,suggestedMin:0,},stacked:mode==="line"&&stacked?stacked:undefined,};return{xAxes:[xAxe],yAxes:[yAxe]};}
getTooltipItems(data,metaData,tooltipModel){const{allIntegers,domains,mode,groupBy}=metaData;const sortedDataPoints=sortBy(tooltipModel.dataPoints,"yLabel","desc");const items=[];for(const item of sortedDataPoints){const index=item.index;const dataset=data.datasets[item.datasetIndex];let label=dataset.trueLabels[index];let value=this.formatValue(dataset.data[index],allIntegers);let boxColor;let percentage;if(mode==="pie"){if(label===NO_DATA){value=this.formatValue(0,allIntegers);}
if(domains.length>1){label=`${dataset.label} / ${label}`;}
boxColor=dataset.backgroundColor[index];const totalData=dataset.data.reduce((a,b)=>a+b,0);percentage=totalData&&((dataset.data[item.index]*100)/totalData).toFixed(2);}else{if(groupBy.length>1||domains.length>1){label=`${label} / ${dataset.label}`;}
boxColor=mode==="bar"?dataset.backgroundColor:dataset.borderColor;}
items.push({label,value,boxColor,percentage});}
return items;}
getTooltipOptions(){const{data,metaData}=this.model;const{mode}=metaData;const tooltipOptions={enabled:false,custom:this.customTooltip.bind(this,data,metaData),};if(mode==="line"){tooltipOptions.mode="index";tooltipOptions.intersect=false;}
return tooltipOptions;}
onGraphClicked(ev){const[activeElement]=this.chart.getElementAtEvent(ev);if(!activeElement){return;}
const{_datasetIndex,_index}=activeElement;const{domains}=this.chart.data.datasets[_datasetIndex];if(domains){this.props.onGraphClicked(domains[_index]);}}
onLegendClick(ev,legendItem){this.removeTooltips();const index=legendItem.datasetIndex;const meta=this.chart.getDatasetMeta(index);meta.hidden=meta.hidden===null?!this.chart.data.datasets[index].hidden:null;this.chart.update();}
onlegendHover(ev,legendItem){this.canvasRef.el.style.cursor="pointer";const{fullText,text}=legendItem;if(this.legendTooltip||text===fullText){return;}
const viewContentTop=this.rootRef.el.getBoundingClientRect().top;const legendTooltip=Object.assign(document.createElement("div"),{className:"o_tooltip_legend popover p-3 pe-none",innerText:fullText,});legendTooltip.style.top=`${ev.clientY - viewContentTop}px`;legendTooltip.style.maxWidth=getMaxWidth(this.chart.chartArea);this.containerRef.el.appendChild(legendTooltip);this.fixTooltipLeftPosition(legendTooltip,ev.clientX);this.legendTooltip=legendTooltip;}
onLegendLeave(){this.canvasRef.el.style.cursor="";this.removeLegendTooltip();}
prepareOptions(){const{disableLinking,mode}=this.model.metaData;const options={maintainAspectRatio:false,scales:this.getScaleOptions(),legend:this.getLegendOptions(),tooltips:this.getTooltipOptions(),elements:this.getElementOptions(),};if(!disableLinking&&mode!=="line"){options.onClick=this.onGraphClicked.bind(this);}
return options;}
removeLegendTooltip(){if(this.legendTooltip){this.legendTooltip.remove();this.legendTooltip=null;}}
removeTooltips(){if(this.tooltip){this.tooltip.remove();this.tooltip=null;}
this.removeLegendTooltip();}
renderChart(){if(this.chart){this.chart.destroy();}
const config=this.getChartConfig();this.chart=new Chart(this.canvasRef.el,config);Chart.animationService.advance();}}
GraphRenderer.template="web.GraphRenderer";GraphRenderer.props=["class?","model","onGraphClicked"];return __exports;});;

/* /web/static/src/views/graph/graph_search_model.js */
odoo.define('@web/views/graph/graph_search_model',async function(require){'use strict';let __exports={};const{SearchModel}=require("@web/search/search_model");const GraphSearchModel=__exports.GraphSearchModel=class GraphSearchModel extends SearchModel{_getIrFilterDescription(){this.preparingIrFilterDescription=true;const result=super._getIrFilterDescription(...arguments);this.preparingIrFilterDescription=false;return result;}
_getSearchItemGroupBys(activeItem){const{searchItemId}=activeItem;const{context,type}=this.searchItems[searchItemId];if(!this.preparingIrFilterDescription&&type==="favorite"&&context.graph_groupbys){return context.graph_groupbys;}
return super._getSearchItemGroupBys(...arguments);}}
return __exports;});;

/* /web/static/src/views/graph/graph_view.js */
odoo.define('@web/views/graph/graph_view',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{GraphArchParser}=require("@web/views/graph/graph_arch_parser");const{GraphModel}=require("@web/views/graph/graph_model");const{GraphController}=require("@web/views/graph/graph_controller");const{GraphRenderer}=require("@web/views/graph/graph_renderer");const{GraphSearchModel}=require("@web/views/graph/graph_search_model");const viewRegistry=registry.category("views");const graphView=__exports.graphView={type:"graph",display_name:_lt("Graph"),icon:"fa fa-area-chart",multiRecord:true,Controller:GraphController,Renderer:GraphRenderer,Model:GraphModel,ArchParser:GraphArchParser,SearchModel:GraphSearchModel,searchMenuTypes:["filter","groupBy","comparison","favorite"],buttonTemplate:"web.GraphView.Buttons",props:(genericProps,view)=>{let modelParams;if(genericProps.state){modelParams=genericProps.state.metaData;}else{const{arch,fields,resModel}=genericProps;const parser=new view.ArchParser();const archInfo=parser.parse(arch,fields);modelParams={disableLinking:Boolean(archInfo.disableLinking),fieldAttrs:archInfo.fieldAttrs,fields:fields,groupBy:archInfo.groupBy,measure:archInfo.measure||"__count",mode:archInfo.mode||"bar",order:archInfo.order||null,resModel:resModel,stacked:"stacked"in archInfo?archInfo.stacked:true,cumulated:archInfo.cumulated||false,title:archInfo.title||_lt("Untitled"),};}
return{...genericProps,modelParams,Model:view.Model,Renderer:view.Renderer,buttonTemplate:view.buttonTemplate,};},};viewRegistry.add("graph",graphView);return __exports;});;

/* /web/static/src/views/kanban/kanban_animated_number.js */
odoo.define('@web/views/kanban/kanban_animated_number',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{formatInteger}=require("@web/views/fields/formatters");const{Component,onWillUpdateProps,onWillUnmount,useState}=require("@odoo/owl");const KanbanAnimatedNumber=__exports.KanbanAnimatedNumber=class KanbanAnimatedNumber extends Component{setup(){this.formatInteger=formatInteger;this.state=useState({value:this.props.value});this.handle=null;onWillUpdateProps((nextProps)=>{const{value:from}=this.props;const{value:to,duration}=nextProps;if(!this.constructor.enableAnimations||!duration||to<=from){browser.cancelAnimationFrame(this.handle);this.state.value=to;return;}
const startTime=Date.now();const animate=()=>{const progress=(Date.now()-startTime)/duration;if(progress>=1){this.state.value=to;}else{this.state.value=from+(to-from)*progress;this.handle=browser.requestAnimationFrame(animate);}};browser.cancelAnimationFrame(this.handle);animate();});onWillUnmount(()=>browser.cancelAnimationFrame(this.handle));}
format(value){return this.formatInteger(value,{humanReadable:true,decimals:0,minDigits:3});}}
KanbanAnimatedNumber.template="web.KanbanAnimatedNumber";KanbanAnimatedNumber.props={value:Number,duration:Number,animationClass:{type:String,optional:true},currency:{type:[Object,Boolean],optional:true},title:{type:String,optional:true},slots:{type:Object,shape:{prefix:{type:Object,optional:true},},optional:true,},};KanbanAnimatedNumber.enableAnimations=true;return __exports;});;

/* /web/static/src/views/kanban/kanban_arch_parser.js */
odoo.define('@web/views/kanban/kanban_arch_parser',async function(require){'use strict';let __exports={};const{addFieldDependencies,archParseBoolean,getActiveActions,stringToOrderBy,}=require("@web/views/utils");const{extractAttributes,XMLParser}=require("@web/core/utils/xml");const{Field}=require("@web/views/fields/field");const{Widget}=require("@web/views/widgets/widget");const KANBAN_BOX_ATTRIBUTE=__exports.KANBAN_BOX_ATTRIBUTE="kanban-box";const KANBAN_TOOLTIP_ATTRIBUTE=__exports.KANBAN_TOOLTIP_ATTRIBUTE="kanban-tooltip";const KanbanArchParser=__exports.KanbanArchParser=class KanbanArchParser extends XMLParser{parse(arch,models,modelName){const fields=models[modelName];const xmlDoc=this.parseXML(arch);const className=xmlDoc.getAttribute("class")||null;let defaultOrder=stringToOrderBy(xmlDoc.getAttribute("default_order")||null);const defaultGroupBy=xmlDoc.getAttribute("default_group_by");const limit=xmlDoc.getAttribute("limit");const countLimit=xmlDoc.getAttribute("count_limit");const recordsDraggable=archParseBoolean(xmlDoc.getAttribute("records_draggable"),true);const groupsDraggable=archParseBoolean(xmlDoc.getAttribute("groups_draggable"),true);const activeActions={...getActiveActions(xmlDoc),archiveGroup:archParseBoolean(xmlDoc.getAttribute("archivable"),true),createGroup:archParseBoolean(xmlDoc.getAttribute("group_create"),true),deleteGroup:archParseBoolean(xmlDoc.getAttribute("group_delete"),true),editGroup:archParseBoolean(xmlDoc.getAttribute("group_edit"),true),quickCreate:archParseBoolean(xmlDoc.getAttribute("quick_create"),true),};const onCreate=xmlDoc.getAttribute("on_create");const quickCreateView=xmlDoc.getAttribute("quick_create_view");const tooltipInfo={};let handleField=null;const fieldNodes={};const jsClass=xmlDoc.getAttribute("js_class");const action=xmlDoc.getAttribute("action");const type=xmlDoc.getAttribute("type");const openAction=action&&type?{action,type}:null;const templateDocs={};const activeFields={};this.visitXML(xmlDoc,(node)=>{if(node.hasAttribute("t-name")){templateDocs[node.getAttribute("t-name")]=node;return;}
if(node.tagName==="field"){const widget=node.getAttribute("widget");if(!widget&&models[modelName][node.getAttribute("name")].type==="many2many"){node.setAttribute("widget","many2many_tags");}
const fieldInfo=Field.parseFieldNode(node,models,modelName,"kanban",jsClass);if(!node.hasAttribute("force_save")){fieldInfo.forceSave=true;}
const name=fieldInfo.name;fieldNodes[name]=fieldInfo;node.setAttribute("field_id",name);if(fieldInfo.options.group_by_tooltip){tooltipInfo[name]=fieldInfo.options.group_by_tooltip;}
if(fieldInfo.widget==="handle"){handleField=name;}
addFieldDependencies(activeFields,models[modelName],fieldInfo.FieldComponent.fieldDependencies);}
if(node.tagName==="widget"){const{WidgetComponent}=Widget.parseWidgetNode(node);addFieldDependencies(activeFields,models[modelName],WidgetComponent.fieldDependencies);}
if(node.tagName==="img"){const attSrc=node.getAttribute("t-att-src");if(attSrc&&/\bkanban_image\b/.test(attSrc)&&!fieldNodes.__last_update){fieldNodes.__last_update={type:"datetime"};}}});let progressAttributes=false;const progressBar=xmlDoc.querySelector("progressbar");if(progressBar){progressAttributes=this.parseProgressBar(progressBar,fields);}
const cardDoc=templateDocs[KANBAN_BOX_ATTRIBUTE];if(!cardDoc){throw new Error(`Missing '${KANBAN_BOX_ATTRIBUTE}' template.`);}
const cardColorEl=cardDoc.querySelector("[color]");const cardColorField=cardColorEl&&cardColorEl.getAttribute("color");const colorEl=cardDoc.querySelector(".oe_kanban_colorpicker[data-field]");const colorField=(colorEl&&colorEl.getAttribute("data-field"))||"color";if(!defaultOrder.length&&handleField){defaultOrder=stringToOrderBy(handleField);}
for(const[key,field]of Object.entries(fieldNodes)){activeFields[key]=field;}
return{arch,activeActions,activeFields,className,defaultGroupBy,fieldNodes,handleField,colorField,defaultOrder,onCreate,openAction,quickCreateView,recordsDraggable,groupsDraggable,limit:limit&&parseInt(limit,10),countLimit:countLimit&&parseInt(countLimit,10),progressAttributes,cardColorField,templateDocs,tooltipInfo,examples:xmlDoc.getAttribute("examples"),__rawArch:arch,};}
parseProgressBar(progressBar,fields){const attrs=extractAttributes(progressBar,["field","colors","sum_field","help"]);return{fieldName:attrs.field,colors:JSON.parse(attrs.colors),sumField:fields[attrs.sum_field]||false,help:attrs.help,};}}
return __exports;});;

/* /web/static/src/views/kanban/kanban_column_examples_dialog.js */
odoo.define('@web/views/kanban/kanban_column_examples_dialog',async function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{Notebook}=require("@web/core/notebook/notebook");const{_lt}=require("@web/core/l10n/translation");const{Component,useRef}=require("@odoo/owl");const random=(min,max)=>Math.floor(Math.random()*(max-min)+min);class KanbanExamplesNotebookTemplate extends Component{setup(){this.columns=[];const hasBullet=this.props.bullets&&this.props.bullets.length;for(const title of this.props.columns){const col={title,records:[]};this.columns.push(col);for(let i=0;i<random(1,5);i++){const rec={id:i};if(hasBullet&&Math.random()>0.3){rec.bullet=_.sample(this.props.bullets);}
col.records.push(rec);}}}}
KanbanExamplesNotebookTemplate.template="web.KanbanExamplesNotebookTemplate";const KanbanColumnExamplesDialog=__exports.KanbanColumnExamplesDialog=class KanbanColumnExamplesDialog extends Component{setup(){this.navList=useRef("navList");this.pages=[];this.activePage=null;this.props.examples.forEach((eg)=>{this.pages.push({Component:KanbanExamplesNotebookTemplate,title:eg.name,props:eg,id:eg.name,});});}
onPageUpdate(page){this.activePage=page;}
applyExamples(){const index=this.props.examples.findIndex((e)=>e.name===this.activePage);this.props.applyExamples(index);this.props.close();}}
KanbanColumnExamplesDialog.template="web.KanbanColumnExamplesDialog";KanbanColumnExamplesDialog.components={Dialog,Notebook};KanbanColumnExamplesDialog.title=_lt("Kanban Examples");return __exports;});;

/* /web/static/src/views/kanban/kanban_column_quick_create.js */
odoo.define('@web/views/kanban/kanban_column_quick_create',async function(require){'use strict';let __exports={};const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{useAutofocus,useService}=require("@web/core/utils/hooks");const{KanbanColumnExamplesDialog}=require("@web/views/kanban/kanban_column_examples_dialog");const{Component,useExternalListener,useState,useRef}=require("@odoo/owl");const KanbanColumnQuickCreate=__exports.KanbanColumnQuickCreate=class KanbanColumnQuickCreate extends Component{setup(){this.dialog=useService("dialog");this.root=useRef("root");this.state=useState({columnTitle:"",});useAutofocus();useExternalListener(window,"mousedown",(ev)=>{this.mousedownTarget=ev.target;});useExternalListener(window,"click",(ev)=>{const target=this.mousedownTarget||ev.target;const gotClickedInside=this.root.el.contains(target);if(!gotClickedInside){this.fold();}
this.mousedownTarget=null;},{capture:true});const inputRef=useRef("autofocus");useHotkey("enter",()=>this.validate(),{area:()=>inputRef.el,bypassEditableProtection:true,});useHotkey("escape",()=>this.fold());}
get canShowExamples(){const{allowedGroupBys=[],examples=[]}=this.props.exampleData||{};const hasExamples=Boolean(examples.length);return hasExamples&&allowedGroupBys.includes(this.props.groupByField.name);}
get relatedFieldName(){return this.props.groupByField.string;}
fold(){this.props.onFoldChange(true);}
unfold(){this.props.onFoldChange(false);}
validate(){if(this.state.columnTitle.length){this.props.onValidate(this.state.columnTitle);this.state.columnTitle="";}}
showExamples(){this.dialog.add(KanbanColumnExamplesDialog,{examples:this.props.exampleData.examples,applyExamplesText:this.props.exampleData.applyExamplesText||this.env._t("Use This For My Kanban"),applyExamples:(index)=>{for(const groupName of this.props.exampleData.examples[index].columns){this.props.onValidate(groupName);}},});}}
KanbanColumnQuickCreate.template="web.KanbanColumnQuickCreate";return __exports;});;

/* /web/static/src/views/kanban/kanban_compiler.js */
odoo.define('@web/views/kanban/kanban_compiler',async function(require){'use strict';let __exports={};const{append,combineAttributes,createElement,extractAttributes,getTag,}=require("@web/core/utils/xml");const{toStringExpression}=require("@web/views/utils");const{toInterpolatedStringExpression,ViewCompiler}=require("@web/views/view_compiler");const ACTION_TYPES=["action","object"];const SPECIAL_TYPES=[...ACTION_TYPES,"edit","open","delete","url","set_cover"];let currentDropdownId=1;const KanbanCompiler=__exports.KanbanCompiler=class KanbanCompiler extends ViewCompiler{setup(){this.ctx.readonly="read_only_mode";this.compilers.push({selector:".oe_kanban_colorpicker",fn:this.compileColorPicker},{selector:".dropdown:not(.kanban_ignore_dropdown),.o_kanban_manage_button_section",fn:this.compileDropdown,doNotCopyAttributes:true,},{selector:".dropdown-menu:not(.kanban_ignore_dropdown)",fn:this.compileDropdownMenu,doNotCopyAttributes:true,},{selector:".dropdown-toggle:not(.kanban_ignore_dropdown),.o_kanban_manage_toggle_button",fn:this.compileDropdownToggler,doNotCopyAttributes:true,},{selector:"t[t-call]",fn:this.compileTCall});this.dropdowns={};}
renderDropdown(part){if(!this.dropdowns[currentDropdownId]){this.dropdowns[currentDropdownId]={parts:[],inserted:false,shouldInsert:false,el:createElement("Dropdown",{class:toStringExpression("o_dropdown_kanban"),position:toStringExpression("bottom-end"),}),};}
const dropdown=this.dropdowns[currentDropdownId];if(dropdown.parts.includes(part)){currentDropdownId++;return this.renderDropdown(part);}
dropdown.parts.push(part);if(part!=="menu"||dropdown.parts.includes("dropdown")){dropdown.shouldInsert=!dropdown.inserted;dropdown.inserted=true;}
return dropdown;}
compileButton(el,params){if(el.hasAttribute("data-type")){for(const{name,value}of el.attributes){el.setAttribute(name.replace(/^data-/,""),value);}}
const type=el.getAttribute("type");if(!SPECIAL_TYPES.includes(type)){return super.compileButton(el,params);}
combineAttributes(el,"class",["oe_kanban_action",`oe_kanban_action_${getTag(el, true)}`,]);if(ACTION_TYPES.includes(type)){if(!el.hasAttribute("debounce")){el.setAttribute("debounce",300);}
return super.compileButton(el,params);}
const nodeParams=extractAttributes(el,["type"]);if(type==="set_cover"){const{"auto-open":autoOpen,"data-field":fieldName}=extractAttributes(el,["auto-open","data-field",]);Object.assign(nodeParams,{autoOpen,fieldName});}
const strParams=Object.entries(nodeParams).map(([k,v])=>[k,toStringExpression(v)].join(":")).join(",");el.setAttribute("t-on-click",`()=>this.triggerAction({${strParams}})`);const compiled=createElement(el.nodeName);for(const{name,value}of el.attributes){compiled.setAttribute(name,value);}
if(getTag(el,true)==="a"&&!compiled.hasAttribute("href")){compiled.setAttribute("href","#");}
for(const child of el.childNodes){append(compiled,this.compileNode(child,params));}
return compiled;}
compileColorPicker(){return createElement("t",{"t-call":"web.KanbanColorPicker"});}
compileDropdown(el,params){const{shouldInsert,el:dropdownEl}=this.renderDropdown("dropdown");const classes=[...el.classList].filter((cls)=>cls&&cls!=="dropdown").join(" ");combineAttributes(dropdownEl,"class",toStringExpression(classes),"+' '+");for(const child of el.childNodes){append(dropdownEl,this.compileNode(child,params));}
return shouldInsert&&dropdownEl;}
compileDropdownMenu(el,params){const{shouldInsert,el:dropdownEl}=this.renderDropdown("menu");const cls=el.getAttribute("class")||"";combineAttributes(dropdownEl,"menuClass",toStringExpression(cls),"+' '+");const wrapper=createElement("KanbanDropdownMenuWrapper");for(const child of el.childNodes){append(wrapper,this.compileNode(child,params));}
append(dropdownEl,wrapper);return shouldInsert&&dropdownEl;}
compileDropdownToggler(el,params){const{shouldInsert,el:dropdownEl}=this.renderDropdown("toggler");const classes=["btn",...el.classList].filter(Boolean).join(" ");const togglerSlot=createElement("t",{"t-set-slot":"toggler"});combineAttributes(dropdownEl,"togglerClass",toStringExpression(classes),"+' '+");for(const child of el.childNodes){append(togglerSlot,this.compileNode(child,params));}
append(dropdownEl,togglerSlot);return shouldInsert&&dropdownEl;}
compileField(el,params){let compiled;let isSpan=false;if(!el.hasAttribute("widget")){isSpan=true;const fieldName=el.getAttribute("name");compiled=createElement("span",{"t-out":`getFormattedValue("${fieldName}")`});}else{compiled=super.compileField(el,params);const fieldId=el.getAttribute("field_id")||el.getAttribute("name");compiled.setAttribute("id",`'${fieldId}_' + props.record.id`);}
const{bold,display}=extractAttributes(el,["bold","display"]);const classNames=[];if(display==="right"){classNames.push("float-end");}else if(display==="full"){classNames.push("o_text_block");}
if(bold){classNames.push("o_text_bold");}
if(classNames.length>0){const clsFormatted=isSpan?classNames.join(" "):toStringExpression(classNames.join(" "));compiled.setAttribute("class",clsFormatted);}
const attrs={};for(const attr of el.attributes){attrs[attr.name]=attr.value;}
if(el.hasAttribute("widget")){const attrsParts=Object.entries(attrs).map(([key,value])=>{if(key.startsWith("t-attf-")){key=key.slice(7);value=toInterpolatedStringExpression(value);}else if(key.startsWith("t-att-")){key=key.slice(6);value=`"" + (${value})`;}else if(key.startsWith("t-att")){throw new Error("t-att on <field> nodes is not supported");}else if(!key.startsWith("t-")){value=toStringExpression(value);}
return`'${key}':${value}`;});compiled.setAttribute("attrs",`{${attrsParts.join(",")}}`);}
for(const attr in attrs){if(attr.startsWith("t-")&&!attr.startsWith("t-att")){compiled.setAttribute(attr,attrs[attr]);}}
return compiled;}
compileTCall(el,params){const compiled=this.compileGenericNode(el,params);const tname=el.getAttribute("t-call");if(tname in this.templates){compiled.setAttribute("t-call",`{{templates[${toStringExpression(tname)}]}}`);}
return compiled;}}
KanbanCompiler.OWL_DIRECTIVE_WHITELIST=[...ViewCompiler.OWL_DIRECTIVE_WHITELIST,"t-name","t-esc","t-out","t-set","t-value","t-if","t-else","t-elif","t-foreach","t-as","t-key","t-att.*","t-call","t-translation",];return __exports;});;

/* /web/static/src/views/kanban/kanban_controller.js */
odoo.define('@web/views/kanban/kanban_controller',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{Layout}=require("@web/search/layout");const{usePager}=require("@web/search/pager_hook");const{useModel}=require("@web/views/model");const{standardViewProps}=require("@web/views/standard_view_props");const{useSetupView}=require("@web/views/view_hook");const{useViewButtons}=require("@web/views/view_button/view_button_hook");const{KanbanRenderer}=require("@web/views/kanban/kanban_renderer");const{Component,useRef}=require("@odoo/owl");const KanbanController=__exports.KanbanController=class KanbanController extends Component{setup(){this.actionService=useService("action");const{Model,resModel,fields,archInfo,limit,defaultGroupBy,state}=this.props;const{rootState}=state||{};this.model=useModel(Model,{activeFields:archInfo.activeFields,progressAttributes:archInfo.progressAttributes,fields,resModel,handleField:archInfo.handleField,limit:archInfo.limit||limit,countLimit:archInfo.countLimit,onCreate:archInfo.onCreate,quickCreateView:archInfo.quickCreateView,defaultGroupBy,defaultOrder:archInfo.defaultOrder,viewMode:"kanban",openGroupsByDefault:true,tooltipInfo:archInfo.tooltipInfo,rootState,});const rootRef=useRef("root");useViewButtons(this.model,rootRef,{beforeExecuteAction:this.beforeExecuteActionButton.bind(this),afterExecuteAction:this.afterExecuteActionButton.bind(this),});useSetupView({rootRef,getGlobalState:()=>{return{resIds:this.model.root.records.map((rec)=>rec.resId),};},getLocalState:()=>{return{rootState:this.model.root.exportState(),};},});usePager(()=>{const root=this.model.root;const{count,hasLimitedCount,isGrouped,limit,offset}=root;if(!isGrouped){return{offset:offset,limit:limit,total:count,onUpdate:async({offset,limit})=>{this.model.root.offset=offset;this.model.root.limit=limit;await this.model.root.load();await this.onUpdatedPager();this.render(true);},updateTotal:hasLimitedCount?()=>root.fetchCount():undefined,};}});}
get className(){if(this.env.isSmall&&this.model.root.isGrouped){const classList=(this.props.className||"").split(" ");classList.push("o_action_delegate_scroll");return classList.join(" ");}
return this.props.className;}
async openRecord(record,mode){const activeIds=this.model.root.records.map((datapoint)=>datapoint.resId);this.props.selectRecord(record.resId,{activeIds,mode});}
async createRecord(group){const{activeActions,onCreate}=this.props.archInfo;const{root}=this.model;if(activeActions.quickCreate&&onCreate==="quick_create"&&root.canQuickCreate()){await root.quickCreate(group);}else if(onCreate&&onCreate!=="quick_create"){const options={additionalContext:root.context,onClose:async()=>{await this.model.root.load();this.model.useSampleModel=false;this.render(true);},};await this.actionService.doAction(onCreate,options);}else{await this.props.createRecord();}}
get canCreate(){const{create,createGroup}=this.props.archInfo.activeActions;const list=this.model.root;if(!create){return false;}
return list.isGrouped?list.groups.length>0||!createGroup:true;}
async beforeExecuteActionButton(clickParams){}
async afterExecuteActionButton(clickParams){}
async onUpdatedPager(){}}
KanbanController.template=`web.KanbanView`;KanbanController.components={Layout,KanbanRenderer};KanbanController.props={...standardViewProps,defaultGroupBy:{validate:(dgb)=>!dgb||typeof dgb==="string",optional:true},editable:{type:Boolean,optional:true},forceGlobalClick:{type:Boolean,optional:true},onSelectionChanged:{type:Function,optional:true},showButtons:{type:Boolean,optional:true},Compiler:{type:Function,optional:true},Model:Function,Renderer:Function,buttonTemplate:String,archInfo:Object,};KanbanController.defaultProps={createRecord:()=>{},forceGlobalClick:false,selectRecord:()=>{},showButtons:true,};return __exports;});;

/* /web/static/src/views/kanban/kanban_cover_image_dialog.js */
odoo.define('@web/views/kanban/kanban_cover_image_dialog',async function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{FileInput}=require("@web/core/file_input/file_input");const{useService}=require("@web/core/utils/hooks");const{Component,useState,onWillStart}=require("@odoo/owl");let nextDialogId=1;const KanbanCoverImageDialog=__exports.KanbanCoverImageDialog=class KanbanCoverImageDialog extends Component{setup(){this.id=`o_cover_image_upload_${nextDialogId++}`;this.orm=useService("orm");this.http=useService("http");const{record,fieldName}=this.props;const attachment=(record&&record.data[fieldName])||[];this.state=useState({selectFile:false,selectedAttachmentId:attachment[0],});onWillStart(async()=>{this.attachments=await this.orm.searchRead("ir.attachment",[["res_model","=",record.resModel],["res_id","=",record.resId],["mimetype","ilike","image"],],["id"]);this.state.selectFile=this.props.autoOpen&&this.attachments.length;});}
onUpload([attachment]){if(!attachment){return;}
this.state.selectFile=false;this.selectAttachment(attachment,true);}
selectAttachment(attachment,setSelected){if(this.state.selectedAttachmentId!==attachment.id){this.state.selectedAttachmentId=attachment.id;}else{this.state.selectedAttachmentId=null;}
if(setSelected){this.setCover();}}
removeCover(){this.state.selectedAttachmentId=null;this.setCover();}
async setCover(){const id=this.state.selectedAttachmentId?[this.state.selectedAttachmentId]:false;await this.props.record.update({[this.props.fieldName]:id});await this.props.record.save();this.props.close();}
uploadImage(){this.state.selectFile=true;}}
KanbanCoverImageDialog.template="web.KanbanCoverImageDialog";KanbanCoverImageDialog.components={Dialog,FileInput};return __exports;});;

/* /web/static/src/views/kanban/kanban_dropdown_menu_wrapper.js */
odoo.define('@web/views/kanban/kanban_dropdown_menu_wrapper',async function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{DROPDOWN}=require("@web/core/dropdown/dropdown");const KanbanDropdownMenuWrapper=__exports.KanbanDropdownMenuWrapper=class KanbanDropdownMenuWrapper extends Component{onClick(ev){this.env[DROPDOWN].closeAllParents();}}
KanbanDropdownMenuWrapper.template="web.KanbanDropdownMenuWrapper";return __exports;});;

/* /web/static/src/views/kanban/kanban_model.js */
odoo.define('@web/views/kanban/kanban_model',async function(require){'use strict';let __exports={};const{Domain}=require("@web/core/domain");const{isRelational}=require("@web/views/utils");const{DynamicGroupList,DynamicRecordList,Group,RelationalModel,}=require("@web/views/relational_model");const{KeepLast}=require("@web/core/utils/concurrency");const{EventBus,markRaw}=require("@odoo/owl");const FALSE=Symbol("false");class TransactionInProgress extends Error{}
class NoTransactionInProgress extends Error{}
function makeTransactionManager(){const bus=new EventBus();const transactions={};return{start:(id)=>{if(transactions[id]){throw new TransactionInProgress(`Transaction in progress: commit or abort to start a new one.`);}
transactions[id]=true;bus.trigger("START");},commit:(id)=>{if(!transactions[id]){throw new NoTransactionInProgress(`No transaction in progress.`);}
delete transactions[id];bus.trigger("COMMIT");},abort:(id)=>{if(!transactions[id]){throw new NoTransactionInProgress(`No transaction in progress.`);}
delete transactions[id];bus.trigger("ABORT");},register:({onStart,onCommit,onAbort})=>{let currentData=null;bus.addEventListener("START",()=>onStart&&(currentData=onStart()));bus.addEventListener("COMMIT",()=>onCommit&&onCommit(currentData));bus.addEventListener("ABORT",()=>onAbort&&onAbort(currentData));},};}
class KanbanGroup extends Group{setup(_params,state={}){super.setup(...arguments);this.progressBars=this._generateProgressBars();this.progressValue=markRaw(state.progressValue||{active:null});this.list.domain=this.getProgressBarDomain();this.tooltip=[];this.model.transaction.register({onStart:()=>({count:this.count,progressBars:[...this.progressBars],records:[...this.list.records],}),onAbort:({count,progressBars,records})=>{this.count=count;this.progressBars=progressBars;this.list.records=records;},});this.model.addEventListener("record-updated",({detail})=>{const{record,relatedRecords}=detail;const localIds=this.records.map((r)=>r.id);const updatedIds=[record,...relatedRecords].map((r)=>r.id);if(localIds.some((id)=>updatedIds.includes(id))){this.model.trigger("group-updated",{group:this,withProgressBars:true,});}});}
get activeProgressBar(){return(this.hasActiveProgressValue&&this.progressBars.find((pv)=>pv.value===this.progressValue.active));}
get hasActiveProgressValue(){return this.model.hasProgressBars&&this.progressValue.active!==null;}
async deleteRecords(){const records=await super.deleteRecords(...arguments);this.model.trigger("group-updated",{group:this,withProgressBars:true,});return records;}
empty(){super.empty();this.progressValue.active=null;for(const progressBar of this.progressBars){progressBar.count=0;}}
exportState(){return{...super.exportState(),progressValue:this.progressValue,};}
quickCreate(activeFields,context){const ctx={...context};if(this.hasActiveProgressValue&&this.progressValue.active!==FALSE){const{fieldName}=this.model.progressAttributes;ctx[`default_${fieldName}`]=this.progressValue.active;}
return super.quickCreate(activeFields,ctx);}
async load(){this.loadTooltip();await super.load();}
async loadTooltip(){const groupName=this.groupByField.name;if(this.groupByField.type==="many2one"&&this.value&&groupName in this.model.tooltipInfo){this.tooltipKeepLast=this.tooltipKeepLast||new KeepLast();const resModel=this.groupByField.relation;const tooltipInfo=this.model.tooltipInfo[groupName];const fieldNames=Object.keys(tooltipInfo);const[values]=await this.tooltipKeepLast.add(this.model.orm.silent.read(resModel,[this.value],["display_name",...fieldNames]));this.tooltip=fieldNames.filter((fieldName)=>values[fieldName]).map((fieldName)=>({title:tooltipInfo[fieldName],value:values[fieldName]}));this.model.notify();}}
async checkActiveValue(){if(!this.hasActiveProgressValue){return;}
if(this.activeProgressBar.count===0){await this.filterProgressValue(null);}}
async filterProgressValue(value){this.progressValue.active=this.progressValue.active===value?null:value;this.list.domain=this.getProgressBarDomain();await Promise.all([this.list.load()]);this.model.trigger("group-updated",{group:this,withProgressBars:false});}
findProgressValueFromRecord(record){const{fieldName}=this.model.progressAttributes;const value=record.data[fieldName];return(this.progressBars.find((pv)=>pv.value===value)||this.progressBars.find((pv)=>pv.value===FALSE));}
getAggregates(fieldName){if(!this.hasActiveProgressValue){return super.getAggregates(...arguments);}
return fieldName?this.aggregates[fieldName]:this.activeProgressBar.count;}
getProgressBarDomain(){const{fieldName}=this.model.progressAttributes;const domains=[this.groupDomain];if(this.hasActiveProgressValue){if(this.progressValue.active===FALSE){const values=this.progressBars.map((pv)=>pv.value).filter((val)=>val!==this.progressValue.active);domains.push(["!",[fieldName,"in",values]]);}else{domains.push([[fieldName,"=",this.progressValue.active]]);}}
return Domain.and(domains).toList();}
updateAggregates(groupData){const fname=this.groupByField.name;const{sumField}=this.model.progressAttributes;const group=groupData.find((g)=>this.valueEquals(g[fname]));if(sumField){this.aggregates[sumField.name]=group?group[sumField.name]:0;}}
async updateProgressData(progressData){let value=this.displayName||this.value;if(value===true){value="True";}else if(value===false){value="False";}
const groupProgressData=progressData[value]||{};const counts=new Map(groupProgressData?Object.entries(groupProgressData):[[FALSE,this.count]]);const total=[...counts.values()].reduce((acc,c)=>acc+c,0);counts.set(FALSE,this.count-total);for(const pv of this.progressBars){pv.count=counts.get(pv.value)||0;}
await this.checkActiveValue();}
async validateQuickCreate(record,mode){let saved=false;if(record){saved=await this.model.mutex.exec(async()=>{return await record._save({noReload:true,stayInEdition:true});});if(saved){if(mode==="add"){await this.model.root.quickCreate(this);}else{this.quickCreateRecord=null;}
if(record.parentActiveFields){record.setActiveFields(record.parentActiveFields);record.parentActiveFields=false;}
await this.model.reloadRecords(record);record.switchMode("readonly");this.addRecord(record,0);this.model.trigger("group-updated",{group:this,withProgressBars:true,});}}
return saved?record:false;}
_generateProgressBars(){if(!this.model.hasProgressBars){return[];}
const{colors,fieldName}=this.model.progressAttributes;const{selection:fieldSelection}=this.fields[fieldName];const colorEntries=Object.entries(colors);const selection=fieldSelection&&Object.fromEntries(fieldSelection);colorEntries.push([FALSE,"200"]);return colorEntries.map(([value,color])=>{let string;if(value===FALSE){string=this.model.env._t("Other");}else if(selection){string=selection[value];}else{string=String(value);}
return{count:0,value,string,color};});}}
const KanbanDynamicGroupList=__exports.KanbanDynamicGroupList=class KanbanDynamicGroupList extends DynamicGroupList{setup(params,state){super.setup(...arguments);this.previousParams=state.previousParams||"[]";this.groupBy=this.groupBy.slice(0,1);this.limit=null;this.model.addEventListener("group-updated",async({detail})=>{if(this.groups.some((g)=>g.id===detail.group.id)){await this.updateGroupProgressData([detail.group],detail.withProgressBars);this.model.notify();}});}
get sumFields(){const{sumField}=this.model.progressAttributes;return sumField?[sumField.name]:[];}
get fieldNames(){return[...super.fieldNames,...this.sumFields];}
get currentParams(){return JSON.stringify([this.domain,this.groupBy]);}
exportState(){return{...super.exportState(),previousParams:this.currentParams,};}
async load(){const load=async()=>{const previousGroups=this.groups.map((g,i)=>[g,i]);await super.load();if(this.previousParams===this.currentParams){for(const[group,index]of previousGroups){const newGroup=this.groups.find((g)=>group.valueEquals(g.value));if(!group.deleted&&!newGroup){group.empty();this.groups.splice(index,0,group);}}}};await this._loadWithProgressData(load());}
async updateGroupProgressData(groups,withProgressBars){if(!this.model.hasProgressBars){return;}
const gbFieldName=this.groupByField.name;const promises={};if(withProgressBars){const domain=Domain.or(groups.map((g)=>g.groupDomain)).toList();promises.readProgressBar=this._fetchProgressData(domain);}
if(this.sumFields.length){const domain=Domain.or(groups.map((g)=>g.getProgressBarDomain())).toList();promises.webReadGroup=this.model.orm.webReadGroup(this.resModel,domain,this.sumFields,this.groupBy,{lazy:true});}
await Promise.all(Object.values(promises));if(promises.webReadGroup){const result=await promises.webReadGroup;const groupData=result.groups.map((group)=>({...group,[gbFieldName]:this._getValueFromGroupData(group,this.firstGroupBy),}));for(const group of groups){group.updateAggregates(groupData);}}
if(promises.readProgressBar){const result=await promises.readProgressBar;await Promise.all(groups.map((group)=>group.updateProgressData(result)));}}
async moveRecord(dataRecordId,dataGroupId,refId,targetGroupId){const sourceGroup=this.groups.find((g)=>g.id===dataGroupId);const targetGroup=this.groups.find((g)=>g.id===targetGroupId);if(!sourceGroup||!targetGroup){return;}
const record=sourceGroup.list.records.find((r)=>r.id===dataRecordId);try{this.model.transaction.start(dataRecordId);}catch(err){if(err instanceof TransactionInProgress){return;}
throw err;}
if(dataGroupId!==targetGroupId){const refIndex=targetGroup.list.records.findIndex((r)=>r.id===refId);targetGroup.addRecord(sourceGroup.removeRecord(record),refIndex+1);const value=isRelational(this.groupByField)?[targetGroup.value,targetGroup.displayName]:targetGroup.value;const abort=()=>{this.model.transaction.abort(dataRecordId);this.model.notify();};try{await record.update({[this.groupByField.name]:value},{silent:true});const saved=await record.save({noReload:true});if(!saved){abort();this.model.notify();return;}}catch(err){abort();throw err;}
const promises=[];const groupsToReload=[sourceGroup];if(!targetGroup.isFolded){groupsToReload.push(targetGroup);promises.push(record.load());}
promises.push(this.updateGroupProgressData(groupsToReload,true));await Promise.all(promises);}
if(!targetGroup.isFolded){await targetGroup.list.resequence(dataRecordId,refId);}
this.model.notify();this.model.transaction.commit(dataRecordId);return true;}
async _fetchProgressData(domain){const{colors,fieldName,help}=this.model.progressAttributes;return this.model.orm.call(this.resModel,"read_progress_bar",[],{domain,group_by:this.firstGroupBy,progress_bar:{colors,field:fieldName,help},context:this.context,});}
async _loadWithProgressData(loadPromise){if(!this.model.hasProgressBars){return loadPromise;}
const[progressData]=await Promise.all([this._fetchProgressData(this.domain),loadPromise,]);await Promise.all(this.groups.map((group)=>group.updateProgressData(progressData)));}}
const KanbanDynamicRecordList=__exports.KanbanDynamicRecordList=class KanbanDynamicRecordList extends DynamicRecordList{async moveRecord(dataRecordId,_dataGroupId,refId){this.model.transaction.start(dataRecordId);try{await this.resequence(dataRecordId,refId);}catch(err){this.model.transaction.abort(dataRecordId);this.model.notify();throw err;}
this.model.transaction.commit(dataRecordId);}}
KanbanDynamicRecordList.DEFAULT_LIMIT=40;const KanbanModel=__exports.KanbanModel=class KanbanModel extends RelationalModel{setup(params){super.setup(...arguments);this.progressAttributes=params.progressAttributes;this.tooltipInfo=params.tooltipInfo;this.transaction=makeTransactionManager();}
get hasProgressBars(){return Boolean(this.progressAttributes);}
hasData(){if(this.root.groups){if(!this.root.groups.length){return true;}
return this.root.groups.some((group)=>group.count>0||group.quickCreateRecord);}
return this.root.records.length>0;}}
KanbanModel.DynamicGroupList=KanbanDynamicGroupList;KanbanModel.DynamicRecordList=KanbanDynamicRecordList;KanbanModel.Group=KanbanGroup;return __exports;});;

/* /web/static/src/views/kanban/kanban_record.js */
odoo.define('@web/views/kanban/kanban_record',async function(require){'use strict';let __exports={};const{ColorList}=require("@web/core/colorlist/colorlist");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{registry}=require("@web/core/registry");const{useTooltip}=require("@web/core/tooltip/tooltip_hook");const{useService}=require("@web/core/utils/hooks");const{sprintf}=require("@web/core/utils/strings");const{url}=require("@web/core/utils/urls");const{Field}=require("@web/views/fields/field");const{fileTypeMagicWordMap,imageCacheKey}=require("@web/views/fields/image/image_field");const{ViewButton}=require("@web/views/view_button/view_button");const{useViewCompiler}=require("@web/views/view_compiler");const{Widget}=require("@web/views/widgets/widget");const{evalDomain,getFormattedValue}=require("@web/views/utils");const{KANBAN_BOX_ATTRIBUTE,KANBAN_TOOLTIP_ATTRIBUTE}=require("@web/views/kanban/kanban_arch_parser");const{KanbanCompiler}=require("@web/views/kanban/kanban_compiler");const{KanbanCoverImageDialog}=require("@web/views/kanban/kanban_cover_image_dialog");const{KanbanDropdownMenuWrapper}=require("@web/views/kanban/kanban_dropdown_menu_wrapper");const{Component,onMounted,onWillUpdateProps,useRef}=require("@odoo/owl");const{COLORS}=ColorList;const formatters=registry.category("formatters");const CANCEL_GLOBAL_CLICK=__exports.CANCEL_GLOBAL_CLICK=["a",".dropdown",".oe_kanban_action","[data-bs-toggle]"].join(",");const ALLOW_GLOBAL_CLICK=[".oe_kanban_global_click",".oe_kanban_global_click_edit"].join(",");function getColorClass(value){return`oe_kanban_color_${getColorIndex(value)}`;}
function getColorIndex(value){if(typeof value==="number"){return Math.round(value)%COLORS.length;}else if(typeof value==="string"){const charCodeSum=[...value].reduce((acc,_,i)=>acc+value.charCodeAt(i),0);return charCodeSum%COLORS.length;}else{return 0;}}
function getColorName(value){return COLORS[getColorIndex(value)];}
function getImageSrcFromRecordInfo(record,model,field,idOrIds,placeholder){const id=(Array.isArray(idOrIds)?idOrIds[0]:idOrIds)||null;const isCurrentRecord=record.resModel===model&&(record.resId===id||(!record.resId&&!id));const fieldVal=record.data[field];if(isCurrentRecord&&fieldVal&&!isBinSize(fieldVal)){const type=fileTypeMagicWordMap[fieldVal[0]];return`data:image/${type};base64,${fieldVal}`;}else if(placeholder&&(!model||!field||!id||!fieldVal)){return placeholder;}else{return url("/web/image",{model,field,id,unique:imageCacheKey(record.data.__last_update),});}}
function getRawValue(record,fieldName){const field=record.fields[fieldName];const value=record.data[fieldName];switch(field.type){case"one2many":case"many2many":{return value.count?value.currentIds:[];}
case"many2one":{return(value&&value[0])||false;}
case"date":case"datetime":{return value&&value.toISO();}
default:{return value;}}}
function getValue(record,fieldName){const field=record.fields[fieldName];const value=record.data[fieldName];const formatter=formatters.get(field.type,String);return formatter(value,{field,data:record.data});}
function isBinSize(value){return/^\d+(\.\d*)? [^0-9]+$/.test(value);}
function isHtmlEmpty(innerHTML=""){const div=Object.assign(document.createElement("div"),{innerHTML});return div.innerText.trim()==="";}
const KanbanRecord=__exports.KanbanRecord=class KanbanRecord extends Component{setup(){this.action=useService("action");this.dialog=useService("dialog");this.notification=useService("notification");this.user=useService("user");const{archInfo,Compiler,templates}=this.props;const{arch}=archInfo;const ViewCompiler=Compiler||this.constructor.Compiler;this.templates=useViewCompiler(ViewCompiler,arch,templates);if(KANBAN_TOOLTIP_ATTRIBUTE in templates){useTooltip("root",{info:this,template:this.templates[KANBAN_TOOLTIP_ATTRIBUTE],});}
this.createRecordAndWidget(this.props);this.rootRef=useRef("root");onMounted(()=>{this.allowGlobalClick=!!this.rootRef.el.querySelector(ALLOW_GLOBAL_CLICK);});onWillUpdateProps(this.createRecordAndWidget);}
getFormattedValue(fieldName){const{archInfo,record}=this.props;const{rawAttrs}=archInfo.activeFields[fieldName];return getFormattedValue(record,fieldName,rawAttrs);}
createRecordAndWidget(props){const{archInfo,list,record}=props;const{activeActions}=archInfo;this.record=Object.create(null);for(const fieldName in record.data){this.record[fieldName]={get value(){return getValue(record,fieldName);},get raw_value(){return getRawValue(record,fieldName);},};}
const deletable=activeActions.delete&&(!list.groupedBy||!list.groupedBy("m2m"));const editable=activeActions.edit;this.widget={deletable,editable,isHtmlEmpty,};}
evalDomainFromRecord(record,expr){return evalDomain(expr,record.evalContext);}
getRecordClasses(){const{archInfo,canResequence,forceGlobalClick,group,record}=this.props;const classes=["o_kanban_record d-flex"];if(canResequence){classes.push("o_record_draggable");}
if(forceGlobalClick||archInfo.openAction){classes.push("oe_kanban_global_click");}
if(group&&record.model.hasProgressBars){const progressBar=group.findProgressValueFromRecord(record);classes.push(`oe_kanban_card_${progressBar.color}`);}
if(archInfo.cardColorField){const value=record.data[archInfo.cardColorField];classes.push(getColorClass(value));}
if(!this.props.list.isGrouped){classes.push("flex-grow-1 flex-md-shrink-1 flex-shrink-0");}
return classes.join(" ");}
onGlobalClick(ev){if(ev.target.closest(CANCEL_GLOBAL_CLICK)){return;}
const{archInfo,forceGlobalClick,openRecord,record}=this.props;if(!forceGlobalClick&&archInfo.openAction){this.action.doActionButton({name:archInfo.openAction.action,type:archInfo.openAction.type,resModel:record.resModel,resId:record.resId,resIds:record.resIds,context:record.context,onClose:async()=>{await record.model.root.load();record.model.notify();},});}else if(forceGlobalClick||this.allowGlobalClick){openRecord(record);}}
async selectColor(colorIndex){const{archInfo,record}=this.props;await record.update({[archInfo.colorField]:colorIndex});await record.save();}
triggerAction(params){const env=this.env;const{archInfo,group,list,openRecord,record}=this.props;const{type}=params;switch(type){case"edit":{return openRecord(record,"edit");}
case"open":{return openRecord(record);}
case"delete":{const listOrGroup=group||list;if(listOrGroup.deleteRecords){this.dialog.add(ConfirmationDialog,{body:env._t("Are you sure you want to delete this record?"),confirm:()=>listOrGroup.deleteRecords([record]),cancel:()=>{},});}else{listOrGroup.removeRecord(record);}
return;}
case"set_cover":{const{autoOpen,fieldName}=params;const{widget}=archInfo.fieldNodes[fieldName];const field=record.fields[fieldName];if(field.type==="many2one"&&field.relation==="ir.attachment"&&widget==="attachment_image"){this.dialog.add(KanbanCoverImageDialog,{autoOpen,fieldName,record});}else{const warning=sprintf(env._t(`Could not set the cover image: incorrect field ("%s") is provided in the view.`),fieldName);this.notification.add({title:warning,type:"danger"});}
break;}
default:{return this.notification.add(env._t("Kanban: no action for type: ")+type,{type:"danger",});}}}
get context(){return this.props.record.context;}
get luxon(){return luxon;}
get JSON(){return JSON;}
get read_only_mode(){return this.props.readonly;}
get selection_mode(){return this.props.forceGlobalClick;}
get user_context(){return this.user.context;}
kanban_color(){return getColorClass(...arguments);}
kanban_getcolor(){return getColorIndex(...arguments);}
kanban_getcolorname(){return getColorName(...arguments);}
kanban_image(){return getImageSrcFromRecordInfo(this.props.record,...arguments);}}
KanbanRecord.components={Dropdown,DropdownItem,KanbanDropdownMenuWrapper,Field,KanbanCoverImageDialog,ViewButton,Widget,};KanbanRecord.defaultProps={colors:COLORS,openRecord:()=>{},};KanbanRecord.props=["archInfo","canResequence?","colors?","Compiler?","forceGlobalClick?","group?","list","openRecord?","readonly?","record","templates",];KanbanRecord.Compiler=KanbanCompiler;KanbanRecord.KANBAN_BOX_ATTRIBUTE=KANBAN_BOX_ATTRIBUTE;KanbanRecord.template="web.KanbanRecord";return __exports;});;

/* /web/static/src/views/kanban/kanban_record_quick_create.js */
odoo.define('@web/views/kanban/kanban_record_quick_create',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{FormRenderer}=require("@web/views/form/form_renderer");const{Component,onMounted,useExternalListener,useState,useRef}=require("@odoo/owl");const ACTION_SELECTORS=[".o_kanban_quick_add",".o_kanban_load_more button",".o-kanban-button-new",];const KanbanRecordQuickCreate=__exports.KanbanRecordQuickCreate=class KanbanRecordQuickCreate extends Component{setup(){this.uiService=useService("ui");this.rootRef=useRef("root");this.state=useState({disabled:false});onMounted(()=>{this.uiActiveElement=this.uiService.activeElement;});useExternalListener(window,"mousedown",(ev)=>{this.mousedownTarget=ev.target;});useExternalListener(window,"click",(ev)=>{if(this.uiActiveElement!==this.uiService.activeElement){return;}
const target=this.mousedownTarget||ev.target;const gotClickedInside=target.closest(".daterangepicker")||target.closest(".ui-autocomplete")||this.rootRef.el.contains(target);if(!gotClickedInside){let force=false;for(const selector of ACTION_SELECTORS){const closestEl=target.closest(selector);if(closestEl){force=true;break;}}
this.cancel(force);}
this.mousedownTarget=null;},{capture:true});useHotkey("enter",()=>this.validate("add"),{bypassEditableProtection:true});useHotkey("escape",()=>this.cancel(true));}
cancel(force){if(this.state.disabled){return;}
this.props.onCancel(force);}
async validate(mode){if(this.state.disabled){return;}
this.state.disabled=true;await this.props.onValidate(mode);this.state.disabled=false;}}
KanbanRecordQuickCreate.template="web.KanbanRecordQuickCreate";KanbanRecordQuickCreate.components={FormRenderer};return __exports;});;

/* /web/static/src/views/kanban/kanban_renderer.js */
odoo.define('@web/views/kanban/kanban_renderer',async function(require){'use strict';let __exports={};const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{RPCError}=require("@web/core/network/rpc_service");const{registry}=require("@web/core/registry");const{useBus,useService}=require("@web/core/utils/hooks");const{useSortable}=require("@web/core/utils/sortable");const{sprintf}=require("@web/core/utils/strings");const{session}=require("@web/session");const{isAllowedDateField}=require("@web/views/relational_model");const{isNull,isRelational}=require("@web/views/utils");const{FormViewDialog}=require("@web/views/view_dialogs/form_view_dialog");const{useBounceButton}=require("@web/views/view_hook");const{KanbanAnimatedNumber}=require("@web/views/kanban/kanban_animated_number");const{KanbanColumnQuickCreate}=require("@web/views/kanban/kanban_column_quick_create");const{KanbanRecord}=require("@web/views/kanban/kanban_record");const{KanbanRecordQuickCreate}=require("@web/views/kanban/kanban_record_quick_create");const{Component,useState,useRef,onPatched,onWillPatch,onWillDestroy}=require("@odoo/owl");const DRAGGABLE_GROUP_TYPES=["many2one"];const MOVABLE_RECORD_TYPES=["char","boolean","integer","selection","many2one"];function validateColumnQuickCreateExamples(data){const{allowedGroupBys=[],examples=[]}=data;if(!allowedGroupBys.length){throw new Error("The example data must contain an array of allowed groupbys");}
if(!examples.length){throw new Error("The example data must contain an array of examples");}}
const KanbanRenderer=__exports.KanbanRenderer=class KanbanRenderer extends Component{setup(){this.dialogClose=[];this.state=useState({columnQuickCreateIsFolded:!this.props.list.isGrouped||this.props.list.groups.length>0,});this.dialog=useService("dialog");this.exampleData=registry.category("kanban_examples").get(this.props.archInfo.examples,null);if(this.exampleData){validateColumnQuickCreateExamples(this.exampleData);}
this.ghostColumns=this.generateGhostColumns();let dataRecordId;let dataGroupId;const rootRef=useRef("root");if(this.canUseSortable){useSortable({enable:()=>this.canResequenceRecords,ref:rootRef,elements:".o_record_draggable",ignore:".dropdown",groups:()=>this.props.list.isGrouped&&".o_kanban_group",connectGroups:()=>this.canMoveRecords,cursor:"move",onDragStart:(params)=>{const{element,group}=params;dataRecordId=element.dataset.id;dataGroupId=group&&group.dataset.id;return this.sortStart(params);},onDragEnd:(params)=>this.sortStop(params),onGroupEnter:(params)=>this.sortRecordGroupEnter(params),onGroupLeave:(params)=>this.sortRecordGroupLeave(params),onDrop:(params)=>this.sortRecordDrop(dataRecordId,dataGroupId,params),});useSortable({enable:()=>this.canResequenceGroups,ref:rootRef,elements:".o_group_draggable",handle:".o_column_title",cursor:"move",onDragStart:(params)=>{const{element}=params;dataGroupId=element.dataset.id;return this.sortStart(params);},onDragEnd:(params)=>this.sortStop(params),onDrop:(params)=>this.sortGroupDrop(dataGroupId,params),});}
useBounceButton(rootRef,(clickedEl)=>{if(!this.props.list.count||this.props.list.model.useSampleModel){return clickedEl.matches([".o_kanban_renderer",".o_kanban_group",".o_kanban_header",".o_column_quick_create",".o_view_nocontent_smiling_face",].join(", "));}
return false;});onWillDestroy(()=>{this.dialogClose.forEach((close)=>close());});if(this.env.searchModel){useBus(this.env.searchModel,"focus-view",()=>{const{model}=this.props.list;if(model.useSampleModel||!model.hasData()){return;}
const firstCard=rootRef.el.querySelector(".o_kanban_record");if(firstCard){firstCard.focus();}});}
useHotkey("Enter",({target})=>{if(!target.classList.contains("o_kanban_record")){return;}
const firstLink=target.querySelector(".oe_kanban_global_click, a, button");if(firstLink&&firstLink instanceof HTMLElement){firstLink.click();}
return;},{area:()=>rootRef.el});const arrowsOptions={area:()=>rootRef.el,allowRepeat:true};if(this.env.searchModel){useHotkey("ArrowUp",({area})=>{if(!this.focusNextCard(area,"up")){this.env.searchModel.trigger("focus-search");}},arrowsOptions);}
useHotkey("ArrowDown",({area})=>this.focusNextCard(area,"down"),arrowsOptions);useHotkey("ArrowLeft",({area})=>this.focusNextCard(area,"left"),arrowsOptions);useHotkey("ArrowRight",({area})=>this.focusNextCard(area,"right"),arrowsOptions);let previousScrollTop=0;onWillPatch(()=>{previousScrollTop=rootRef.el.scrollTop;});onPatched(()=>{rootRef.el.scrollTop=previousScrollTop;});}
get canUseSortable(){return!this.env.isSmall;}
get canMoveRecords(){if(!this.canResequenceRecords){return false;}
if(!this.props.list.groupByField){return true;}
const{groupByField,fields}=this.props.list;const{modifiers,type}=groupByField;return Boolean(!(modifiers&&"readonly"in modifiers?modifiers.readonly:fields[groupByField.name].readonly)&&(isAllowedDateField(groupByField)||MOVABLE_RECORD_TYPES.includes(type)));}
get canResequenceGroups(){if(!this.props.list.isGrouped){return false;}
const{groupByField,fields}=this.props.list;const{modifiers,type}=groupByField;const{groupsDraggable}=this.props.archInfo;return(groupsDraggable&&!(modifiers&&"readonly"in modifiers?modifiers.readonly:fields[groupByField.name].readonly)&&DRAGGABLE_GROUP_TYPES.includes(type));}
get canResequenceRecords(){const{isGrouped,orderBy}=this.props.list;const{handleField,recordsDraggable}=this.props.archInfo;return Boolean(recordsDraggable&&(isGrouped||(handleField&&(!orderBy[0]||orderBy[0].name===handleField))));}
get showNoContentHelper(){const{model,isGrouped,groups}=this.props.list;if(model.useSampleModel){return true;}
if(isGrouped){if(this.canCreateGroup()&&!this.state.columnQuickCreateIsFolded){return false;}
if(groups.length===0){return!this.props.list.groupedBy("m2o");}}
return!model.hasData();}
getGroupsOrRecords(){const{list}=this.props;if(list.isGrouped){return list.groups.sort((a,b)=>(a.value&&!b.value?1:!a.value&&b.value?-1:0)).map((group,i)=>({group,key:isNull(group.value)?`group_key_${i}`:String(group.value),}));}else{return list.records.map((record)=>({record,key:record.id}));}}
getGroupName({groupByField,count,displayName,isFolded}){let name=displayName;if(groupByField.type==="boolean"){name=name?this.env._t("Yes"):this.env._t("No");}else if(!name){if(isRelational(groupByField)||groupByField.type==="date"||groupByField.type==="datetime"||isNull(name)){name=this.env._t("None");}}
return!this.env.isSmall&&isFolded?`${name} (${count})`:name;}
getGroupClasses(group){const classes=[];if(this.canResequenceGroups&&group.value){classes.push("o_group_draggable");}
if(!group.count){classes.push("o_kanban_no_records");}
if(!this.env.isSmall&&group.isFolded){classes.push("o_column_folded");}
if(!group.isFolded&&!group.hasActiveProgressValue){classes.push("bg-100");}
if(group.progressBars.length){classes.push("o_kanban_has_progressbar");if(!group.isFolded&&group.hasActiveProgressValue){const progressBar=group.activeProgressBar;classes.push("o_kanban_group_show",`o_kanban_group_show_${progressBar.color}`);}}
return classes.join(" ");}
getGroupUnloadedCount(group){const progressBar=group.activeProgressBar;const records=group.getAggregableRecords();return(progressBar?progressBar.count:group.count)-records.length;}
getGroupAggregate(group){const{sumField}=this.props.list.model.progressAttributes;const value=group.getAggregates(sumField&&sumField.name);const title=sumField?sumField.string:this.env._t("Count");let currency=false;if(sumField&&value&&sumField.currency_field){currency=session.currencies[session.company_currency_id];}
return{value,currency,title};}
generateGhostColumns(){let colNames;if(this.exampleData&&this.exampleData.ghostColumns){colNames=this.exampleData.ghostColumns;}else{colNames=[1,2,3,4].map((num)=>sprintf(this.env._t("Column %s"),num));}
return colNames.map((colName)=>({name:colName,cards:new Array(Math.floor(Math.random()*4)+2),}));}
canArchiveGroup(group){const{activeActions}=this.props.archInfo;const hasActiveField="active"in group.fields;return activeActions.archiveGroup&&hasActiveField&&!this.props.list.groupedBy("m2m");}
canCreateGroup(){const{activeActions}=this.props.archInfo;return activeActions.createGroup&&this.props.list.groupedBy("m2o");}
canDeleteGroup(group){const{activeActions}=this.props.archInfo;const{groupByField}=this.props.list;return activeActions.deleteGroup&&isRelational(groupByField)&&group.value;}
canDeleteRecord(){const{activeActions}=this.props.archInfo;return(activeActions.delete&&(!this.props.list.groupedBy||!this.props.list.groupedBy("m2m")));}
canEditGroup(group){const{activeActions}=this.props.archInfo;const{groupByField}=this.props.list;return activeActions.editGroup&&isRelational(groupByField)&&group.value;}
canEditRecord(){return this.props.archInfo.activeActions.edit;}
canQuickCreate(){return this.props.archInfo.activeActions.quickCreate&&this.props.list.canQuickCreate();}
quickCreate(group){return this.props.list.quickCreate(group);}
async validateQuickCreate(mode,group){const values=group.quickCreateRecord.data;let record=group.quickCreateRecord;try{record=await group.validateQuickCreate(record,mode);}catch(e){if(!(e instanceof RPCError)){throw e;}
const context={...group.context};context[`default_${group.groupByField.name}`]=group.value;context.default_name=values.name||values.display_name;this.dialogClose.push(this.dialog.add(FormViewDialog,{resModel:this.props.list.resModel,context,title:this.env._t("Create"),onRecordSaved:async(record)=>{await group.addExistingRecord(record.resId,true);},},{onClose:()=>{this.props.list.quickCreate(group);},}));}
if(mode==="edit"&&record){await this.props.openRecord(record,"edit");}}
toggleGroup(group){return group.toggle();}
loadMore(group){return group.list.loadMore();}
editGroup(group){this.dialogClose.push(this.dialog.add(FormViewDialog,{context:group.context,resId:group.value,resModel:group.resModel,title:sprintf(this.env._t("Edit: %s"),group.displayName),onRecordSaved:async()=>{await this.props.list.load();this.props.list.model.notify();},}));}
archiveGroup(group){this.dialog.add(ConfirmationDialog,{body:this.env._t("Are you sure that you want to archive all the records from this column?"),confirm:()=>group.list.archive(),cancel:()=>{},});}
unarchiveGroup(group){group.list.unarchive();}
deleteGroup(group){this.dialog.add(ConfirmationDialog,{body:this.env._t("Are you sure you want to delete this column?"),confirm:async()=>{await this.props.list.deleteGroups([group]);if(this.props.list.groups.length===0){this.state.columnQuickCreateIsFolded=false;}},cancel:()=>{},});}
onGroupClick(group){if(!this.env.isSmall&&group.isFolded){group.toggle();}}
async sortGroupDrop(dataGroupId,{element,previous}){element.classList.remove("o_group_draggable");const refId=previous?previous.dataset.id:null;await this.props.list.resequence(dataGroupId,refId);element.classList.add("o_group_draggable");}
async sortRecordDrop(dataRecordId,dataGroupId,{element,parent,previous}){element.classList.remove("o_record_draggable");if(!this.props.list.isGrouped||parent.classList.contains("o_kanban_hover")||parent.dataset.id===element.parentElement.dataset.id){parent&&parent.classList&&parent.classList.remove("o_kanban_hover");while(previous&&!previous.dataset.id){previous=previous.previousElementSibling;}
const refId=previous?previous.dataset.id:null;const targetGroupId=parent&&parent.dataset.id;await this.props.list.moveRecord(dataRecordId,dataGroupId,refId,targetGroupId);}
element.classList.add("o_record_draggable");}
sortRecordGroupEnter({group}){group.classList.add("o_kanban_hover");}
sortRecordGroupLeave({group}){group.classList.remove("o_kanban_hover");}
sortStart({element}){element.classList.add("o_dragged","shadow");}
sortStop({element,group}){element.classList.remove("o_dragged","shadow");if(group){group.classList.remove("o_kanban_hover");}}
focusNextCard(area,direction){const{isGrouped}=this.props.list;const closestCard=document.activeElement.closest(".o_kanban_record");if(!closestCard){return;}
const groups=isGrouped?[...area.querySelectorAll(".o_kanban_group")]:[area];const cards=[...groups].map((group)=>[...group.querySelectorAll(".o_kanban_record")]).filter((group)=>group.length);let iGroup;let iCard;for(iGroup=0;iGroup<cards.length;iGroup++){const i=cards[iGroup].indexOf(closestCard);if(i!==-1){iCard=i;break;}}
let nextCard;switch(direction){case"down":nextCard=iCard<cards[iGroup].length-1&&cards[iGroup][iCard+1];break;case"up":nextCard=iCard>0&&cards[iGroup][iCard-1];break;case"right":if(isGrouped){nextCard=iGroup<cards.length-1&&cards[iGroup+1][0];}else{nextCard=iCard<cards[0].length-1&&cards[0][iCard+1];}
break;case"left":if(isGrouped){nextCard=iGroup>0&&cards[iGroup-1][0];}else{nextCard=iCard>0&&cards[0][iCard-1];}
break;}
if(nextCard&&nextCard instanceof HTMLElement){nextCard.focus();return true;}}
tooltipAttributes(group){if(!group.tooltip.length){return{};}
return{"data-tooltip-template":"web.KanbanGroupTooltip","data-tooltip-info":JSON.stringify({entries:group.tooltip}),};}}
KanbanRenderer.props=["archInfo","Compiler?","list","openRecord","readonly","forceGlobalClick?","noContentHelp?",];KanbanRenderer.components={Dropdown,DropdownItem,KanbanAnimatedNumber,KanbanColumnQuickCreate,KanbanRecord,KanbanRecordQuickCreate,};KanbanRenderer.template="web.KanbanRenderer";return __exports;});;

/* /web/static/src/views/kanban/kanban_view.js */
odoo.define('@web/views/kanban/kanban_view',async function(require){'use strict';let __exports={};const{KanbanArchParser}=require("@web/views/kanban/kanban_arch_parser");const{KanbanCompiler}=require("@web/views/kanban/kanban_compiler");const{KanbanController}=require("@web/views/kanban/kanban_controller");const{KanbanModel}=require("@web/views/kanban/kanban_model");const{KanbanRenderer}=require("@web/views/kanban/kanban_renderer");const{registry}=require("@web/core/registry");const kanbanView=__exports.kanbanView={type:"kanban",display_name:"Kanban",icon:"oi oi-view-kanban",isMobileFriendly:true,multiRecord:true,ArchParser:KanbanArchParser,Controller:KanbanController,Model:KanbanModel,Renderer:KanbanRenderer,Compiler:KanbanCompiler,buttonTemplate:"web.KanbanView.Buttons",props:(genericProps,view)=>{const{arch,relatedModels,resModel}=genericProps;const{ArchParser}=view;const archInfo=new ArchParser().parse(arch,relatedModels,resModel);const defaultGroupBy=genericProps.searchMenuTypes.includes("groupBy")&&archInfo.defaultGroupBy;return{...genericProps,Model:view.Model,Renderer:view.Renderer,buttonTemplate:view.buttonTemplate,archInfo,defaultGroupBy,};},};registry.category("views").add("kanban",kanbanView);return __exports;});;

/* /web/static/src/views/legacy_utils.js */
odoo.define('@web/views/legacy_utils',async function(require){'use strict';let __exports={};const fieldRegistry=require("web.field_registry");const{parseArch}=require("web.viewUtils");const{parse}=require("web.field_utils");const{traverse}=require("web.utils");const{serializeDate,serializeDateTime}=require("@web/core/l10n/dates");const{date:parseDate,datetime:parseDateTime}=parse;__exports.mapWowlValueToLegacy=mapWowlValueToLegacy;function mapWowlValueToLegacy(value,type){switch(type){case"date":return value?parseDate(serializeDate(value),null,{isUTC:true}):false;case"datetime":return value?parseDateTime(serializeDateTime(value),null,{isUTC:true}):false;case"many2one":return value?{id:value[0],display_name:value[1]}:false;case"reference":return value?{id:value.resId,display_name:value.displayName,model:value.resModel}:false;case"one2many":case"many2many":if(value.operation==="REPLACE_WITH"){return{operation:"REPLACE_WITH",ids:value.resIds};}
return value;default:return value;}}
__exports.mapViews=mapViews;function mapViews(views,env){const res={};for(const[viewType,viewDescr]of Object.entries(views||{})){const arch=parseArch(viewDescr.__rawArch);traverse(arch,function(node){if(typeof node==="string"){return false;}
node.attrs.modifiers=node.attrs.modifiers?JSON.parse(node.attrs.modifiers):{};return true;});const fields={};for(const f in viewDescr.activeFields){fields[f]=viewDescr.fields[f];}
res[viewType]={arch,fields,type:viewType,fieldsInfo:mapActiveFieldsToFieldsInfo(viewDescr.activeFields,fields,viewType,env),};for(const fieldName in res[viewType].fieldsInfo[viewType]){if(!res[viewType].fields[fieldName]){res[viewType].fields[fieldName]={name:fieldName,type:res[viewType].fieldsInfo[viewType][fieldName].type,};}}}
return res;}
__exports.mapActiveFieldsToFieldsInfo=mapActiveFieldsToFieldsInfo;function mapActiveFieldsToFieldsInfo(activeFields,fields,viewType,env){const fieldsInfo={};fieldsInfo[viewType]={};for(const[fieldName,fieldDescr]of Object.entries(activeFields)){const views=mapViews(fieldDescr.views,env);const field=fields[fieldName];let Widget;if(fieldDescr.widget){Widget=fieldRegistry.getAny([`${viewType}.${fieldDescr.widget}`,fieldDescr.widget]);}else{Widget=fieldRegistry.getAny([`${viewType}.${field.type}`,field.type]);}
Widget=Widget||fieldRegistry.get("abstract");let domain;if(fieldDescr.domain){domain=fieldDescr.domain.toString();}
let mode=fieldDescr.viewMode;if(mode&&mode.split(",").length!==1){mode=env.isSmall?"kanban":"list";}
const FieldComponent=fieldDescr.FieldComponent;const fieldInfo={Widget,specialData:FieldComponent&&FieldComponent.legacySpecialData,domain,context:fieldDescr.context,fieldDependencies:{},force_save:fieldDescr.forceSave,mode,modifiers:fieldDescr.modifiers,name:fieldName,options:fieldDescr.options,views,widget:fieldDescr.widget,__WOWL_FIELD_DESCR__:fieldDescr,};if(FieldComponent&&FieldComponent.limit){fieldInfo.limit=FieldComponent.limit;}
if(fieldDescr.modifiers&&fieldDescr.modifiers.invisible===true){fieldInfo.__no_fetch=true;}
if(!fieldInfo.__no_fetch&&FieldComponent&&FieldComponent.fieldsToFetch){fieldInfo.relatedFields={...FieldComponent.fieldsToFetch};fieldInfo.viewType="default";const defaultView={};for(const fieldName of Object.keys(FieldComponent.fieldsToFetch)){defaultView[fieldName]={};if(fieldDescr.fieldsToFetch[fieldName]){defaultView[fieldName].__WOWL_FIELD_DESCR__=fieldDescr.fieldsToFetch[fieldName];}}
fieldInfo.fieldsInfo={default:defaultView};const colorField=fieldInfo.options&&fieldInfo.options.color_field;if(colorField){fieldInfo.relatedFields[colorField]={type:"integer"};fieldInfo.fieldsInfo.default[colorField]={};if(fieldDescr.fieldsToFetch[colorField]){fieldInfo.fieldsInfo.default[colorField].__WOWL_FIELD_DESCR__=fieldDescr.fieldsToFetch[colorField];}}}
if(fieldDescr.views&&fieldDescr.views[fieldDescr.viewMode]){fieldInfo.limit=fieldDescr.views[fieldDescr.viewMode].limit||40;fieldInfo.orderedBy=fieldDescr.views[fieldDescr.viewMode].defaultOrder;}
if(fieldDescr.onChange&&!fields[fieldName].onChange){fields[fieldName].onChange="1";}
fieldsInfo[viewType][fieldName]=fieldInfo;}
return fieldsInfo;}
return __exports;});;

/* /web/static/src/views/list/list_arch_parser.js */
odoo.define('@web/views/list/list_arch_parser',async function(require){'use strict';let __exports={};const{addFieldDependencies,archParseBoolean,getActiveActions,getDecoration,processButton,stringToOrderBy,}=require("@web/views/utils");const{Field}=require("@web/views/fields/field");const{XMLParser}=require("@web/core/utils/xml");const{Widget}=require("@web/views/widgets/widget");const{encodeObjectForTemplate}=require("@web/views/view_compiler");const GroupListArchParser=__exports.GroupListArchParser=class GroupListArchParser extends XMLParser{parse(arch,models,modelName,jsClass){const fieldNodes={};const buttons=[];let buttonId=0;this.visitXML(arch,(node)=>{if(node.tagName==="button"){buttons.push({...processButton(node),id:buttonId++,});return false;}else if(node.tagName==="field"){const fieldInfo=Field.parseFieldNode(node,models,modelName,"list",jsClass);fieldNodes[fieldInfo.name]=fieldInfo;node.setAttribute("field_id",fieldInfo.name);return false;}});return{fieldNodes,buttons};}}
const ListArchParser=__exports.ListArchParser=class ListArchParser extends XMLParser{isColumnVisible(columnInvisibleModifier){return columnInvisibleModifier!==true;}
parseFieldNode(node,models,modelName){return Field.parseFieldNode(node,models,modelName,"list");}
parseWidgetNode(node,models,modelName){return Widget.parseWidgetNode(node);}
processButton(node){return processButton(node);}
parse(arch,models,modelName){const xmlDoc=this.parseXML(arch);const fieldNodes={};const columns=[];const fields=models[modelName];let buttonId=0;const groupBy={buttons:{},fields:{},};let headerButtons=[];const creates=[];const groupListArchParser=new GroupListArchParser();let buttonGroup;let handleField=null;let defaultOrder=stringToOrderBy(xmlDoc.getAttribute("default_order")||null);const treeAttr={};let nextId=0;const activeFields={};this.visitXML(arch,(node)=>{if(node.tagName!=="button"){buttonGroup=undefined;}
if(node.tagName==="button"){const modifiers=JSON.parse(node.getAttribute("modifiers")||"{}");if(this.isColumnVisible(modifiers.column_invisible)){const button={...this.processButton(node),defaultRank:"btn-link",type:"button",id:buttonId++,};if(buttonGroup){buttonGroup.buttons.push(button);}else{buttonGroup={id:`column_${nextId++}`,type:"button_group",buttons:[button],hasLabel:false,};columns.push(buttonGroup);}}}else if(node.tagName==="field"){const fieldInfo=this.parseFieldNode(node,models,modelName);fieldNodes[fieldInfo.name]=fieldInfo;node.setAttribute("field_id",fieldInfo.name);if(fieldInfo.widget==="handle"){handleField=fieldInfo.name;}
addFieldDependencies(activeFields,models[modelName],fieldInfo.FieldComponent.fieldDependencies);if(this.isColumnVisible(fieldInfo.modifiers.column_invisible)){const label=fieldInfo.FieldComponent.label;columns.push({...fieldInfo,id:`column_${nextId++}`,className:node.getAttribute("class"),optional:node.getAttribute("optional")||false,type:"field",hasLabel:!(fieldInfo.noLabel||fieldInfo.FieldComponent.noLabel),label:(fieldInfo.widget&&label&&label.toString())||fieldInfo.string,});}
return false;}else if(node.tagName==="widget"){const widgetInfo=this.parseWidgetNode(node);addFieldDependencies(activeFields,models[modelName],widgetInfo.WidgetComponent.fieldDependencies);const widgetProps={...widgetInfo,node:encodeObjectForTemplate({attrs:widgetInfo.rawAttrs}).slice(1,-1),className:node.getAttribute("class"),};columns.push({...widgetInfo,props:widgetProps,id:`column_${nextId++}`,type:"widget",});}else if(node.tagName==="groupby"&&node.getAttribute("name")){const fieldName=node.getAttribute("name");const xmlSerializer=new XMLSerializer();const groupByArch=xmlSerializer.serializeToString(node);const coModelName=fields[fieldName].relation;const groupByArchInfo=groupListArchParser.parse(groupByArch,models,coModelName);groupBy.buttons[fieldName]=groupByArchInfo.buttons;groupBy.fields[fieldName]={activeFields:groupByArchInfo.fieldNodes,fieldNodes:groupByArchInfo.fieldNodes,fields:models[coModelName],};return false;}else if(node.tagName==="header"){headerButtons=[...node.children].map((node)=>({...processButton(node),type:"button",id:buttonId++,})).filter((button)=>button.modifiers.invisible!==true);return false;}else if(node.tagName==="control"){for(const childNode of node.children){if(childNode.tagName==="button"){creates.push({type:"button",...processButton(childNode),});}else if(childNode.tagName==="create"){creates.push({type:"create",context:childNode.getAttribute("context"),string:childNode.getAttribute("string"),});}}
return false;}else if(["tree","list"].includes(node.tagName)){const activeActions={...getActiveActions(xmlDoc),exportXlsx:archParseBoolean(xmlDoc.getAttribute("export_xlsx"),true),};treeAttr.activeActions=activeActions;treeAttr.className=xmlDoc.getAttribute("class")||null;treeAttr.editable=activeActions.edit?xmlDoc.getAttribute("editable"):false;treeAttr.multiEdit=activeActions.edit?archParseBoolean(node.getAttribute("multi_edit")||""):false;const limitAttr=node.getAttribute("limit");treeAttr.limit=limitAttr&&parseInt(limitAttr,10);const countLimitAttr=node.getAttribute("count_limit");treeAttr.countLimit=countLimitAttr&&parseInt(countLimitAttr,10);const groupsLimitAttr=node.getAttribute("groups_limit");treeAttr.groupsLimit=groupsLimitAttr&&parseInt(groupsLimitAttr,10);treeAttr.noOpen=archParseBoolean(node.getAttribute("no_open")||"");treeAttr.rawExpand=xmlDoc.getAttribute("expand");treeAttr.decorations=getDecoration(xmlDoc);const action=xmlDoc.getAttribute("action");const type=xmlDoc.getAttribute("type");treeAttr.openAction=action&&type?{action,type}:null;}});if(!defaultOrder.length&&handleField){defaultOrder=stringToOrderBy(handleField);}
for(const[key,field]of Object.entries(fieldNodes)){activeFields[key]=field;}
return{creates,handleField,headerButtons,fieldNodes,activeFields,columns,groupBy,defaultOrder,__rawArch:arch,...treeAttr,};}}
return __exports;});;

/* /web/static/src/views/list/list_confirmation_dialog.js */
odoo.define('@web/views/list/list_confirmation_dialog',async function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{_lt}=require("@web/core/l10n/translation");const{Field}=require("@web/views/fields/field");const{useAutofocus}=require("@web/core/utils/hooks");const{Component}=require("@odoo/owl");const ListConfirmationDialog=__exports.ListConfirmationDialog=class ListConfirmationDialog extends Component{setup(){useAutofocus();}
_cancel(){if(this.props.cancel){this.props.cancel();}
this.props.close();}
async _confirm(){if(this.props.confirm){await this.props.confirm();}
this.props.close();}}
ListConfirmationDialog.template="web.ListView.ConfirmationModal";ListConfirmationDialog.components={Dialog,Field};ListConfirmationDialog.props={close:Function,title:{validate:(m)=>{return(typeof m==="string"||(typeof m==="object"&&typeof m.toString==="function"));},optional:true,},confirm:{type:Function,optional:true},cancel:{type:Function,optional:true},isDomainSelected:Boolean,fields:Object,nbRecords:Number,nbValidRecords:Number,record:Object,fieldNodes:Object,};ListConfirmationDialog.defaultProps={title:_lt("Confirmation"),};return __exports;});;

/* /web/static/src/views/list/list_controller.js */
odoo.define('@web/views/list/list_controller',async function(require){'use strict';let __exports={};const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{download}=require("@web/core/network/download");const{evaluateExpr}=require("@web/core/py_js/py");const{DynamicRecordList}=require("@web/views/relational_model");const{unique}=require("@web/core/utils/arrays");const{useService}=require("@web/core/utils/hooks");const{sprintf}=require("@web/core/utils/strings");const{ActionMenus}=require("@web/search/action_menus/action_menus");const{Layout}=require("@web/search/layout");const{usePager}=require("@web/search/pager_hook");const{session}=require("@web/session");const{useModel}=require("@web/views/model");const{standardViewProps}=require("@web/views/standard_view_props");const{useSetupView}=require("@web/views/view_hook");const{ViewButton}=require("@web/views/view_button/view_button");const{useViewButtons}=require("@web/views/view_button/view_button_hook");const{ExportDataDialog}=require("@web/views/view_dialogs/export_data_dialog");const{Component,onWillStart,useSubEnv,useEffect,useRef}=require("@odoo/owl");const ListViewHeaderButton=__exports.ListViewHeaderButton=class ListViewHeaderButton extends ViewButton{async onClick(){const{clickParams,list}=this.props;const resIds=await list.getResIds(true);clickParams.buttonContext={active_domain:this.props.domain,active_ids:resIds,active_model:list.resModel,};this.env.onClickViewButton({clickParams,getResParams:()=>({context:list.context,evalContext:list.evalContext,resModel:list.resModel,resIds,}),});}}
ListViewHeaderButton.props=[...ViewButton.props,"list","domain"];const ListController=__exports.ListController=class ListController extends Component{setup(){this.actionService=useService("action");this.dialogService=useService("dialog");this.notificationService=useService("notification");this.userService=useService("user");this.rpc=useService("rpc");this.rootRef=useRef("root");this.archInfo=this.props.archInfo;this.editable=this.props.editable?this.archInfo.editable:false;this.multiEdit=this.archInfo.multiEdit;this.activeActions=this.archInfo.activeActions;const fields=this.props.fields;const{rootState}=this.props.state||{};const{rawExpand}=this.archInfo;this.model=useModel(this.props.Model,{resModel:this.props.resModel,fields,activeFields:this.archInfo.activeFields,fieldNodes:this.archInfo.fieldNodes,handleField:this.archInfo.handleField,viewMode:"list",groupByInfo:this.archInfo.groupBy.fields,limit:this.archInfo.limit||this.props.limit,countLimit:this.archInfo.countLimit,defaultOrder:this.archInfo.defaultOrder,expand:rawExpand?evaluateExpr(rawExpand,this.props.context):false,groupsLimit:this.archInfo.groupsLimit,multiEdit:this.multiEdit,rootState,});onWillStart(async()=>{this.isExportEnable=await this.userService.hasGroup("base.group_allow_export");});this.archiveEnabled="active"in fields?!fields.active.readonly:"x_active"in fields?!fields.x_active.readonly:false;useSubEnv({model:this.model});useViewButtons(this.model,this.rootRef,{beforeExecuteAction:this.beforeExecuteActionButton.bind(this),afterExecuteAction:this.afterExecuteActionButton.bind(this),});useSetupView({rootRef:this.rootRef,beforeLeave:async()=>{const list=this.model.root;const editedRecord=list.editedRecord;if(editedRecord){if(!(await list.unselectRecord(true))){return false;}}},beforeUnload:async(ev)=>{const editedRecord=this.model.root.editedRecord;if(editedRecord){const isValid=await editedRecord.urgentSave();if(!isValid){ev.preventDefault();ev.returnValue="Unsaved changes";}}},getLocalState:()=>{return{rootState:this.model.root.exportState(),};},getOrderBy:()=>{return this.model.root.orderBy;},});usePager(()=>{const list=this.model.root;const{count,hasLimitedCount,isGrouped,limit,offset}=list;return{offset:offset,limit:limit,total:count,onUpdate:async({offset,limit},hasNavigated)=>{if(this.model.root.editedRecord){if(!(await this.model.root.editedRecord.save())){return;}}
await list.load({limit,offset});this.render(true);if(hasNavigated){this.onPageChangeScroll();}},updateTotal:!isGrouped&&hasLimitedCount?()=>list.fetchCount():undefined,};});useEffect(()=>{if(this.props.onSelectionChanged){const resIds=this.model.root.selection.map((record)=>record.resId);this.props.onSelectionChanged(resIds);}},()=>[this.model.root.selection.length]);}
async createRecord({group}={}){const list=(group&&group.list)||this.model.root;if(this.editable&&!list.isGrouped){if(!(list instanceof DynamicRecordList)){throw new Error("List should be a DynamicRecordList");}
if(list.editedRecord){await list.editedRecord.save();}
if(!list.editedRecord){await(group||list).createRecord({},this.editable==="top");}
this.render();}else{await this.props.createRecord();}}
async openRecord(record){if(this.archInfo.openAction){this.actionService.doActionButton({name:this.archInfo.openAction.action,type:this.archInfo.openAction.type,resModel:record.resModel,resId:record.resId,resIds:record.resIds,context:record.context,onClose:async()=>{await record.model.root.load();record.model.notify();},});}else{const activeIds=this.model.root.records.map((datapoint)=>datapoint.resId);this.props.selectRecord(record.resId,{activeIds});}}
onClickCreate(){this.createRecord();}
onClickDiscard(){const editedRecord=this.model.root.editedRecord;if(editedRecord.isVirtual){this.model.root.removeRecord(editedRecord);}else{editedRecord.discard();}}
onClickSave(){this.model.root.editedRecord.save();}
onMouseDownDiscard(mouseDownEvent){const list=this.model.root;list.blockUpdate=true;document.addEventListener("mouseup",(mouseUpEvent)=>{if(mouseUpEvent.target!==mouseDownEvent.target){list.blockUpdate=false;list.multiSave(list.editedRecord);}},{capture:true,once:true});}
onPageChangeScroll(){if(this.rootRef&&this.rootRef.el){this.rootRef.el.querySelector(".o_content").scrollTop=0;}}
getSelectedResIds(){return this.model.root.getResIds(true);}
getActionMenuItems(){const isM2MGrouped=this.model.root.isM2MGrouped;const otherActionItems=[];if(this.isExportEnable){otherActionItems.push({key:"export",description:this.env._t("Export"),callback:()=>this.onExportData(),});}
if(this.archiveEnabled&&!isM2MGrouped){otherActionItems.push({key:"archive",description:this.env._t("Archive"),callback:()=>{const dialogProps={body:this.env._t("Are you sure that you want to archive all the selected records?"),confirmLabel:this.env._t("Archive"),confirm:()=>{this.toggleArchiveState(true);},cancel:()=>{},};this.dialogService.add(ConfirmationDialog,dialogProps);},});otherActionItems.push({key:"unarchive",description:this.env._t("Unarchive"),callback:()=>this.toggleArchiveState(false),});}
if(this.activeActions.delete&&!isM2MGrouped){otherActionItems.push({key:"delete",description:this.env._t("Delete"),callback:()=>this.onDeleteSelectedRecords(),});}
return Object.assign({},this.props.info.actionMenus,{other:otherActionItems});}
async onSelectDomain(){this.model.root.selectDomain(true);if(this.props.onSelectionChanged){const resIds=await this.model.root.getResIds(true);this.props.onSelectionChanged(resIds);}}
get className(){return this.props.className;}
get nbSelected(){return this.model.root.selection.length;}
get isPageSelected(){const root=this.model.root;return root.selection.length===root.records.length;}
get isDomainSelected(){return this.model.root.isDomainSelected;}
get nbTotal(){const list=this.model.root;return list.isGrouped?list.nbTotalRecords:list.count;}
get defaultExportList(){return unique(this.props.archInfo.columns.filter((col)=>col.type==="field").map((col)=>this.props.fields[col.name]).filter((field)=>field.exportable!==false));}
get display(){if(!this.env.isSmall){return this.props.display;}
const{controlPanel}=this.props.display;return{...this.props.display,controlPanel:{...controlPanel,"bottom-right":!this.nbSelected,},};}
async downloadExport(fields,import_compat,format){let ids=false;if(!this.isDomainSelected){const resIds=await this.getSelectedResIds();ids=resIds.length>0&&resIds;}
const exportedFields=fields.map((field)=>({name:field.name||field.id,label:field.label||field.string,store:field.store,type:field.field_type||field.type,}));if(import_compat){exportedFields.unshift({name:"id",label:this.env._t("External ID")});}
await download({data:{data:JSON.stringify({import_compat,context:this.props.context,domain:this.model.root.domain,fields:exportedFields,groupby:this.model.root.groupBy,ids,model:this.model.root.resModel,}),},url:`/web/export/${format}`,});}
async getExportedFields(model,import_compat,parentParams){return await this.rpc("/web/export/get_fields",{...parentParams,model,import_compat,});}
async onExportData(){const dialogProps={context:this.props.context,defaultExportList:this.defaultExportList,download:this.downloadExport.bind(this),getExportedFields:this.getExportedFields.bind(this),root:this.model.root,};this.dialogService.add(ExportDataDialog,dialogProps);}
async onDirectExportData(){await this.downloadExport(this.defaultExportList,false,"xlsx");}
async toggleArchiveState(archive){let resIds;const isDomainSelected=this.model.root.isDomainSelected;const total=this.model.root.count;if(archive){resIds=await this.model.root.archive(true);}else{resIds=await this.model.root.unarchive(true);}
if(isDomainSelected&&resIds.length===session.active_ids_limit&&resIds.length<total){this.notificationService.add(sprintf(this.env._t("Of the %d records selected, only the first %d have been archived/unarchived."),resIds.length,total),{title:this.env._t("Warning")});}}
get deleteConfirmationDialogProps(){const root=this.model.root;const body=root.isDomainSelected||root.selection.length>1?this.env._t("Are you sure you want to delete these records?"):this.env._t("Are you sure you want to delete this record?");return{body,confirm:async()=>{const total=root.count;const resIds=await this.model.root.deleteRecords();this.model.notify();if(root.isDomainSelected&&resIds.length===session.active_ids_limit&&resIds.length<total){this.notificationService.add(sprintf(this.env._t(`Only the first %s records have been deleted (out of %s selected)`),resIds.length,total),{title:this.env._t("Warning")});}},cancel:()=>{},};}
async onDeleteSelectedRecords(){this.dialogService.add(ConfirmationDialog,this.deleteConfirmationDialogProps);}
discardSelection(){this.model.root.records.forEach((record)=>{record.toggleSelection(false);});}
async beforeExecuteActionButton(clickParams){if(clickParams.special!=="cancel"&&this.model.root.editedRecord){return this.model.root.editedRecord.save();}}
async afterExecuteActionButton(clickParams){}}
ListController.template=`web.ListView`;ListController.components={ActionMenus,ListViewHeaderButton,Layout,ViewButton};ListController.props={...standardViewProps,allowSelectors:{type:Boolean,optional:true},editable:{type:Boolean,optional:true},onSelectionChanged:{type:Function,optional:true},showButtons:{type:Boolean,optional:true},Model:Function,Renderer:Function,buttonTemplate:String,archInfo:Object,};ListController.defaultProps={allowSelectors:true,createRecord:()=>{},editable:true,selectRecord:()=>{},showButtons:true,};return __exports;});;

/* /web/static/src/views/list/list_renderer.js */
odoo.define('@web/views/list/list_renderer',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{CheckBox}=require("@web/core/checkbox/checkbox");const{Domain}=require("@web/core/domain");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{getActiveHotkey}=require("@web/core/hotkeys/hotkey_service");const{Pager}=require("@web/core/pager/pager");const{evaluateExpr}=require("@web/core/py_js/py");const{registry}=require("@web/core/registry");const{useBus,useService}=require("@web/core/utils/hooks");const{useSortable}=require("@web/core/utils/sortable");const{getTabableElements}=require("@web/core/utils/ui");const{Field}=require("@web/views/fields/field");const{getTooltipInfo}=require("@web/views/fields/field_tooltip");const{getClassNameFromDecoration}=require("@web/views/utils");const{ViewButton}=require("@web/views/view_button/view_button");const{useBounceButton}=require("@web/views/view_hook");const{Widget}=require("@web/views/widgets/widget");const{getFormattedValue}=require("@web/views/utils");const{localization}=require("@web/core/l10n/localization");const{Component,onMounted,onPatched,onWillPatch,onWillUpdateProps,useExternalListener,useRef,useState,useEffect,}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const formatters=registry.category("formatters");const DEFAULT_GROUP_PAGER_COLSPAN=1;const FIELD_CLASSES={char:"o_list_char",float:"o_list_number",integer:"o_list_number",monetary:"o_list_number",text:"o_list_text",many2one:"o_list_many2one",};const FIXED_FIELD_COLUMN_WIDTHS={boolean:"70px",date:"92px",datetime:"146px",float:"92px",integer:"74px",monetary:"104px",handle:"33px",};function containsActiveElement(parent){const{activeElement}=document;return parent!==activeElement&&parent.contains(activeElement);}
function getElementToFocus(cell){return getTabableElements(cell)[0]||cell;}
const ListRenderer=__exports.ListRenderer=class ListRenderer extends Component{setup(){this.uiService=useService("ui");this.notificationService=useService("notification");this.allColumns=this.props.archInfo.columns;this.keyOptionalFields=this.createKeyOptionalFields();this.getOptionalActiveFields();this.cellClassByColumn={};this.groupByButtons=this.props.archInfo.groupBy.buttons;this.state=useState({columns:this.getActiveColumns(this.props.list),});this.withHandleColumn=this.state.columns.some((col)=>col.widget==="handle");useExternalListener(document,"click",this.onGlobalClick.bind(this));this.tableRef=useRef("table");this.longTouchTimer=null;this.touchStartMs=0;this.resizing=false;this.preventReorder=false;this.creates=this.props.archInfo.creates.length?this.props.archInfo.creates:[{type:"create",string:this.env._t("Add a line")}];this.cellToFocus=null;this.activeRowId=null;onMounted(()=>{this.activeElement=this.uiService.activeElement;});onWillPatch(()=>{const activeRow=document.activeElement.closest(".o_data_row.o_selected_row");this.activeRowId=activeRow?activeRow.dataset.id:null;});onWillUpdateProps((nextProps)=>{this.allColumns=nextProps.archInfo.columns;this.state.columns=this.getActiveColumns(nextProps.list);});onPatched(()=>{const editedRecord=this.props.list.editedRecord;if(editedRecord&&this.activeRowId!==editedRecord.id){if(this.cellToFocus&&this.cellToFocus.record===editedRecord){const column=this.cellToFocus.column;const forward=this.cellToFocus.forward;this.focusCell(column,forward);}else if(this.lastEditedCell){this.focusCell(this.lastEditedCell.column,true);}else{this.focusCell(this.state.columns[0]);}}
this.cellToFocus=null;this.lastEditedCell=null;});let dataRowId;this.rootRef=useRef("root");this.resequencePromise=Promise.resolve();useSortable({enable:()=>this.canResequenceRows,ref:this.rootRef,elements:".o_row_draggable",handle:".o_handle_cell",cursor:"grabbing",onDragStart:(params)=>{const{element}=params;dataRowId=element.dataset.id;return this.sortStart(params);},onDragEnd:(params)=>this.sortStop(params),onDrop:(params)=>this.sortDrop(dataRowId,params),});if(this.env.searchModel){useBus(this.env.searchModel,"focus-view",()=>{if(this.props.list.model.useSampleModel){return;}
const nextTh=this.tableRef.el.querySelector("thead th");const toFocus=getElementToFocus(nextTh);this.focus(toFocus);this.tableRef.el.querySelector("tbody").classList.add("o_keyboard_navigation");});}
let lastCellBeforeDialogOpening;useBus(this.props.list.model,"list-confirmation-dialog-will-open",()=>{if(this.tableRef.el.contains(document.activeElement)){lastCellBeforeDialogOpening=document.activeElement.closest("td");}});useBus(this.props.list.model,"list-confirmation-dialog-closed",()=>{if(lastCellBeforeDialogOpening){this.focus(lastCellBeforeDialogOpening);}});useBounceButton(this.rootRef,()=>{return this.showNoContentHelper;});useEffect((editedRecord)=>{if(editedRecord){this.keepColumnWidths=true;}},()=>[this.props.list.editedRecord]);useEffect(()=>{this.freezeColumnWidths();},()=>[this.state.columns,this.isEmpty]);useExternalListener(window,"resize",()=>{this.columnWidths=null;this.freezeColumnWidths();});this.isRTL=localization.direction==="rtl";}
displaySaveNotification(){this.notificationService.add(this.env._t('Please click on the "save" button first'),{type:"danger",});}
getActiveColumns(list){return this.allColumns.filter((col)=>{if(list.isGrouped&&col.widget==="handle"){return false;}
return!col.optional||this.optionalActiveFields[col.name];});}
get hasSelectors(){return this.props.allowSelectors&&!this.env.isSmall;}
add(params){if(this.canCreate){this.props.onAdd(params);}}
freezeColumnWidths(){if(!this.keepColumnWidths){this.columnWidths=null;}
const table=this.tableRef.el;const headers=[...table.querySelectorAll("thead th:not(.o_list_actions_header)")];if(!this.columnWidths||!this.columnWidths.length){table.style.tableLayout="auto";headers.forEach((th)=>{th.style.width=null;th.style.maxWidth=null;});this.setDefaultColumnWidths();this.columnWidths=this.computeColumnWidthsFromContent();table.style.tableLayout="fixed";}
headers.forEach((th,index)=>{if(!th.style.width){th.style.width=`${Math.floor(this.columnWidths[index])}px`;}});}
setDefaultColumnWidths(){const widths=this.state.columns.map((col)=>this.calculateColumnWidth(col));const sumOfRelativeWidths=widths.filter(({type})=>type==="relative").reduce((sum,{value})=>sum+value,0);const columnOffset=this.hasSelectors?2:1;widths.forEach(({type,value},i)=>{const headerEl=this.tableRef.el.querySelector(`th:nth-child(${i + columnOffset})`);if(type==="absolute"){if(this.isEmpty){headerEl.style.width=value;}else{headerEl.style.minWidth=value;}}else if(type==="relative"&&this.isEmpty){headerEl.style.width=`${((value / sumOfRelativeWidths) * 100).toFixed(2)}%`;}});}
computeColumnWidthsFromContent(){const table=this.tableRef.el;table.classList.add("o_list_computing_widths");const headers=[...table.querySelectorAll("thead th")];const columnWidths=headers.map((th)=>th.getBoundingClientRect().width);const getWidth=(th)=>columnWidths[headers.indexOf(th)]||0;const getTotalWidth=()=>columnWidths.reduce((tot,width)=>tot+width,0);const shrinkColumns=(thsToShrink,shrinkAmount)=>{let canKeepShrinking=true;for(const th of thsToShrink){const index=headers.indexOf(th);let maxWidth=columnWidths[index]-shrinkAmount;if(maxWidth<92){maxWidth=92;canKeepShrinking=false;}
th.style.maxWidth=`${Math.floor(maxWidth)}px`;columnWidths[index]=maxWidth;}
return canKeepShrinking;};const sortedThs=[...table.querySelectorAll("thead th:not(.o_list_button)")].sort((a,b)=>getWidth(b)-getWidth(a));const allowedWidth=table.parentNode.getBoundingClientRect().width;let totalWidth=getTotalWidth();for(let index=1;totalWidth>allowedWidth;index++){const largestCols=sortedThs.slice(0,index);const currentWidth=getWidth(largestCols[0]);for(;currentWidth===getWidth(sortedThs[index]);index++){largestCols.push(sortedThs[index]);}
const nextLargest=sortedThs[index];const toRemove=Math.ceil((totalWidth-allowedWidth)/largestCols.length);const shrinkAmount=Math.min(toRemove,currentWidth-getWidth(nextLargest));const canKeepShrinking=shrinkColumns(largestCols,shrinkAmount);if(!canKeepShrinking){break;}
totalWidth=getTotalWidth();}
table.classList.remove("o_list_computing_widths");return columnWidths;}
get activeActions(){return this.props.activeActions||{};}
get canResequenceRows(){if(!this.props.list.canResequence()||this.props.readonly){return false;}
const orderBy=this.props.list.orderBy;const handleField=this.props.archInfo.handleField;return!orderBy.length||(orderBy.length&&orderBy[0].name===handleField);}
get isEmpty(){return!this.props.list.records.length;}
get fields(){return this.props.list.fields;}
get nbCols(){let nbCols=this.state.columns.length;if(this.hasSelectors){nbCols++;}
if(this.activeActions.onDelete||this.displayOptionalFields){nbCols++;}
return nbCols;}
canUseFormatter(column,record){return!record.isInEdition&&!column.widget;}
focusCell(column,forward=true){const index=this.state.columns.indexOf(column);let columns;if(index===-1&&!forward){columns=this.state.columns.slice(0).reverse();}else{columns=[...this.state.columns.slice(index,this.state.columns.length),...this.state.columns.slice(0,index),];}
const editedRecord=this.props.list.editedRecord;for(const column of columns){if(column.type!=="field"){continue;}
const fieldName=column.name;if(!editedRecord.isReadonly(fieldName)){const cell=this.tableRef.el.querySelector(`.o_selected_row td[name=${fieldName}]`);if(cell){const toFocus=getElementToFocus(cell);if(cell!==toFocus){this.focus(toFocus);this.lastEditedCell={column,record:editedRecord};break;}}}}}
focus(el){el.focus();if(["INPUT","TEXTAREA"].includes(el.tagName)){if(el.selectionStart===null){return;}
if(el.selectionStart===el.selectionEnd){el.selectionStart=0;el.selectionEnd=el.value.length;}}}
editGroupRecord(group){const{resId,resModel}=group.record;this.env.services.action.doAction({context:{create:false,},res_model:resModel,res_id:resId,type:"ir.actions.act_window",views:[[false,"form"]],flags:{mode:"edit"},});}
createKeyOptionalFields(){let keyParts={fields:this.props.list.fieldNames,model:this.props.list.resModel,viewMode:"list",viewId:this.env.config.viewId,};if(this.props.nestedKeyOptionalFieldsData){keyParts=Object.assign(keyParts,{model:this.props.nestedKeyOptionalFieldsData.model,viewMode:this.props.nestedKeyOptionalFieldsData.viewMode,relationalField:this.props.nestedKeyOptionalFieldsData.field,subViewType:"list",});}
const parts=["model","viewMode","viewId","relationalField","subViewType"];const viewIdentifier=["optional_fields"];parts.forEach((partName)=>{if(partName in keyParts){viewIdentifier.push(keyParts[partName]);}});keyParts.fields.sort((left,right)=>(left<right?-1:1)).forEach((fieldName)=>{return viewIdentifier.push(fieldName);});return viewIdentifier.join(",");}
get getOptionalFields(){return this.allColumns.filter((col)=>col.optional).map((col)=>({label:col.label,name:col.name,value:this.optionalActiveFields[col.name],}));}
get displayOptionalFields(){return this.getOptionalFields.length;}
nbRecordsInGroup(group){if(group.isFolded){return 0;}else if(group.list.isGrouped){let count=0;for(const gr of group.list.groups){count+=this.nbRecordsInGroup(gr);}
return count;}else{return group.list.records.length;}}
get selectAll(){const list=this.props.list;const nbDisplayedRecords=list.records.length;if(list.isDomainSelected){return true;}else{return nbDisplayedRecords>0&&list.selection.length===nbDisplayedRecords;}}
get aggregates(){let values;if(this.props.list.selection&&this.props.list.selection.length){values=this.props.list.selection.map((r)=>r.data);}else if(this.props.list.isGrouped){values=this.props.list.groups.map((g)=>g.aggregates);}else{values=this.props.list.records.map((r)=>r.data);}
const aggregates={};for(const fieldName in this.props.list.activeFields){const field=this.fields[fieldName];const fieldValues=values.map((v)=>v[fieldName]).filter((v)=>v||v===0);if(!fieldValues.length){continue;}
const type=field.type;if(type!=="integer"&&type!=="float"&&type!=="monetary"){continue;}
const{rawAttrs,widget}=this.props.list.activeFields[fieldName];let currencyId;if(type==="monetary"||widget==="monetary"){const currencyField=this.props.list.activeFields[fieldName].options.currency_field||this.fields[fieldName].currency_field||"currency_id";currencyId=currencyField in this.props.list.activeFields&&values[0][currencyField]&&values[0][currencyField][0];if(currencyId){const sameCurrency=values.every((value)=>currencyId===value[currencyField][0]);if(!sameCurrency){aggregates[fieldName]={help:_t("Different currencies cannot be aggregated"),value:"—",};continue;}}}
const func=(rawAttrs.sum&&"sum")||(rawAttrs.avg&&"avg")||(rawAttrs.max&&"max")||(rawAttrs.min&&"min");if(func){let aggregateValue=0;if(func==="max"){aggregateValue=Math.max(-Infinity,...fieldValues);}else if(func==="min"){aggregateValue=Math.min(Infinity,...fieldValues);}else if(func==="avg"){aggregateValue=fieldValues.reduce((acc,val)=>acc+val)/fieldValues.length;}else if(func==="sum"){aggregateValue=fieldValues.reduce((acc,val)=>acc+val);}
const formatter=formatters.get(widget,false)||formatters.get(type,false);const formatOptions={digits:rawAttrs.digits?JSON.parse(rawAttrs.digits):undefined,escape:true,};if(currencyId){formatOptions.currencyId=currencyId;}
aggregates[fieldName]={help:rawAttrs[func],value:formatter?formatter(aggregateValue,formatOptions):aggregateValue,};}}
return aggregates;}
formatAggregateValue(group,column){const{widget,rawAttrs}=column;const field=this.props.list.fields[column.name];const aggregateValue=group.aggregates[column.name];if(!(column.name in group.aggregates)){return"";}
const formatter=formatters.get(widget,false)||formatters.get(field.type,false);const formatOptions={digits:rawAttrs.digits?JSON.parse(rawAttrs.digits):field.digits,escape:true,};return formatter?formatter(aggregateValue,formatOptions):aggregateValue;}
getGroupLevel(group){return this.props.list.groupBy.length-group.list.groupBy.length-1;}
getColumnClass(column){const classNames=["align-middle"];if(this.isSortable(column)){classNames.push("o_column_sortable","position-relative","cursor-pointer");}else{classNames.push("cursor-default");}
const orderBy=this.props.list.orderBy;if(orderBy.length&&column.widget!=="handle"&&orderBy[0].name===column.name&&column.hasLabel){classNames.push("table-active");}
if(this.isNumericColumn(column)){classNames.push("o_list_number_th");}
if(column.type==="button_group"){classNames.push("o_list_button");}
if(column.widget){classNames.push(`o_${column.widget}_cell`);}
return classNames.join(" ");}
getColumns(record){return this.state.columns;}
isNumericColumn(column){const{type}=this.fields[column.name];return["float","integer","monetary"].includes(type);}
shouldReverseHeader(column){return this.isNumericColumn(column)&&(!this.isRTL);}
isSortable(column){const{hasLabel,name}=column;const{sortable}=this.fields[name];const{options}=this.props.list.activeFields[name];return(sortable||options.allow_order)&&hasLabel;}
getSortableIconClass(column){const{orderBy}=this.props.list;const classNames=this.isSortable(column)?["fa","fa-lg","px-2"]:["d-none"];if(orderBy.length&&orderBy[0].name===column.name){classNames.push(orderBy[0].asc?"fa-angle-up":"fa-angle-down");}else{classNames.push("fa-angle-down","opacity-0","opacity-75-hover");}
return classNames.join(" ");}
getRowClass(record){const classNames=this.props.archInfo.decorations.filter((decoration)=>evaluateExpr(decoration.condition,record.evalContext)).map((decoration)=>decoration.class);if(record.selected){classNames.push("table-info");}
if(record.isInEdition){classNames.push("o_selected_row");}
if(record.selected){classNames.push("o_data_row_selected");}
if(this.canResequenceRows){classNames.push("o_row_draggable");}
return classNames.join(" ");}
getCellClass(column,record){if(!this.cellClassByColumn[column.id]){const classNames=["o_data_cell"];if(column.type==="button_group"){classNames.push("o_list_button");}else if(column.type==="field"){classNames.push("o_field_cell");if(column.rawAttrs&&column.rawAttrs.class&&this.canUseFormatter(column,record)){classNames.push(column.rawAttrs.class);}
const typeClass=FIELD_CLASSES[this.fields[column.name].type];if(typeClass){classNames.push(typeClass);}
if(column.widget){classNames.push(`o_${column.widget}_cell`);}}
this.cellClassByColumn[column.id]=classNames;}
const classNames=[...this.cellClassByColumn[column.id]];if(column.type==="field"){if(record.isRequired(column.name)){classNames.push("o_required_modifier");}
if(record.isInvalid(column.name)){classNames.push("o_invalid_cell");}
if(record.isReadonly(column.name)){classNames.push("o_readonly_modifier");}
if(this.canUseFormatter(column,record)){const{decorations}=record.activeFields[column.name];for(const decoName in decorations){if(evaluateExpr(decorations[decoName],record.evalContext)){classNames.push(getClassNameFromDecoration(decoName));}}}
if(record.isInEdition&&this.props.list.editedRecord&&this.props.list.editedRecord.isReadonly(column.name)){classNames.push("text-muted");}else{classNames.push("cursor-pointer");}}
return classNames.join(" ");}
getCellTitle(column,record){const fieldType=this.fields[column.name].type;if(!(fieldType in FIXED_FIELD_COLUMN_WIDTHS)&&fieldType!="json"){return this.getFormattedValue(column,record);}}
getFieldClass(column){return column.rawAttrs&&column.rawAttrs.class;}
getFormattedValue(column,record){const fieldName=column.name;return getFormattedValue(record,fieldName,column.rawAttrs);}
evalModifier(modifier,record){return!!(modifier&&new Domain(modifier).contains(record.evalContext));}
getGroupDisplayName(group){const{_t}=this.env;if(group.groupByField.type==="boolean"){return group.value===undefined?_t("None"):group.value?_t("Yes"):_t("No");}else{return group.value===undefined||group.value===false?_t("None"):group.displayName;}}
get canCreate(){return"link"in this.activeActions?this.activeActions.link:this.activeActions.create;}
get isX2Many(){return this.activeActions.type!=="view";}
get getEmptyRowIds(){let nbEmptyRow=Math.max(0,4-this.props.list.records.length);if(nbEmptyRow>0&&this.displayRowCreates){nbEmptyRow-=1;}
return Array.from(Array(nbEmptyRow).keys());}
get displayRowCreates(){return this.isX2Many&&this.canCreate;}
getFirstAggregateIndex(group){return this.state.columns.findIndex((col)=>col.name in group.aggregates);}
getLastAggregateIndex(group){const reversedColumns=[...this.state.columns].reverse();const index=reversedColumns.findIndex((col)=>col.name in group.aggregates);return index>-1?this.state.columns.length-index-1:-1;}
getAggregateColumns(group){const firstIndex=this.getFirstAggregateIndex(group);const lastIndex=this.getLastAggregateIndex(group);return this.state.columns.slice(firstIndex,lastIndex+1);}
getGroupNameCellColSpan(group){const firstAggregateIndex=this.getFirstAggregateIndex(group);let colspan;if(firstAggregateIndex>-1){colspan=firstAggregateIndex;}else{colspan=Math.max(1,this.state.columns.length-DEFAULT_GROUP_PAGER_COLSPAN);if(this.displayOptionalFields){colspan++;}}
if(this.hasSelectors){colspan++;}
return colspan;}
getGroupPagerCellColspan(group){const lastAggregateIndex=this.getLastAggregateIndex(group);if(lastAggregateIndex>-1){let colspan=this.state.columns.length-lastAggregateIndex-1;if(this.displayOptionalFields){colspan++;}
return colspan;}else{return this.state.columns.length>1?DEFAULT_GROUP_PAGER_COLSPAN:0;}}
getGroupPagerProps(group){const list=group.list;return{offset:list.offset,limit:list.limit,total:group.count,onUpdate:async({offset,limit})=>{await list.load({limit,offset});this.render(true);},withAccessKey:false,};}
getOptionalActiveFields(){this.optionalActiveFields={};const optionalActiveFields=browser.localStorage.getItem(this.keyOptionalFields);if(optionalActiveFields){this.allColumns.forEach((col)=>{this.optionalActiveFields[col.name]=optionalActiveFields.includes(col.name);});}else{this.allColumns.forEach((col)=>{this.optionalActiveFields[col.name]=col.optional==="show";});}}
onClickSortColumn(column){if(this.preventReorder){this.preventReorder=false;return;}
if(this.props.list.editedRecord||this.props.list.model.useSampleModel){return;}
const fieldName=column.name;const list=this.props.list;if(this.isSortable(column)){list.sortBy(fieldName);}}
onButtonCellClicked(record,column,ev){if(!ev.target.closest("button")){this.onCellClicked(record,column,ev);}}
async onCellClicked(record,column,ev){if(ev.target.special_click){return;}
const recordAfterResequence=async()=>{const recordIndex=this.props.list.records.indexOf(record);await this.resequencePromise;record=this.props.list.records[recordIndex]||record;};if((this.props.list.model.multiEdit&&record.selected)||this.isInlineEditable(record)){if(record.isInEdition&&this.props.list.editedRecord===record){const cell=this.tableRef.el.querySelector(`.o_selected_row td[name='${column.name}']`);if(cell&&containsActiveElement(cell)){this.lastEditedCell={column,record};return;}
this.focusCell(column);this.cellToFocus=null;}else{await recordAfterResequence();await record.switchMode("edit");this.cellToFocus={column,record};}}else if(this.props.list.editedRecord&&this.props.list.editedRecord!==record){this.props.list.unselectRecord(true);}else if(!this.props.archInfo.noOpen){this.props.openRecord(record);}}
async onDeleteRecord(record){this.keepColumnWidths=true;const editedRecord=this.props.list.editedRecord;if(editedRecord&&editedRecord!==record){const unselected=await this.props.list.unselectRecord(true);if(!unselected){return;}}
if(this.activeActions.onDelete){this.activeActions.onDelete(record);}}
findFocusFutureCell(cell,cellIsInGroupRow,direction){const row=cell.parentElement;const children=[...row.children];const index=children.indexOf(cell);let futureCell;switch(direction){case"up":{let futureRow=row.previousElementSibling;futureRow=futureRow||(row.parentElement.previousElementSibling&&row.parentElement.previousElementSibling.lastElementChild);if(futureRow){const addCell=[...futureRow.children].find((c)=>c.classList.contains("o_group_field_row_add"));const nextIsGroup=futureRow.classList.contains("o_group_header");const rowTypeSwitched=cellIsInGroupRow!==nextIsGroup;let defaultIndex=0;if(cellIsInGroupRow){defaultIndex=this.hasSelectors?1:0;}
futureCell=addCell||(futureRow&&futureRow.children[rowTypeSwitched?defaultIndex:index]);}
break;}
case"down":{let futureRow=row.nextElementSibling;futureRow=futureRow||(row.parentElement.nextElementSibling&&row.parentElement.nextElementSibling.firstElementChild);if(futureRow){const addCell=[...futureRow.children].find((c)=>c.classList.contains("o_group_field_row_add"));const nextIsGroup=futureRow.classList.contains("o_group_header");const rowTypeSwitched=cellIsInGroupRow!==nextIsGroup;let defaultIndex=0;if(cellIsInGroupRow){defaultIndex=this.hasSelectors?1:0;}
futureCell=addCell||(futureRow&&futureRow.children[rowTypeSwitched?defaultIndex:index]);}
break;}
case"left":{futureCell=children[index-1];break;}
case"right":{futureCell=children[index+1];break;}}
return futureCell&&getElementToFocus(futureCell);}
isInlineEditable(record){return!!this.props.editable;}
onCellKeydown(ev,group=null,record=null){if(this.props.list.model.useSampleModel){return;}
const hotkey=getActiveHotkey(ev);if(ev.target.tagName==="TEXTAREA"&&hotkey==="enter"){return;}
const closestCell=ev.target.closest("td, th");const handled=this.props.list.editedRecord?this.onCellKeydownEditMode(hotkey,closestCell,group,record):this.onCellKeydownReadOnlyMode(hotkey,closestCell,group,record);if(handled){this.lastCreatingAction=false;this.tableRef.el.querySelector("tbody").classList.add("o_keyboard_navigation");ev.preventDefault();ev.stopPropagation();}}
findNextFocusableOnRow(row,cell){const children=[...row.children];const index=children.indexOf(cell);const nextCells=children.slice(index+1);for(const c of nextCells){if(!c.classList.contains("o_data_cell")){continue;}
if(c.firstElementChild&&c.firstElementChild.classList.contains("o_readonly_modifier")){continue;}
const toFocus=getElementToFocus(c);if(toFocus!==c){return toFocus;}}
return null;}
findPreviousFocusableOnRow(row,cell){const children=[...row.children];const index=children.indexOf(cell);const previousCells=children.slice(0,index);for(const c of previousCells.reverse()){if(!c.classList.contains("o_data_cell")){continue;}
if(c.firstElementChild&&c.firstElementChild.classList.contains("o_readonly_modifier")){continue;}
const toFocus=getElementToFocus(c);if(toFocus!==c){return toFocus;}}
return null;}
applyCellKeydownMultiEditMode(hotkey,cell,group,record){const{list}=this.props;const row=cell.parentElement;let toFocus,futureRecord;const index=list.selection.indexOf(record);if(this.lastIsDirty&&["tab","shift+tab","enter"].includes(hotkey)){record.switchMode("readonly");return true;}
if(this.applyCellKeydownEditModeStayOnRow(hotkey,cell,group,record)){return true;}
switch(hotkey){case"tab":futureRecord=list.selection[index+1]||list.selection[0];if(record===futureRecord){toFocus=this.findNextFocusableOnRow(row);this.focus(toFocus);return true;}
break;case"shift+tab":futureRecord=list.selection[index-1]||list.selection[list.selection.length-1];if(record===futureRecord){toFocus=this.findPreviousFocusableOnRow(row);this.focus(toFocus);return true;}
this.cellToFocus={forward:false,record:futureRecord};break;case"enter":if(list.selection.length===1){record.switchMode("readonly");return true;}
futureRecord=list.selection[index+1]||list.selection[0];break;}
if(futureRecord){futureRecord.switchMode("edit");return true;}
return false;}
applyCellKeydownEditModeGroup(hotkey,_cell,group,record){const{editable}=this.props;const groupIndex=group.list.records.indexOf(record);const isLastOfGroup=groupIndex===group.list.records.length-1;const isDirty=record.isDirty||this.lastIsDirty;const isEnterBehavior=hotkey==="enter"&&(!record.canBeAbandoned||isDirty);const isTabBehavior=hotkey==="tab"&&!record.canBeAbandoned&&isDirty;if(isEnterBehavior&&!record.checkValidity()){return true;}
if(isLastOfGroup&&this.canCreate&&editable==="bottom"&&record.checkValidity()&&(isEnterBehavior||isTabBehavior)){this.add({group});return true;}
return false;}
applyCellKeydownEditModeStayOnRow(hotkey,cell,group,record){let toFocus;const row=cell.parentElement;switch(hotkey){case"tab":toFocus=this.findNextFocusableOnRow(row,cell);break;case"shift+tab":toFocus=this.findPreviousFocusableOnRow(row,cell);break;}
if(toFocus){this.focus(toFocus);return true;}
return false;}
onCellKeydownEditMode(hotkey,cell,group,record){const{cycleOnTab,list}=this.props;const row=cell.parentElement;const applyMultiEditBehavior=record&&record.selected&&list.model.multiEdit;const topReCreate=this.props.editable==="top"&&record.isNew;if(applyMultiEditBehavior&&this.applyCellKeydownMultiEditMode(hotkey,cell,group,record)){return true;}
if(this.applyCellKeydownEditModeStayOnRow(hotkey,cell,group,record)){return true;}
if(group&&this.applyCellKeydownEditModeGroup(hotkey,cell,group,record)){return true;}
switch(hotkey){case"tab":{const index=list.records.indexOf(record);const lastIndex=topReCreate?0:list.records.length-1;if(index===lastIndex){if(this.displayRowCreates){if(record.isNew&&!record.isDirty){list.unselectRecord(true);return false;}
if(record.checkValidity()){const{context}=this.creates[0];this.add({context});}}else if(this.canCreate&&!record.canBeAbandoned&&(record.isDirty||this.lastIsDirty)){this.add({group});}else if(cycleOnTab){if(record.canBeAbandoned){list.unselectRecord(true);}
const futureRecord=list.records[0];if(record===futureRecord){const toFocus=this.findNextFocusableOnRow(row);this.focus(toFocus);}else{futureRecord.switchMode("edit");}}else{return false;}}else{const futureRecord=list.records[index+1];futureRecord.switchMode("edit");}
break;}
case"shift+tab":{const index=list.records.indexOf(record);if(index===0){if(cycleOnTab){if(record.canBeAbandoned){list.unselectRecord(true);}
const futureRecord=list.records[list.records.length-1];if(record===futureRecord){const toFocus=this.findPreviousFocusableOnRow(row);this.focus(toFocus);}else{this.cellToFocus={forward:false,record:futureRecord};futureRecord.switchMode("edit");}}else{list.unselectRecord(true);return false;}}else{const futureRecord=list.records[index-1];this.cellToFocus={forward:false,record:futureRecord};futureRecord.switchMode("edit");}
break;}
case"enter":{const index=list.records.indexOf(record);let futureRecord=list.records[index+1];if(topReCreate&&index===0){futureRecord=null;}
if(!futureRecord&&!this.canCreate){futureRecord=list.records[0];}
if(futureRecord){futureRecord.switchMode("edit",{checkValidity:true});}else if(this.lastIsDirty||!record.canBeAbandoned||this.displayRowCreates){this.add({group});}else{futureRecord=list.records.at(0);futureRecord.switchMode("edit",{checkValidity:true});}
break;}
case"escape":{record.discard();list.unselectRecord(true);const firstAddButton=this.tableRef.el.querySelector(".o_field_x2many_list_row_add a");if(firstAddButton){this.focus(firstAddButton);}else if(group&&record.isNew){const children=[...row.parentElement.children];const index=children.indexOf(row);for(let i=index+1;i<children.length;i++){const row=children[i];if(row.classList.contains("o_group_header")){break;}
const addCell=[...row.children].find((c)=>c.classList.contains("o_group_field_row_add"));if(addCell){const toFocus=addCell.querySelector("a");this.focus(toFocus);return true;}}
this.focus(cell);}else{this.focus(cell);}
break;}
default:return false;}
return true;}
onCellKeydownReadOnlyMode(hotkey,cell,group,record){const cellIsInGroupRow=Boolean(group&&!record);const applyMultiEditBehavior=record&&record.selected&&this.props.list.model.multiEdit;let toFocus;switch(hotkey){case"arrowup":toFocus=this.findFocusFutureCell(cell,cellIsInGroupRow,"up");if(!toFocus&&this.env.searchModel){this.env.searchModel.trigger("focus-search");return true;}
break;case"arrowdown":toFocus=this.findFocusFutureCell(cell,cellIsInGroupRow,"down");break;case"arrowleft":if(cellIsInGroupRow&&!group.isFolded){this.toggleGroup(group);return true;}
if(cell.classList.contains("o_field_x2many_list_row_add")){const a=document.activeElement;toFocus=a.previousElementSibling;}else{toFocus=this.findFocusFutureCell(cell,cellIsInGroupRow,"left");}
break;case"arrowright":if(cellIsInGroupRow&&group.isFolded){this.toggleGroup(group);return true;}
if(cell.classList.contains("o_field_x2many_list_row_add")){const a=document.activeElement;toFocus=a.nextElementSibling;}else{toFocus=this.findFocusFutureCell(cell,cellIsInGroupRow,"right");}
break;case"tab":if(cellIsInGroupRow){const buttons=Array.from(cell.querySelectorAll(".o_group_buttons button"));const currentButton=document.activeElement.closest("button");const index=buttons.indexOf(currentButton);toFocus=buttons[index+1]||currentButton;}
break;case"shift+tab":if(cellIsInGroupRow){const buttons=Array.from(cell.querySelectorAll(".o_group_buttons button"));const currentButton=document.activeElement.closest("button");const index=buttons.indexOf(currentButton);toFocus=buttons[index-1]||currentButton;}
break;case"enter":if(!group&&!record){return false;}
if(cell.classList.contains("o_list_record_remove")){this.onDeleteRecord(record);return true;}
if(cellIsInGroupRow){const button=document.activeElement.closest("button");if(button){button.click();}else{this.toggleGroup(group);}
return true;}
if(this.isInlineEditable(record)||applyMultiEditBehavior){const column=this.state.columns.find((c)=>c.name===cell.getAttribute("name"));this.cellToFocus={column,record};record.switchMode("edit");return true;}
if(!this.props.archInfo.noOpen){this.props.openRecord(record);return true;}
break;default:return false;}
if(toFocus){this.focus(toFocus);return true;}
return false;}
async onCreateAction(context){if(this.createProm){return;}
this.add({context});this.createProm=Promise.resolve();this.createProm.then(()=>{this.lastCreatingAction=true;});await this.createProm;this.createProm=null;}
onFocusIn(ev){const{relatedTarget,target}=ev;const fromOutside=!this.rootRef.el.contains(relatedTarget);if(!fromOutside){return;}
const isX2MRowAdder=target.tagName==="A"&&target.parentElement.classList.contains("o_field_x2many_list_row_add");const withinSameUIActiveElement=this.uiService.getActiveElementOf(relatedTarget)===this.activeElement;if(withinSameUIActiveElement&&isX2MRowAdder){const{context}=this.creates[0];this.onCreateAction(context);}}
setDirty(isDirty){this.lastIsDirty=isDirty;}
saveOptionalActiveFields(){browser.localStorage.setItem(this.keyOptionalFields,Object.keys(this.optionalActiveFields).filter((fieldName)=>this.optionalActiveFields[fieldName]));}
get showNoContentHelper(){const{model}=this.props.list;return this.props.noContentHelp&&(model.useSampleModel||!model.hasData());}
showGroupPager(group){return!group.isFolded&&group.list.limit<group.count;}
toggleGroup(group){group.toggle();}
get canSelectRecord(){return!this.props.list.editedRecord&&!this.props.list.model.useSampleModel;}
toggleSelection(){const list=this.props.list;if(!this.canSelectRecord){return;}
if(list.selection.length===list.records.length){list.records.forEach((record)=>{record.toggleSelection(false);list.selectDomain(false);});}else{list.records.forEach((record)=>{record.toggleSelection(true);});}}
toggleRecordSelection(record){if(!this.canSelectRecord){return;}
record.toggleSelection();this.props.list.selectDomain(false);}
async toggleOptionalField(fieldName){this.optionalActiveFields[fieldName]=!this.optionalActiveFields[fieldName];this.state.columns=this.getActiveColumns(this.props.list);this.saveOptionalActiveFields(this.allColumns.filter((col)=>this.optionalActiveFields[col.name]&&col.optional));}
onGlobalClick(ev){if(!this.props.list.editedRecord){return;}
this.tableRef.el.querySelector("tbody").classList.remove("o_keyboard_navigation");const target=ev.target;if(this.tableRef.el.contains(target)&&target.closest(".o_data_row")){return;}
if(this.activeElement!==this.uiService.activeElement){return;}
if(target.closest(".daterangepicker")){return;}
if(ev.target.closest(".ui-autocomplete")){return;}
this.props.list.unselectRecord(true);}
calculateColumnWidth(column){if(column.options&&column.rawAttrs.width){return{type:"absolute",value:column.rawAttrs.width};}
if(column.type!=="field"){return{type:"relative",value:1};}
const type=column.widget||this.props.list.fields[column.name].type;if(type in FIXED_FIELD_COLUMN_WIDTHS){return{type:"absolute",value:FIXED_FIELD_COLUMN_WIDTHS[type]};}
return{type:"relative",value:1};}
get isDebugMode(){return Boolean(odoo.debug);}
makeTooltip(column){return getTooltipInfo({viewMode:"list",resModel:this.props.list.resModel,field:this.props.list.fields[column.name],fieldInfo:this.props.list.activeFields[column.name],});}
onHoverSortColumn(ev,column){if(this.props.list.orderBy.length&&this.props.list.orderBy[0].name===column.name){return;}else if(this.isSortable(column)&&column.widget!=="handle"){ev.target.classList.toggle("table-active",ev.type=="mouseenter");}}
onColumnTitleMouseUp(){if(this.resizing){this.preventReorder=true;}}
onStartResize(ev){this.resizing=true;const table=this.tableRef.el;const th=ev.target.closest("th");const handler=th.querySelector(".o_resize");table.style.width=`${Math.floor(table.getBoundingClientRect().width)}px`;const thPosition=[...th.parentNode.children].indexOf(th);const resizingColumnElements=[...table.getElementsByTagName("tr")].filter((tr)=>tr.children.length===th.parentNode.children.length).map((tr)=>tr.children[thPosition]);const initialX=ev.clientX;const initialWidth=th.getBoundingClientRect().width;const initialTableWidth=table.getBoundingClientRect().width;const resizeStoppingEvents=["keydown","mousedown","mouseup"];if(!this.rootRef.el.style.width){this.rootRef.el.style.width=`${Math.floor(
                this.rootRef.el.getBoundingClientRect().width
            )}px`;}
table.classList.add("o_resizing");for(const el of resizingColumnElements){el.classList.add("o_column_resizing");handler.classList.add("bg-primary","opacity-100");handler.classList.remove("bg-black-25","opacity-50-hover");}
const resizeHeader=(ev)=>{ev.preventDefault();ev.stopPropagation();const delta=ev.clientX-initialX;const newWidth=Math.max(10,initialWidth+delta);const tableDelta=newWidth-initialWidth;th.style.width=`${Math.floor(newWidth)}px`;th.style.maxWidth=`${Math.floor(newWidth)}px`;table.style.width=`${Math.floor(initialTableWidth + tableDelta)}px`;};window.addEventListener("mousemove",resizeHeader);const stopResize=(ev)=>{this.resizing=false;this.keepColumnWidths=true;if(ev.type==="mousedown"&&ev.which===1){return;}
ev.preventDefault();ev.stopPropagation();table.classList.remove("o_resizing");for(const el of resizingColumnElements){el.classList.remove("o_column_resizing");handler.classList.remove("bg-primary","opacity-100");handler.classList.add("bg-black-25","opacity-50-hover");}
window.removeEventListener("mousemove",resizeHeader);for(const eventType of resizeStoppingEvents){window.removeEventListener(eventType,stopResize);}
document.activeElement.blur();};for(const eventType of resizeStoppingEvents){window.addEventListener(eventType,stopResize);}}
resetLongTouchTimer(){if(this.longTouchTimer){browser.clearTimeout(this.longTouchTimer);this.longTouchTimer=null;}}
onRowTouchStart(record,ev){if(!this.props.allowSelectors){return;}
if(this.props.list.selection.length){ev.stopPropagation();}
this.touchStartMs=Date.now();if(this.longTouchTimer===null){this.longTouchTimer=browser.setTimeout(()=>{this.toggleRecordSelection(record);this.resetLongTouchTimer();},this.constructor.LONG_TOUCH_THRESHOLD);}}
onRowTouchEnd(record){const elapsedTime=Date.now()-this.touchStartMs;if(elapsedTime<this.constructor.LONG_TOUCH_THRESHOLD){this.resetLongTouchTimer();}}
onRowTouchMove(record){this.resetLongTouchTimer();}
async sortDrop(dataRowId,{element,previous}){if(this.props.list.editedRecord){this.props.list.unselectRecord(true);}
element.classList.remove("o_row_draggable");const refId=previous?previous.dataset.id:null;this.resequencePromise=this.props.list.resequence(dataRowId,refId,{handleField:this.props.archInfo.handleField,});await this.resequencePromise;element.classList.add("o_row_draggable");}
sortStart({element}){element.classList.add("o_dragged");const table=this.tableRef.el;const headers=[...table.querySelectorAll("thead th")];const cells=[...element.querySelectorAll("td")];let headerIndex=0;for(const cell of cells){let width=0;for(let i=0;i<cell.colSpan;i++){const header=headers[headerIndex+i];const style=getComputedStyle(header);width+=parseFloat(style.width);}
cell.style.width=`${width}px`;headerIndex+=cell.colSpan;}}
sortStop({element}){element.classList.remove("o_dragged");for(const cell of element.querySelectorAll("td")){cell.style.width=null;}}
ignoreEventInSelectionMode(ev){const{list}=this.props;if(this.env.isSmall&&list.selection&&list.selection.length){ev.stopPropagation();ev.preventDefault();}}
onClickCapture(record,ev){const{list}=this.props;if(this.env.isSmall&&list.selection&&list.selection.length){ev.stopPropagation();ev.preventDefault();this.toggleRecordSelection(record);}}}
ListRenderer.template="web.ListRenderer";ListRenderer.rowsTemplate="web.ListRenderer.Rows";ListRenderer.recordRowTemplate="web.ListRenderer.RecordRow";ListRenderer.groupRowTemplate="web.ListRenderer.GroupRow";ListRenderer.components={DropdownItem,Field,ViewButton,CheckBox,Dropdown,Pager,Widget};ListRenderer.props=["activeActions?","list","archInfo","openRecord","onAdd?","cycleOnTab?","allowSelectors?","editable?","noContentHelp?","nestedKeyOptionalFieldsData?","readonly?",];ListRenderer.defaultProps={hasSelectors:false,cycleOnTab:true};ListRenderer.LONG_TOUCH_THRESHOLD=400;return __exports;});;

/* /web/static/src/views/list/list_view.js */
odoo.define('@web/views/list/list_view',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{RelationalModel}=require("@web/views/relational_model");const{ListArchParser}=require("@web/views/list/list_arch_parser");const{ListController}=require("@web/views/list/list_controller");const{ListRenderer}=require("@web/views/list/list_renderer");const listView=__exports.listView={type:"list",display_name:"List",icon:"oi oi-view-list",multiRecord:true,Controller:ListController,Renderer:ListRenderer,ArchParser:ListArchParser,Model:RelationalModel,buttonTemplate:"web.ListView.Buttons",props:(genericProps,view)=>{const{ArchParser}=view;const{arch,relatedModels,resModel}=genericProps;const archInfo=new ArchParser().parse(arch,relatedModels,resModel);return{...genericProps,Model:view.Model,Renderer:view.Renderer,buttonTemplate:view.buttonTemplate,archInfo,};},};registry.category("views").add("list",listView);return __exports;});;

/* /web/static/src/views/model.js */
odoo.define('@web/views/model',async function(require){'use strict';let __exports={};const{useBus,useService}=require("@web/core/utils/hooks");const{SEARCH_KEYS}=require("@web/search/with_search/with_search");const{buildSampleORM}=require("@web/views/sample_server");const{useSetupView}=require("@web/views/view_hook");const{EventBus,onWillStart,onWillUpdateProps,useComponent}=require("@odoo/owl");const Model=__exports.Model=class Model extends EventBus{constructor(env,params,services){super();this.env=env;this.orm=services.orm;this.useSampleModel=false;this.setup(params,services);}
setup(){}
async load(){}
hasData(){return true;}
getGroups(){return null;}
notify(){this.trigger("update");}}
Model.services=[];function getSearchParams(props){const params={};for(const key of SEARCH_KEYS){params[key]=props[key];}
return params;}
__exports.useModel=useModel;function useModel(ModelClass,params,options={}){const component=useComponent();if(!(ModelClass.prototype instanceof Model)){throw new Error(`the model class should extend Model`);}
const services={};for(const key of ModelClass.services){services[key]=useService(key);}
services.orm=services.orm||useService("orm");const model=new ModelClass(component.env,params,services);useBus(model,"update",options.onUpdate||(()=>{component.render(true);}));const globalState=component.props.globalState||{};let useSampleModel=Boolean("useSampleModel"in globalState?globalState.useSampleModel:component.props.useSampleModel);model.useSampleModel=!options.ignoreUseSampleModel?useSampleModel:false;const orm=model.orm;let sampleORM=globalState.sampleORM;const user=useService("user");let started=false;async function load(props){const searchParams=getSearchParams(props);await model.load(searchParams);if(!options.ignoreUseSampleModel){if(useSampleModel&&!model.hasData()){sampleORM=sampleORM||buildSampleORM(component.props.resModel,component.props.fields,user);sampleORM.setGroups(model.getGroups());model.orm=sampleORM;await model.load(searchParams);model.orm=orm;}else{useSampleModel=false;model.useSampleModel=useSampleModel;}}
if(started){model.notify();}}
onWillStart(async()=>{if(params.beforeLoadProm){await params.beforeLoadProm;}
await load(component.props);started=true;});onWillUpdateProps((nextProps)=>{if(!options.ignoreUseSampleModel){useSampleModel=false;}
load(nextProps);});useSetupView({getGlobalState(){return{sampleORM,useSampleModel};},});return model;}
return __exports;});;

/* /web/static/src/views/onboarding_banner.js */
odoo.define('@web/views/onboarding_banner',async function(require){'use strict';let __exports={};const{loadCSS,loadJS}=require("@web/core/assets");const{useService}=require("@web/core/utils/hooks");const{useActionLinks}=require("@web/views/view_hook");const{Component,markup,onWillStart,useRef,xml}=require("@odoo/owl");const OnboardingBanner=__exports.OnboardingBanner=class OnboardingBanner extends Component{setup(){this.rpc=useService("rpc");this.user=useService("user");this.onboardingContainerRef=useRef("onboardingContainer");const resModel="searchModel"in this.env?this.env.searchModel.resModel:undefined;this._handleActionLinks=useActionLinks({resModel,reload:async()=>{this.bannerHTML=await this.loadBanner(this.env.config.bannerRoute);this.render();},});this.handleActionLinks=(event)=>{if(event.target.dataset.oHideBanner){const collapseElement=this.onboardingContainerRef.el.querySelector(".o_onboarding_container.collapse.show");if(collapseElement){Collapse.getOrCreateInstance(collapseElement).toggle();}}
this._handleActionLinks(event);};onWillStart(this.onWillStart);}
async onWillStart(){this.bannerHTML=await this.loadBanner(this.env.config.bannerRoute);}
async loadBanner(bannerRoute){const response=await this.rpc(bannerRoute,{context:this.user.context});if(!response.html){return;}
const banner=new DOMParser().parseFromString(response.html,"text/html");await Promise.all([...[...banner.querySelectorAll(`script[type="text/javascript"]`)].map((el)=>{el.remove();return loadJS(el.getAttribute("src"));}),...[...banner.querySelectorAll(`link[rel="stylesheet"]`)].map((el)=>{el.remove();return loadCSS(el.getAttribute("href"));}),]);return markup(new XMLSerializer().serializeToString(banner));}}
OnboardingBanner.template=xml`<div class="w-100" t-ref="onboardingContainer" t-on-click="handleActionLinks" t-out="bannerHTML"/>`;OnboardingBanner.props={};return __exports;});;

/* /web/static/src/views/pivot/pivot_arch_parser.js */
odoo.define('@web/views/pivot/pivot_arch_parser',async function(require){'use strict';let __exports={};const{XMLParser}=require("@web/core/utils/xml");const{archParseBoolean}=require("@web/views/utils");const PivotArchParser=__exports.PivotArchParser=class PivotArchParser extends XMLParser{parse(arch){const archInfo={activeMeasures:[],colGroupBys:[],defaultOrder:null,fieldAttrs:{},rowGroupBys:[],widgets:{},};this.visitXML(arch,(node)=>{switch(node.tagName){case"pivot":{if(node.hasAttribute("disable_linking")){archInfo.disableLinking=archParseBoolean(node.getAttribute("disable_linking"));}
if(node.hasAttribute("default_order")){archInfo.defaultOrder=node.getAttribute("default_order");}
if(node.hasAttribute("string")){archInfo.title=node.getAttribute("string");}
if(node.hasAttribute("display_quantity")){archInfo.displayQuantity=archParseBoolean(node.getAttribute("display_quantity"));}
break;}
case"field":{let fieldName=node.getAttribute("name");archInfo.fieldAttrs[fieldName]={};if(node.hasAttribute("string")){archInfo.fieldAttrs[fieldName].string=node.getAttribute("string");}
const modifiers=JSON.parse(node.getAttribute("modifiers")||"{}");if(modifiers.invisible===true){archInfo.fieldAttrs[fieldName].isInvisible=true;break;}
if(node.hasAttribute("interval")){fieldName+=":"+node.getAttribute("interval");}
if(node.hasAttribute("widget")){archInfo.widgets[fieldName]=node.getAttribute("widget");}
if(node.getAttribute("type")==="measure"||node.hasAttribute("operator")){archInfo.activeMeasures.push(fieldName);}
if(node.getAttribute("type")==="col"){archInfo.colGroupBys.push(fieldName);}
if(node.getAttribute("type")==="row"){archInfo.rowGroupBys.push(fieldName);}
break;}}});return archInfo;}}
return __exports;});;

/* /web/static/src/views/pivot/pivot_controller.js */
odoo.define('@web/views/pivot/pivot_controller',async function(require){'use strict';let __exports={};const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{download}=require("@web/core/network/download");const{useService}=require("@web/core/utils/hooks");const{Layout}=require("@web/search/layout");const{useModel}=require("@web/views/model");const{standardViewProps}=require("@web/views/standard_view_props");const{useSetupView}=require("@web/views/view_hook");const{Component,useRef}=require("@odoo/owl");const PivotController=__exports.PivotController=class PivotController extends Component{setup(){this.actionService=useService("action");this.model=useModel(this.props.Model,this.props.modelParams);useSetupView({rootRef:useRef("root"),getLocalState:()=>{const{data,metaData}=this.model;return{data,metaData};},getContext:()=>this.getContext(),});}
getContext(){return{pivot_measures:this.model.metaData.activeMeasures,pivot_column_groupby:this.model.metaData.fullColGroupBys,pivot_row_groupby:this.model.metaData.fullRowGroupBys,};}
onDownloadButtonClicked(){if(this.model.getTableWidth()>16384){throw new Error(this.env._t("For Excel compatibility, data cannot be exported if there are more than 16384 columns.\n\nTip: try to flip axis, filter further or reduce the number of measures."));}
const table=this.model.exportData();download({url:"/web/pivot/export_xlsx",data:{data:JSON.stringify(table)},});}
onExpandButtonClicked(){this.model.expandAll();}
onFlipButtonClicked(){this.model.flip();}
onMeasureSelected({measure}){this.model.toggleMeasure(measure);}
openView(domain,views,context){this.actionService.doAction({type:"ir.actions.act_window",name:this.model.metaData.title,res_model:this.props.resModel,views:views,view_mode:"list",target:"current",context,domain,});}
onOpenView(cell){if(cell.value===undefined||this.model.metaData.disableLinking){return;}
const context=Object.assign({},this.model.searchParams.context);Object.keys(context).forEach((x)=>{if(x==="group_by"||x.startsWith("search_default_")){delete context[x];}});const{views=[]}=this.env.config;this.views=["list","form"].map((viewType)=>{const view=views.find((view)=>view[1]===viewType);return[view?view[0]:false,viewType];});const group={rowValues:cell.groupId[0],colValues:cell.groupId[1],originIndex:cell.originIndexes[0],};this.openView(this.model.getGroupDomain(group),this.views,context);}}
PivotController.template="web.PivotView";PivotController.components={Dropdown,DropdownItem,Layout};PivotController.props={...standardViewProps,Model:Function,modelParams:Object,Renderer:Function,buttonTemplate:String,};return __exports;});;

/* /web/static/src/views/pivot/pivot_group_by_menu.js */
odoo.define('@web/views/pivot/pivot_group_by_menu',async function(require){'use strict';let __exports={};const{GroupByMenu}=require("@web/search/group_by_menu/group_by_menu");const{getIntervalOptions}=require("@web/search/utils/dates");const PivotGroupByMenu=__exports.PivotGroupByMenu=class PivotGroupByMenu extends GroupByMenu{get items(){let items=super.items.filter((i)=>!i.custom);if(items.length===0){items=this.fields;}
let groupNumber=1+Math.max(0,...items.map(({groupNumber:n})=>n));for(const[fieldName,customGroupBy]of this.props.customGroupBys.entries()){items.push({...customGroupBy,name:fieldName,groupNumber:groupNumber++});}
return items.map((item)=>({...item,id:item.id||item.name,fieldName:item.fieldName||item.name,description:item.description||item.string,isActive:false,options:item.options||["date","datetime"].includes(item.type)?getIntervalOptions():undefined,}));}
onAddCustomGroup(fieldName){this.props.onAddCustomGroupBy(fieldName);}
onGroupBySelected({itemId,optionId}){const item=this.items.find(({id})=>id===itemId);this.props.onItemSelected({itemId,optionId,fieldName:item.fieldName,interval:optionId,groupId:this.props.cell.groupId,});}}
return __exports;});;

/* /web/static/src/views/pivot/pivot_model.js */
odoo.define('@web/views/pivot/pivot_model',async function(require){'use strict';let __exports={};const{Domain}=require("@web/core/domain");const{cartesian,sections,sortBy,symmetricalDifference}=require("@web/core/utils/arrays");const{KeepLast,Race}=require("@web/core/utils/concurrency");const{computeVariation}=require("@web/core/utils/numbers");const{DEFAULT_INTERVAL}=require("@web/search/utils/dates");const{Model}=require("@web/views/model");const{computeReportMeasures,processMeasure}=require("@web/views/utils");const PivotModel=__exports.PivotModel=class PivotModel extends Model{setup(params){this.keepLast=new KeepLast();this.race=new Race();const _loadData=this._loadData.bind(this);this._loadData=(...args)=>{return this.race.add(_loadData(...args));};let sortedColumn=params.metaData.sortedColumn||null;if(!sortedColumn&&params.metaData.defaultOrder){const defaultOrder=params.metaData.defaultOrder.split(" ");sortedColumn={groupId:[[],[]],measure:defaultOrder[0],order:defaultOrder[1]?defaultOrder[1]:"asc",};}
this.searchParams={context:{},domain:[],domains:[],groupBy:[],};this.data=params.data||{colGroupTree:null,rowGroupTree:null,groupDomains:{},measurements:{},counts:{},numbering:{},};const metaData=Object.assign({},params.metaData,{customGroupBys:params.metaData.customGroupBys||new Map(),expandedRowGroupBys:params.metaData.expandedRowGroupBys||[],expandedColGroupBys:params.metaData.expandedColGroupBys||[],sortedColumn,});this.metaData=this._buildMetaData(metaData);this.reload=false;this.nextActiveMeasures=null;}
async addGroupBy(params){if(this.race.getCurrentProm()){return;}
const{groupId,fieldName,type,custom}=params;let{interval}=params;const metaData=this._buildMetaData();if(custom&&!metaData.customGroupBys.has(fieldName)){const field=metaData.fields[fieldName];if(!interval&&["date","datetime"].includes(field.type)){interval=DEFAULT_INTERVAL;}
metaData.customGroupBys.set(fieldName,{...field,id:fieldName,});}
let groupBy=fieldName;if(interval){groupBy=`${groupBy}:${interval}`;}
if(type==="row"){metaData.expandedRowGroupBys.push(groupBy);}else{metaData.expandedColGroupBys.push(groupBy);}
const config={metaData,data:this.data};await this._expandGroup(groupId,type,config);this.metaData=metaData;this.notify();}
closeGroup(groupId,type){if(this.race.getCurrentProm()){return;}
let groupBys;let expandedGroupBys;let keyPart;let group;let tree;if(type==="row"){groupBys=this.metaData.rowGroupBys;expandedGroupBys=this.metaData.expandedRowGroupBys;tree=this.data.rowGroupTree;group=this._findGroup(this.data.rowGroupTree,groupId[0]);keyPart=0;}else{groupBys=this.metaData.colGroupBys;expandedGroupBys=this.metaData.expandedColGroupBys;tree=this.data.colGroupTree;group=this._findGroup(this.data.colGroupTree,groupId[1]);keyPart=1;}
const groupIdPart=groupId[keyPart];const range=groupIdPart.map((_,index)=>index);function keep(key){const idPart=JSON.parse(key)[keyPart];return(range.some((index)=>groupIdPart[index]!==idPart[index])||idPart.length===groupIdPart.length);}
function omitKeys(object){const newObject={};for(const key in object){if(keep(key)){newObject[key]=object[key];}}
return newObject;}
this.data.measurements=omitKeys(this.data.measurements);this.data.counts=omitKeys(this.data.counts);this.data.groupDomains=omitKeys(this.data.groupDomains);group.directSubTrees.clear();delete group.sortedKeys;var newGroupBysLength=this._getTreeHeight(tree)-1;if(newGroupBysLength<=groupBys.length){expandedGroupBys.splice(0);groupBys.splice(newGroupBysLength);}else{expandedGroupBys.splice(newGroupBysLength-groupBys.length);}
this.notify();}
async expandAll(){const config={metaData:this.metaData,data:this.data};await this._loadData(config,false);this.notify();}
async expandGroup(groupId,type){if(this.race.getCurrentProm()){return;}
const config={metaData:this.metaData,data:this.data};await this._expandGroup(groupId,type,config);this.notify();}
exportData(){const measureCount=this.metaData.activeMeasures.length;const originCount=this.metaData.origins.length;const table=this.getTable();const headers=table.headers;let colGroupHeaderRows;let measureRow=[];let originRow=[];function processHeader(header){const inTotalColumn=header.groupId[1].length===0;return{title:header.title,width:header.width,height:header.height,is_bold:!!header.measure&&inTotalColumn,};}
if(originCount>1){colGroupHeaderRows=headers.slice(0,headers.length-2);measureRow=headers[headers.length-2].map(processHeader);originRow=headers[headers.length-1].map(processHeader);}else{colGroupHeaderRows=headers.slice(0,headers.length-1);measureRow=headers[headers.length-1].map(processHeader);}
colGroupHeaderRows[0].splice(0,1);colGroupHeaderRows=colGroupHeaderRows.map((headerRow)=>{return headerRow.map(processHeader);});const tableRows=table.rows.map((row)=>{return{title:row.title,indent:row.indent,values:row.subGroupMeasurements.map((measurement)=>{let value=measurement.value;if(value===undefined){value="";}else if(measurement.originIndexes.length>1){value=value*100;}
return{is_bold:measurement.isBold,value:value,};}),};});return{model:this.metaData.resModel,title:this.metaData.title,col_group_headers:colGroupHeaderRows,measure_headers:measureRow,origin_headers:originRow,rows:tableRows,measure_count:measureCount,origin_count:originCount,};}
async flip(){await this.race.getCurrentProm();let temp=this.data.rowGroupTree;this.data.rowGroupTree=this.data.colGroupTree;this.data.colGroupTree=temp;temp=this.metaData.rowGroupBys;this.metaData.rowGroupBys=this.metaData.colGroupBys;this.metaData.colGroupBys=temp;temp=this.metaData.expandedColGroupBys;this.metaData.expandedColGroupBys=this.metaData.expandedRowGroupBys;this.metaData.expandedRowGroupBys=temp;function twistKey(key){return JSON.stringify(JSON.parse(key).reverse());}
function twist(object){const newObject={};Object.keys(object).forEach((key)=>{const value=object[key];newObject[twistKey(key)]=value;});return newObject;}
this.data.measurements=twist(this.data.measurements);this.data.counts=twist(this.data.counts);this.data.groupDomains=twist(this.data.groupDomains);this.notify();}
getGroupDomain(group){const config={metaData:this.metaData,data:this.data};return this._getGroupDomain(group,config);}
getTable(){const headers=this._getTableHeaders();return{headers:headers,rows:this._getTableRows(this.data.rowGroupTree,headers[headers.length-1]),};}
getTableWidth(){var leafCounts=this._getLeafCounts(this.data.colGroupTree);return leafCounts[JSON.stringify(this.data.colGroupTree.root.values)]+2;}
hasData(){return this._hasData(this.data);}
async load(searchParams){this.searchParams=searchParams;const activeMeasures=processMeasure(searchParams.context.pivot_measures)||this.metaData.activeMeasures;const metaData=this._buildMetaData({activeMeasures});if(!this.reload){metaData.rowGroupBys=searchParams.context.pivot_row_groupby||(searchParams.groupBy.length?searchParams.groupBy:metaData.rowGroupBys);this.reload=true;}else{metaData.rowGroupBys=searchParams.groupBy.length?searchParams.groupBy:searchParams.context.pivot_row_groupby||metaData.rowGroupBys;}
metaData.colGroupBys=searchParams.context.pivot_column_groupby||this.metaData.colGroupBys;if(JSON.stringify(metaData.rowGroupBys)!==JSON.stringify(this.metaData.rowGroupBys)){metaData.expandedRowGroupBys=[];}
if(JSON.stringify(metaData.colGroupBys)!==JSON.stringify(this.metaData.colGroupBys)){metaData.expandedColGroupBys=[];}
metaData.measures=computeReportMeasures(metaData.fields,metaData.fieldAttrs,metaData.activeMeasures);const config={metaData,data:this.data};return this._loadData(config);}
sortRows(sortedColumn){if(this.race.getCurrentProm()){return;}
const config={metaData:this.metaData,data:this.data};this._sortRows(sortedColumn,config);this.notify();}
async toggleMeasure(fieldName){const metaData=this._buildMetaData();this.nextActiveMeasures=this.nextActiveMeasures||metaData.activeMeasures;metaData.activeMeasures=this.nextActiveMeasures;const index=metaData.activeMeasures.indexOf(fieldName);if(index!==-1){metaData.activeMeasures.splice(index,1);await Promise.resolve(this.race.getCurrentProm());this.metaData=metaData;}else{metaData.activeMeasures.push(fieldName);const config={metaData,data:this.data};await this._loadData(config);this.useSampleModel=false;}
this.nextActiveMeasures=null;this.notify();}
_addGroup(groupTree,labels,values){let tree=groupTree;values.slice(0,values.length-1).forEach(function(value){tree=tree.directSubTrees.get(value);});const value=values[values.length-1];if(tree.directSubTrees.has(value)){return;}
tree.directSubTrees.set(value,{root:{labels:labels,values:values,},directSubTrees:new Map(),});}
_buildMetaData(params){const metaData=Object.assign({},this.metaData,params);metaData.activeMeasures=[...metaData.activeMeasures];metaData.colGroupBys=[...metaData.colGroupBys];metaData.rowGroupBys=[...metaData.rowGroupBys];metaData.expandedColGroupBys=[...metaData.expandedColGroupBys];metaData.expandedRowGroupBys=[...metaData.expandedRowGroupBys];metaData.customGroupBys=new Map([...metaData.customGroupBys]);metaData.sortedColumn=metaData.sortedColumn?{...metaData.sortedColumn}:null;if(this.searchParams.comparison){const domains=this.searchParams.comparison.domains.slice().reverse();metaData.domains=domains.map((d)=>d.arrayRepr);metaData.origins=domains.map((d)=>d.description);}else{metaData.domains=[this.searchParams.domain];metaData.origins=[""];}
Object.defineProperty(metaData,"fullColGroupBys",{get(){return metaData.colGroupBys.concat(metaData.expandedColGroupBys);},});Object.defineProperty(metaData,"fullRowGroupBys",{get(){return metaData.rowGroupBys.concat(metaData.expandedRowGroupBys);},});return metaData;}
async _expandGroup(groupId,type,config){const{metaData}=config;const group={rowValues:groupId[0],colValues:groupId[1],type:type,};const groupValues=type==="row"?groupId[0]:groupId[1];const groupBys=type==="row"?metaData.fullRowGroupBys:metaData.fullColGroupBys;if(groupValues.length>=groupBys.length){throw new Error("Cannot expand group");}
const groupBy=groupBys[groupValues.length];let leftDivisors;let rightDivisors;if(group.type==="row"){leftDivisors=[[groupBy]];rightDivisors=sections(metaData.fullColGroupBys);}else{leftDivisors=sections(metaData.fullRowGroupBys);rightDivisors=[[groupBy]];}
const divisors=cartesian(leftDivisors,rightDivisors);delete group.type;await this._subdivideGroup(group,divisors,config);}
_findGroup(groupTree,values){let tree=groupTree;values.slice(0,values.length).forEach((value)=>{tree=tree.directSubTrees.get(value);});return tree;}
_getCellValue(groupId,measure,originIndexes,config){var key=JSON.stringify(groupId);if(!config.data.measurements[key]){return;}
var values=originIndexes.map((originIndex)=>{return config.data.measurements[key][originIndex][measure];});if(originIndexes.length>1){return computeVariation(values[1],values[0]);}else{return values[0];}}
_getGroupDomain(group,config){const{data}=config;var key=JSON.stringify([group.rowValues,group.colValues]);return data.groupDomains[key][group.originIndex];}
_getGroupLabels(group,groupBys,config){return groupBys.map((groupBy)=>{return this._sanitizeLabel(group[groupBy],groupBy,config);});}
async _getGroupSubdivision(group,rowGroupBy,colGroupBy,config){const groupDomain=this._getGroupDomain(group,config);const measureSpecs=this._getMeasureSpecs(config);const groupBy=rowGroupBy.concat(colGroupBy);const kwargs={lazy:false,context:this.searchParams.context};const subGroups=await this.orm.readGroup(config.metaData.resModel,groupDomain,measureSpecs,groupBy,kwargs);return{group:group,subGroups:subGroups,rowGroupBy:rowGroupBy,colGroupBy:colGroupBy,};}
_getGroupValues(group,groupBys){return groupBys.map((groupBy)=>{return this._sanitizeValue(group[groupBy]);});}
_getLeafCounts(tree){const leafCounts={};let leafCount;if(!tree.directSubTrees.size){leafCount=1;}else{leafCount=[...tree.directSubTrees.values()].reduce((acc,subTree)=>{const subLeafCounts=this._getLeafCounts(subTree);Object.assign(leafCounts,subLeafCounts);return acc+leafCounts[JSON.stringify(subTree.root.values)];},0);}
leafCounts[JSON.stringify(tree.root.values)]=leafCount;return leafCounts;}
_getMeasurements(group,config){const{metaData}=config;return metaData.activeMeasures.reduce((measurements,measureName)=>{var measurement=group[measureName];if(measurement instanceof Array){measurement=1;}
if(metaData.measures[measureName].type==="boolean"&&measurement instanceof Boolean){measurement=measurement?1:0;}
if(metaData.origins.length>1&&!measurement){measurement=0;}
measurements[measureName]=measurement;return measurements;},{});}
_getMeasuresRow(columns){const sortedColumn=this.metaData.sortedColumn||{};const measureRow=[];columns.forEach((column)=>{this.metaData.activeMeasures.forEach((measureName)=>{const measureCell={groupId:column.groupId,height:1,measure:measureName,title:this.metaData.measures[measureName].string,width:2*this.metaData.origins.length-1,};if(sortedColumn.measure===measureName&&JSON.stringify(sortedColumn.groupId)===JSON.stringify(column.groupId)){measureCell.order=sortedColumn.order;}
measureRow.push(measureCell);});});return measureRow;}
_getMeasureSpecs(config){const{metaData}=config;return metaData.activeMeasures.reduce((acc,measure)=>{if(measure==="__count"){acc.push(measure);return acc;}
const field=this.metaData.fields[measure];if(field.type==="many2one"){field.group_operator="count_distinct";}
if(field.group_operator===undefined){throw new Error("No aggregate function has been provided for the measure '"+measure+"'");}
acc.push(measure+":"+field.group_operator);return acc;},[]);}
_getNumberedLabel(label,fieldName,config){const{data}=config;const id=label[0];const name=label[1];data.numbering[fieldName]=data.numbering[fieldName]||{};data.numbering[fieldName][name]=data.numbering[fieldName][name]||{};const numbers=data.numbering[fieldName][name];numbers[id]=numbers[id]||Object.keys(numbers).length+1;return name+(numbers[id]>1?"  ("+numbers[id]+")":"");}
_getOriginsRow(columns){const sortedColumn=this.metaData.sortedColumn||{};const originRow=[];columns.forEach((column)=>{const groupId=column.groupId;const measure=column.measure;const isSorted=sortedColumn.measure===measure&&JSON.stringify(sortedColumn.groupId)===JSON.stringify(groupId);const isSortedByOrigin=isSorted&&!sortedColumn.originIndexes[1];const isSortedByVariation=isSorted&&sortedColumn.originIndexes[1];this.metaData.origins.forEach((origin,originIndex)=>{const originCell={groupId:groupId,height:1,measure:measure,originIndexes:[originIndex],title:origin,width:1,};if(isSortedByOrigin&&sortedColumn.originIndexes[0]===originIndex){originCell.order=sortedColumn.order;}
originRow.push(originCell);if(originIndex>0){const variationCell={groupId:groupId,height:1,measure:measure,originIndexes:[originIndex-1,originIndex],title:this.env._t("Variation"),width:1,};if(isSortedByVariation&&sortedColumn.originIndexes[1]===originIndex){variationCell.order=sortedColumn.order;}
originRow.push(variationCell);}});});return originRow;}
_getTableHeaders(){const _t=this.env._t;const colGroupBys=this.metaData.fullColGroupBys;const height=colGroupBys.length+1;const measureCount=this.metaData.activeMeasures.length;const originCount=this.metaData.origins.length;const leafCounts=this._getLeafCounts(this.data.colGroupTree);let headers=[];const measureColumns=[];const colGroupRows=new Array(height).fill(0).map(()=>[]);colGroupRows[0].push({height:height+1+(originCount>1?1:0),title:"",width:1,});function generateTreeHeaders(tree,fields){const group=tree.root;const rowIndex=group.values.length;const row=colGroupRows[rowIndex];const groupId=[[],group.values];const isLeaf=!tree.directSubTrees.size;const leafCount=leafCounts[JSON.stringify(tree.root.values)];const cell={groupId:groupId,height:isLeaf?colGroupBys.length+1-rowIndex:1,isLeaf:isLeaf,isFolded:isLeaf&&colGroupBys.length>group.values.length,label:rowIndex===0?undefined:fields[colGroupBys[rowIndex-1].split(":")[0]].string,title:group.labels.length?group.labels[group.labels.length-1]:_t("Total"),width:leafCount*measureCount*(2*originCount-1),};row.push(cell);if(isLeaf){measureColumns.push(cell);}
[...tree.directSubTrees.values()].forEach((subTree)=>{generateTreeHeaders(subTree,fields);});}
generateTreeHeaders(this.data.colGroupTree,this.metaData.fields);if(leafCounts[JSON.stringify(this.data.colGroupTree.root.values)]>1){var groupId=[[],[]];var totalTopRightCell={groupId:groupId,height:height,title:"",width:measureCount*(2*originCount-1),};colGroupRows[0].push(totalTopRightCell);measureColumns.push(totalTopRightCell);}
headers=headers.concat(colGroupRows);var measuresRow=this._getMeasuresRow(measureColumns);headers.push(measuresRow);if(originCount>1){headers.push(this._getOriginsRow(measuresRow));}
return headers;}
_getTableRows(tree,columns){let rows=[];const group=tree.root;const rowGroupId=[group.values,[]];const title=group.labels.length?group.labels[group.labels.length-1]:this.env._t("Total");const indent=group.labels.length;const isLeaf=!tree.directSubTrees.size;const rowGroupBys=this.metaData.fullRowGroupBys;const subGroupMeasurements=columns.map((column)=>{const colGroupId=column.groupId;const groupIntersectionId=[rowGroupId[0],colGroupId[1]];const measure=column.measure;const originIndexes=column.originIndexes||[0];const value=this._getCellValue(groupIntersectionId,measure,originIndexes,{data:this.data,});const measurement={groupId:groupIntersectionId,originIndexes:originIndexes,measure:measure,value:value,isBold:!groupIntersectionId[0].length||!groupIntersectionId[1].length,};return measurement;});rows.push({title:title,label:indent===0?undefined:this.metaData.fields[rowGroupBys[indent-1].split(":")[0]].string,groupId:rowGroupId,indent:indent,isLeaf:isLeaf,isFolded:isLeaf&&rowGroupBys.length>group.values.length,subGroupMeasurements:subGroupMeasurements,});const subTreeKeys=tree.sortedKeys||[...tree.directSubTrees.keys()];subTreeKeys.forEach((subTreeKey)=>{const subTree=tree.directSubTrees.get(subTreeKey);rows=rows.concat(this._getTableRows(subTree,columns));});return rows;}
_getTreeHeight(tree){const subTreeHeights=[...tree.directSubTrees.values()].map(this._getTreeHeight.bind(this));return Math.max(0,Math.max.apply(null,subTreeHeights))+1;}
_hasData(data){return(data.counts[JSON.stringify([[],[]])]||[]).some((count)=>{return count>0;});}
async _loadData(config,prune=true){config.data={};const{data,metaData}=config;data.rowGroupTree={root:{labels:[],values:[]},directSubTrees:new Map()};data.colGroupTree={root:{labels:[],values:[]},directSubTrees:new Map()};data.measurements={};data.counts={};data.groupDomains={};data.numbering={};const key=JSON.stringify([[],[]]);data.groupDomains[key]=metaData.domains.slice(0);const group={rowValues:[],colValues:[]};const leftDivisors=sections(metaData.fullRowGroupBys);const rightDivisors=sections(metaData.fullColGroupBys);const divisors=cartesian(leftDivisors,rightDivisors);await this._subdivideGroup(group,divisors.slice(0,1),config);await this._subdivideGroup(group,divisors.slice(1),config);if(prune&&this._hasData(data)&&this._hasData(this.data)){if(symmetricalDifference(metaData.rowGroupBys,this.metaData.rowGroupBys).length===0){this._pruneTree(data.rowGroupTree,this.data.rowGroupTree);}
if(symmetricalDifference(metaData.colGroupBys,this.metaData.colGroupBys).length===0){this._pruneTree(data.colGroupTree,this.data.colGroupTree);}}
this.data=config.data;this.metaData=config.metaData;}
_prepareData(group,groupSubdivisions,config){const{data,metaData}=config;const groupRowValues=group.rowValues;let groupRowLabels=[];let rowSubTree=data.rowGroupTree;let root;if(groupRowValues.length){rowSubTree=this._findGroup(data.rowGroupTree,groupRowValues);root=rowSubTree.root;groupRowLabels=root.labels;}
const groupColValues=group.colValues;let groupColLabels=[];if(groupColValues.length){root=this._findGroup(data.colGroupTree,groupColValues).root;groupColLabels=root.labels;}
groupSubdivisions.forEach((groupSubdivision)=>{groupSubdivision.subGroups.forEach((subGroup)=>{const rowValues=groupRowValues.concat(this._getGroupValues(subGroup,groupSubdivision.rowGroupBy));const rowLabels=groupRowLabels.concat(this._getGroupLabels(subGroup,groupSubdivision.rowGroupBy,config));const colValues=groupColValues.concat(this._getGroupValues(subGroup,groupSubdivision.colGroupBy));const colLabels=groupColLabels.concat(this._getGroupLabels(subGroup,groupSubdivision.colGroupBy,config));if(!colValues.length&&rowValues.length){this._addGroup(data.rowGroupTree,rowLabels,rowValues);}
if(colValues.length&&!rowValues.length){this._addGroup(data.colGroupTree,colLabels,colValues);}
const key=JSON.stringify([rowValues,colValues]);const originIndex=groupSubdivision.group.originIndex;if(!(key in data.measurements)){data.measurements[key]=metaData.origins.map(()=>{return this._getMeasurements({},config);});}
data.measurements[key][originIndex]=this._getMeasurements(subGroup,config);if(!(key in data.counts)){data.counts[key]=metaData.origins.map(function(){return 0;});}
data.counts[key][originIndex]=subGroup.__count;if(!(key in data.groupDomains)){data.groupDomains[key]=metaData.origins.map(function(){return Domain.FALSE.toList();});}
if(subGroup.__domain){data.groupDomains[key][originIndex]=subGroup.__domain;}});});if(metaData.sortedColumn){this._sortRows(metaData.sortedColumn,config);}}
_pruneTree(tree,oldTree){if(!oldTree.directSubTrees.size){tree.directSubTrees.clear();delete tree.sortedKeys;return;}
[...tree.directSubTrees.keys()].forEach((subTreeKey)=>{const subTree=tree.directSubTrees.get(subTreeKey);if(!oldTree.directSubTrees.has(subTreeKey)){subTree.directSubTrees.clear();delete subTreeKey.sortedKeys;}else{const oldSubTree=oldTree.directSubTrees.get(subTreeKey);this._pruneTree(subTree,oldSubTree);}});}
_sanitizeLabel(value,groupBy,config){const{metaData}=config;const fieldName=groupBy.split(":")[0];if(fieldName&&metaData.fields[fieldName]&&metaData.fields[fieldName].type==="boolean"){return value===undefined?this.env._t("None"):value?this.env._t("Yes"):this.env._t("No");}
if(value===false){return this.env._t("None");}
if(value instanceof Array){return this._getNumberedLabel(value,fieldName,config);}
if(fieldName&&metaData.fields[fieldName]&&metaData.fields[fieldName].type==="selection"){const selected=metaData.fields[fieldName].selection.find((o)=>o[0]===value);return selected?selected[1]:value;}
return value;}
_sanitizeValue(value){if(value instanceof Array){return value[0];}
return value;}
async _subdivideGroup(group,divisors,config){const{data,metaData}=config;const key=JSON.stringify([group.rowValues,group.colValues]);const proms=metaData.origins.reduce((acc,origin,originIndex)=>{if(!data.counts[key]||data.counts[key][originIndex]>0){const subGroup={rowValues:group.rowValues,colValues:group.colValues,originIndex:originIndex,};divisors.forEach((divisor)=>{acc.push(this._getGroupSubdivision(subGroup,divisor[0],divisor[1],config));});}
return acc;},[]);const groupSubdivisions=await this.keepLast.add(Promise.all(proms));if(groupSubdivisions.length){this._prepareData(group,groupSubdivisions,config);}}
_sortRows(sortedColumn,config){const metaData=config.metaData||this.metaData;const data=config.data||this.data;const colGroupValues=sortedColumn.groupId[1];sortedColumn.originIndexes=sortedColumn.originIndexes||[0];metaData.sortedColumn=sortedColumn;const sortFunction=(tree)=>{return(subTreeKey)=>{const subTree=tree.directSubTrees.get(subTreeKey);const groupIntersectionId=[subTree.root.values,colGroupValues];const value=this._getCellValue(groupIntersectionId,sortedColumn.measure,sortedColumn.originIndexes,{data})||0;return sortedColumn.order==="asc"?value:-value;};};this._sortTree(sortFunction,data.rowGroupTree);}
_sortTree(sortFunction,tree){tree.sortedKeys=sortBy([...tree.directSubTrees.keys()],sortFunction(tree));[...tree.directSubTrees.values()].forEach((subTree)=>{this._sortTree(sortFunction,subTree);});}}
return __exports;});;

/* /web/static/src/views/pivot/pivot_renderer.js */
odoo.define('@web/views/pivot/pivot_renderer',async function(require){'use strict';let __exports={};const{CheckBox}=require("@web/core/checkbox/checkbox");const{localization}=require("@web/core/l10n/localization");const{registry}=require("@web/core/registry");const{formatPercentage}=require("@web/views/fields/formatters");const{PivotGroupByMenu}=require("@web/views/pivot/pivot_group_by_menu");const fieldUtils=require("web.field_utils");const{Component,onWillUpdateProps,useRef}=require("@odoo/owl");const formatters=registry.category("formatters");const PivotRenderer=__exports.PivotRenderer=class PivotRenderer extends Component{setup(){this.model=this.props.model;this.table=this.model.getTable();this.l10n=localization;this.tableRef=useRef("table");onWillUpdateProps(this.onWillUpdateProps);}
onWillUpdateProps(){this.table=this.model.getTable();}
getFormattedValue(cell){const field=this.model.metaData.measures[cell.measure];let formatType=this.model.metaData.widgets[cell.measure];if(!formatType){const fieldType=field.type;formatType=fieldType==="many2one"?"integer":fieldType;}
const formatter=formatters.get(formatType,null)||fieldUtils.format[formatType];if(!formatter){throw new Error(`${formatType} is not a defined formatter!`);}
return formatter(cell.value,field);}
getFormattedVariation(cell){if(isNaN(cell.value)){return"-";}
return formatPercentage(cell.value,this.model.metaData.fields[cell.measure]);}
getPadding(cell){return 5+cell.indent*30;}
onCellClicked(cell){this.props.onCellClicked(cell);}
onAddCustomGroupBy(type,groupId,fieldName){this.model.addGroupBy({groupId,fieldName,custom:true,type});}
onGroupBySelected(type,payload){this.model.addGroupBy({...payload,type});}
onHeaderClick(cell,type){if(cell.isLeaf&&cell.isFolded){this.model.expandGroup(cell.groupId,type);}else if(!cell.isLeaf){this.model.closeGroup(cell.groupId,type);}}
onMeasureClick(cell){this.model.sortRows({groupId:cell.groupId,measure:cell.measure,order:(cell.order||"desc")==="asc"?"desc":"asc",originIndexes:cell.originIndexes,});}
onMouseEnter(ev){var index=[...ev.currentTarget.parentNode.children].indexOf(ev.currentTarget);if(ev.currentTarget.tagName==="TH"){if(!ev.currentTarget.classList.contains("o_pivot_origin_row")&&this.model.metaData.origins.length===2){index=3*index;}
index+=1;}
this.tableRef.el.querySelectorAll("td:nth-child("+(index+1)+")").forEach((elt)=>elt.classList.add("o_cell_hover"));}
onMouseLeave(){this.tableRef.el.querySelectorAll(".o_cell_hover").forEach((elt)=>elt.classList.remove("o_cell_hover"));}}
PivotRenderer.template="web.PivotRenderer";PivotRenderer.components={CheckBox,PivotGroupByMenu};PivotRenderer.props=["model","onCellClicked"];return __exports;});;

/* /web/static/src/views/pivot/pivot_search_model.js */
odoo.define('@web/views/pivot/pivot_search_model',async function(require){'use strict';let __exports={};const{SearchModel}=require("@web/search/search_model");const PivotSearchModel=__exports.PivotSearchModel=class PivotSearchModel extends SearchModel{_getIrFilterDescription(){this.preparingIrFilterDescription=true;const result=super._getIrFilterDescription(...arguments);this.preparingIrFilterDescription=false;return result;}
_getSearchItemGroupBys(activeItem){const{searchItemId}=activeItem;const{context,type}=this.searchItems[searchItemId];if(!this.preparingIrFilterDescription&&type==="favorite"&&context.pivot_row_groupby){return context.pivot_row_groupby;}
return super._getSearchItemGroupBys(...arguments);}}
return __exports;});;

/* /web/static/src/views/pivot/pivot_view.js */
odoo.define('@web/views/pivot/pivot_view',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{PivotArchParser}=require("@web/views/pivot/pivot_arch_parser");const{PivotController}=require("@web/views/pivot/pivot_controller");const{PivotModel}=require("@web/views/pivot/pivot_model");const{PivotRenderer}=require("@web/views/pivot/pivot_renderer");const{PivotSearchModel}=require("@web/views/pivot/pivot_search_model");const viewRegistry=registry.category("views");const pivotView=__exports.pivotView={type:"pivot",display_name:_lt("Pivot"),icon:"oi oi-view-pivot",multiRecord:true,Controller:PivotController,Renderer:PivotRenderer,Model:PivotModel,ArchParser:PivotArchParser,SearchModel:PivotSearchModel,searchMenuTypes:["filter","groupBy","comparison","favorite"],buttonTemplate:"web.PivotView.Buttons",props:(genericProps,view)=>{const modelParams={};if(genericProps.state){modelParams.data=genericProps.state.data;modelParams.metaData=genericProps.state.metaData;}else{const{arch,fields,resModel}=genericProps;const archInfo=new view.ArchParser().parse(arch);if(!archInfo.activeMeasures.length||archInfo.displayQuantity){archInfo.activeMeasures.unshift("__count");}
modelParams.metaData={activeMeasures:archInfo.activeMeasures,colGroupBys:archInfo.colGroupBys,defaultOrder:archInfo.defaultOrder,disableLinking:Boolean(archInfo.disableLinking),fields:fields,fieldAttrs:archInfo.fieldAttrs,resModel:resModel,rowGroupBys:archInfo.rowGroupBys,title:archInfo.title||_lt("Untitled"),widgets:archInfo.widgets,};}
return{...genericProps,Model:view.Model,modelParams,Renderer:view.Renderer,buttonTemplate:view.buttonTemplate,};},};viewRegistry.add("pivot",pivotView);return __exports;});;

/* /web/static/src/views/record.js */
odoo.define('@web/views/record',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{useModel}=require("@web/views/model");const{RelationalModel}=require("@web/views/relational_model");const{Component,xml,onWillStart,onWillUpdateProps}=require("@odoo/owl");class _Record extends Component{setup(){const activeFields=this.props.info.activeFields||Object.fromEntries(this.props.info.fieldNames.map((f)=>[f,{attrs:{},options:{},domain:"[]"}]));this.model=useModel(RelationalModel,{resId:this.props.info.resId,resModel:this.props.info.resModel,fields:this.props.fields,viewMode:"form",rootType:"record",activeFields,mode:this.props.info.mode==="edit"?"edit":undefined,initialValues:this.props.info.initialValues,});onWillUpdateProps(async(nextProps)=>{await this.model.load({resId:nextProps.info.resId,mode:nextProps.info.mode,});});}}
_Record.template=xml`<t t-slot="default" record="model.root"/>`;const Record=__exports.Record=class Record extends Component{setup(){if(this.props.fields){this.fields=this.props.fields;}else{const orm=useService("orm");onWillStart(async()=>{this.fields=await orm.call(this.props.resModel,"fields_get",[this.props.fieldNames],{});});}}}
Record.template=xml`<_Record fields="fields" slots="props.slots" info="props" />`;Record.components={_Record};Record.props=["slots","resModel","fieldNames?","activeFields?","fields?","resId?","mode?","initialValues?",];return __exports;});;

/* /web/static/src/views/relational_model.js */
odoo.define('@web/views/relational_model',async function(require){'use strict';let __exports={};const{AlertDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{makeContext}=require("@web/core/context");const{Domain}=require("@web/core/domain");const{WarningDialog}=require("@web/core/errors/error_dialogs");const{deserializeDate,deserializeDateTime,serializeDate,serializeDateTime,}=require("@web/core/l10n/dates");const{ORM,x2ManyCommands}=require("@web/core/orm_service");const{evaluateExpr}=require("@web/core/py_js/py");const{registry}=require("@web/core/registry");const{unique}=require("@web/core/utils/arrays");const{Deferred,KeepLast,Mutex}=require("@web/core/utils/concurrency");const{memoize}=require("@web/core/utils/functions");const{escape}=require("@web/core/utils/strings");const{session}=require("@web/session");const{FormArchParser}=require("@web/views/form/form_arch_parser");const{ListConfirmationDialog}=require("@web/views/list/list_confirmation_dialog");const{Model}=require("@web/views/model");const{archParseBoolean,evalDomain,isNumeric,isRelational,isX2Many}=require("@web/views/utils");const{DateTime}=luxon;const{markRaw,markup,toRaw}=require("@odoo/owl");const preloadedDataRegistry=registry.category("preloadedData");const{CREATE,UPDATE,DELETE,FORGET,LINK_TO,DELETE_ALL,REPLACE_WITH}=x2ManyCommands;const QUICK_CREATE_FIELD_TYPES=["char","boolean","many2one","selection"];const AGGREGATABLE_FIELD_TYPES=["float","integer","monetary"];const DEFAULT_HANDLE_FIELD="sequence";const DEFAULT_QUICK_CREATE_FIELDS={display_name:{string:"Display name",type:"char"},};const DEFAULT_QUICK_CREATE_VIEW={arch:`
        <form>
            <field name="display_name" placeholder="Title" modifiers='{"required": true}' />
        </form>`,};__exports.isAllowedDateField=isAllowedDateField;function isAllowedDateField(groupByField){return(["date","datetime"].includes(groupByField.type)&&archParseBoolean(groupByField.rawAttrs.allow_group_range_value));}
function orderByToString(orderBy){return orderBy.map((o)=>`${o.name} ${o.asc ? "ASC" : "DESC"}`).join(", ");}
function processRawContext(rawContext,defaultContext){const contexts=[];if(!rawContext){return Object.assign({},defaultContext);}
contexts.push({...defaultContext,...rawContext.make()});while(rawContext.parent){rawContext=rawContext.parent;const context=rawContext.make();for(const key in context){if(key.startsWith("default_")){delete context[key];}}
contexts.push(context);}
return Object.assign({},...contexts.reverse());}
async function toggleArchive(model,resModel,resIds,doArchive,context){const method=doArchive?"action_archive":"action_unarchive";const action=await model.orm.call(resModel,method,[resIds],{context});if(action&&Object.keys(action).length!==0){model.action.doAction(action);}}
async function unselectRecord(editedRecord,abandonRecord){if(editedRecord){await editedRecord.askChanges();const canBeAbandoned=editedRecord.canBeAbandoned;if(canBeAbandoned){return abandonRecord(editedRecord.id);}else{return editedRecord.switchMode("readonly");}}}
class RequestBatcherORM extends ORM{constructor(){super(...arguments);this.searchReadBatches={};this.searchReadBatchId=1;this.batches={};}
async batch(ids,keys,callback){const key=JSON.stringify(keys);let batch=this.batches[key];if(!batch){batch={deferred:new Deferred(),scheduled:false,ids:[],};this.batches[key]=batch;}
batch.ids=unique([...batch.ids,...ids]);if(!batch.scheduled){batch.scheduled=true;Promise.resolve().then(async()=>{delete this.batches[key];let result;try{result=await callback(batch.ids);}catch(e){return batch.deferred.reject(e);}
batch.deferred.resolve(result);});}
return batch.deferred;}
async nameGet(resModel,resIds,kwargs){const pairs=await this.batch(resIds,["name_get",resModel,kwargs],(resIds)=>super.nameGet(resModel,resIds,kwargs));return pairs.filter(([id])=>resIds.includes(id));}
async read(resModel,resIds,fields,kwargs){const records=await this.batch(resIds,["read",resModel,fields,kwargs],(resIds)=>super.read(resModel,resIds,fields,kwargs));return records.filter((r)=>resIds.includes(r.id));}
async unlink(resModel,resIds,kwargs){return this.batch(resIds,["unlink",resModel,kwargs],(resIds)=>super.unlink(resModel,resIds,kwargs));}
async webSearchRead(){const batchId=this.searchReadBatchId;let batch=this.searchReadBatches[batchId];if(!batch){batch={deferred:new Deferred(),count:0,};Promise.resolve().then(()=>this.searchReadBatchId++);this.searchReadBatches[batchId]=batch;}
batch.count++;const result=await super.webSearchRead(...arguments);batch.count--;if(batch.count===0){delete this.searchReadBatches[batchId];batch.deferred.resolve();}
await batch.deferred;return result;}}
let nextId=0;class DataPoint{constructor(model,params={},state={}){this.id=`datapoint_${nextId++}`;this.model=model;this.resModel=params.resModel;this.fields=params.fields;this.setActiveFields(params.activeFields);this.rawContext=params.rawContext;this.defaultContext=params.defaultContext;this.setup(params,state);}
get context(){return processRawContext(this.rawContext,this.defaultContext);}
get fieldNames(){return Object.keys(this.activeFields);}
exportState(){return{};}
async load(){throw new Error("load must be implemented");}
setup(){}
invalidateCache(){if(this.resModel==="res.currency"){}
if(this.resModel==="res.company"){this.model.action.doAction("reload_context");}
if(this.model.noCacheModels.includes(this.resModel)){this.model.env.bus.trigger("CLEAR-CACHES");}}
setActiveFields(activeFields){this.activeFields=activeFields||{};}
_parseServerValue(field,value){switch(field.type){case"date":{return value?deserializeDate(value):false;}
case"datetime":{return value?deserializeDateTime(value):false;}
case"html":{return markup(value||"");}
case"selection":{if(value===false){const hasKey0=field.selection.find((option)=>option[0]===0);return hasKey0?0:value;}
break;}}
return value;}
_parseServerValues(values){const parsedValues={};if(!values){return parsedValues;}
for(const fieldName in values){const value=values[fieldName];const field=this.fields[fieldName];parsedValues[fieldName]=this._parseServerValue(field,value);}
return parsedValues;}}
markRaw(DataPoint.prototype);function clearObject(obj){for(const key in obj){delete obj[key];}}
const Record=__exports.Record=class Record extends DataPoint{setup(params,state){if("resId"in params){this.resId=params.resId;}else if(state){this.resId=state.resId;}
if(!this.resId){this.resId=false;this.virtualId=params.virtualId||this.model.nextVirtualId;}
this.resIds=(params.resIds?toRaw(params.resIds):null)||state.resIds||(this.resId?[this.resId]:[]);this._values={};this._changes={};this.data={};this.parentActiveFields=params.parentActiveFields||false;this.onChanges=params.onChanges||(()=>{});this._invalidFields=new Set();this.preloadedData={};this.preloadedDataCaches={};this.isInQuickCreation=params.isInQuickCreation||false;this._onChangePromise=Promise.resolve({});this._domains={};this.relationField=params.relationField;this.parentRecord=params.parentRecord;this.getParentRecordContext=params.getParentRecordContext;this.selected=false;this.mode=params.mode||(this.resId?state.mode||"readonly":"edit");this._onWillSwitchMode=params.onRecordWillSwitchMode||(()=>{});this.canBeAbandoned=this.isVirtual;}
get dataContext(){const evalContext={...this.model.user.context};for(const fieldName in this.activeFields){const value=this.data[fieldName];if([null].includes(value)){evalContext[fieldName]=false;}else if(isX2Many(this.fields[fieldName])){const list=this._cache[fieldName];evalContext[fieldName]=list.currentIds;}else if(value&&this.fields[fieldName].type==="date"){evalContext[fieldName]=serializeDate(value);}else if(value&&this.fields[fieldName].type==="datetime"){evalContext[fieldName]=serializeDateTime(value);}else if(value&&this.fields[fieldName].type==="many2one"){evalContext[fieldName]=value[0];}else if(value&&this.fields[fieldName].type==="reference"){evalContext[fieldName]=`${value.resModel},${value.resId}`;}else{evalContext[fieldName]=value;}}
evalContext.id=this.resId||false;if(this.getParentRecordContext){evalContext.parent=this.getParentRecordContext();}
return evalContext;}
get evalContext(){if(!this.__evalContext){this.__evalContext={...this.dataContext,...this.context,active_id:this.resId||false,active_ids:this.resId?[this.resId]:[],active_model:this.resModel,current_company_id:this.model.company.currentCompany.id,};Promise.resolve().then(()=>(this.__evalContext=null));}
return this.__evalContext;}
get isActive(){if("active"in this.activeFields){return this.data.active;}else if("x_active"in this.activeFields){return this.data.x_active;}
return true;}
get isDirty(){if(this.canBeAbandoned){return false;}
const changes={...this._changes};for(const fieldName in changes){const fieldType=this.fields[fieldName].type;if(["one2many","many2many"].includes(fieldType)){if(changes[fieldName].getCommands()){return true;}}else{return true;}}
return false;}
get dirtyFields(){if(!this.isDirty){return[];}
return this._changes.map((change)=>this.activeFields[change]);}
get isInEdition(){return this.mode==="edit";}
get isNew(){return this.isVirtual;}
get isVirtual(){return!this.resId;}
async urgentSave(){this._urgentSave=true;this.model.env.bus.trigger("RELATIONAL_MODEL:WILL_SAVE_URGENTLY");return this._save({stayInEdition:true,noReload:true});}
async archive(){await toggleArchive(this.model,this.resModel,[this.resId],true,this.context);await this.load();this.model.notify();this.invalidateCache();}
async askChanges(){const proms=[];this.model.env.bus.trigger("RELATIONAL_MODEL:NEED_LOCAL_CHANGES",{proms});await Promise.all([...proms,this.model.mutex.getUnlockedDef()]);}
async checkValidity(){if(!this._urgentSave){await this.askChanges();}
return this._checkValidity();}
_checkValidity(){for(const fieldName in this._requiredFields){const fieldType=this.fields[fieldName].type;const activeField=this.activeFields[fieldName];if(!evalDomain(this._requiredFields[fieldName],this.evalContext)||(activeField&&activeField.alwaysInvisible)){this._removeInvalidFields([fieldName]);continue;}
const isSet=activeField&&activeField.FieldComponent&&activeField.FieldComponent.isSet;if(this.isRequired(fieldName)&&isSet&&!isSet(this.data[fieldName])){this.setInvalidField(fieldName);continue;}
switch(fieldType){case"boolean":case"float":case"integer":case"monetary":continue;case"one2many":case"many2many":if(!this.isX2ManyValid(fieldName)){this.setInvalidField(fieldName);}
break;default:if(!isSet&&this.isRequired(fieldName)&&!this.data[fieldName]){this.setInvalidField(fieldName);}}}
return!this._invalidFields.size;}
async delete(){const unlinked=await this.model.orm.unlink(this.resModel,[this.resId],{context:this.context,});if(!unlinked){return false;}
const index=this.resIds.indexOf(this.resId);this.resIds.splice(index,1);this.resId=this.resIds[Math.min(index,this.resIds.length-1)]||false;if(this.resId){await this.load();this.model.notify();}else{this.data={};this._values={};this._changes={};this.preloadedData={};}
this.invalidateCache();}
discard(){clearObject(this._changes);clearObject(this._domains);for(const fieldName in this.activeFields){const field=this.fields[fieldName];if(isX2Many(field)){this.data[fieldName].discard();}else if(fieldName in this._values){this.data[fieldName]=this._values[fieldName];}}
this._invalidFields.clear();if(!this.isVirtual){this.switchMode("readonly");}
this.model.notify();}
async duplicate(){const kwargs={context:this.context};const index=this.resIds.indexOf(this.resId);this.resId=await this.model.orm.call(this.resModel,"copy",[this.resId],kwargs);this.resIds.splice(index+1,0,this.resId);await this.load();this.switchMode("edit");this.model.notify();}
exportState(){return{mode:this.mode,resId:this.resId,resIds:this.resIds,};}
getChanges(allFields=false,parentChanges=false){const changes={...(allFields?this.data:this._changes)};for(const fieldName in changes){if(!allFields&&fieldName in this.activeFields&&!this.activeFields[fieldName].forceSave&&this.isReadonly(fieldName)){delete changes[fieldName];continue;}
const fieldType=this.fields[fieldName].type;if(["one2many","many2many"].includes(fieldType)){const staticList=this._cache[fieldName];changes[fieldName]=staticList.getCommands(allFields);if(!changes[fieldName]){delete changes[fieldName];}}else if(fieldType==="many2one"){changes[fieldName]=changes[fieldName]?changes[fieldName][0]:false;}else if(fieldType==="date"){changes[fieldName]=changes[fieldName]?serializeDate(changes[fieldName]):false;}else if(fieldType==="datetime"){changes[fieldName]=changes[fieldName]?serializeDateTime(changes[fieldName]):false;}else if(fieldType==="reference"){const value=changes[fieldName];changes[fieldName]=value&&value.resModel&&value.resId?`${value.resModel},${value.resId}`:value||false;}}
const relationalFieldChanges={};if(allFields&&parentChanges&&this.relationField&&this.parentRecord){relationalFieldChanges[this.relationField]=this.parentRecord.getChanges(allFields);}
return{...this._rawChanges,...changes,...relationalFieldChanges,};}
getFieldContext(fieldName){return Object.assign(this.context,makeContext([this.activeFields[fieldName].context],this.evalContext));}
getFieldDomain(fieldName){const rawDomains=[this._domains[fieldName]||[],this.activeFields[fieldName].domain||this.fields[fieldName].domain||[],];const evalContext=this.evalContext;return Domain.and(rawDomains.map((d)=>(typeof d==="string"?evaluateExpr(d,evalContext):d)));}
isInvalid(fieldName){return this._invalidFields.has(fieldName);}
isInvisible(fieldName){const activeField=this.activeFields[fieldName];const{invisible}=activeField.modifiers||{};return invisible?evalDomain(invisible,this.evalContext):false;}
isReadonly(fieldName){const activeField=this.activeFields[fieldName];const{readonly}=activeField.modifiers||{};return readonly?evalDomain(readonly,this.evalContext):false;}
isRequired(fieldName){const required=this._requiredFields[fieldName];return required?evalDomain(required,this.evalContext):false;}
isX2ManyValid(fieldName){const value=this.data[fieldName];return value.records.every(async(r)=>await r.checkValidity());}
async load(params={}){this._cache={};for(const fieldName in this.activeFields){const field=this.fields[fieldName];if(isX2Many(field)){const staticList=this._createStaticList(fieldName);this._cache[fieldName]=staticList;}}
for(const fieldName in this.data){if(!(fieldName in this.activeFields)){delete this.data[fieldName];}}
if(!(params.values||!this.isVirtual)){const changes=params.changes||(await this._onChange());await this._load({changes});}else{let values=this._parseServerValues(params.values);const missingFields=this.fieldNames.filter((fieldName)=>!(fieldName in values));if(missingFields.length){values=Object.assign({},values,await this._read(missingFields));}
await this._load({values});}}
async loadPreloadedData(){const fetchPreloadedData=async(info,fieldName)=>{if(!info.loadOnTypes.includes(this.fields[fieldName].type)){return;}
const domain=this.getFieldDomain(fieldName).toList(this.evalContext).toString();const getExtraKey=info.extraMemoizationKey||(()=>null);const key=JSON.stringify([domain,getExtraKey(this,fieldName)]);if(this.preloadedDataCaches[fieldName]!==key){this.preloadedDataCaches[fieldName]=key;this.preloadedData[fieldName]=await info.preload(this.model.orm,this,fieldName);}};const proms=[];for(const fieldName in this.activeFields){const activeField=this.activeFields[fieldName];const type=activeField.widget||this.fields[fieldName].type;if(!this.isInvisible(fieldName)&&preloadedDataRegistry.contains(type)){proms.push(fetchPreloadedData(preloadedDataRegistry.get(type),fieldName));}}
await Promise.all(proms);}
async loadRelationalData(){const proms=[];for(const fieldName in this.activeFields){const field=this.fields[fieldName];if(field.type==="many2one"){proms.push(this._loadMany2OneData(fieldName,this.data[fieldName]).then((value)=>{this.data[fieldName]=value;this._values[fieldName]=value;}));}else if(field.type==="reference"){proms.push(this._loadReference(fieldName,this.data[fieldName]).then((value)=>{this.data[fieldName]=value;this._values[fieldName]=value;}));}else if(isX2Many(field)){proms.push(this._loadX2ManyData(fieldName));}}
await Promise.all(proms);}
async save(options={stayInEdition:false,noReload:false}){return this.model.mutex.exec(()=>this._save(options));}
setActiveFields(activeFields){super.setActiveFields(activeFields);this._requiredFields={};for(const[fieldName,activeField]of Object.entries(this.activeFields)){const{modifiers}=activeField;if(modifiers&&modifiers.required){this._requiredFields[fieldName]=modifiers.required;}}}
async setInvalidField(fieldName){if(this.selected&&this.model.multiEdit){const dialogProps={body:this.model.env._t("No valid record to save"),confirm:()=>{this.discard();},};await this.model.dialogService.add(AlertDialog,dialogProps);}else{this._invalidFields.add(fieldName);this.model.notify();}}
async switchMode(mode){if(this.mode===mode){return true;}
const canSwitch=await this._onWillSwitchMode(this,mode);if(canSwitch===false){return false;}
if(mode==="readonly"){for(const fieldName in this.activeFields){const field=this.fields[fieldName];if(isX2Many(field)){const editedRecord=this.data[fieldName]&&this.data[fieldName].editedRecord;if(editedRecord){editedRecord.switchMode("readonly");}}}}
this.mode=mode;this.model.notify();return true;}
toggleSelection(selected){if(typeof selected==="boolean"){this.selected=selected;}else{this.selected=!this.selected;}
this.model.notify();}
async unarchive(){await toggleArchive(this.model,this.resModel,[this.resId],false,this.context);await this.load();this.model.notify();this.invalidateCache();}
async update(changes,options){if(this._urgentSave){return this._update(changes,options);}
return this.model.mutex.exec(async()=>{await this._update(changes,options);});}
async _applyChanges(changes){for(let[fieldName,value]of Object.entries(changes)){const field=this.fields[fieldName];if(field&&isX2Many(field)){this._changes[fieldName]=value;await this.data[fieldName].update(value);}else{if(field&&field.type==="many2one"){value=await this.__applyMany2OneChange(fieldName,value);}else if(field&&field.type==="reference"){value=await this._loadReference(fieldName,value);}
this.data[fieldName]=value;this._changes[fieldName]=value;}}}
async __applyMany2OneChange(fieldName,nameGet){if(!nameGet){return false;}
let[id,label]=nameGet;if(!id&&!label){return[false,""];}
const relation=this.fields[fieldName].relation;const activeField=this.activeFields[fieldName];const getContext=()=>processRawContext({parent:this.rawContext,make:()=>{return makeContext([activeField.context],this.evalContext);},});if(!id&&label&&activeField){const res=await this.model.orm.call(relation,"name_create",[label],{context:getContext(),});if(!res){return[false,""];}
id=res[0];label=res[1];}else if(id&&label===undefined&&activeField){const result=await this.model.orm.nameGet(relation,[id],{context:getContext(),});label=result[0][1];}
return[id,label];}
_createStaticList(fieldName){const field=this.fields[fieldName];const activeField=this.activeFields[fieldName];const{fieldsToFetch,relatedFields={},views={},viewMode}=activeField;const fields={id:{name:"id",type:"integer",readonly:true},...relatedFields,...fieldsToFetch,};const activeFields=(views[viewMode]&&views[viewMode].activeFields)||{...fieldsToFetch,};for(const fieldName in relatedFields){if(relatedFields[fieldName].active){activeFields[fieldName]=relatedFields[fieldName];}}
const limit=views[viewMode]&&views[viewMode].limit;const orderBy=views[viewMode]&&views[viewMode].defaultOrder;const editable=views[viewMode]&&views[viewMode].editable;const list=this.model.createDataPoint("static_list",{resModel:this.fields[fieldName].relation,field,fields,activeFields,getParentRecordContext:()=>this.dataContext,limit,orderBy,editable,rawContext:{parent:this.rawContext,make:()=>{return makeContext([activeField.context],{...this.evalContext,...list.evalContext,});},},parentRecord:this,relationField:field.relation_field,views,viewMode,onChanges:async()=>{this._changes[fieldName]=list;const proms=[];if(activeField&&activeField.onChange&&this.isX2ManyValid(fieldName)){const changes=await this._onChange([fieldName]);const proms=[];for(const[fieldName,value]of Object.entries(changes)){const field=this.fields[fieldName];if(isX2Many(field)){this._changes[fieldName]=value;this.data[fieldName].applyCommands(value);proms.push(this.data[fieldName].load());}else{this._changes[fieldName]=value;this.data[fieldName]=this._changes[fieldName];}}}
this.canBeAbandoned=false;await Promise.all(proms);if(this.selected&&this.model.multiEdit){await this.model.root.multiSave(this);}
this.onChanges();},});return list;}
_getDefaultValues(){const defaultValues={};for(const fieldName of this.fieldNames){const field=this.fields[fieldName];if(isNumeric(field)){defaultValues[fieldName]=0;}else if(["date","datetime"].includes(field.type)){defaultValues[fieldName]=false;}else if(isX2Many(field)){defaultValues[fieldName]=[];}else{defaultValues[fieldName]=null;}}
return defaultValues;}
_getOnchangeSpec(){const specs={};function buildSpec(activeFields,prefix){for(const[fieldName,activeField]of Object.entries(activeFields)){const key=prefix?`${prefix}.${fieldName}`:fieldName;specs[key]=activeField.onChange?"1":"";const subViewInfo=activeField.views&&activeField.views[activeField.viewMode];if(subViewInfo){buildSpec(subViewInfo.activeFields,key);}}}
buildSpec(this.activeFields);return specs;}
async _load(params={}){this._values=params.values||{};this._changes=params.changes||{};this._rawChanges={...this._changes};const defaultValues=this._getDefaultValues();for(const fieldName in this.activeFields){delete this._rawChanges[fieldName];const field=this.fields[fieldName];if(isX2Many(field)){const resIds=this._values[fieldName];const commands=this._changes[fieldName];const staticList=this._cache[fieldName];staticList.setCurrentIds(resIds,commands);this._values[fieldName]=staticList;this._changes[fieldName]=staticList;this.data[fieldName]=staticList;}else{if(fieldName in this._changes){this.data[fieldName]=this._changes[fieldName];}else if(fieldName in this._values){this.data[fieldName]=this._values[fieldName];}else{this.data[fieldName]=defaultValues[fieldName];}}}
await this.loadRelationalData();await this.loadPreloadedData();this._invalidFields.clear();}
async _loadMany2OneData(fieldName,value){const relation=this.fields[fieldName].relation;const activeField=this.activeFields[fieldName];if(activeField&&!this.isInvisible(fieldName)&&value&&(!value[1]||activeField.options.always_reload)){const context=this.getFieldContext(fieldName);const result=await this.model.orm.nameGet(relation,[value[0]],{context});return result[0];}
return value;}
async _loadReference(fieldName,value){if(value){if(typeof value==="string"){const[resModel,resId]=value.split(",");value={resModel,resId:parseInt(resId,10)};}
const{resModel,resId}=value;const context=this.getFieldContext(fieldName);const nameGet=await this.model.orm.nameGet(resModel,[resId],{context});return{resModel,resId,displayName:nameGet[0][1],};}else{return false;}}
async _loadX2ManyData(fieldName){if(!this.isInvisible(fieldName)){await this.data[fieldName].load();}}
async _onChange(fieldNames){if(!this.fieldNames.length){return;}
const{domain,value:changes,warning}=await this.model.orm.call(this.resModel,"onchange",[this.resId?[this.resId]:[],this.getChanges(true,true),fieldNames&&fieldNames.length?fieldNames:[],this._getOnchangeSpec(),],{context:this.context});if(warning){const{type,title,message}=warning;if(type==="dialog"){this.model.dialogService.add(WarningDialog,{title,message});}else{this.model.notificationService.add(message,{className:warning.className,sticky:warning.sticky,title,type:"warning",});}}
if(domain){Object.assign(this._domains,domain);}
return this._parseServerValues(changes);}
async _read(fieldNames){fieldNames=fieldNames||this.fieldNames;if(!fieldNames.length){return{};}
const[serverValues]=await this.model.orm.read(this.resModel,[this.resId],fieldNames,{context:{bin_size:true,...this.context,},});return this._parseServerValues(serverValues);}
_removeInvalidFields(fieldNames){for(const fieldName of fieldNames){this._invalidFields.delete(fieldName);}}
_sanitizeValues(values){if(this.resModel!==this.model.resModel){return values;}
const sanitizedValues={};for(const fieldName in values){if(this.fields[fieldName].type==="char"){sanitizedValues[fieldName]=values[fieldName]||"";}else{sanitizedValues[fieldName]=values[fieldName];}}
return sanitizedValues;}
async _save(options={stayInEdition:false,noReload:false}){if(!this._checkValidity()){const invalidFields=[...this._invalidFields].map((fieldName)=>{return`<li>${escape(this.fields[fieldName].string || fieldName)}</li>`;},this);this.model.notificationService.add(markup(`<ul>${invalidFields.join("")}</ul>`),{title:this.model.env._t("Invalid fields: "),type:"danger",});return false;}
const changes=this.getChanges();const keys=Object.keys(changes);const hasChanges=this.isVirtual||keys.length;const shouldReload=hasChanges?!options.noReload:false;const context=this.context;if(this.isVirtual){if(keys.length===1&&keys[0]==="display_name"){const[resId]=await this.model.orm.call(this.resModel,"name_create",[changes.display_name],{context:this.context});this.resId=resId;}else{this.resId=await this.model.orm.create(this.resModel,[changes],{context});}
delete this.virtualId;this.data.id=this.resId;this.resIds.push(this.resId);this._changes={};this.invalidateCache();}else if(keys.length>0){try{await this.model.orm.write(this.resModel,[this.resId],changes,{context});}catch(e){if(!this.isInEdition){await this.model.reloadRecords(this);}
throw e;}
this._changes={};this.invalidateCache();}
this.isInQuickCreation=false;if(shouldReload){await this.model.reloadRecords(this);}
if(!options.stayInEdition){this.switchMode("readonly");}
return true;}
async _update(changes,{silent}={}){await this._applyChanges(changes);if(this.selected&&this.model.multiEdit){await this.model.root._multiSave(this);}else{const proms=[];const fieldNames=Object.keys(changes);if(fieldNames.length){this.onChanges();}
this._removeInvalidFields(fieldNames);if(fieldNames.some((fieldName)=>this.activeFields[fieldName]&&this.activeFields[fieldName].onChange)){const changes=await this._onChange(fieldNames);this._removeInvalidFields(Object.keys(changes));for(const[fieldName,value]of Object.entries(changes)){const field=this.fields[fieldName];if(isX2Many(field)){this._changes[fieldName]=value;this.data[fieldName].applyCommands(value);proms.push(this.data[fieldName].load());}else{this._changes[fieldName]=value;this.data[fieldName]=this._changes[fieldName];}}}
proms.push(this.loadPreloadedData());await Promise.all(proms);this.canBeAbandoned=false;if(!silent){this.model.notify();}}}}
class DynamicList extends DataPoint{setup(params,state){this.groupBy=params.groupBy||[];this.domain=markRaw(params.domain||[]);this.initialOrderBy=state.initialOrderBy||params.orderBy||[];if(params.orderBy&&params.orderBy.length&&JSON.stringify(params.orderBy)!==JSON.stringify(state.initialOrderBy)){this.orderBy=params.orderBy;}else{this.orderBy=state.orderBy||[];}
this.offset=state.offset||0;this.count=0;this.initialLimit=state.initialLimit||params.limit||this.constructor.DEFAULT_LIMIT;this.limit=state.limit||params.limit||this.constructor.DEFAULT_LIMIT;this.isDomainSelected=false;this.editedRecord=null;this.onCreateRecord=params.onCreateRecord||(()=>{});this.onRecordWillSwitchMode=async(record,mode,options)=>{const editedRecord=this.editedRecord;this.editedRecord=null;if(!params.onRecordWillSwitchMode&&editedRecord){if(editedRecord!==record&&editedRecord.canBeAbandoned){this.abandonRecord(editedRecord.id);}else{let isSaved;try{isSaved=await editedRecord.save();}catch(e){this.editedRecord=editedRecord;this.model.notify();throw e;}
if(!isSaved){this.editedRecord=editedRecord;this.model.notify();return false;}}}
if(mode==="edit"){this.editedRecord=record;}
if(params.onRecordWillSwitchMode){await params.onRecordWillSwitchMode(record,mode,options);}};}
get firstGroupBy(){return this.groupBy[0]||false;}
get groupByField(){if(!this.firstGroupBy){return false;}
const[groupByFieldName,granularity]=this.firstGroupBy.split(":");return{rawAttrs:{},...this.fields[groupByFieldName],...this.activeFields[groupByFieldName],granularity:granularity,};}
get isM2MGrouped(){return this.groupBy.some((groupBy)=>{const fieldName=groupBy.split(":")[0];return this.fields[fieldName].type==="many2many";});}
get selection(){return this.records.filter((r)=>r.selected);}
abandonRecord(recordId){const record=this.records.find((r)=>r.id===recordId);return this.removeRecord(record);}
async archive(isSelected){const resIds=await this.getResIds(isSelected);await toggleArchive(this.model,this.resModel,resIds,true,this.context);await this.model.load();this.invalidateCache();return resIds;}
canQuickCreate(){return(this.groupByField&&(isAllowedDateField(this.groupByField)||QUICK_CREATE_FIELD_TYPES.includes(this.groupByField.type)));}
canResequence(){return this.model.handleField||DEFAULT_HANDLE_FIELD in this.fields;}
exportState(){return{limit:this.limit,initialLimit:this.initialLimit,orderBy:this.orderBy,initialOrderBy:this.initialOrderBy,};}
async getResIds(isSelected){let resIds;if(isSelected){if(this.isDomainSelected){resIds=await this.model.orm.search(this.resModel,this.domain,{limit:session.active_ids_limit,context:this.context,});}else{resIds=this.selection.map((r)=>r.resId);}}else{resIds=this.records.map((r)=>r.resId);}
return resIds;}
async multiSave(record){return this.model.mutex.exec(()=>this._multiSave(record));}
selectDomain(value){this.isDomainSelected=value;this.model.notify();}
async sortBy(fieldName){if(this.orderBy.length&&this.orderBy[0].name===fieldName){this.orderBy[0].asc=!this.orderBy[0].asc;}else{this.orderBy=this.orderBy.filter((o)=>o.name!==fieldName);this.orderBy.unshift({name:fieldName,asc:true,});}
await this.load();this.model.notify();}
async unarchive(isSelected){const resIds=await this.getResIds(isSelected);await toggleArchive(this.model,this.resModel,resIds,false,this.context);await this.model.load();this.invalidateCache();return resIds;}
async _multiSave(record){if(this.blockUpdate){return;}
const selection=this.selection;const changes=record.getChanges();if(!changes){return;}
const validSelection=selection.reduce((result,record)=>{if(!Object.keys(changes).filter((fieldName)=>record.isReadonly(fieldName)||(record.isRequired(fieldName)&&!changes[fieldName])).length){result.push(record);}
return result;},[]);if(validSelection.length===0){const dialogProps={body:this.model.env._t("No valid record to save"),confirm:()=>{record.discard();},};await this.model.dialogService.add(AlertDialog,dialogProps);}else if(validSelection.length>1){this.editedRecord=null;const dialogProps={confirm:async()=>{const resIds=validSelection.map((r)=>r.resId);try{const context=this.context;await this.model.orm.write(this.resModel,resIds,changes,{context});this.invalidateCache();validSelection.forEach((record)=>{record.selected=false;});await Promise.all(validSelection.map((record)=>record.load()));record.switchMode("readonly");this.model.notify();}catch(_){record.discard();}
validSelection.forEach((record)=>{record.selected=false;});},cancel:()=>{record.discard();},isDomainSelected:this.isDomainSelected,fields:Object.keys(changes).map((fieldName)=>{const label=record.activeFields[fieldName].string||record.fields[fieldName].string;const widget=record.activeFields[fieldName].widget;return{name:fieldName,label,widget};}),nbRecords:selection.length,nbValidRecords:validSelection.length,record,fieldNodes:this.model.fieldNodes,};this.model.trigger("list-confirmation-dialog-will-open");await this.model.dialogService.add(ListConfirmationDialog,dialogProps,{onClose:()=>{this.model.trigger("list-confirmation-dialog-closed");},});}else{await record._save();record.selected=false;}}
async _resequence(originalList,resModel,movedId,targetId){if(this.resModel===resModel&&!this.canResequence()){return originalList;}
const handleField=this.model.handleField||DEFAULT_HANDLE_FIELD;const records=[...originalList];const order=this.orderBy.find((o)=>o.name===handleField);const asc=!order||order.asc;const fromIndex=records.findIndex((r)=>r.id===movedId);let toIndex=0;if(targetId!==null){const targetIndex=records.findIndex((r)=>r.id===targetId);toIndex=fromIndex>targetIndex?targetIndex+1:targetIndex;}
const getSequence=(rec)=>rec&&rec.data[handleField];const firstIndex=Math.min(fromIndex,toIndex);const lastIndex=Math.max(fromIndex,toIndex)+1;let reorderAll=records.some((record)=>record.data[handleField]===undefined);if(!reorderAll){let lastSequence=(asc?-1:1)*Infinity;for(let index=0;index<records.length;index++){const sequence=getSequence(records[index]);if(((index<firstIndex||index>=lastIndex)&&((asc&&lastSequence>=sequence)||(!asc&&lastSequence<=sequence)))||(index>=firstIndex&&index<lastIndex&&lastSequence===sequence)){reorderAll=true;}
lastSequence=sequence;}}
const[record]=records.splice(fromIndex,1);records.splice(toIndex,0,record);let toReorder=records;if(!reorderAll){toReorder=toReorder.slice(firstIndex,lastIndex).filter((r)=>r.id!==movedId);if(fromIndex<toIndex){toReorder.push(record);}else{toReorder.unshift(record);}}
if(!asc){toReorder.reverse();}
const ids=toReorder.map((r)=>r.resId).filter((s)=>s===0||(s&&!isNaN(s)));const sequences=toReorder.map(getSequence);const offset=sequences.length&&Math.min(...sequences);const params={model:resModel,ids,context:this.context};if(offset){params.offset=offset;}
if(this.model.handleField){params.field=handleField;}
const wasResequenced=await this.model.keepLast.add(this.model.rpc("/web/dataset/resequence",params));if(!wasResequenced){return originalList;}
const result=await this.model.keepLast.add(this.model.orm.read(resModel,ids,[handleField],{context:this.context}));for(const recordData of result){const record=records.find((r)=>r.resId===recordData.id);const value={[handleField]:recordData[handleField]};if(record instanceof Record){await record.update(value,{silent:true});}else{Object.assign(record.data,value);}}
return records;}
unselectRecord(){return unselectRecord(this.editedRecord,this.abandonRecord.bind(this));}}
DynamicList.DEFAULT_LIMIT=80;const DynamicRecordList=__exports.DynamicRecordList=class DynamicRecordList extends DynamicList{setup(params,state){super.setup(...arguments);this.records=[];this.data=params.data;this.countLimit=state.countLimit||params.countLimit||this.constructor.WEB_SEARCH_READ_COUNT_LIMIT;this.hasLimitedCount=false;}
async addExistingRecord(resId,atFirstPosition){const newRecord=this.model.createDataPoint("record",{resModel:this.resModel,fields:this.fields,activeFields:this.activeFields,onRecordWillSwitchMode:this.onRecordWillSwitchMode,defaultContext:this.defaultContext,rawContext:{parent:this.rawContext,make:()=>this.context,},resId,});if(this.model.useSampleModel){this.model.useSampleModel=false;await this.load();}
await this.model.keepLast.add(this.model.mutex.exec(()=>newRecord.load()));return this.addRecord(newRecord,atFirstPosition?0:this.count);}
addRecord(record,index){this.records.splice(Number.isInteger(index)?index:this.records.length,0,record);this.count++;this.model.notify();return record;}
async createRecord(params={},atFirstPosition=false){const newRecord=this.model.createDataPoint("record",{resModel:this.resModel,fields:this.fields,activeFields:this.activeFields,parentActiveFields:this.activeFields,onRecordWillSwitchMode:this.onRecordWillSwitchMode,defaultContext:this.defaultContext,rawContext:{parent:this.rawContext,make:()=>this.context,},...params,});if(this.model.useSampleModel){this.model.useSampleModel=false;await this.load();}
await this.model.keepLast.add(this.model.mutex.exec(()=>newRecord.load()));this.editedRecord=newRecord;this.onRemoveNewRecord=await this.onCreateRecord(newRecord);if(params.isInQuickCreation){return newRecord;}else{return this.addRecord(newRecord,atFirstPosition?0:this.count);}}
async deleteRecords(records=[]){let deleted=false;let resIds;if(records.length){resIds=records.map((r)=>r.resId);}else{resIds=await this.getResIds(true);records=this.records.filter((r)=>resIds.includes(r.resId));if(this.isDomainSelected){await this.model.orm.unlink(this.resModel,resIds,{context:this.context,});deleted=true;}}
if(!deleted){await Promise.all(records.map((record)=>record.delete()));}
for(const record of records){this.removeRecord(record);}
const hasReloaded=await this._adjustOffset();if(resIds.length>0&&!hasReloaded){await this.load();}
return resIds;}
empty(){this.records=[];this.count=0;}
exportState(){return{...super.exportState(),offset:this.offset,countLimit:this.countLimit,};}
async fetchCount(){const keepLast=this.model.keepLast;this.count=await keepLast.add(this.model.orm.searchCount(this.resModel,this.domain));this.countLimit=Number.MAX_SAFE_INTEGER;this.hasLimitedCount=false;this.model.notify();return this.count;}
async load(params={}){this.limit=params.limit===undefined?this.limit:params.limit;this.offset=params.offset===undefined?this.offset:params.offset;this.records=await this._loadRecords();await this._adjustOffset();}
async loadMore(){this.limit=this.records.length+this.initialLimit;this.records=await this._loadRecords();this.model.notify();}
async quickCreate(activeFields,context){await this.model.mutex.getUnlockedDef();const rawContext={parent:this.rawContext,make:()=>makeContext([context,{}]),};return this.createRecord({activeFields,rawContext,isInQuickCreation:true},true);}
removeRecord(record){const index=this.records.findIndex((r)=>r===record);if(index<0){return;}
this.records.splice(index,1);this.count--;if(this.editedRecord===record){this.editedRecord=null;if(this.onRemoveNewRecord){this.onRemoveNewRecord(record);this.onRemoveNewRecord=null;}}
this.model.notify();return record;}
async resequence(){this.records=await this._resequence(this.records,this.resModel,...arguments);this.model.notify();}
async _adjustOffset(){if(this.offset&&!this.records.length){this.offset=Math.max(this.offset-this.limit,0);await this.load();return true;}
return false;}
async _loadRecords(){if(this.countLimit<this.offset+this.limit){this.countLimit=this.offset+this.limit;}
const kwargs={limit:this.limit,offset:this.offset,order:orderByToString(this.orderBy),context:{bin_size:true,...this.context,},};if(this.countLimit!==Number.MAX_SAFE_INTEGER){kwargs.count_limit=this.countLimit+1;}
const{records:rawRecords,length}=this.data||(await this.model.orm.webSearchRead(this.resModel,this.domain,this.fieldNames,kwargs));const records=await Promise.all(rawRecords.map(async(data)=>{const record=this.model.createDataPoint("record",{resModel:this.resModel,resId:data.id,fields:this.fields,activeFields:this.activeFields,rawContext:this.rawContext,onRecordWillSwitchMode:this.onRecordWillSwitchMode,});await record.load({values:data});return record;}));delete this.data;if(length===this.countLimit+1){this.hasLimitedCount=true;this.count=length-1;}else{this.hasLimitedCount=false;this.count=length;}
return records;}}
DynamicRecordList.WEB_SEARCH_READ_COUNT_LIMIT=10000;const DynamicGroupList=__exports.DynamicGroupList=class DynamicGroupList extends DynamicList{setup(params,state){super.setup(...arguments);this.groupByInfo=params.groupByInfo||{};this.openGroupsByDefault=params.openGroupsByDefault||false;this.groups=state.groups||[];this.isGrouped=true;this.quickCreateInfo=null;this.expand=params.expand;this.limitByGroup=this.limit;this.limit=params.groupsLimit||(this.expand?this.constructor.DEFAULT_LOAD_LIMIT:this.constructor.DEFAULT_LIMIT);this.onCreateRecord=params.onCreateRecord||(async(record)=>{const editedRecord=this.editedRecord;if(editedRecord&&!record.isInQuickCreation){if(editedRecord.canBeAbandoned){this.abandonRecord(editedRecord.id);}else{await editedRecord.save();}}
this.editedRecord=record;const onRemoveRecord=(record)=>{if(this.editedRecord===record){this.editedRecord=null;}};return onRemoveRecord;});this._loadQuickCreateView=memoize(this._loadQuickCreateView.bind(this));}
get commonGroupParams(){return{fields:this.fields,activeFields:this.activeFields,resModel:this.resModel,domain:this.domain,groupBy:this.groupBy.slice(1),orderBy:this.orderBy,limit:this.limitByGroup,groupByInfo:this.groupByInfo,rawContext:this.rawContext,onCreateRecord:this.onCreateRecord,onRecordWillSwitchMode:this.onRecordWillSwitchMode,};}
get records(){return this.groups.filter((group)=>!group.isFolded).map((group)=>group.records).flat();}
addGroup(group,index){this.groups.splice(Number.isInteger(index)?index:this.count,0,group);this.count++;this.model.notify();return group;}
canQuickCreate(){return super.canQuickCreate()&&this.groups.length;}
async createGroup(groupName){await this.model.mutex.exec(()=>this._createGroup(groupName));}
async deleteGroups(groups){let shouldReload=false;await Promise.all(groups.map(async(group)=>{await group.delete();if(!this.model.useSampleModel&&group.list.records.length){shouldReload=true;}}));if(shouldReload){await this.model.load();}else{for(const group of groups){this.removeGroup(group);}}}
async deleteRecords(){const allResIds=[];for(const group of this.groups){const resIds=await group.list.deleteRecords();group.count=group.count-resIds.length;allResIds.push(...resIds);}
return allResIds;}
exportState(){const state={...super.exportState(),groups:this.groups,};delete state.limit;return state;}
groupedBy(shortType){const{type}=this.groupByField;switch(shortType){case"m2o":case"many2one":{return type==="many2one";}
case"o2m":case"one2many":{return type==="one2many";}
case"m2m":case"many2many":{return type==="many2many";}
case"m2x":case"many2x":{return["many2one","many2many"].includes(type);}
case"x2m":case"x2many":{return["one2many","many2many"].includes(type);}}
return false;}
hasAggregate(fieldName){const group=this.groups[0];return group&&fieldName in group.aggregates;}
async load(params={}){this.limit=params.limit===undefined?this.limit:params.limit;this.offset=params.offset===undefined?this.offset:params.offset;this.groups=await this._loadGroups();await Promise.all(this.groups.map((group)=>group.load()));}
get nbTotalRecords(){return this.groups.reduce((acc,group)=>acc+group.count,0);}
async quickCreate(group){group=group||this.groups[0];if(this.model.useSampleModel){this.groups.forEach((g)=>g.empty());}
this.model.useSampleModel=false;const{isFolded}=group;this.quickCreateInfo=await this._loadQuickCreateView();if(isFolded!==group.isFolded){return;}
if(isFolded){await group.toggle();}
group.quickCreateRecord=await group.quickCreate(this.quickCreateInfo.activeFields,this.context);this.model.notify();}
removeGroup(group){const index=this.groups.findIndex((g)=>g===group);this.groups.splice(index,1);this.count--;this.model.notify();return group;}
removeRecord(record){for(const group of this.groups){const removedRecord=group.list.removeRecord(record);if(removedRecord){group.count--;if(removedRecord===this.editedRecord){this.editedRecord=null;}
return removedRecord;}}}
async resequence(){const resModel=isRelational(this.groupByField)?this.groupByField.relation:this.resModel;this.groups=await this._resequence(this.groups,resModel,...arguments);this.model.notify();}
async sortBy(fieldName){if(!this.groups.length){return;}
const everyGroupIsClosed=this.groups.every((group)=>group.isFolded);if(everyGroupIsClosed&&!(this.groupBy.includes(fieldName)||this.hasAggregate(fieldName))){return;}
super.sortBy(fieldName);}
async _createGroup(groupName){const[id,displayName]=await this.model.orm.call(this.groupByField.relation,"name_create",[groupName],{context:this.context});const[lastGroup]=this.groups.slice(-1);const group=this.model.createDataPoint("group",{...this.commonGroupParams,count:0,value:id,displayName,aggregates:{},groupByField:this.groupByField,groupDomain:Domain.and([this.domain,[[this.groupByField.name,"=",id]]]).toList(),rawContext:this.rawContext,});group.isFolded=false;this.addGroup(group);if(lastGroup){await this.resequence(group.id,lastGroup.id);}
return group;}
_getValueFromGroupData(groupData,fieldName){const field=this.fields[fieldName.split(":")[0]];if(["date","datetime"].includes(field.type)){const range=groupData.__range[fieldName];if(!range){return false;}
const dateValue=this._parseServerValue(field,range.to);return dateValue.minus({[field.type==="date"?"day":"second"]:1});}else{const value=this._parseServerValue(field,groupData[fieldName]);return Array.isArray(value)?value[0]:value;}}
async _loadGroups(){const firstGroupByName=this.firstGroupBy.split(":")[0];const _orderBy=this.orderBy.filter((o)=>o.name===firstGroupByName||this.fields[o.name].group_operator!==undefined);const orderby=orderByToString(_orderBy);const{groups,length}=await this.model.orm.webReadGroup(this.resModel,this.domain,unique([...this.fieldNames,firstGroupByName]),[this.firstGroupBy],{orderby,lazy:true,expand:this.expand,expand_orderby:this.expand?orderByToString(this.orderBy):null,expand_limit:this.expand?this.limitByGroup:null,offset:this.offset,limit:this.limit,context:this.context,});this.count=length;const groupByField=this.groupByField;let openGroups=0;const groupsParams=groups.map((data)=>{const groupParams={...this.commonGroupParams,aggregates:{},groupByField,};for(const key in data){const value=data[key];switch(key){case this.firstGroupBy:{groupParams.__rawValue=value;groupParams.value=this._getValueFromGroupData(data,key);if(groupByField.type==="selection"){groupParams.displayName=Object.fromEntries(groupByField.selection)[groupParams.value];}else{groupParams.displayName=Array.isArray(value)?value[1]:value;}
if(this.groupedBy("m2x")){groupParams.recordParams=this.groupByInfo[this.firstGroupBy];}
break;}
case`__count`:case`${groupByField.name}_count`:{groupParams.count=value;break;}
case"__domain":{groupParams.groupDomain=value;break;}
case"__fold":{groupParams.isFolded=openGroups>=this.constructor.DEFAULT_LOAD_LIMIT||value;if(!value){openGroups++;}
break;}
case"__range":{groupParams.range=value;break;}
case"__data":{groupParams.data=value;break;}
default:{if(key in this.fields){if(AGGREGATABLE_FIELD_TYPES.includes(this.fields[key].type)){groupParams.aggregates[key]=value;}}}}}
const groupValue=groupParams.__rawValue;const previousGroup=this.groups.find((g)=>{if(g.deleted){return false;}
return Array.isArray(g.__rawValue)&&Array.isArray(groupValue)?g.__rawValue[0]===groupValue[0]:g.__rawValue===groupValue;});const state=previousGroup?previousGroup.exportState():{};return[groupParams,state];});if(this.openGroupsByDefault||this.expand){for(const[params,state]of groupsParams){if(openGroups>=this.constructor.DEFAULT_LOAD_LIMIT){break;}
const finalState={...params,...state};const hasValue=isRelational(this.groupByField)?finalState.value:true;if(hasValue&&!("isFolded"in finalState)){params.isFolded=false;openGroups++;}}}
return groupsParams.map(([params,state])=>this.model.createDataPoint("group",params,state));}
async _loadQuickCreateView(){const{quickCreateView:viewRef}=this.model;let quickCreateFields=DEFAULT_QUICK_CREATE_FIELDS;let quickCreateForm=DEFAULT_QUICK_CREATE_VIEW;let quickCreateRelatedModels={};if(viewRef){const{fields,relatedModels,views}=await this.model.viewService.loadViews({context:{...this.context,form_view_ref:viewRef},resModel:this.resModel,views:[[false,"form"]],});quickCreateFields=fields;quickCreateForm=views.form;quickCreateRelatedModels=relatedModels;}
const models={...quickCreateRelatedModels,[this.modelName]:quickCreateFields,};return new FormArchParser().parse(quickCreateForm.arch,models,this.modelName);}}
DynamicGroupList.DEFAULT_LOAD_LIMIT=10;const Group=__exports.Group=class Group extends DataPoint{setup(params,state){this.__rawValue=params.__rawValue;this.value=params.value;this.displayName=params.displayName;this.aggregates=params.aggregates;this.groupDomain=params.groupDomain;this.range=params.range;this.count=params.count;this.groupByField=params.groupByField;this.groupByInfo=params.groupByInfo;this.recordParams=params.recordParams;if("isFolded"in state){this.isFolded=state.isFolded;}else if("isFolded"in params){this.isFolded=params.isFolded;}else{this.isFolded=true;}
if(isRelational(this.groupByField)){this.resModel=this.groupByField.relation;this.resId=params.value||false;this.data={};}else{this.data=null;}
const listParams={data:params.data,domain:this.groupDomain,groupBy:params.groupBy,rawContext:params.rawContext,orderBy:params.orderBy,resModel:params.resModel,activeFields:params.activeFields,fields:params.fields,limit:params.limit,countLimit:params.count,groupByInfo:params.groupByInfo,onCreateRecord:params.onCreateRecord,onRecordWillSwitchMode:params.onRecordWillSwitchMode,defaultContext:{...params.defaultContext,[`default_${this.groupByField.name}`]:this.getServerValue(),},};this.list=this.model.createDataPoint("list",listParams,state.listState);}
get records(){return this.list.records;}
addRecord(record,index){this.count++;return this.list.addRecord(record,index);}
addExistingRecord(resId,atFirstPosition=false){this.count++;return this.list.addExistingRecord(resId,atFirstPosition);}
createRecord(params={},atFirstPosition=false){this.count++;this.list.createRecord(params,atFirstPosition);}
async delete(){this.deleted=true;if(this.record){return this.record.delete();}else{return this.model.orm.unlink(this.resModel,[this.value],{context:this.context,});}}
async deleteRecords(records){this.count=this.count-records.length;return this.list.deleteRecords(records);}
empty(){this.count=0;this.aggregates={};this.list.empty();}
exportState(){return{isFolded:this.isFolded,listState:this.list.exportState(),};}
getAggregableRecords(){return this.list.records.filter((r)=>!r.isInQuickCreation);}
getAggregates(fieldName){return fieldName?this.aggregates[fieldName]||0:this.count;}
getServerValue(){const{name,selection,type,granularity}=this.groupByField;switch(type){case"many2one":case"char":case"boolean":{return this.value||false;}
case"selection":{const descriptor=selection.find((opt)=>opt[0]===this.value);return descriptor&&descriptor[0];}
case"date":case"datetime":{const groupedBy=granularity?`${name}:${granularity}`:name;const range=this.range[groupedBy];if(!range){return false;}
if(type==="date"){return serializeDate(deserializeDate(range.to).minus({day:1}));}else{return serializeDateTime(deserializeDateTime(range.to).minus({second:1}));}}
default:{return false;}}}
async load(){if(!this.record&&this.recordParams){this.record=this.makeRecord(this.recordParams);await this.record.load();}
if(!this.isFolded&&this.count){await this.list.load();}}
makeRecord(params){return this.model.createDataPoint("record",{resModel:this.resModel,resId:this.value,rawContext:this.rawContext,...params,});}
quickCreate(activeFields,context){const ctx={...context,[`default_${this.groupByField.name}`]:this.getServerValue(),};return this.list.quickCreate(activeFields,ctx);}
async cancelQuickCreate(force=false){if(this.quickCreateRecord&&(force||!this.quickCreateRecord.isDirty)){this.quickCreateRecord=null;this.model.notify();}}
removeRecord(record){this.count--;return this.list.removeRecord(record);}
async toggle(){this.isFolded=!this.isFolded;await this.model.keepLast.add(this.load());this.model.notify();}
valueEquals(value){return this.value instanceof DateTime?this.value.equals(value):this.value===value;}}
function add(arr,el){const index=arr.indexOf(el);if(index===-1){arr.push(el);}}
function remove(arr,el){const index=arr.indexOf(el);if(index>-1){arr.splice(index,1);}}
const symbolValues=Symbol("values");const StaticList=__exports.StaticList=class StaticList extends DataPoint{setup(params,state){this.offset=params.offset||0;this.limit=params.limit||state.limit||this.constructor.DEFAULT_LIMIT;this.initialLimit=this.limit;this.editable=params.editable||false;this.field=params.field;this.relationField=params.relationField;this.parentRecord=params.parentRecord;this.orderBy=params.orderBy||[];this.isOrder=true;this.records=[];this._cache={};this._mapping={};this.views=params.views||{};this.viewMode=params.viewMode;this.onChanges=params.onChanges||(()=>{});this.getParentRecordContext=params.getParentRecordContext;this.editedRecord=null;this.onRecordWillSwitchMode=async(record,mode,options)=>{const editedRecord=this.editedRecord;this.editedRecord=null;if(editedRecord){const shouldCheckValidity=options.checkValidity||editedRecord.isDirty||editedRecord.canBeAbandoned;const isValid=!shouldCheckValidity||(await editedRecord.checkValidity());if(isValid){await editedRecord.switchMode("readonly");}else if(editedRecord.id!==record.id&&editedRecord.canBeAbandoned){this.abandonRecord(editedRecord.id);}else{this.editedRecord=editedRecord;return false;}}
if(mode==="edit"){this.editedRecord=record;}};}
get count(){if(!this.currentIds){throw new Error("you rascal");}
return this.currentIds.length;}
get evalContext(){return{parent:this.getParentRecordContext(),};}
async add(params){}
async addNew(params){if(params.resId){throw new Error("you rascal");}
const record=this._createRecord(params);await record.load();record._onWillSwitchMode(record,"edit");this.limit++;this.applyCommand(x2ManyCommands.create(record.virtualId,symbolValues));this.isOrder=false;this.records=this._getRecords();this.onChanges();this.model.notify();return record;}
applyCommand(command){this.applyCommands([command]);}
applyCommands(commands){this._commands=this._getNormalizedCommands(this._commands,commands);this.currentIds=this._getCurrentIds(this.currentIds,commands);this._mapping=this._getNextMapping(this._mapping,commands);}
async delete(recordIds){if(!Array.isArray(recordIds)){recordIds=[recordIds];}
const ids=[];for(const recordId of recordIds){const record=this._cache[recordId];if(record.isVirtual){delete this._cache[recordId];}
const id=record.resId||record.virtualId;ids.push(id);}
if(this.field.type==="many2many"){const nextIds=this.records.filter((rec)=>!ids.includes(rec.resId||rec.virtualId));return this.replaceWith(nextIds);}
const commands=ids.map((id)=>x2ManyCommands.delete(id));this.applyCommands(commands);await this._loadRecords();this.records=this._getRecords();this.onChanges();this.model.notify();}
discard(){for(const record of Object.values(this._cache)){if(record.isVirtual){delete this._cache[record.id];}else{record.discard();}}
this.limit=this.initialLimit;this._commands=[];this._commandsById={};this.currentIds=[...this._serverIds];this.records=this._getRecords();}
exportState(){return{limit:this.limit,};}
async load(){if(!this.count){this.records=[];return;}
const orderFieldNames=this.orderBy.map((o)=>o.name);const isAscByFieldName={};for(const o of this.orderBy){isAscByFieldName[o.name]=o.asc;}
const compareRecords=(d1,d2)=>{for(const fieldName of orderFieldNames){let v1=d1[fieldName];let v2=d2[fieldName];if(this.fields[fieldName].type==="many2one"){v1=v1[1];v2=v2[1];}
if(v1!==v2){if(v1<v2){return isAscByFieldName[fieldName]?-1:1;}else{return isAscByFieldName[fieldName]?1:-1;}}}
return 0;};const hasSeveralPages=this.limit<this.count;if(hasSeveralPages&&orderFieldNames.length){const recordValues={};const resIds=[];for(const id of this.currentIds){const recordId=this._mapping[id];if(recordId){const record=this._cache[recordId];recordValues[id]={};for(const fieldName of orderFieldNames){recordValues[id][fieldName]=record.data[fieldName];}}else{resIds.push(id);}}
if(resIds.length){const result=await this.model.orm.read(this.resModel,resIds,orderFieldNames,{context:this.context,});for(const values of result){const resId=values.id;recordValues[resId]={};for(const fieldName of orderFieldNames){recordValues[resId][fieldName]=values[fieldName];}}}
this.currentIds.sort((id1,id2)=>{return compareRecords(recordValues[id1],recordValues[id2]);});}
await this._loadRecords();if(!hasSeveralPages&&orderFieldNames.length){this.currentIds.sort((id1,id2)=>{const recId1=this._mapping[id1];const recId2=this._mapping[id2];return compareRecords(this._cache[recId1].data,this._cache[recId2].data);});}
this.records=this._getRecords();}
moveRecord(){}
getCommands(allFields=false){if(this._commands.length){const commands=[];const getRecordValues=(id)=>{const recordId=this._mapping[id];if(recordId){const record=this._cache[recordId];return record.getChanges(allFields);}else{const values={};for(const fieldName in this._initialValues[id]){const field=this.fields[fieldName];let fieldValue=this._initialValues[id][fieldName];if(isX2Many(field)){if(fieldValue[0][0]===DELETE_ALL){fieldValue=fieldValue.slice(1);}}
values[fieldName]=fieldValue;}
return values;}};const hasReplaceWithCommand=this._commands&&REPLACE_WITH===this._commands[0][0];if(hasReplaceWithCommand){commands.push(this._commands[0]);}
for(const resId of this.currentIds){const dictCommand=this._commandsById[resId];if(dictCommand){if(dictCommand[CREATE]){const id=(dictCommand[CREATE]||dictCommand[UPDATE])[1];commands.push(x2ManyCommands.create(id,getRecordValues(id)));}else if(dictCommand[UPDATE]){const id=dictCommand[UPDATE][1];commands.push(x2ManyCommands.update(id,getRecordValues(id)));}else if(dictCommand[LINK_TO]){commands.push(x2ManyCommands.linkTo(resId));}}else if(!hasReplaceWithCommand){commands.push(x2ManyCommands.linkTo(resId));}}
for(const command of this._commands){const code=command[0];if([DELETE].includes(code)){commands.push(command);}}
if(DELETE_ALL===this._commands[0][0]&&!allFields){for(const resId of this._serverIds){if(!this.currentIds.includes(resId)){commands.push(x2ManyCommands.delete(resId));}}}
return commands;}
return null;}
getContext(){const commands=[];if(this.field.type==="one2many"){if(this.currentIds){for(const resId of this.currentIds){const record=this._cache[this._mapping[resId]];if(record&&record.isVirtual){commands.push(x2ManyCommands.create(resId,record.data));}else{commands.push(x2ManyCommands.linkTo(resId));}}}}else{if(this.currentIds&&this.currentIds.length){commands.push(x2ManyCommands.replaceWith(this.currentIds));}}
return commands;}
async replaceWith(resIds){this.applyCommand(x2ManyCommands.replaceWith(resIds));await this.load();this.onChanges();this.model.notify();}
setCurrentIds(resIds=[],commands=[]){this._serverIds=resIds;this._commandsById={};this._commands=this._getNormalizedCommands([],commands);this.currentIds=this._getCurrentIds(this._serverIds,this._commands,true);}
async sortBy(fieldName){if(this.orderBy.length&&this.orderBy[0].name===fieldName){if(this.isOrder){this.orderBy[0].asc=!this.orderBy[0].asc;}}else{this.orderBy=this.orderBy.filter((o)=>o.name!==fieldName);this.orderBy.unshift({name:fieldName,asc:true,});}
this.isOrder=true;await this.load();this.model.notify();}
_getNextMapping(mapping,commands){let nextMapping=mapping;for(const command of commands){const code=command[0];const id=command[1];switch(code){case UPDATE:nextMapping[id]=mapping[id];break;case LINK_TO:nextMapping[id]=mapping[id];break;case DELETE_ALL:nextMapping={};break;case REPLACE_WITH:break;}}
return nextMapping;}
_createRecord(params={}){const record=this.model.createDataPoint("record",{resModel:this.resModel,fields:this.fields,activeFields:this.activeFields,viewMode:this.viewMode,views:this.views,onRecordWillSwitchMode:this.onRecordWillSwitchMode,onChanges:async()=>{this.applyCommand(x2ManyCommands.update(record.resId||record.virtualId,symbolValues));this.onChanges();},rawContext:{parent:this.rawContext,make:()=>{return makeContext([params.context],this.evalContext);},},...params,getParentRecordContext:this.getParentRecordContext,parentRecord:this.parentRecord,relationField:this.relationField,});const id=record.resId||record.virtualId;this._mapping[id]=record.id;this._cache[record.id]=record;return record;}
_getCurrentIds(currentIds,commands,serverCommands=false){let nextIds=[...currentIds];for(const command of commands){const code=command[0];const id=command[1];switch(code){case 0:if(nextIds.indexOf(id)===-1){const index=this.editable==="top"&&!serverCommands?this.offset:this.offset+this.limit-1;nextIds.splice(index,0,id);}else{throw new Error("you rascal");}
break;case 1:add(nextIds,id);break;case 2:case 3:remove(nextIds,id);break;case 4:add(nextIds,id);break;case 5:case 6:nextIds=command[2]||[];break;}}
return nextIds;}
_getDisplayedIds(){const hasSeveralPages=this.limit<this.count;let displayedIds=this.currentIds.slice(0);if(hasSeveralPages){displayedIds=this.currentIds.slice(this.offset,this.offset+this.limit);}
return displayedIds;}
_getNormalizedCommands(normalizedCommands,commands){let nextCommands=[...normalizedCommands];for(const command of commands){const code=command[0];if(code===CREATE&&!command[1]){command[1]=this.model.nextVirtualId;}
const id=command[1];if([CREATE,UPDATE].includes(code)){if(!this._commandsById[id]){if(!this._initialValues){this._initialValues={};}
this._initialValues[id]=command[2];}
command[2]=symbolValues;}
if([DELETE_ALL,REPLACE_WITH].includes(code)){this._commandsById={};nextCommands=[command];continue;}else if(!this._commandsById[id]){this._commandsById[id]={[code]:command};nextCommands.push(command);continue;}
switch(code){case UPDATE:if(this._commandsById[id][LINK_TO]){this._commandsById[id][UPDATE]={[UPDATE]:command};remove(nextCommands,this._commandsById[id][LINK_TO]);nextCommands.push(command);}
break;case DELETE:if(this._commandsById[id][UPDATE]){remove(nextCommands,this._commandsById[id][UPDATE]);}
if(this._commandsById[id][CREATE]){remove(nextCommands,this._commandsById[id][CREATE]);delete this._commandsById[id];}else{if(this._commandsById[id][LINK_TO]){remove(nextCommands,this._commandsById[id][LINK_TO]);}
this._commandsById[id]={[DELETE]:command};nextCommands.push(command);}
break;case FORGET:if(this._commandsById[id][LINK_TO]){remove(nextCommands,this._commandsById[id][LINK_TO]);delete this._commandsById[id][LINK_TO];}else{this._commandsById[id][FORGET]=command;nextCommands.push(command);}
break;case LINK_TO:if(this._commandsById[id][FORGET]){delete this._commandsById[id][FORGET];remove(nextCommands,this._commandsById[id][FORGET]);}else{this._commandsById[id][LINK_TO]=command;nextCommands.push(command);}
break;}}
return nextCommands;}
_getRecords(){const displayedIds=this._getDisplayedIds();return displayedIds.map((id)=>this._cache[this._mapping[id]]);}
async _loadRecords(){const displayedIds=this._getDisplayedIds();const proms=[];for(const id of displayedIds){const recordId=this._mapping[id];if(!recordId){const key=typeof id==="number"?"resId":"virtualId";const record=this._createRecord({[key]:id,mode:"readonly"});let changes;const createCommand=this._commandsById[id]&&this._commandsById[id][CREATE];if(createCommand){changes=this._initialValues[id];}
proms.push(record.load({changes}));}}
await Promise.all(proms);}
unselectRecord(){return unselectRecord(this.editedRecord);}}
StaticList.DEFAULT_LIMIT=40;const RelationalModel=__exports.RelationalModel=class RelationalModel extends Model{setup(params,{action,dialog,notification,rpc,user,view,company}){this.action=action;this.dialogService=dialog;this.notificationService=notification;this.rpc=rpc;this.user=user;this.company=company;this.viewService=view;this.orm=new RequestBatcherORM(rpc,user);this.keepLast=new KeepLast();this.mutex=new Mutex();this.onCreate=params.onCreate;this.multiEdit=params.multiEdit||false;this.quickCreateView=params.quickCreateView;this.defaultGroupBy=params.defaultGroupBy||false;this.defaultOrderBy=params.defaultOrder;this.handleField=params.handleField;this.rootType=params.rootType||"list";this.initialRootState=params.rootState;this.rootParams={activeFields:params.activeFields||{},fields:params.fields||{},viewMode:params.viewMode||null,resModel:params.resModel,groupByInfo:params.groupByInfo,};this.fieldNodes=params.fieldNodes;if(this.rootType==="record"){this.rootParams.resId=params.resId;this.rootParams.resIds=params.resIds;if(params.mode){this.rootParams.mode=params.mode;}}else{const{limit,countLimit,groupsLimit,openGroupsByDefault,expand}=params;this.rootParams.openGroupsByDefault=openGroupsByDefault||false;this.rootParams.limit=limit;this.rootParams.countLimit=countLimit&&Math.max(limit,countLimit);this.rootParams.groupsLimit=groupsLimit;this.rootParams.expand=expand;}
this.initialValues=params.initialValues;this.root=null;this.nextId=1;this.noCacheModels=["ir.actions.act_window","ir.filters","ir.ui.view","res.currency"];}
async load(params={}){const rootParams={...this.rootParams,...params};if(this.defaultOrderBy&&!(params.orderBy&&params.orderBy.length)){rootParams.orderBy=this.defaultOrderBy;}
if(this.defaultGroupBy&&!this.env.inDialog&&!(params.groupBy&&params.groupBy.length)){rootParams.groupBy=[this.defaultGroupBy];}
if(rootParams.context){rootParams.context=Object.fromEntries(Object.entries(rootParams.context).filter(([key])=>!key.endsWith("_view_ref")&&!key.startsWith("search_default_")));}
rootParams.rawContext={make:()=>{return makeContext([rootParams.context],{});},};const state=this.root?Object.assign(this.root.exportState(),{offset:0}):this.initialRootState;const newRoot=this.createDataPoint(this.rootType,rootParams,state);await this.keepLast.add(newRoot.load({values:this.initialValues}));this.root=newRoot;this.rootParams=rootParams;this.notify();}
createDataPoint(type,params,state={}){let DpClass;switch(type){case"group":{DpClass=this.constructor.Group;break;}
case"list":{if((params.groupBy||[]).length){DpClass=this.constructor.DynamicGroupList;}else{DpClass=this.constructor.DynamicRecordList;}
break;}
case"record":{DpClass=this.constructor.Record;break;}
case"static_list":{DpClass=this.constructor.StaticList;break;}}
return new DpClass(this,params,state);}
hasData(){return this.root.count>0;}
get nextVirtualId(){return`virtual_${this.nextId++}`;}
getGroups(){return this.root.groups&&this.root.groups.length?this.root.groups:null;}
async reloadRecords(record){const records=this.rootType==="record"?[this.root]:this.root.records;const relatedRecords=records.filter((r)=>r.id!==record.id&&r.resId===record.resId);await Promise.all([record,...relatedRecords].map((r)=>r.load()));this.trigger("record-updated",{record,relatedRecords});this.notify();}}
RelationalModel.services=["action","dialog","notification","rpc","user","view","company"];RelationalModel.Record=Record;RelationalModel.Group=Group;RelationalModel.DynamicRecordList=DynamicRecordList;RelationalModel.DynamicGroupList=DynamicGroupList;RelationalModel.StaticList=StaticList;return __exports;});;

/* /web/static/src/views/sample_server.js */
odoo.define('@web/views/sample_server',async function(require){'use strict';let __exports={};const{deserializeDate,deserializeDateTime,parseDate,serializeDate,serializeDateTime,}=require("@web/core/l10n/dates");const{ORM}=require("@web/core/orm_service");const{registry}=require("@web/core/registry");const{cartesian,sortBy:arraySortBy}=require("@web/core/utils/arrays");class UnimplementedRouteError extends Error{}
function getSampleFromId(id,sampleTexts){return sampleTexts[(id-1)%sampleTexts.length];}
function serializeGroupValue(value,type){switch(type){case"date":return serializeDate(value);case"datetime":return serializeDateTime(value);default:return value;}}
function fieldNameRegex(...terms){return new RegExp(`\\b((\\w+)?_)?(${terms.join("|")})(_(\\w+)?)?\\b`);}
const MEASURE_SPEC_REGEX=/(?<measure>\w+):(?<aggregateFunction>\w+)(\((?<fieldName>\w+)\))?/;const DESCRIPTION_REGEX=fieldNameRegex("description","label","title","subject","message");const EMAIL_REGEX=fieldNameRegex("email");const PHONE_REGEX=fieldNameRegex("phone");const URL_REGEX=fieldNameRegex("url");const SampleServer=__exports.SampleServer=class SampleServer{constructor(modelName,fields){this.mainModel=modelName;this.data={};this.data[modelName]={fields,records:[],};for(const fieldName in fields){const field=fields[fieldName];if(["many2one","one2many","many2many"].includes(field.type)){this.data[field.relation]=this.data[field.relation]||{fields:{display_name:{type:"char"},id:{type:"integer"},color:{type:"integer"},},records:[],};}}
this.existingGroups=null;this.populated=false;this.existingGroupsPopulated=false;}
mockRpc(params){if(!(params.model in this.data)){throw new Error(`SampleServer: unknown model ${params.model}`);}
this._populateModels();switch(params.method||params.route){case"/web/dataset/search_read":return this._mockSearchReadController(params);case"web_search_read":return this._mockWebSearchRead(params);case"web_read_group":return this._mockWebReadGroup(params);case"read_group":return this._mockReadGroup(params);case"read_progress_bar":return this._mockReadProgressBar(params);case"read":return this._mockRead(params);case"name_get":return this._mockNameGet(params);}
const method=params.method||params.route;const mockFunction=registry.category("sample_server").get(`${params.model}/${method}`,null)||registry.category("sample_server").get(method,null);if(mockFunction){return mockFunction.call(this,params);}
console.log(`SampleServer: unimplemented route "${params.method || params.route}"`);throw new SampleServer.UnimplementedRouteError();}
setExistingGroups(groups){this.existingGroups=groups;}
_aggregateFields(measures,records){const values={};for(const{fieldName,type}of measures){if(["float","integer","monetary"].includes(type)){if(records.length){let value=0;for(const record of records){value+=record[fieldName];}
values[fieldName]=this._sanitizeNumber(value);}else{values[fieldName]=null;}}
if(type==="many2one"){const ids=new Set(records.map((r)=>r[fieldName]));values.fieldName=ids.size||null;}}
return values;}
_formatValue(value,options){if(!value){return false;}
const{type,interval,relation}=options;if(["date","datetime"].includes(type)){const fmt=SampleServer.FORMATS[interval];return parseDate(value).toFormat(fmt);}else if(["many2one","many2many"].includes(type)){const rec=this.data[relation].records.find(({id})=>id===value);return[value,rec.display_name];}else{return value;}}
_generateFieldValue(modelName,fieldName,id){const field=this.data[modelName].fields[fieldName];switch(field.type){case"boolean":return fieldName==="active"?true:this._getRandomBool();case"char":case"text":if(["display_name","name"].includes(fieldName)){if(SampleServer.PEOPLE_MODELS.includes(modelName)){return getSampleFromId(id,SampleServer.SAMPLE_PEOPLE);}else if(modelName==="res.country"){return getSampleFromId(id,SampleServer.SAMPLE_COUNTRIES);}}
if(fieldName==="display_name"){return getSampleFromId(id,SampleServer.SAMPLE_TEXTS);}else if(["name","reference"].includes(fieldName)){return`REF${String(id).padStart(4, "0")}`;}else if(DESCRIPTION_REGEX.test(fieldName)){return getSampleFromId(id,SampleServer.SAMPLE_TEXTS);}else if(EMAIL_REGEX.test(fieldName)){const emailName=getSampleFromId(id,SampleServer.SAMPLE_PEOPLE).replace(/ /,".").toLowerCase();return`${emailName}@sample.demo`;}else if(PHONE_REGEX.test(fieldName)){return`+1 555 754 ${String(id).padStart(4, "0")}`;}else if(URL_REGEX.test(fieldName)){return`http://sample${id}.com`;}
return false;case"date":case"datetime":{const datetime=this._getRandomDate();return field.type==="date"?serializeDate(datetime):serializeDateTime(datetime);}
case"float":return this._getRandomFloat(SampleServer.MAX_FLOAT);case"integer":{let max=SampleServer.MAX_INTEGER;if(fieldName.includes("color")){max=this._getRandomBool()?SampleServer.MAX_COLOR_INT:0;}
return this._getRandomInt(max);}
case"monetary":return this._getRandomInt(SampleServer.MAX_MONETARY);case"many2one":if(field.relation==="res.currency"){return 1;}
if(field.relation==="ir.attachment"){return false;}
return this._getRandomSubRecordId();case"one2many":case"many2many":{const ids=[this._getRandomSubRecordId(),this._getRandomSubRecordId()];return[...new Set(ids)];}
case"selection":{if(fieldName==="activity_exception_decoration"){return false;}
if(field.selection.length>0){return this._getRandomArrayEl(field.selection)[0];}
return false;}
default:return false;}}
_getRandomArrayEl(array){return array[Math.floor(Math.random()*array.length)];}
_getRandomBool(){return Math.random()<0.5;}
_getRandomDate(){const delta=Math.floor((Math.random()-Math.random())*SampleServer.DATE_DELTA);return luxon.DateTime.local().plus({hours:delta});}
_getRandomFloat(max){return this._sanitizeNumber(Math.random()*max);}
_getRandomInt(max){return Math.floor(Math.random()*max);}
_getRandomSubRecordId(){return Math.floor(Math.random()*SampleServer.SUB_RECORDSET_SIZE)+1;}
_mockNameGet(params){const{model,args}=params;let ids=args[0];if(!args.length){throw new Error("name_get: expected one argument");}else if(!ids){return[];}
if(!Array.isArray(ids)){ids=[ids];}
const{records}=this.data[model];return ids.map((id)=>[id,records.find((r)=>r.id===id).display_name]);}
_mockRead(params){const model=this.data[params.model];const ids=params.args[0];const fieldNames=params.args[1];const records=[];for(const r of model.records){if(!ids.includes(r.id)){continue;}
const record={id:r.id};for(const fieldName of fieldNames){const field=model.fields[fieldName];if(!field){record[fieldName]=false;}else if(field.type==="many2one"){const relModel=this.data[field.relation];const relRecord=relModel.records.find((relR)=>r[fieldName]===relR.id);record[fieldName]=relRecord?[relRecord.id,relRecord.display_name]:false;}else{record[fieldName]=r[fieldName];}}
records.push(record);}
return records;}
_mockReadGroup(params){const lazy="lazy"in params?params.lazy:true;const model=params.model;const fields=this.data[model].fields;const records=this.data[model].records;const normalizedGroupBys=[];let groupBy=[];if(params.groupBy.length){groupBy=lazy?[params.groupBy[0]]:params.groupBy;}
for(const groupBySpec of groupBy){let[fieldName,interval]=groupBySpec.split(":");interval=interval||"month";const{type,relation}=fields[fieldName];if(type){const gb={fieldName,type,interval,relation,alias:groupBySpec};normalizedGroupBys.push(gb);}}
const groupsFromRecord=(record)=>{const values=[];for(const gb of normalizedGroupBys){const{fieldName,type}=gb;let fieldVals;if(["date","datetime"].includes(type)){fieldVals=[this._formatValue(record[fieldName],gb)];}else if(type==="many2many"){fieldVals=record[fieldName].length?record[fieldName]:[false];}else{fieldVals=[record[fieldName]];}
values.push(fieldVals.map((val)=>({[fieldName]:val})));}
const cart=cartesian(...values);return cart.map((tuple)=>{if(!Array.isArray(tuple)){tuple=[tuple];}
return Object.assign({},...tuple);});};const groups={};for(const record of records){const recordGroups=groupsFromRecord(record);for(const group of recordGroups){const groupId=JSON.stringify(group);if(!(groupId in groups)){groups[groupId]=[];}
groups[groupId].push(record);}}
const measures=[];for(const measureSpec of params.fields||Object.keys(fields)){const matches=measureSpec.match(MEASURE_SPEC_REGEX);const{fieldName,aggregateFunction,measure}=(matches&&matches.groups)||{};if(!fieldName&&!measure){continue;}
const fName=fieldName||measure;const{type}=fields[fName];if(!params.groupBy.includes(fName)&&type&&(type!=="many2one"||aggregateFunction!=="count_distinct")){measures.push({fieldName:fName,type});}}
let result=[];for(const id in groups){const records=groups[id];const group={__domain:[]};let countKey=`__count`;if(normalizedGroupBys.length&&lazy){countKey=`${normalizedGroupBys[0].fieldName}_count`;}
group[countKey]=records.length;const firstElem=records[0];const parsedId=JSON.parse(id);for(const gb of normalizedGroupBys){const{alias,fieldName,type}=gb;if(type==="many2many"){group[alias]=this._formatValue(parsedId[fieldName],gb);}else{group[alias]=this._formatValue(firstElem[fieldName],gb);if(["date","datetime"].includes(type)){group.__range={};const val=firstElem[fieldName];if(val){const deserialize=type==="date"?deserializeDate:deserializeDateTime;const serialize=type==="date"?serializeDate:serializeDateTime;const from=deserialize(val).startOf(gb.interval);const to=SampleServer.INTERVALS[gb.interval](from);group.__range[alias]={from:serialize(from),to:serialize(to)};}else{group.__range[alias]=false;}}}}
Object.assign(group,this._aggregateFields(measures,records));result.push(group);}
if(normalizedGroupBys.length>0){const{alias,interval,type}=normalizedGroupBys[0];result=arraySortBy(result,(group)=>{const val=group[alias];if(["date","datetime"].includes(type)){return parseDate(val,{format:SampleServer.FORMATS[interval]});}
return val;});}
return result;}
_mockReadProgressBar(params){const groupBy=params.group_by.split(":")[0];const progress_bar=params.progress_bar;const groupByField=this.data[params.model].fields[groupBy];const data={};for(const record of this.data[params.model].records){let groupByValue=record[groupBy];if(groupByField.type==="many2one"){const relatedRecords=this.data[groupByField.relation].records;const relatedRecord=relatedRecords.find((r)=>r.id===groupByValue);groupByValue=relatedRecord.display_name;}
if(!(groupByValue in data)){if(groupByValue===true){groupByValue="True";}else if(groupByValue===false){groupByValue="False";}}
if(!(groupByValue in data)){data[groupByValue]={};for(const key in progress_bar.colors){data[groupByValue][key]=0;}}
const fieldValue=record[progress_bar.field];if(fieldValue in data[groupByValue]){data[groupByValue][fieldValue]++;}}
return data;}
_mockSearchReadController(params){console.warn("Using deprecated route /web/dataset/search_read (call method web_search read on the model instead)");return this._mockWebSearchRead(params);}
_mockWebSearchRead(params){const model=this.data[params.model];const rawRecords=model.records.slice(0,SampleServer.SEARCH_READ_LIMIT);const records=this._mockRead({model:params.model,args:[rawRecords.map((r)=>r.id),params.fields],});return{records,length:records.length};}
_mockWebReadGroup(params){let groups;if(this.existingGroups){this._tweakExistingGroups(params);groups=this.existingGroups;}else{groups=this._mockReadGroup(params);}
return{groups,length:groups.length,};}
_populateExistingGroups(params){if(!this.existingGroupsPopulated){const groups=this.existingGroups;const groupBy=params.groupBy[0].split(":")[0];const groupByField=this.data[params.model].fields[groupBy];const groupedByM2O=groupByField.type==="many2one";if(groupedByM2O){this.data[groupByField.relation].records=groups.map((g)=>{return{id:g.value,display_name:g.displayName};});}
for(const r of this.data[params.model].records){const group=getSampleFromId(r.id,groups);r[groupBy]=serializeGroupValue(group.value,groupByField.type);}
this.existingGroupsPopulated=true;}}
_populateModels(){if(!this.populated){for(const modelName in this.data){const model=this.data[modelName];const fieldNames=Object.keys(model.fields).filter((f)=>f!=="id");const size=modelName===this.mainModel?SampleServer.MAIN_RECORDSET_SIZE:SampleServer.SUB_RECORDSET_SIZE;for(let id=1;id<=size;id++){const record={id};for(const fieldName of fieldNames){record[fieldName]=this._generateFieldValue(modelName,fieldName,id);}
model.records.push(record);}}
this.populated=true;}}
_sanitizeNumber(value){return parseFloat(value.toFixed(SampleServer.FLOAT_PRECISION));}
_tweakExistingGroups(params){const groups=this.existingGroups;this._populateExistingGroups(params);const fullGroupBy=params.groupBy[0];const groupBy=fullGroupBy.split(":")[0];const groupByField=this.data[params.model].fields[groupBy];const records=this.data[params.model].records;for(const g of groups){const recordsInGroup=records.filter((r)=>{return r[groupBy]===serializeGroupValue(g.value,groupByField.type);});g[`${groupBy}_count`]=recordsInGroup.length;g[fullGroupBy]=g.__rawValue;for(const field of params.fields){const fieldType=this.data[params.model].fields[field].type;if(["integer, float","monetary"].includes(fieldType)){g[field]=recordsInGroup.reduce((acc,r)=>acc+r[field],0);}}
g.__data={records:this._mockRead({model:params.model,args:[recordsInGroup.map((r)=>r.id),params.fields],}),length:recordsInGroup.length,};g.__range={...g.range};}}}
SampleServer.FORMATS={day:"yyyy-MM-dd",week:"'W'WW kkkk",month:"MMMM yyyy",quarter:"'Q'q yyyy",year:"y",};SampleServer.INTERVALS={day:(dt)=>dt.plus({days:1}),week:(dt)=>dt.plus({weeks:1}),month:(dt)=>dt.plus({months:1}),quarter:(dt)=>dt.plus({months:3}),year:(dt)=>dt.plus({years:1}),};SampleServer.DISPLAY_FORMATS=Object.assign({},SampleServer.FORMATS,{day:"dd MMM yyyy"});SampleServer.MAIN_RECORDSET_SIZE=16;SampleServer.SUB_RECORDSET_SIZE=5;SampleServer.SEARCH_READ_LIMIT=10;SampleServer.MAX_FLOAT=100;SampleServer.MAX_INTEGER=50;SampleServer.MAX_COLOR_INT=7;SampleServer.MAX_MONETARY=100000;SampleServer.DATE_DELTA=24*60;SampleServer.FLOAT_PRECISION=2;SampleServer.SAMPLE_COUNTRIES=["Belgium","France","Portugal","Singapore","Australia"];SampleServer.SAMPLE_PEOPLE=["John Miller","Henry Campbell","Carrie Helle","Wendi Baltz","Thomas Passot",];SampleServer.SAMPLE_TEXTS=["Laoreet id","Volutpat blandit","Integer vitae","Viverra nam","In massa",];SampleServer.PEOPLE_MODELS=["res.users","res.partner","hr.employee","mail.followers","mailing.contact",];SampleServer.UnimplementedRouteError=UnimplementedRouteError;__exports.buildSampleORM=buildSampleORM;function buildSampleORM(resModel,fields,user){const sampleServer=new SampleServer(resModel,fields);const fakeRPC=async(_,params)=>{const{args,kwargs,method,model}=params;const{groupby:groupBy}=kwargs;return sampleServer.mockRpc({method,model,args,...kwargs,groupBy});};const sampleORM=new ORM(fakeRPC,user);sampleORM.setGroups=(groups)=>sampleServer.setExistingGroups(groups);return sampleORM;}
return __exports;});;

/* /web/static/src/views/standard_view_props.js */
odoo.define('@web/views/standard_view_props',async function(require){'use strict';let __exports={};const standardViewProps=__exports.standardViewProps={info:{type:Object,},resModel:String,arch:{type:String},bannerRoute:{type:String,optional:true},className:{type:String,optional:true},comparison:{validate:()=>true},context:{type:Object},createRecord:{type:Function,optional:true},display:{type:Object,optional:true},domain:{type:Array},fields:{type:Object},globalState:{type:Object,optional:true},groupBy:{type:Array,element:String},limit:{type:Number,optional:true},noBreadcrumbs:{type:Boolean,optional:true},orderBy:{type:Array,element:Object},relatedModels:{type:Object,optional:true},resId:{type:[Number,Boolean],optional:true},resIds:{type:Array,optional:true},searchMenuTypes:{type:Array,element:String},selectRecord:{type:Function,optional:true},state:{type:Object,optional:true},useSampleModel:{type:Boolean},};return __exports;});;

/* /web/static/src/views/utils.js */
odoo.define('@web/views/utils',async function(require){'use strict';let __exports={};const{Domain}=require("@web/core/domain");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const X2M_TYPES=__exports.X2M_TYPES=["one2many","many2many"];const RELATIONAL_TYPES=[...X2M_TYPES,"many2one"];const NUMERIC_TYPES=["integer","float","monetary"];const BUTTON_CLICK_PARAMS=__exports.BUTTON_CLICK_PARAMS=["name","type","args","context","close","confirm","special","effect","help","modifiers","debounce","noSaveDialog",];__exports.addFieldDependencies=addFieldDependencies;function addFieldDependencies(activeFields,fields,dependencies={}){for(const[name,dependency]of Object.entries(dependencies)){if(!(name in activeFields)){activeFields[name]=Object.assign({name,rawAttrs:{}},dependency,{modifiers:{invisible:true},});}
if(!(name in fields)){fields[name]={...dependency};}}}
__exports.archParseBoolean=archParseBoolean;function archParseBoolean(str,trueIfEmpty=false){return str?!/^false|0$/i.test(str):trueIfEmpty;}
const computeReportMeasures=__exports.computeReportMeasures=(fields,fieldAttrs,activeMeasures)=>{const measures={__count:{name:"__count",string:_t("Count"),type:"integer"},};for(const[fieldName,field]of Object.entries(fields)){if(fieldName==="id"||!field.store){continue;}
const{isInvisible}=fieldAttrs[fieldName]||{};if(isInvisible){continue;}
if(["integer","float","monetary"].includes(field.type)&&field.group_operator!==undefined){measures[fieldName]=field;}}
for(const measure of activeMeasures){if(!measures[measure]){measures[measure]=fields[measure];}}
for(const fieldName in fieldAttrs){if(fieldAttrs[fieldName].string&&fieldName in measures){measures[fieldName].string=fieldAttrs[fieldName].string;}}
const sortedMeasures=Object.entries(measures).sort(([m1,f1],[m2,f2])=>{if(m1==="__count"||m2==="__count"){return m1==="__count"?1:-1;}
return f1.string.toLowerCase().localeCompare(f2.string.toLowerCase());});return Object.fromEntries(sortedMeasures);};__exports.evalDomain=evalDomain;function evalDomain(modifier,evalContext){if(modifier&&typeof modifier!=="boolean"){modifier=new Domain(modifier).contains(evalContext);}
return Boolean(modifier);}
__exports.getFormattedValue=getFormattedValue;function getFormattedValue(record,fieldName,rawAttrs){const field=record.fields[fieldName];const formatter=registry.category("formatters").get(field.type,(val)=>val);const formatOptions={escape:false,data:record.data,isPassword:"password"in rawAttrs,digits:rawAttrs.digits?JSON.parse(rawAttrs.digits):field.digits,field:record.fields[fieldName],};return formatter(record.data[fieldName],formatOptions);}
__exports.getActiveActions=getActiveActions;function getActiveActions(rootNode){return{type:"view",edit:archParseBoolean(rootNode.getAttribute("edit"),true),create:archParseBoolean(rootNode.getAttribute("create"),true),delete:archParseBoolean(rootNode.getAttribute("delete"),true),duplicate:archParseBoolean(rootNode.getAttribute("duplicate"),true),};}
__exports.getClassNameFromDecoration=getClassNameFromDecoration;function getClassNameFromDecoration(decoration){if(decoration==="bf"){return"fw-bold";}else if(decoration==="it"){return"fst-italic";}
return`text-${decoration}`;}
__exports.getDecoration=getDecoration;function getDecoration(rootNode){const decorations=[];for(const name of rootNode.getAttributeNames()){if(name.startsWith("decoration-")){decorations.push({class:getClassNameFromDecoration(name.replace("decoration-","")),condition:rootNode.getAttribute(name),});}}
return decorations;}
__exports.getIds=getIds;function getIds(idsList){if(Array.isArray(idsList)){if(idsList.length===2&&typeof idsList[1]==="string"){return[idsList[0]];}else{return idsList;}}else if(idsList){return[idsList];}else{return[];}}
__exports.isRelational=isRelational;function isRelational(field){return field&&RELATIONAL_TYPES.includes(field.type);}
__exports.isX2Many=isX2Many;function isX2Many(field){return field&&X2M_TYPES.includes(field.type);}
__exports.isNumeric=isNumeric;function isNumeric(field){return NUMERIC_TYPES.includes(field.type);}
__exports.isNull=isNull;function isNull(value){return[null,undefined].includes(value);}
__exports.processButton=processButton;function processButton(node){const withDefault={close:(val)=>archParseBoolean(val,false),context:(val)=>val||"{}",};const clickParams={};for(const{name,value}of node.attributes){if(BUTTON_CLICK_PARAMS.includes(name)){clickParams[name]=withDefault[name]?withDefault[name](value):value;}}
return{className:node.getAttribute("class")||"",disabled:!!node.getAttribute("disabled")||false,icon:node.getAttribute("icon")||false,title:node.getAttribute("title")||undefined,string:node.getAttribute("string")||undefined,options:JSON.parse(node.getAttribute("options")||"{}"),modifiers:JSON.parse(node.getAttribute("modifiers")||"{}"),clickParams,};}
__exports.processMeasure=processMeasure;function processMeasure(measure){if(Array.isArray(measure)){return measure.map(processMeasure);}
return measure==="__count__"?"__count":measure;}
__exports.stringToOrderBy=stringToOrderBy;function stringToOrderBy(string){if(!string){return[];}
return string.split(",").map((order)=>{const splitOrder=order.trim().split(" ");if(splitOrder.length===2){return{name:splitOrder[0],asc:splitOrder[1].toLowerCase()==="asc",};}else{return{name:splitOrder[0],asc:true,};}});}
__exports.toStringExpression=toStringExpression;function toStringExpression(str){return`\`${str.replaceAll("`", "\\`")}\``;}
__exports.uuid=uuid;function uuid(){const array=new Uint8Array(8);window.crypto.getRandomValues(array);return[...array].map((b)=>b.toString(16).padStart(2,"0")).join("");}
return __exports;});;

/* /web/static/src/views/view.js */
odoo.define('@web/views/view',async function(require){'use strict';let __exports={};const{evaluateExpr}=require("@web/core/py_js/py");const{registry}=require("@web/core/registry");const{KeepLast}=require("@web/core/utils/concurrency");const{useService}=require("@web/core/utils/hooks");const{deepCopy,pick}=require("@web/core/utils/objects");const{ControlPanel}=require("@web/search/control_panel/control_panel");const{extractLayoutComponents}=require("@web/search/layout");const{SearchPanel}=require("@web/search/search_panel/search_panel");const{WithSearch}=require("@web/search/with_search/with_search");const{OnboardingBanner}=require("@web/views/onboarding_banner");const{useActionLinks}=require("@web/views/view_hook");const{Component,markRaw,onWillUpdateProps,onWillStart,toRaw,useSubEnv,reactive}=require("@odoo/owl");const viewRegistry=registry.category("views");__exports.getDefaultConfig=getDefaultConfig;function getDefaultConfig(){let displayName;const config={actionId:false,actionType:false,actionFlags:{},breadcrumbs:reactive([{get name(){return displayName;},},]),disableSearchBarAutofocus:false,getDisplayName:()=>displayName,historyBack:()=>{},pagerProps:{},setDisplayName:(newDisplayName)=>{displayName=newDisplayName;config.breadcrumbs.push(undefined);config.breadcrumbs.pop();},viewSwitcherEntries:[],views:[],ControlPanel:ControlPanel,SearchPanel:SearchPanel,Banner:OnboardingBanner,};return config;}
const ViewNotFoundError=__exports.ViewNotFoundError=class ViewNotFoundError extends Error{}
const STANDARD_PROPS=["resModel","type","arch","fields","relatedModels","viewId","actionMenus","loadActionMenus","searchViewArch","searchViewFields","searchViewId","irFilters","loadIrFilters","comparison","context","domain","groupBy","orderBy","useSampleModel","noContentHelp","className","display","globalState","activateFavorite","dynamicFilters","hideCustomGroupBy","searchMenuTypes","searchPanel","searchModel",];const View=__exports.View=class View extends Component{setup(){const{arch,fields,resModel,searchViewArch,searchViewFields,type}=this.props;if(!resModel){throw Error(`View props should have a "resModel" key`);}
if(!type){throw Error(`View props should have a "type" key`);}
if((arch&&!fields)||(!arch&&fields)){throw new Error(`"arch" and "fields" props must be given together`);}
if((searchViewArch&&!searchViewFields)||(!searchViewArch&&searchViewFields)){throw new Error(`"searchViewArch" and "searchViewFields" props must be given together`);}
this.viewService=useService("view");this.withSearchProps=null;useSubEnv({keepLast:new KeepLast(),config:{...getDefaultConfig(),...this.env.config,},});this.handleActionLinks=useActionLinks({resModel});onWillStart(()=>this.loadView(this.props));onWillUpdateProps((nextProps)=>this.onWillUpdateProps(nextProps));}
async loadView(props){let descr=viewRegistry.get(props.type);const type=descr.type;let{viewId,searchViewId}=props;const views=deepCopy(props.views||this.env.config.views);const view=views.find((v)=>v[1]===type)||[];if(view.length){view[0]=viewId!==undefined?viewId:view[0];viewId=view[0];}else{view.push(viewId||false,type);views.push(view);}
const searchView=views.find((v)=>v[1]==="search");if(searchView){searchView[0]=searchViewId!==undefined?searchViewId:searchView[0];searchViewId=searchView[0];}else if(searchViewId!==undefined){views.push([searchViewId,"search"]);}
const{context,resModel,loadActionMenus,loadIrFilters}=props;let{arch,fields,relatedModels,searchViewArch,searchViewFields,irFilters,actionMenus,}=props;const loadView=!arch||(!actionMenus&&loadActionMenus);const loadSearchView=(searchViewId!==undefined&&!searchViewArch)||(!irFilters&&loadIrFilters);let viewDescription={viewId,resModel,type};let searchViewDescription;if(loadView||loadSearchView){const result=await this.viewService.loadViews({context,resModel,views},{actionId:this.env.config.actionId,loadActionMenus,loadIrFilters});viewDescription=result.views[type];searchViewDescription=result.views.search;if(loadSearchView){searchViewId=searchViewId||searchViewDescription.id;if(!searchViewArch){searchViewArch=searchViewDescription.arch;searchViewFields=result.fields;}
if(!irFilters){irFilters=searchViewDescription.irFilters;}}
this.env.config.views=views;fields=fields||markRaw(result.fields);relatedModels=relatedModels||markRaw(result.relatedModels);}
if(!arch){arch=viewDescription.arch;}
if(!actionMenus){actionMenus=viewDescription.actionMenus;}
const parser=new DOMParser();const xml=parser.parseFromString(arch,"text/xml");const rootNode=xml.documentElement;let subType=rootNode.getAttribute("js_class");const bannerRoute=rootNode.getAttribute("banner_route");const sample=rootNode.getAttribute("sample");if(subType){if(viewRegistry.contains(subType)){descr=viewRegistry.get(subType);}else{subType=null;}}
Object.assign(this.env.config,{viewArch:rootNode,viewId:viewDescription.id,viewType:type,viewSubType:subType,bannerRoute,noBreadcrumbs:props.noBreadcrumbs,...extractLayoutComponents(descr),});const info={actionMenus,mode:props.display.mode,irFilters,searchViewArch,searchViewFields,searchViewId,};const viewProps={info,arch,fields,relatedModels,resModel,useSampleModel:false,className:`${props.className} o_view_controller o_${this.env.config.viewType}_view`,};if(viewDescription.custom_view_id){viewProps.info.customViewId=viewDescription.custom_view_id;}
if(props.globalState){viewProps.globalState=props.globalState;}
if("useSampleModel"in props){viewProps.useSampleModel=props.useSampleModel;}else if(sample){viewProps.useSampleModel=Boolean(evaluateExpr(sample));}
for(const key in props){if(!STANDARD_PROPS.includes(key)){viewProps[key]=props[key];}}
const{noContentHelp}=props;if(noContentHelp){viewProps.info.noContentHelp=noContentHelp;}
const searchMenuTypes=props.searchMenuTypes||descr.searchMenuTypes||this.constructor.searchMenuTypes;viewProps.searchMenuTypes=searchMenuTypes;const finalProps=descr.props?descr.props(viewProps,descr,this.env.config):viewProps;this.Controller=descr.Controller;this.componentProps=finalProps;this.withSearchProps={...toRaw(props),hideCustomGroupBy:props.hideCustomGroupBy||descr.hideCustomGroupBy,searchMenuTypes,SearchModel:descr.SearchModel,};if(searchViewId!==undefined){this.withSearchProps.searchViewId=searchViewId;}
if(searchViewArch){this.withSearchProps.searchViewArch=searchViewArch;this.withSearchProps.searchViewFields=searchViewFields;}
if(irFilters){this.withSearchProps.irFilters=irFilters;}
if(descr.display){const viewDisplay=deepCopy(descr.display);const display={...this.withSearchProps.display};for(const key in viewDisplay){if(typeof display[key]==="object"){Object.assign(display[key],viewDisplay[key]);}else if(!(key in display)||display[key]){display[key]=viewDisplay[key];}}
this.withSearchProps.display=display;}
for(const key in this.withSearchProps){if(!(key in WithSearch.props)){delete this.withSearchProps[key];}}}
onWillUpdateProps(nextProps){const oldProps=pick(this.props,"arch","type","resModel");const newProps=pick(nextProps,"arch","type","resModel");if(JSON.stringify(oldProps)!==JSON.stringify(newProps)){return this.loadView(nextProps);}
const{comparison,context,domain,groupBy,orderBy}=nextProps;Object.assign(this.withSearchProps,{comparison,context,domain,groupBy,orderBy});}}
View._download=async function(){};View.template="web.View";View.components={WithSearch};View.defaultProps={display:{},context:{},loadActionMenus:false,loadIrFilters:false,className:"",};View.searchMenuTypes=["filter","groupBy","favorite"];return __exports;});;

/* /web/static/src/views/view_button/view_button.js */
odoo.define('@web/views/view_button/view_button',async function(require){'use strict';let __exports={};const{DROPDOWN}=require("@web/core/dropdown/dropdown");const{pick}=require("@web/core/utils/objects");const{debounce:debounceFn}=require("@web/core/utils/timing");const{Component}=require("@odoo/owl");const explicitRankClasses=["btn-primary","btn-secondary","btn-link","btn-success","btn-info","btn-warning","btn-danger",];const odooToBootstrapClasses={oe_highlight:"btn-primary",oe_link:"btn-link",};function iconFromString(iconString){const icon={};if(iconString.startsWith("fa-")){icon.tag="i";icon.class=`fa fa-fw o_button_icon ${iconString}`;}else{icon.tag="img";icon.src=iconString;}
return icon;}
const ViewButton=__exports.ViewButton=class ViewButton extends Component{setup(){if(this.props.icon){this.icon=iconFromString(this.props.icon);}
const{debounce}=this.clickParams;if(debounce){this.onClick=debounceFn(this.onClick.bind(this),debounce,true);}
this.tooltip=JSON.stringify({debug:Boolean(odoo.debug),button:{string:this.props.string,help:this.clickParams.help,context:this.clickParams.context,modifiers:this.clickParams.modifiers,special:this.clickParams.special,type:this.clickParams.type,name:this.clickParams.name,title:this.props.title,},context:this.props.record&&this.props.record.context,model:(this.props.record&&this.props.record.resModel)||this.props.resModel,});}
get clickParams(){return{context:this.props.context,...this.props.clickParams};}
get hasBigTooltip(){return Boolean(odoo.debug)||this.clickParams.help;}
get hasSmallToolTip(){return!this.hasBigTooltip&&this.props.title;}
get disabled(){const{name,type,special}=this.clickParams;return(!name&&!type&&!special)||this.props.disabled;}
onClick(ev){if(this.props.tag==="a"){ev.preventDefault();}
if(this.props.onClick){return this.props.onClick();}
this.env.onClickViewButton({clickParams:this.clickParams,getResParams:()=>pick(this.props.record,"context","evalContext","resModel","resId","resIds"),beforeExecute:()=>{if(this.env[DROPDOWN]){this.env[DROPDOWN].close();}},disableAction:this.props.disable,enableAction:this.props.enable,});}
getClassName(){const classNames=[];let hasExplicitRank=false;if(this.props.className){for(let cls of this.props.className.split(" ")){if(cls in odooToBootstrapClasses){cls=odooToBootstrapClasses[cls];}
classNames.push(cls);if(!hasExplicitRank&&explicitRankClasses.includes(cls)){hasExplicitRank=true;}}}
if(this.props.tag==="button"){const hasOtherClasses=classNames.length;classNames.unshift("btn");if((!hasExplicitRank&&this.props.defaultRank)||!hasOtherClasses){classNames.push(this.props.defaultRank||"btn-secondary");}
if(this.props.size){classNames.push(`btn-${this.props.size}`);}}
return classNames.join(" ");}}
ViewButton.template="views.ViewButton";ViewButton.props=["id?","tag?","record?","attrs?","className?","context?","clickParams?","icon?","defaultRank?","disable?","disabled?","enable?","size?","tabindex?","title?","style?","string?","slots?","onClick?",];ViewButton.defaultProps={tag:"button",className:"",clickParams:{},disable:()=>{},enable:()=>{},};return __exports;});;

/* /web/static/src/views/view_button/view_button_hook.js */
odoo.define('@web/views/view_button/view_button_hook',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{evaluateExpr}=require("@web/core/py_js/py");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{status,useEnv,useSubEnv}=require("@odoo/owl");function disableButtons(el){const btns=[...el.querySelectorAll("button:not([disabled])")];for(const btn of btns){btn.setAttribute("disabled","1");}
return btns;}
function enableButtons(el,manuallyDisabledButtons,enableAction){if(el){for(const btn of manuallyDisabledButtons){btn.removeAttribute("disabled");}}
if(enableAction){enableAction();}}
function undefinedAsTrue(val){return typeof val==="undefined"||val;}
__exports.useViewButtons=useViewButtons;function useViewButtons(model,ref,options={}){const action=useService("action");const dialog=useService("dialog");const comp=owl.useComponent();const env=useEnv();const beforeExecuteAction=options.beforeExecuteAction||(()=>{return true;});const afterExecuteAction=options.afterExecuteAction||(()=>{});useSubEnv({async onClickViewButton({clickParams,getResParams,beforeExecute,disableAction,enableAction,}){const manuallyDisabledButtons=disableButtons(getEl());if(disableAction){disableAction();}
async function execute(){let _continue=true;if(beforeExecute){_continue=undefinedAsTrue(await beforeExecute());}
_continue=_continue&&undefinedAsTrue(await beforeExecuteAction(clickParams));if(!_continue){enableButtons(getEl(),manuallyDisabledButtons,enableAction);return;}
const closeDialog=clickParams.close&&env.closeDialog;const params=getResParams();const resId=params.resId;const resIds=params.resIds||model.resIds;let buttonContext={};if(clickParams.context){if(typeof clickParams.context==="string"){buttonContext=evaluateExpr(clickParams.context,params.evalContext);}else{buttonContext=clickParams.context;}}
if(clickParams.buttonContext){Object.assign(buttonContext,clickParams.buttonContext);}
const doActionParams=Object.assign({},clickParams,{resModel:params.resModel||model.resModel,resId,resIds,context:params.context||{},buttonContext,onClose:async()=>{if(!closeDialog&&status(comp)!=="destroyed"){const reload=options.reload||(()=>model.root.load());await reload();comp.render(true);}},});let error;try{await action.doActionButton(doActionParams);}catch(_e){error=_e;}
await afterExecuteAction(clickParams);if(closeDialog){closeDialog();}
enableButtons(getEl(),manuallyDisabledButtons,enableAction);if(error){return Promise.reject(error);}}
if(clickParams.confirm){await new Promise((resolve)=>{const dialogProps={body:clickParams.confirm,confirm:execute,cancel:()=>{},};dialog.add(ConfirmationDialog,dialogProps,{onClose:resolve});});enableButtons(getEl(),manuallyDisabledButtons,enableAction);}else{return execute();}},});function getEl(){if(env.inDialog){const el=ref.el;return el?el.closest(".modal"):null;}else{return ref.el;}}}
return __exports;});;

/* /web/static/src/views/view_compiler.js */
odoo.define('@web/views/view_compiler',async function(require){'use strict';let __exports={};const{append,combineAttributes,createElement,createTextNode,getTag,}=require("@web/core/utils/xml");const{toStringExpression,BUTTON_CLICK_PARAMS}=require("@web/views/utils");const{xml}=require("@odoo/owl");const BUTTON_STRING_PROPS=["string","size","title","icon","id"];const INTERP_REGEXP=/(\{\{|#\{)(.*?)(\}{1,2})/g;__exports.toInterpolatedStringExpression=toInterpolatedStringExpression;function toInterpolatedStringExpression(str){const matches=str.matchAll(INTERP_REGEXP);const parts=[];let searchString=str;for(const[match,head,expr]of matches){const index=searchString.indexOf(head);const left=searchString.slice(0,index);if(left){parts.push(toStringExpression(left));}
parts.push(`(${expr})`);searchString=searchString.slice(index+match.length);}
parts.push(toStringExpression(searchString));return parts.join("+");}
__exports.appendAttr=appendAttr;function appendAttr(el,attr,string){const attrKey=`t-att-${attr}`;const attrVal=el.getAttribute(attrKey);el.setAttribute(attrKey,appendToStringifiedObject(attrVal,string));}
function appendToStringifiedObject(originalTattr,string){const re=/{(.*)}/;const oldString=re.exec(originalTattr);if(oldString){string=`${oldString[1]},${string}`;}
return`{${string}}`;}
__exports.assignOwlDirectives=assignOwlDirectives;function assignOwlDirectives(target,...sources){for(const source of sources){for(const{name,value}of source.attributes){if(name.startsWith("t-attf-")){const propName=name.slice(7);const interpolatedExpression=toInterpolatedStringExpression(value);target.setAttribute(propName,interpolatedExpression);}else if(name.startsWith("t-att-")){const propName=name.slice(6);target.setAttribute(propName,value);}else if(name.startsWith("t-")){target.setAttribute(name,value);}}}
return target;}
__exports.copyAttributes=copyAttributes;function copyAttributes(el,compiled){const isComponent=isComponentNode(compiled);const classes=el.className;if(classes){if(isComponent){const cls=compiled.className;compiled.setAttribute("class",cls?`'${classes} ' + ${cls}`:`'${classes}'`);}else{compiled.classList.add(...classes.split(/\s+/).filter(Boolean));}}
let att=el.getAttribute("style");if(att){if(isComponent){att=toStringExpression(att);}
compiled.setAttribute("style",att);}}
__exports.decodeObjectForTemplate=decodeObjectForTemplate;function decodeObjectForTemplate(str){return JSON.parse(decodeURI(str));}
__exports.encodeObjectForTemplate=encodeObjectForTemplate;function encodeObjectForTemplate(obj){return`"${encodeURI(JSON.stringify(obj))}"`;}
__exports.getModifier=getModifier;function getModifier(el,modifierName){const modifiers=JSON.parse(el.getAttribute("modifiers")||"{}");const mod=modifierName in modifiers?modifiers[modifierName]:false;return typeof mod!=="boolean"?mod:!!mod;}
function getTitleTag(node){return getTag(node)[0].toUpperCase()+getTag(node).slice(1);}
function isComment(node){return node.nodeType===8;}
__exports.isComponentNode=isComponentNode;function isComponentNode(el){return(getTag(el)===getTitleTag(el)||(getTag(el,true)==="t"&&"t-component"in el.attributes));}
__exports.isTextNode=isTextNode;function isTextNode(node){return node.nodeType===3;}
__exports.makeSeparator=makeSeparator;function makeSeparator(title){const separator=createElement("div");separator.className="o_horizontal_separator mt-4 mb-3 text-uppercase fw-bolder small";separator.textContent=title;return separator;}
const ViewCompiler=__exports.ViewCompiler=class ViewCompiler{constructor(templates){this.id=1;this.compilers=[{selector:"a[type]:not([data-bs-toggle]),a[data-type]:not([data-bs-toggle])",fn:this.compileButton},{selector:"button:not([data-bs-toggle])",fn:this.compileButton,doNotCopyAttributes:true},{selector:"field",fn:this.compileField},{selector:"widget",fn:this.compileWidget},];this.templates=templates;this.ctx={readonly:"props.readonly"};this.owlDirectiveRegexesWhitelist=this.constructor.OWL_DIRECTIVE_WHITELIST.map((d)=>new RegExp(d));this.setup();}
setup(){}
applyInvisible(invisible,compiled,params){if(!invisible){return compiled;}
if(typeof invisible==="boolean"){return;}
const recordExpr=params.recordExpr||"props.record";let isVisileExpr=`!evalDomainFromRecord(${recordExpr},${JSON.stringify(invisible)})`;if(compiled.hasAttribute("t-if")){const formerTif=compiled.getAttribute("t-if");isVisileExpr=`( ${formerTif} ) and ${isVisileExpr}`;}
compiled.setAttribute("t-if",isVisileExpr);return compiled;}
compile(key,params={}){const child=this.compileNode(this.templates[key],params);const newRoot=createElement("t",[child]);return newRoot;}
compileNode(node,params={},evalInvisible=true){if(isComment(node)){return;}
if(isTextNode(node)){return createTextNode(node.nodeValue);}
this.validateNode(node);let invisible;if(evalInvisible){invisible=getModifier(node,"invisible");if(this.isAlwaysInvisible(invisible,params)){return;}}
const compiler=this.compilers.find((cp)=>node.matches(cp.selector));let compiledNode;if(compiler){compiledNode=compiler.fn.call(this,node,params);if(!compiler.doNotCopyAttributes&&compiledNode){copyAttributes(node,compiledNode);}}else{compiledNode=this.compileGenericNode(node,params);}
if(evalInvisible&&compiledNode){compiledNode=this.applyInvisible(invisible,compiledNode,params);}
return compiledNode;}
compileButton(el,params){let tag=getTag(el,true);const type=el.getAttribute("type");if(tag==="a"&&type==="url"){tag="button";}
const button=createElement("ViewButton",{tag:toStringExpression(tag),record:`props.record`,});assignOwlDirectives(button,el);combineAttributes(button,"className",[toStringExpression(el.className),button.className],"+` `+");el.removeAttribute("class");button.removeAttribute("class");const clickParams={};const attrs={};for(const{name,value}of el.attributes){if(BUTTON_CLICK_PARAMS.includes(name)){clickParams[name]=value;}else if(BUTTON_STRING_PROPS.includes(name)){button.setAttribute(name,toStringExpression(value));}else if(!name.startsWith("t-")){attrs[name]=value;}}
button.setAttribute("clickParams",JSON.stringify(clickParams));button.setAttribute("attrs",JSON.stringify(attrs));const buttonContent=[];for(const child of el.childNodes){const compiled=this.compileNode(child,params);if(compiled){buttonContent.push(compiled);}}
if(buttonContent.length){const contentSlot=createElement("t");contentSlot.setAttribute("t-set-slot","contents");append(button,contentSlot);for(const buttonChild of buttonContent){append(contentSlot,buttonChild);}}
return button;}
compileField(el){const fieldName=el.getAttribute("name");const fieldId=el.getAttribute("field_id")||fieldName;const field=createElement("Field");field.setAttribute("id",`'${fieldId}'`);field.setAttribute("name",`'${fieldName}'`);field.setAttribute("record",`props.record`);field.setAttribute("fieldInfo",`props.archInfo.fieldNodes['${fieldId}']`);if(el.hasAttribute("widget")){field.setAttribute("type",`'${el.getAttribute("widget")}'`);}
return field;}
compileGenericNode(el,params){const compiled=createElement(el.nodeName.toLowerCase());const metaAttrs=["modifiers","attrs","invisible","readonly"];for(const attr of el.attributes){if(metaAttrs.includes(attr.name)){continue;}
compiled.setAttribute(attr.name,attr.value);}
for(const child of el.childNodes){append(compiled,this.compileNode(child,params));}
if(el.hasAttribute("t-foreach")&&!el.hasAttribute("t-key")){compiled.setAttribute("t-key",`${el.getAttribute("t-as")}_index`);console.warn(`Missing attribute "t-key" in "t-foreach" statement.`);}
return compiled;}
compileWidget(el){const attrs={};const props={record:`props.record`,readonly:this.ctx.readonly};for(const{name,value}of el.attributes){switch(name){case"class":case"name":{props[name]=`'${value}'`;break;}
case"modifiers":{attrs.modifiers=JSON.parse(value||"{}");break;}
default:{attrs[name]=value;}}}
props.node=encodeObjectForTemplate({attrs});const widget=createElement("Widget",props);return assignOwlDirectives(widget,el);}
isAlwaysInvisible(invisibleModifer,params){return!params.enableInvisible&&typeof invisibleModifer==="boolean"&&invisibleModifer;}
validateNode(node){const attributes=Object.values(node.attributes).map((attr)=>attr.name);const regexes=this.owlDirectiveRegexesWhitelist;for(const attr of attributes){if(attr.startsWith("t-")&&!regexes.some((regex)=>regex.test(attr))){console.warn(`Forbidden directive ${attr} used in arch`);}}}}
ViewCompiler.OWL_DIRECTIVE_WHITELIST=[];let templateIds=Object.create(null);__exports.useViewCompiler=useViewCompiler;function useViewCompiler(ViewCompiler,rawArch,templates,params){if(!templateIds[rawArch]){templateIds[rawArch]={};}
const compiledTemplates=templateIds[rawArch];const compiler=new ViewCompiler(templates);for(const key in templates){if(!compiledTemplates[key]){const compiledDoc=compiler.compile(key,params);compiledTemplates[key]=xml`${compiledDoc.outerHTML}`;}}
return{...compiledTemplates};}
__exports.resetViewCompilerCache=resetViewCompilerCache;function resetViewCompilerCache(){templateIds=Object.create(null);}
return __exports;});;

/* /web/static/src/views/view_dialogs/export_data_dialog.js */
odoo.define('@web/views/view_dialogs/export_data_dialog',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{CheckBox}=require("@web/core/checkbox/checkbox");const{Dialog}=require("@web/core/dialog/dialog");const{unique}=require("@web/core/utils/arrays");const{useService}=require("@web/core/utils/hooks");const{fuzzyLookup}=require("@web/core/utils/search");const{useSortable}=require("@web/core/utils/sortable");const{useDebounced}=require("@web/core/utils/timing");const{Component,useRef,useState,onMounted,onWillStart,onWillUnmount}=require("@odoo/owl");class DeleteExportListDialog extends Component{async onDelete(){await this.props.delete();this.props.close();}}
DeleteExportListDialog.components={Dialog};DeleteExportListDialog.template="web.DeleteExportListDialog";class ExportDataItem extends Component{setup(){this.state=useState({subfields:[],});onWillStart(()=>{if(this.props.isExpanded){return this.toggleItem(this.props.field.id,false);}});}
async toggleItem(id,isUserToggle){if(this.props.isFieldExpandable(id)){if(this.state.subfields.length){this.state.subfields=[];}else{const subfields=await this.props.loadFields(id,!isUserToggle);if(subfields){this.state.subfields=isUserToggle?subfields:this.props.filterSubfields(subfields);}else{this.state.subfields=[];}}}}
onDoubleClick(id){if(!this.props.isFieldExpandable(id)&&!this.isFieldSelected(id)){this.props.onAdd(id);}}
isFieldSelected(current){return this.props.exportList.find(({id})=>id===current);}}
ExportDataItem.template="web.ExportDataItem";ExportDataItem.components={ExportDataItem};ExportDataItem.props={exportList:{type:Object,optional:true},field:{type:Object,optional:true},filterSubfields:Function,isDebug:Boolean,isExpanded:Boolean,isFieldExpandable:Function,onAdd:Function,loadFields:Function,};const ExportDataDialog=__exports.ExportDataDialog=class ExportDataDialog extends Component{setup(){this.dialog=useService("dialog");this.notification=useService("notification");this.orm=useService("orm");this.rpc=useService("rpc");this.draggableRef=useRef("draggable");this.exportListRef=useRef("exportList");this.searchRef=useRef("search");this.knownFields={};this.expandedFields={};this.availableFormats=[];this.templates=[];this.state=useState({exportList:[],isCompatible:false,isEditingTemplate:false,search:[],selectedFormat:0,templateId:null,isSmall:this.env.isSmall,});this.title=this.env._t("Export Data");this.newTemplateText=this.env._t("New template");this.removeFieldText=this.env._t("Remove field");this.debouncedOnResize=useDebounced(this.updateSize,300);useSortable({ref:this.draggableRef,elements:".o_export_field",enable:!this.state.isSmall,cursor:"grabbing",onDrop:async({element,previous,next})=>{const indexes=[element,previous,next].map((e)=>e&&Object.values(this.state.exportList).findIndex(({id})=>id===e.dataset.field_id));let target;if(indexes[0]<indexes[1]){target=previous?indexes[1]:0;}else{target=next?indexes[2]:this.state.exportList.length-1;}
this.onDraggingEnd(indexes[0],target);},});onWillStart(async()=>{this.availableFormats=await this.rpc("/web/export/formats");this.templates=await this.orm.searchRead("ir.exports",[["resource","=",this.props.root.resModel]],[],{context:this.props.context,});await this.fetchFields();});onMounted(()=>{browser.addEventListener("resize",this.debouncedOnResize);this.updateSize();});onWillUnmount(()=>browser.removeEventListener("resize",this.debouncedOnResize));}
get fieldsAvailable(){if(this.searchRef.el&&this.searchRef.el.value){return this.state.search.length&&Object.values(this.state.search);}
return Object.values(this.knownFields);}
get isDebug(){return Boolean(odoo.debug);}
get rootFields(){if(this.searchRef.el&&this.searchRef.el.value){const rootFromSearchResults=this.fieldsAvailable.map((f)=>{if(f.parent){const parentEl=this.knownFields[f.parent.id];return this.knownFields[parentEl.parent?parentEl.parent.id:parentEl.id];}
return this.knownFields[f.id];});return unique(rootFromSearchResults);}
return this.fieldsAvailable.filter(({parent})=>!parent);}
filterSubfields(subfields){let subfieldsFromSearchResults=[];let searchResults;if(this.searchRef.el&&this.searchRef.el.value){searchResults=this.lookup(this.searchRef.el.value);}
const fieldsAvailable=Object.values(searchResults||this.knownFields);if(this.searchRef.el&&this.searchRef.el.value){subfieldsFromSearchResults=fieldsAvailable.filter((f)=>f.parent&&this.knownFields[f.parent.id].parent).map((f)=>f.parent);}
const availableSubFields=unique([...fieldsAvailable,...subfieldsFromSearchResults]);return subfields.filter((a)=>availableSubFields.some((b)=>a.id===b.id));}
updateSize(){this.state.isSmall=this.env.isSmall;}
async fetchFields(){this.state.search=[];this.knownFields={};await this.loadFields();await this.setDefaultExportList();if(this.searchRef.el){this.searchRef.el.value="";}
if(this.state.templateId){this.loadExportList(this.state.templateId);}}
enterTemplateEdition(){if(this.state.templateId&&!this.state.isEditingTemplate){this.state.isEditingTemplate=true;}}
isFieldExpandable(id){return this.knownFields[id].children&&id.split("/").length<3;}
async loadExportList(value){this.state.templateId=value==="new_template"?value:Number(value);this.state.isEditingTemplate=value==="new_template";if(!value||value==="new_template"){return;}
const fields=await this.rpc("/web/export/namelist",{model:this.props.root.resModel,export_id:Number(value),});this.state.exportList=fields.map(({label,name})=>{return{string:label,id:name,};});}
async loadFields(id,preventLoad=false){let model=this.props.root.resModel;let parentField,parentParams;if(id){if(this.expandedFields[id]){return this.expandedFields[id].fields;}
parentField=this.knownFields[id];model=parentField.params&&parentField.params.model;parentParams={...parentField.params,parent_field_type:parentField.field_type,parent_field:parentField,parent_name:parentField.string,exclude:[parentField.relation_field],};}
if(preventLoad){return;}
const fields=await this.props.getExportedFields(model,this.state.isCompatible,parentParams);for(const field of fields){field.parent=parentField;if(!this.knownFields[field.id]){this.knownFields[field.id]=field;}}
if(id){this.expandedFields[id]={fields};}
return fields;}
onDraggingEnd(item,target){this.state.exportList.splice(target,0,this.state.exportList.splice(item,1)[0]);}
onAddItemExportList(fieldId){this.state.exportList.push(this.knownFields[fieldId]);this.enterTemplateEdition();}
onRemoveItemExportList(fieldId){const item=this.state.exportList.findIndex(({id})=>id===fieldId);this.state.exportList.splice(item,1);this.enterTemplateEdition();}
async onChangeExportList(ev){this.loadExportList(ev.target.value);}
async onSaveExportTemplate(){const name=this.exportListRef.el.value;if(!name){return this.notification.add(this.env._t("Please enter save field list name"),{type:"danger",});}
const id=await this.orm.create("ir.exports",[{name,export_fields:this.state.exportList.map((field)=>[0,0,{name:field.id,},]),resource:this.props.root.resModel,},],{context:this.props.context});this.state.isEditingTemplate=false;this.state.templateId=id;this.templates.push({id,name});}
onCancelExportTemplate(){this.state.isEditingTemplate=false;if(this.state.templateId==="new_template"){this.state.templateId=null;return;}
this.loadExportList(this.state.templateId);}
async onClickExportButton(){if(!this.state.exportList.length){return this.notification.add(this.env._t("Please select fields to save export list..."),{type:"danger",});}
await this.props.download(this.state.exportList,this.state.isCompatible,this.availableFormats[this.state.selectedFormat].tag);}
async onDeleteExportTemplate(){this.dialog.add(DeleteExportListDialog,{text:this.env._t("Do you really want to delete this export template?"),delete:async()=>{const id=Number(this.state.templateId);await this.orm.unlink("ir.exports",[id],{context:this.props.context});this.templates.splice(this.templates.findIndex((i)=>i.id===id),1);this.state.templateId=null;this.setDefaultExportList();},});}
onSearch(ev){this.state.search=this.lookup(ev.target.value);}
lookup(value){let lookupResult=fuzzyLookup(value,Object.values(this.knownFields),(field)=>field.string.split("/").reverse().join("/"));if(this.isDebug){lookupResult=unique([...lookupResult,...Object.values(this.knownFields).filter((f)=>{return f.id.includes(value);}),]);}
return lookupResult;}
onToggleCompatibleExport(value){this.state.isCompatible=value;this.fetchFields();}
async setDefaultExportList(){this.state.exportList=Object.values(this.knownFields).filter((e)=>e.default_export||this.props.defaultExportList.find((i)=>i.name===e.id));}
setFormat(ev){if(ev.target.checked){this.state.selectedFormat=this.availableFormats.findIndex(({tag})=>tag===ev.target.value);}}}
ExportDataDialog.components={CheckBox,Dialog,ExportDataItem};ExportDataDialog.props={close:{type:Function},context:{type:Object,optional:true},defaultExportList:{type:Array},download:{type:Function},getExportedFields:{type:Function},root:{type:Object},};ExportDataDialog.template="web.ExportDataDialog";return __exports;});;

/* /web/static/src/views/view_dialogs/form_view_dialog.js */
odoo.define('@web/views/view_dialogs/form_view_dialog',async function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{useChildRef}=require("@web/core/utils/hooks");const{View}=require("@web/views/view");const{Component,onMounted}=require("@odoo/owl");const FormViewDialog=__exports.FormViewDialog=class FormViewDialog extends Component{setup(){super.setup();this.modalRef=useChildRef();const buttonTemplate=this.props.isToMany?"web.FormViewDialog.ToMany.buttons":"web.FormViewDialog.ToOne.buttons";this.viewProps={type:"form",buttonTemplate,context:this.props.context||{},display:{controlPanel:false},mode:this.props.mode||"edit",resId:this.props.resId||false,resModel:this.props.resModel,viewId:this.props.viewId||false,preventCreate:this.props.preventCreate,preventEdit:this.props.preventEdit,discardRecord:async()=>{if(this.props.onRecordDiscarded){await this.props.onRecordDiscarded();}
this.props.close();},saveRecord:async(record,{saveAndNew})=>{const saved=await record.save({stayInEdition:true,noReload:true});if(saved){await this.props.onRecordSaved(record);if(saveAndNew){const context=Object.assign({},this.props.context);Object.keys(context).forEach((k)=>{if(k.startsWith("default_")){delete context[k];}});await record.model.load({resId:null,context});}else{this.props.close();}}},};if(this.props.removeRecord){this.viewProps.removeRecord=async()=>{await this.props.removeRecord();this.props.close();};}
onMounted(()=>{if(this.modalRef.el.querySelector(".modal-footer").childElementCount>1){const defaultButton=this.modalRef.el.querySelector(".modal-footer button.o-default-button");if(defaultButton){defaultButton.classList.add("d-none");}}});}}
FormViewDialog.components={Dialog,View};FormViewDialog.props={close:Function,resModel:String,context:{type:Object,optional:true},mode:{optional:true,validate:(m)=>["edit","readonly"].includes(m),},onRecordSaved:{type:Function,optional:true},onRecordDiscarded:{type:Function,optional:true},removeRecord:{type:Function,optional:true},resId:{type:[Number,Boolean],optional:true},title:{type:String,optional:true},viewId:{type:[Number,Boolean],optional:true},preventCreate:{type:Boolean,optional:true},preventEdit:{type:Boolean,optional:true},isToMany:{type:Boolean,optional:true},size:Dialog.props.size,};FormViewDialog.defaultProps={onRecordSaved:()=>{},preventCreate:false,preventEdit:false,isToMany:false,};FormViewDialog.template="web.FormViewDialog";return __exports;});;

/* /web/static/src/views/view_dialogs/select_create_dialog.js */
odoo.define('@web/views/view_dialogs/select_create_dialog',async function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{useService}=require("@web/core/utils/hooks");const{View}=require("@web/views/view");const{escape}=require("@web/core/utils/strings");const{FormViewDialog}=require("@web/views/view_dialogs/form_view_dialog");const{Component,markup,useState}=require("@odoo/owl");const SelectCreateDialog=__exports.SelectCreateDialog=class SelectCreateDialog extends Component{setup(){this.viewService=useService("view");this.dialogService=useService("dialog");this.state=useState({resIds:[]});this.baseViewProps={display:{searchPanel:false},editable:false,noBreadcrumbs:true,noContentHelp:markup(`<p>${escape(this.env._t("No records found!"))}</p>`),showButtons:false,selectRecord:(resId)=>this.select([resId]),onSelectionChanged:(resIds)=>{this.state.resIds=resIds;},};}
get viewProps(){const type=this.env.isSmall?"kanban":"list";const props={loadIrFilters:true,...this.baseViewProps,context:this.props.context,domain:this.props.domain,dynamicFilters:this.props.dynamicFilters,resModel:this.props.resModel,searchViewId:this.props.searchViewId,type,};if(type==="list"){props.allowSelectors=this.props.multiSelect;}else if(type==="kanban"){props.forceGlobalClick=true;if(this.props.kanbanViewId){props.viewId=this.props.kanbanViewId;}}
return props;}
async select(resIds){if(this.props.onSelected){await this.props.onSelected(resIds);this.props.close();}}
async unselect(){if(this.props.onUnselect){await this.props.onUnselect();this.props.close();}}
get canUnselect(){return this.env.isSmall&&!!this.props.onUnselect;}
async createEditRecord(){if(this.props.onCreateEdit){await this.props.onCreateEdit();this.props.close();}else{this.dialogService.add(FormViewDialog,{context:this.props.context,resModel:this.props.resModel,onRecordSaved:(record)=>{this.props.onSelected([record.resId]);this.props.close();},});}}}
SelectCreateDialog.components={Dialog,View};SelectCreateDialog.template="web.SelectCreateDialog";SelectCreateDialog.defaultProps={dynamicFilters:[],multiSelect:true,searchViewId:false,type:"list",};return __exports;});;

/* /web/static/src/views/view_hook.js */
odoo.define('@web/views/view_hook',async function(require){'use strict';let __exports={};const{useDebugCategory}=require("@web/core/debug/debug_context");const{useSetupAction}=require("@web/webclient/actions/action_hook");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{browser}=require("@web/core/browser/browser");const{evaluateExpr}=require("@web/core/py_js/py");const{useComponent,useEffect,xml}=require("@odoo/owl");__exports.useSetupView=useSetupView;function useSetupView(params){const component=useComponent();useDebugCategory("view",{component});useSetupAction(params);}
__exports.useViewArch=useViewArch;function useViewArch(arch,params={}){const CATEGORY="__processed_archs__";arch=arch.trim();const processedRegistry=registry.category(CATEGORY);let processedArch;if(!processedRegistry.contains(arch)){processedArch={};processedRegistry.add(arch,processedArch);}else{processedArch=processedRegistry.get(arch);}
const{compile,extract}=params;if(!("template"in processedArch)&&compile){processedArch.template=xml`${compile(arch)}`;}
if(!("extracted"in processedArch)&&extract){processedArch.extracted=extract(arch);}
return processedArch;}
__exports.useActionLinks=useActionLinks;function useActionLinks({resModel,reload}){const component=useComponent();const keepLast=component.env.keepLast;const orm=useService("orm");const{doAction}=useService("action");function checkAndCollapseBootstrap(target){if(target.dataset.bsToggle==="collapse"){$(target).trigger("click.bs.collapse.data-api");}}
async function handler(ev){ev.preventDefault();ev.stopPropagation();let target=ev.target;if(target.tagName!=="A"){target=target.closest("a");}
const data=target.dataset;if(data.method!==undefined&&data.model!==undefined){const options={};if(data.reloadOnClose){options.onClose=reload||(()=>component.render());}
const action=await keepLast.add(orm.call(data.model,data.method));if(action!==undefined){keepLast.add(Promise.resolve(doAction(action,options)));}}else if(target.getAttribute("name")){const options={};if(data.context){options.additionalContext=evaluateExpr(data.context);}
keepLast.add(doAction(target.getAttribute("name"),options));}else{let views;const resId=data.resid?parseInt(data.resid,10):null;if(data.views){views=evaluateExpr(data.views);}else{views=resId?[[false,"form"]]:[[false,"list"],[false,"form"],];}
const action={name:target.getAttribute("title")||target.textContent.trim(),type:"ir.actions.act_window",res_model:data.model||resModel,target:"current",views,domain:data.domain?evaluateExpr(data.domain):[],};if(resId){action.res_id=resId;}
const options={};if(data.context){options.additionalContext=evaluateExpr(data.context);}
keepLast.add(doAction(action,options));}
checkAndCollapseBootstrap(target);}
return(ev)=>{const a=ev.target.closest(`a[type="action"]`);if(a&&ev.currentTarget.contains(a)){handler(ev);}};}
__exports.useBounceButton=useBounceButton;function useBounceButton(containerRef,shouldBounce){let timeout;const ui=useService("ui");useEffect((containerEl)=>{if(!containerEl){return;}
const handler=(ev)=>{const button=ui.activeElement.querySelector("[data-bounce-button]");if(button&&shouldBounce(ev.target)){button.classList.add("o_catch_attention");browser.clearTimeout(timeout);timeout=browser.setTimeout(()=>{button.classList.remove("o_catch_attention");},400);}};containerEl.addEventListener("click",handler);return()=>containerEl.removeEventListener("click",handler);},()=>[containerRef.el]);}
return __exports;});;

/* /web/static/src/views/view_service.js */
odoo.define('@web/views/view_service',async function(require){'use strict';let __exports={};const{deepCopy}=require("@web/core/utils/objects");const{registry}=require("@web/core/registry");const{generateLegacyLoadViewsResult}=require("@web/legacy/legacy_load_views");const viewService=__exports.viewService={dependencies:["orm"],start(env,{orm}){let cache={};env.bus.addEventListener("CLEAR-CACHES",()=>{cache={};const processedArchs=registry.category("__processed_archs__");processedArchs.content={};processedArchs.trigger("UPDATE");});async function loadFields(resModel,options={}){const key=JSON.stringify(["fields",resModel,options.fieldNames,options.attributes,]);if(!cache[key]){cache[key]=orm.call(resModel,"fields_get",[options.fieldNames,options.attributes]).catch((error)=>{delete cache[key];return Promise.reject(error);});}
return cache[key];}
async function loadViews(params,options={}){const loadViewsOptions={action_id:options.actionId||false,load_filters:options.loadIrFilters||false,toolbar:options.loadActionMenus||false,};if(env.isSmall){loadViewsOptions.mobile=true;}
const{context,resModel,views}=params;const filteredContext=Object.fromEntries(Object.entries(context||{}).filter((k,v)=>!String(k).startsWith("default_")));const key=JSON.stringify([resModel,views,filteredContext,loadViewsOptions]);if(!cache[key]){cache[key]=orm.call(resModel,"get_views",[],{context,views,options:loadViewsOptions}).then((result)=>{const{models,views}=result;const modelsCopy=deepCopy(models);const viewDescriptions={__legacy__:generateLegacyLoadViewsResult(resModel,views,modelsCopy),fields:models[resModel],relatedModels:models,views:{},};for(const[resModel,fields]of Object.entries(modelsCopy)){const key=JSON.stringify(["fields",resModel,undefined,undefined]);cache[key]=Promise.resolve(fields);}
for(const viewType in views){const{arch,toolbar,id,filters,custom_view_id}=views[viewType];const viewDescription={arch,id,custom_view_id};if(toolbar){viewDescription.actionMenus=toolbar;}
if(filters){viewDescription.irFilters=filters;}
viewDescriptions.views[viewType]=viewDescription;}
return viewDescriptions;}).catch((error)=>{delete cache[key];return Promise.reject(error);});}
return cache[key];}
return{loadViews,loadFields};},};registry.category("services").add("view",viewService);return __exports;});;

/* /web/static/src/views/widgets/attach_document/attach_document.js */
odoo.define('@web/views/widgets/attach_document/attach_document',async function(require){'use strict';let __exports={};const{FileInput}=require("@web/core/file_input/file_input");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{standardWidgetProps}=require("@web/views/widgets/standard_widget_props");const{Component}=require("@odoo/owl");const AttachDocumentWidget=__exports.AttachDocumentWidget=class AttachDocumentWidget extends Component{setup(){this.http=useService("http");this.notification=useService("notification");this.fileInput=document.createElement("input");this.fileInput.type="file";this.fileInput.accept="*";this.fileInput.multiple=true;this.fileInput.onchange=this.onInputChange.bind(this);}
async onInputChange(){const fileData=await this.http.post("/web/binary/upload_attachment",{csrf_token:odoo.csrf_token,ufile:[...this.fileInput.files],model:this.props.record.resModel,id:this.props.record.resId,},"text");const parsedFileData=JSON.parse(fileData);if(parsedFileData.error){throw new Error(parsedFileData.error);}
await this.onFileUploaded(parsedFileData);}
async triggerUpload(){if(await this.beforeOpen()){this.fileInput.click();}}
async onFileUploaded(files){const{action,record}=this.props;if(action){const{model,resId,resModel}=record;await this.env.services.orm.call(resModel,action,[resId],{attachment_ids:files.map((file)=>file.id),});await record.load();model.notify();}}
beforeOpen(){return this.props.record.save();}}
AttachDocumentWidget.template="web.AttachDocument";AttachDocumentWidget.components={FileInput,};AttachDocumentWidget.props={...standardWidgetProps,string:{type:String},action:{type:String,optional:true},highlight:{type:Boolean},};AttachDocumentWidget.extractProps=({attrs})=>{const{action,highlight,string}=attrs;return{action,highlight:!!highlight,string,};};registry.category("view_widgets").add("attach_document",AttachDocumentWidget);return __exports;});;

/* /web/static/src/views/widgets/ribbon/ribbon.js */
odoo.define('@web/views/widgets/ribbon/ribbon',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{standardWidgetProps}=require("@web/views/widgets/standard_widget_props");const{Component}=require("@odoo/owl");class RibbonWidget extends Component{get classes(){let classes=this.props.bgClass;if(this.props.text.length>15){classes+=" o_small";}else if(this.props.text.length>10){classes+=" o_medium";}
return classes;}}
RibbonWidget.template="web.Ribbon";RibbonWidget.props={...standardWidgetProps,text:{type:String},title:{type:String,optional:true},bgClass:{type:String,optional:true},};RibbonWidget.defaultProps={title:"",bgClass:"bg-success",};RibbonWidget.extractProps=({attrs})=>{return{text:attrs.title||attrs.text,title:attrs.tooltip,bgClass:attrs.bg_color,};};registry.category("view_widgets").add("web_ribbon",RibbonWidget);return __exports;});;

/* /web/static/src/views/widgets/signature/signature.js */
odoo.define('@web/views/widgets/signature/signature',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{SignatureDialog}=require("@web/core/signature/signature_dialog");const{useService}=require("@web/core/utils/hooks");const{standardWidgetProps}=require("@web/views/widgets/standard_widget_props");const{Component}=require("@odoo/owl");const SignatureWidget=__exports.SignatureWidget=class SignatureWidget extends Component{setup(){this.dialogService=useService("dialog");this.orm=useService("orm");}
onClickSignature(){const nameAndSignatureProps={mode:"draw",displaySignatureRatio:3,signatureType:"signature",noInputName:true,};const{fullName,record}=this.props;let defaultName="";if(fullName){let signName;const fullNameData=record.data[fullName];if(record.fields[fullName].type==="many2one"){signName=fullNameData&&fullNameData[1];}else{signName=fullNameData;}
defaultName=signName===""?undefined:signName;}
nameAndSignatureProps.defaultFont=this.props.defaultFont;const dialogProps={defaultName,nameAndSignatureProps,uploadSignature:(data)=>this.uploadSignature(data),};this.dialogService.add(SignatureDialog,dialogProps);}
async uploadSignature({signatureImage}){const file=signatureImage[1];const{model,resModel,resId}=this.props.record;await this.env.services.orm.write(resModel,[resId],{[this.props.signatureField]:file,});await this.props.record.load();model.notify();}}
SignatureWidget.template="web.SignatureWidget";SignatureWidget.props={...standardWidgetProps,fullName:{type:String,optional:true},highlight:{type:Boolean,optional:true},string:{type:String},signatureField:{type:String,optional:true},};SignatureWidget.extractProps=({attrs})=>{const{full_name:fullName,highlight,signature_field,string}=attrs;return{fullName,highlight:!!highlight,string,signatureField:signature_field||"signature",};};registry.category("view_widgets").add("signature",SignatureWidget);return __exports;});;

/* /web/static/src/views/widgets/standard_widget_props.js */
odoo.define('@web/views/widgets/standard_widget_props',async function(require){'use strict';let __exports={};const standardWidgetProps=__exports.standardWidgetProps={readonly:{type:Boolean,optional:true},record:{type:Object},};return __exports;});;

/* /web/static/src/views/widgets/week_days/week_days.js */
odoo.define('@web/views/widgets/week_days/week_days',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{CheckBox}=require("@web/core/checkbox/checkbox");const{localization}=require("@web/core/l10n/localization");const{_lt}=require("@web/core/l10n/translation");const{Component}=require("@odoo/owl");const WEEKDAYS=["sun","mon","tue","wed","thu","fri","sat"];const WeekDays=__exports.WeekDays=class WeekDays extends Component{get weekdays(){return[...WEEKDAYS.slice(localization.weekStart%WEEKDAYS.length,WEEKDAYS.length),...WEEKDAYS.slice(0,localization.weekStart%WEEKDAYS.length),];}
get data(){return Object.fromEntries(this.weekdays.map((day)=>[day,this.props.record.data[day]]));}
onChange(day,checked){this.props.record.update({[day]:checked});}}
WeekDays.template="web.WeekDays";WeekDays.components={CheckBox};WeekDays.fieldDependencies={sun:{type:"boolean",string:_lt("Sun")},mon:{type:"boolean",string:_lt("Mon")},tue:{type:"boolean",string:_lt("Tue")},wed:{type:"boolean",string:_lt("Wed")},thu:{type:"boolean",string:_lt("Thu")},fri:{type:"boolean",string:_lt("Fri")},sat:{type:"boolean",string:_lt("Sat")},};registry.category("view_widgets").add("week_days",WeekDays);return __exports;});;

/* /web/static/src/views/widgets/widget.js */
odoo.define('@web/views/widgets/widget',async function(require){'use strict';let __exports={};const{evaluateExpr}=require("@web/core/py_js/py");const{registry}=require("@web/core/registry");const{decodeObjectForTemplate}=require("@web/views/view_compiler");const{Component,xml}=require("@odoo/owl");const viewWidgetRegistry=registry.category("view_widgets");function findWidgetComponent(name){return viewWidgetRegistry.get(name);}
const Widget=__exports.Widget=class Widget extends Component{get Widget(){return findWidgetComponent(this.props.name);}
get classNames(){return{o_widget:true,[`o_widget_${this.props.name}`]:true,[this.props.className]:Boolean(this.props.className),};}
get widgetProps(){const{node:rawNode}=this.props;const node=rawNode?decodeObjectForTemplate(rawNode):{};let propsFromAttrs={};if(node.attrs){const extractProps=this.Widget.extractProps||(()=>({}));propsFromAttrs=extractProps({attrs:{...node.attrs,options:evaluateExpr(node.attrs.options||"{}"),},});}
const props={...this.props};delete props.class;delete props.name;delete props.node;return{...propsFromAttrs,...props};}}
Widget.template=xml`
    <div t-att-class="classNames" t-att-style="props.style">
        <t t-component="Widget" t-props="widgetProps" />
    </div>`;Widget.parseWidgetNode=function(node){const name=node.getAttribute("name");const WidgetComponent=findWidgetComponent(name);const attrs=Object.fromEntries([...node.attributes].map(({name,value})=>{return[name,name==="modifiers"?JSON.parse(value||"{}"):value];}));return{options:evaluateExpr(node.getAttribute("options")||"{}"),name,rawAttrs:attrs,WidgetComponent,};};return __exports;});;

/* /web/static/src/webclient/actions/action_container.js */
odoo.define('@web/webclient/actions/action_container',async function(require){'use strict';let __exports={};const{ActionDialog}=require("@web/webclient/actions/action_dialog");const{Component,xml,onWillDestroy}=require("@odoo/owl");const ActionContainer=__exports.ActionContainer=class ActionContainer extends Component{setup(){this.info={};this.onActionManagerUpdate=({detail:info})=>{this.info=info;this.render();};this.env.bus.addEventListener("ACTION_MANAGER:UPDATE",this.onActionManagerUpdate);onWillDestroy(()=>{this.env.bus.removeEventListener("ACTION_MANAGER:UPDATE",this.onActionManagerUpdate);});}}
ActionContainer.components={ActionDialog};ActionContainer.template=xml`
    <t t-name="web.ActionContainer">
      <div class="o_action_manager">
        <t t-if="info.Component" t-component="info.Component" className="'o_action'" t-props="info.componentProps" t-key="info.id"/>
      </div>
    </t>`;return __exports;});;

/* /web/static/src/webclient/actions/action_dialog.js */
odoo.define('@web/webclient/actions/action_dialog',async function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{DebugMenu}=require("@web/core/debug/debug_menu");const{useOwnDebugContext}=require("@web/core/debug/debug_context");const{useLegacyRefs}=require("@web/legacy/utils");const{useEffect}=require("@odoo/owl");const LEGACY_SIZE_CLASSES={"extra-large":"xl",large:"lg",medium:"md",small:"sm",};class ActionDialog extends Dialog{setup(){super.setup();useOwnDebugContext();useEffect(()=>{if(this.modalRef.el.querySelector(".modal-footer").childElementCount>1){const defaultButton=this.modalRef.el.querySelector(".modal-footer button.o-default-button");defaultButton.classList.add("d-none");}},()=>[]);}}
ActionDialog.components={...Dialog.components,DebugMenu};ActionDialog.template="web.ActionDialog";ActionDialog.props={...Dialog.props,close:Function,slots:{optional:true},ActionComponent:{optional:true},actionProps:{optional:true},actionType:{optional:true},title:{optional:true},};ActionDialog.defaultProps={...Dialog.defaultProps,withBodyPadding:false,};class LegacyAdaptedActionDialog extends ActionDialog{setup(){super.setup();const actionProps=this.props&&this.props.actionProps;const actionContext=actionProps&&actionProps.context;const actionDialogSize=actionContext&&actionContext.dialog_size;this.props.size=LEGACY_SIZE_CLASSES[actionDialogSize]||Dialog.defaultProps.size;const ControllerComponent=this.props&&this.props.ActionComponent;const Controller=ControllerComponent&&ControllerComponent.Component;this.isLegacy=Controller&&Controller.isLegacy;const legacyRefs=useLegacyRefs();useEffect(()=>{if(this.isLegacy){const footer=this.modalRef.el.querySelector("footer");legacyRefs.widget.renderButtons($(footer));}},()=>[]);}}
LegacyAdaptedActionDialog.template="web.LegacyAdaptedActionDialog";Object.assign(__exports,{ActionDialog:LegacyAdaptedActionDialog});return __exports;});;

/* /web/static/src/webclient/actions/action_hook.js */
odoo.define('@web/webclient/actions/action_hook',async function(require){'use strict';let __exports={};const{onMounted,useComponent,useEffect,useExternalListener}=require("@odoo/owl");const scrollSymbol=Symbol("scroll");const CallbackRecorder=__exports.CallbackRecorder=class CallbackRecorder{constructor(){this.setup();}
setup(){this._callbacks=[];}
get callbacks(){return this._callbacks.map(({callback})=>callback);}
add(owner,callback){if(!callback){throw new Error("Missing callback");}
this._callbacks.push({owner,callback});}
remove(owner){this._callbacks=this._callbacks.filter((s)=>s.owner!==owner);}}
__exports.useCallbackRecorder=useCallbackRecorder;function useCallbackRecorder(callbackRecorder,callback){const component=useComponent();useEffect(()=>{callbackRecorder.add(component,callback);return()=>callbackRecorder.remove(component);},()=>[]);}
__exports.useSetupAction=useSetupAction;function useSetupAction(params={}){const component=useComponent();const{__beforeLeave__,__getGlobalState__,__getLocalState__,__getContext__,__getOrderBy__,}=component.env;const{beforeUnload,beforeLeave,getGlobalState,getLocalState,rootRef}=params;if(beforeUnload){useExternalListener(window,"beforeunload",beforeUnload);}
if(__beforeLeave__&&beforeLeave){useCallbackRecorder(__beforeLeave__,beforeLeave);}
if(__getGlobalState__&&(getGlobalState||rootRef)){useCallbackRecorder(__getGlobalState__,()=>{const state={};if(getGlobalState){Object.assign(state,getGlobalState());}
if(rootRef){const searchPanelEl=rootRef.el.querySelector(".o_content .o_search_panel");if(searchPanelEl){state[scrollSymbol]={searchPanel:{left:searchPanelEl.scrollLeft,top:searchPanelEl.scrollTop,},};}}
return state;});if(rootRef){onMounted(()=>{const{globalState}=component.props;const scrolling=globalState&&globalState[scrollSymbol];if(scrolling){const searchPanelEl=rootRef.el.querySelector(".o_content .o_search_panel");if(searchPanelEl){searchPanelEl.scrollLeft=(scrolling.searchPanel&&scrolling.searchPanel.left)||0;searchPanelEl.scrollTop=(scrolling.searchPanel&&scrolling.searchPanel.top)||0;}}});}}
if(__getLocalState__&&(getLocalState||rootRef)){useCallbackRecorder(__getLocalState__,()=>{const state={};if(getLocalState){Object.assign(state,getLocalState());}
if(rootRef){if(component.env.isSmall){state[scrollSymbol]={root:{left:rootRef.el.scrollLeft,top:rootRef.el.scrollTop},};}else{const contentEl=rootRef.el.querySelector(".o_content");if(contentEl){state[scrollSymbol]={content:{left:contentEl.scrollLeft,top:contentEl.scrollTop},};}}}
return state;});if(rootRef){onMounted(()=>{const{state}=component.props;const scrolling=state&&state[scrollSymbol];if(scrolling){if(component.env.isSmall){rootRef.el.scrollTop=(scrolling.root&&scrolling.root.top)||0;rootRef.el.scrollLeft=(scrolling.root&&scrolling.root.left)||0;}else if(scrolling.content){const contentEl=rootRef.el.querySelector(".o_content");if(contentEl){contentEl.scrollTop=scrolling.content.top||0;contentEl.scrollLeft=scrolling.content.left||0;}}}});}}
if(__getContext__&&params.getContext){useCallbackRecorder(__getContext__,params.getContext);}
if(__getOrderBy__&&params.getOrderBy){useCallbackRecorder(__getOrderBy__,params.getOrderBy);}}
return __exports;});;

/* /web/static/src/webclient/actions/action_service.js */
odoo.define('@web/webclient/actions/action_service',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{makeContext}=require("@web/core/context");const{useDebugCategory}=require("@web/core/debug/debug_context");const{download}=require("@web/core/network/download");const{evaluateExpr}=require("@web/core/py_js/py");const{registry}=require("@web/core/registry");const{KeepLast}=require("@web/core/utils/concurrency");const{useBus,useService}=require("@web/core/utils/hooks");const{sprintf}=require("@web/core/utils/strings");const{cleanDomFromBootstrap}=require("@web/legacy/utils");const{View,ViewNotFoundError}=require("@web/views/view");const{ActionDialog}=require("@web/webclient/actions/action_dialog");const{CallbackRecorder}=require("@web/webclient/actions/action_hook");const{ReportAction}=require("@web/webclient/actions/reports/report_action");const{Component,markup,onMounted,onWillUnmount,onError,useChildSubEnv,xml,reactive,}=require("@odoo/owl");const actionHandlersRegistry=registry.category("action_handlers");const actionRegistry=registry.category("actions");const viewRegistry=registry.category("views");__exports.clearUncommittedChanges=clearUncommittedChanges;async function clearUncommittedChanges(env){const callbacks=[];env.bus.trigger("CLEAR-UNCOMMITTED-CHANGES",callbacks);const res=await Promise.all(callbacks.map((fn)=>fn()));return!res.includes(false);}
function parseActiveIds(ids){const activeIds=[];if(typeof ids==="string"){activeIds.push(...ids.split(",").map(Number));}else if(typeof ids==="number"){activeIds.push(ids);}
return activeIds;}
const ControllerNotFoundError=__exports.ControllerNotFoundError=class ControllerNotFoundError extends Error{}
const InvalidButtonParamsError=__exports.InvalidButtonParamsError=class InvalidButtonParamsError extends Error{}
const CTX_KEY_REGEX=/^(?:(?:default_|search_default_|show_).+|.+_view_ref|group_by|group_by_no_leaf|active_id|active_ids|orderedBy)$/;const ControllerComponentTemplate=xml`<t t-component="Component" t-props="props"/>`;function makeActionManager(env){const keepLast=new KeepLast();let id=0;let controllerStack=[];let dialogCloseProm;let actionCache={};let dialog=null;const actionParams=_getActionParams();if(actionParams&&typeof actionParams.actionRequest==="number"){const{actionRequest,options}=actionParams;_loadAction(actionRequest,options.additionalContext);}
env.bus.addEventListener("CLEAR-CACHES",()=>{actionCache={};});function _removeDialog(){if(dialog){const{onClose,remove}=dialog;dialog=null;remove();return onClose;}}
function _getCurrentController(){const stack=controllerStack;return stack.length?stack[stack.length-1]:null;}
async function _loadAction(actionRequest,context={}){if(typeof actionRequest==="string"&&actionRegistry.contains(actionRequest)){return{target:"current",tag:actionRequest,type:"ir.actions.client",};}
if(typeof actionRequest==="string"||typeof actionRequest==="number"){const additional_context={active_id:context.active_id,active_ids:context.active_ids,active_model:context.active_model,};const key=`${JSON.stringify(actionRequest)},${JSON.stringify(additional_context)}`;let action;if(!actionCache[key]){actionCache[key]=env.services.rpc("/web/action/load",{action_id:actionRequest,additional_context,});action=await actionCache[key];if(action.help){action.help=markup(action.help);}}else{action=await actionCache[key];}
if(!action){return{type:"ir.actions.client",tag:"invalid_action",id:actionRequest,};}
return Object.assign({},action);}
return actionRequest;}
function _preprocessAction(action,context={}){try{action._originalAction=JSON.stringify(action);}catch(_e){}
action.context=makeContext([context,action.context],env.services.user.context);if(action.domain){const domain=action.domain||[];action.domain=typeof domain==="string"?evaluateExpr(domain,Object.assign({},env.services.user.context,action.context)):domain;}
if(action.help){const htmlHelp=document.createElement("div");htmlHelp.innerHTML=action.help;if(!htmlHelp.innerText.trim()){delete action.help;}}
action={...action};action.jsId=`action_${++id}`;if(action.type==="ir.actions.act_window"||action.type==="ir.actions.client"){action.target=action.target||"current";}
if(action.type==="ir.actions.act_window"){action.views=[...action.views.map((v)=>[v[0],v[1]==="tree"?"list":v[1]])];action.controllers={};const target=action.target;if(target!=="inline"&&!(target==="new"&&action.views[0][1]==="form")){const searchViewId=action.search_view_id?action.search_view_id[0]:false;action.views.push([searchViewId,"search"]);}}
return action;}
function _getView(viewType){const currentController=controllerStack[controllerStack.length-1];if(currentController.action.type!=="ir.actions.act_window"){throw new Error(`switchView called but the current controller isn't a view`);}
const view=currentController.views.find((view)=>view.type===viewType);return view||null;}
function _getBreadcrumbs(stack){return stack.filter((controller)=>controller.action.tag!=="menu").map((controller)=>{return{jsId:controller.jsId,get name(){return controller.displayName;},};});}
function _getActionParams(){const state=env.services.router.current.hash;const options={clearBreadcrumbs:true};let actionRequest=null;if(state.action){if(actionRegistry.contains(state.action)){actionRequest={params:state,tag:state.action,type:"ir.actions.client",};}else{actionRequest=state.action;const context={params:state};if(state.active_id){context.active_id=state.active_id;}
if(state.active_ids){context.active_ids=parseActiveIds(state.active_ids);}else if(state.active_id){context.active_ids=[state.active_id];}
Object.assign(options,{additionalContext:context,viewType:state.view_type,});if(state.id){options.props={resId:state.id};}}}else if(state.model){if(state.id){actionRequest={res_model:state.model,res_id:state.id,type:"ir.actions.act_window",views:[[state.view_id?state.view_id:false,"form"]],};}else if(state.view_type){const storedAction=browser.sessionStorage.getItem("current_action");const lastAction=JSON.parse(storedAction||"{}");if(lastAction.help){lastAction.help=markup(lastAction.help);}
if(lastAction.res_model===state.model){if(lastAction.context){delete lastAction.context.allowed_company_ids;}
actionRequest=lastAction;options.viewType=state.view_type;}}}
if(!actionRequest&&env.services.user.home_action_id){actionRequest=env.services.user.home_action_id;}
return actionRequest?{actionRequest,options}:null;}
function _getActionInfo(action,props){return{props:Object.assign({},props,{action,actionId:action.id}),config:{actionId:action.id,actionType:"ir.actions.client",actionFlags:action.flags,},displayName:action.display_name||action.name||"",};}
function _getActionMode(action){if(action.target==="new"){return"new";}
if(action.type==="ir.actions.client"){const clientAction=actionRegistry.get(action.tag);if(clientAction.target){return clientAction.target;}}
if(controllerStack.some((c)=>c.action.target==="fullscreen")){return"fullscreen";}
return"current";}
function _getSwitchViewParams(){const state=env.services.router.current.hash;if(state.action&&!actionRegistry.contains(state.action)){const currentController=controllerStack[controllerStack.length-1];const currentActionId=currentController&&currentController.action&&currentController.action.id;if(currentController&&currentController.action.type==="ir.actions.act_window"&&currentActionId===state.action){const props={resId:state.id||false,};const viewType=state.view_type||currentController.view.type;return{viewType,props};}}
return null;}
function _getViewInfo(view,action,views,props={}){const target=action.target;const viewSwitcherEntries=views.filter((v)=>v.multiRecord===view.multiRecord).map((v)=>{const viewSwitcherEntry={icon:v.icon,name:v.display_name.toString(),type:v.type,multiRecord:v.multiRecord,};if(view.type===v.type){viewSwitcherEntry.active=true;}
return viewSwitcherEntry;});const context=action.context||{};let groupBy=context.group_by||[];if(typeof groupBy==="string"){groupBy=[groupBy];}
const viewProps=Object.assign({},props,{context,display:{mode:target==="new"?"inDialog":target},domain:action.domain||[],groupBy,loadActionMenus:target!=="new"&&target!=="inline",loadIrFilters:action.views.some((v)=>v[1]==="search"),resModel:action.res_model,type:view.type,selectRecord:async(resId,{activeIds,mode})=>{if(target!=="new"&&_getView("form")){await switchView("form",{mode,resId,resIds:activeIds});}},createRecord:async()=>{if(target!=="new"&&_getView("form")){await switchView("form",{resId:false});}},});if(view.type==="form"){if(action.target==="new"){viewProps.mode="edit";if(!viewProps.onSave){viewProps.onSave=(record,params)=>{if(params&&params.closable){doAction({type:"ir.actions.act_window_close"});}};}}else if(context.form_view_initial_mode){viewProps.mode=context.form_view_initial_mode;}
if(action.flags&&"mode"in action.flags){viewProps.mode=action.flags.mode;}}
if(target==="inline"){viewProps.searchMenuTypes=[];}
const specialKeys=["help","useSampleModel","limit","count"];for(const key of specialKeys){if(key in action){if(key==="help"){viewProps.noContentHelp=action.help;}else{viewProps[key]=action[key];}}}
if(context.search_disable_custom_filters){viewProps.activateFavorite=false;}
if(action.res_id&&!viewProps.resId){viewProps.resId=action.res_id;}
if(view.isLegacy){const legacyActionInfo={...action,...viewProps.action};Object.assign(viewProps,{action:legacyActionInfo,View:view,views:action.views,});}
viewProps.noBreadcrumbs=action.context.no_breadcrumbs;delete action.context.no_breadcrumbs;return{props:viewProps,config:{actionId:action.id,actionType:"ir.actions.act_window",actionFlags:action.flags,views:action.views,viewSwitcherEntries,},displayName:action.display_name||action.name||"",};}
function _computeStackIndex(options){let index=null;if(options.clearBreadcrumbs){index=0;}else if(options.stackPosition==="replaceCurrentAction"){const currentController=controllerStack[controllerStack.length-1];if(currentController){index=controllerStack.findIndex((ct)=>ct.action.jsId===currentController.action.jsId);}}else if(options.stackPosition==="replacePreviousAction"){let last;for(let i=controllerStack.length-1;i>=0;i--){const action=controllerStack[i].action.jsId;if(!last){last=action;}
if(action!==last){last=action;break;}}
if(last){index=controllerStack.findIndex((ct)=>ct.action.jsId===last);}}else if("index"in options){index=options.index;}else{index=controllerStack.length;}
return index;}
async function _updateUI(controller,options={}){let resolve;let reject;let dialogCloseResolve;const currentActionProm=new Promise((_res,_rej)=>{resolve=_res;reject=_rej;});const action=controller.action;const index=_computeStackIndex(options);const controllerArray=[controller];if(options.lazyController){controllerArray.unshift(options.lazyController);}
const nextStack=controllerStack.slice(0,index).concat(controllerArray);controller.config.breadcrumbs=reactive(action.target==="new"?[]:_getBreadcrumbs(nextStack));controller.config.getDisplayName=()=>controller.displayName;controller.config.setDisplayName=(displayName)=>{controller.displayName=displayName;if(controller===_getCurrentController()){env.services.title.setParts({action:controller.displayName});}
if(action.target!=="new"){controller.config.breadcrumbs.push(undefined);controller.config.breadcrumbs.pop();}};controller.config.historyBack=()=>{const previousController=controllerStack[controllerStack.length-2];if(previousController&&!dialog){restore(previousController.jsId);}else{_executeCloseAction();}};class ControllerComponent extends Component{setup(){this.Component=controller.Component;this.titleService=useService("title");useDebugCategory("action",{action});useChildSubEnv({config:controller.config,});if(action.target!=="new"){this.__beforeLeave__=new CallbackRecorder();this.__getGlobalState__=new CallbackRecorder();this.__getLocalState__=new CallbackRecorder();useBus(env.bus,"CLEAR-UNCOMMITTED-CHANGES",(ev)=>{const callbacks=ev.detail;const beforeLeaveFns=this.__beforeLeave__.callbacks;callbacks.push(...beforeLeaveFns);});useChildSubEnv({__beforeLeave__:this.__beforeLeave__,__getGlobalState__:this.__getGlobalState__,__getLocalState__:this.__getLocalState__,});}
this.isMounted=false;onMounted(this.onMounted);onWillUnmount(this.onWillUnmount);onError(this.onError);}
onError(error){reject(error);cleanDomFromBootstrap();if(action.target==="new"){throw error;}else{const lastCt=controllerStack[controllerStack.length-1];let info={};if(lastCt){if(lastCt.jsId===controller.jsId){Promise.resolve().then(()=>{throw error;});}else{info=lastCt.__info__;restore(lastCt.jsId);}
return;}
env.bus.trigger("ACTION_MANAGER:UPDATE",info);}}
onMounted(){if(action.target==="new"){dialogCloseProm=new Promise((_r)=>{dialogCloseResolve=_r;}).then(()=>{dialogCloseProm=undefined;});dialog=nextDialog;}else{controller.getGlobalState=()=>{const exportFns=this.__getGlobalState__.callbacks;if(exportFns.length){return Object.assign({},...exportFns.map((fn)=>fn()));}};controller.getLocalState=()=>{const exportFns=this.__getLocalState__.callbacks;if(exportFns.length){return Object.assign({},...exportFns.map((fn)=>fn()));}};const nextStackActionIds=nextStack.map((c)=>c.action.jsId);const toDestroy=new Set();for(const c of controllerStack){if(!nextStackActionIds.includes(c.action.jsId)){if(c.action.type==="ir.actions.act_window"){for(const viewType in c.action.controllers){const controller=c.action.controllers[viewType];if(controller.view.isLegacy){toDestroy.add(controller);}}}else{toDestroy.add(c);}}}
for(const c of toDestroy){if(c.exportedState&&c.exportedState.__legacy_widget__){c.exportedState.__legacy_widget__.destroy();}}
controllerStack=nextStack;pushState(controller);this.titleService.setParts({action:controller.displayName});browser.sessionStorage.setItem("current_action",action._originalAction||"{}");}
resolve();env.bus.trigger("ACTION_MANAGER:UI-UPDATED",_getActionMode(action));this.isMounted=true;}
onWillUnmount(){if(action.target==="new"&&dialogCloseResolve){dialogCloseResolve();}}}
ControllerComponent.template=ControllerComponentTemplate;ControllerComponent.Component=controller.Component;let nextDialog=null;if(action.target==="new"){cleanDomFromBootstrap();const actionDialogProps={ActionComponent:ControllerComponent,actionProps:controller.props,actionType:action.type,};if(action.name){actionDialogProps.title=action.name;}
const onClose=_removeDialog();const removeDialog=env.services.dialog.add(ActionDialog,actionDialogProps,{onClose:()=>{const onClose=_removeDialog();if(onClose){onClose();}
cleanDomFromBootstrap();},});nextDialog={remove:removeDialog,onClose:onClose||options.onClose,};return currentActionProm;}
const currentController=_getCurrentController();if(currentController&&currentController.getLocalState){currentController.exportedState=currentController.getLocalState();}
if(controller.exportedState){controller.props.state=controller.exportedState;}
if(currentController&&currentController.getGlobalState){currentController.action.globalState=Object.assign({},currentController.action.globalState,currentController.getGlobalState());}
if(controller.action.globalState){controller.props.globalState=controller.action.globalState;}
const closingProm=_executeCloseAction();controller.__info__={id:++id,Component:ControllerComponent,componentProps:controller.props,};env.bus.trigger("ACTION_MANAGER:UPDATE",controller.__info__);return Promise.all([currentActionProm,closingProm]).then((r)=>r[0]);}
function _executeActURLAction(action,options){let url=action.url;if(url&&!(url.startsWith("http")||url.startsWith("/"))){url="/"+url;}
if(action.target==="self"){env.services.router.redirect(url);}else{const w=browser.open(url,"_blank");if(!w||w.closed||typeof w.closed==="undefined"){const msg=env._t("A popup window has been blocked. You may need to change your "+"browser settings to allow popup windows for this page.");env.services.notification.add(msg,{sticky:true,type:"warning",});}
if(options.onClose){options.onClose();}}}
async function _executeActWindowAction(action,options){const loadViewParams={context:action.context||{},views:action.views,resModel:action.res_model,};const loadViewOptions={actionId:action.id,loadActionMenus:action.target!=="new"&&action.target!=="inline",loadIrFilters:action.views.some((v)=>v[1]==="search"),};const prom=env.services.view.loadViews(loadViewParams,loadViewOptions);const{views:viewDescriptions}=await keepLast.add(prom);const domParser=new DOMParser();const views=[];for(const[,type]of action.views){if(type!=="search"){const arch=viewDescriptions[type].arch;const archDoc=domParser.parseFromString(arch,"text/xml").documentElement;const jsClass=archDoc.getAttribute("js_class");const view=viewRegistry.get(jsClass,false)||viewRegistry.get(type,false);if(view){views.push(view);}}}
if(!views.length){throw new Error(`No view found for act_window action ${action.id}`);}
let view=options.viewType&&views.find((v)=>v.type===options.viewType);let lazyView;if(view&&!view.multiRecord){lazyView=views[0].multiRecord?views[0]:undefined;}else if(!view){view=views[0];}
if(env.isSmall){if(!view.isMobileFriendly){view=_findMobileView(views,view.multiRecord)||view;}
if(lazyView&&!lazyView.isMobileFriendly){lazyView=_findMobileView(views,lazyView.multiRecord)||lazyView;}}
const controller={jsId:`controller_${++id}`,Component:view.isLegacy?view.Controller:View,action,view,views,..._getViewInfo(view,action,views,options.props),};action.controllers[view.type]=controller;const updateUIOptions={clearBreadcrumbs:options.clearBreadcrumbs,onClose:options.onClose,stackPosition:options.stackPosition,};if(lazyView){updateUIOptions.lazyController={jsId:`controller_${++id}`,Component:lazyView.isLegacy?lazyView.Controller:View,action,view:lazyView,views,..._getViewInfo(lazyView,action,views),};}
return _updateUI(controller,updateUIOptions);}
function _findMobileView(views,multiRecord){return views.find((view)=>view.isMobileFriendly&&view.multiRecord===multiRecord);}
async function _executeClientAction(action,options){const clientAction=actionRegistry.get(action.tag);if(clientAction.prototype instanceof Component){if(action.target!=="new"){const canProceed=await clearUncommittedChanges(env);if(!canProceed){return;}
if(clientAction.target){action.target=clientAction.target;}}
const controller={jsId:`controller_${++id}`,Component:clientAction,action,..._getActionInfo(action,options.props),};return _updateUI(controller,{clearBreadcrumbs:options.clearBreadcrumbs,stackPosition:options.stackPosition,onClose:options.onClose,});}else{const next=await clientAction(env,action);if(next){return doAction(next,options);}}}
const link='<br><br><a href="http://wkhtmltopdf.org/" target="_blank">wkhtmltopdf.org</a>';const WKHTMLTOPDF_MESSAGES={broken:env._t("Your installation of Wkhtmltopdf seems to be broken. The report will be shown "+"in html.")+link,install:env._t("Unable to find Wkhtmltopdf on this system. The report will be shown in "+"html.")+link,upgrade:env._t("You should upgrade your version of Wkhtmltopdf to at least 0.12.0 in order to "+"get a correct display of headers and footers as well as support for "+"table-breaking between pages.")+link,workers:env._t("You need to start Odoo with at least two workers to print a pdf version of "+"the reports."),};let wkhtmltopdfStateProm;function _getReportUrl(action,type){let url=`/report/${type}/${action.report_name}`;const actionContext=action.context||{};if(action.data&&JSON.stringify(action.data)!=="{}"){const options=encodeURIComponent(JSON.stringify(action.data));const context=encodeURIComponent(JSON.stringify(actionContext));url+=`?options=${options}&context=${context}`;}else{if(actionContext.active_ids){url+=`/${actionContext.active_ids.join(",")}`;}
if(type==="html"){const context=encodeURIComponent(JSON.stringify(env.services.user.context));url+=`?context=${context}`;}}
return url;}
async function _triggerDownload(action,options,type){const url=_getReportUrl(action,type);env.services.ui.block();try{await download({url:"/report/download",data:{data:JSON.stringify([url,action.report_type]),context:JSON.stringify(env.services.user.context),},});}finally{env.services.ui.unblock();}
const onClose=options.onClose;if(action.close_on_report_download){return doAction({type:"ir.actions.act_window_close"},{onClose});}else if(onClose){onClose();}}
function _executeReportClientAction(action,options){const props=Object.assign({},options.props,{data:action.data,display_name:action.display_name,name:action.name,report_file:action.report_file,report_name:action.report_name,report_url:_getReportUrl(action,"html"),context:Object.assign({},action.context),});const controller={jsId:`controller_${++id}`,Component:ReportAction,action,..._getActionInfo(action,props),};return _updateUI(controller,{clearBreadcrumbs:options.clearBreadcrumbs,stackPosition:options.stackPosition,onClose:options.onClose,});}
async function _executeReportAction(action,options){const handlers=registry.category("ir.actions.report handlers").getAll();for(const handler of handlers){const result=await handler(action,options,env);if(result){return result;}}
if(action.report_type==="qweb-html"){return _executeReportClientAction(action,options);}else if(action.report_type==="qweb-pdf"){if(!wkhtmltopdfStateProm){wkhtmltopdfStateProm=env.services.rpc("/report/check_wkhtmltopdf");}
const state=await wkhtmltopdfStateProm;if(state in WKHTMLTOPDF_MESSAGES){env.services.notification.add(WKHTMLTOPDF_MESSAGES[state],{sticky:true,title:env._t("Report"),});}
if(state==="upgrade"||state==="ok"){return _triggerDownload(action,options,"pdf");}else{return _executeReportClientAction(action,options);}}else if(action.report_type==="qweb-text"){return _triggerDownload(action,options,"text");}else{console.error(`The ActionManager can't handle reports of type ${action.report_type}`,action);}}
async function _executeServerAction(action,options){const runProm=env.services.rpc("/web/action/run",{action_id:action.id,context:makeContext([env.services.user.context,action.context]),});let nextAction=await keepLast.add(runProm);if(nextAction.help){nextAction.help=markup(nextAction.help);}
nextAction=nextAction||{type:"ir.actions.act_window_close"};return doAction(nextAction,options);}
async function _executeCloseAction(params={}){let onClose;if(dialog){onClose=_removeDialog();}else{onClose=params.onClose;}
if(onClose){await onClose(params.onCloseInfo);}
return dialogCloseProm;}
async function doAction(actionRequest,options={}){const actionProm=_loadAction(actionRequest,options.additionalContext);let action=await keepLast.add(actionProm);action=_preprocessAction(action,options.additionalContext);options.clearBreadcrumbs=action.target==="main"||options.clearBreadcrumbs;switch(action.type){case"ir.actions.act_url":return _executeActURLAction(action,options);case"ir.actions.act_window":if(action.target!=="new"){const canProceed=await clearUncommittedChanges(env);if(!canProceed){return new Promise(()=>{});}}
return _executeActWindowAction(action,options);case"ir.actions.act_window_close":return _executeCloseAction({onClose:options.onClose,onCloseInfo:action.infos});case"ir.actions.client":return _executeClientAction(action,options);case"ir.actions.report":return _executeReportAction(action,options);case"ir.actions.server":return _executeServerAction(action,options);default:{const handler=actionHandlersRegistry.get(action.type,null);if(handler!==null){return handler({env,action,options});}
throw new Error(`The ActionManager service can't handle actions of type ${action.type}`);}}}
async function doActionButton(params){let action;const context=makeContext([params.context,params.buttonContext]);if(params.special){action={type:"ir.actions.act_window_close",infos:{special:true}};}else if(params.type==="object"){let args=params.resId?[[params.resId]]:[params.resIds];if(params.args){let additionalArgs;try{additionalArgs=JSON.parse(params.args.replace(/'/g,'"'));}catch(_e){browser.console.error("Could not JSON.parse arguments",params.args);}
args=args.concat(additionalArgs);}
const callProm=env.services.rpc("/web/dataset/call_button",{args,kwargs:{context},method:params.name,model:params.resModel,});action=await keepLast.add(callProm);action=action&&typeof action==="object"?action:{type:"ir.actions.act_window_close"};if(action.help){action.help=markup(action.help);}}else if(params.type==="action"){context.active_id=params.resId||null;context.active_ids=params.resIds;context.active_model=params.resModel;action=await keepLast.add(_loadAction(params.name,context));}else{throw new InvalidButtonParamsError("Missing type for doActionButton request");}
const currentCtx={};for(const key in params.context){if(key.match(CTX_KEY_REGEX)===null){currentCtx[key]=params.context[key];}}
const activeCtx={active_model:params.resModel};if(params.resId){activeCtx.active_id=params.resId;activeCtx.active_ids=[params.resId];}
action.context=makeContext([currentCtx,params.buttonContext,activeCtx,action.context]);const effect=params.effect?evaluateExpr(params.effect):action.effect;const options={onClose:params.onClose};await doAction(action,options);if(params.close){await _executeCloseAction();}
if(effect){env.services.effect.add(effect);}}
async function switchView(viewType,props={}){await keepLast.add(Promise.resolve());if(dialog){return;}
const controller=controllerStack[controllerStack.length-1];const view=_getView(viewType);if(!view){throw new ViewNotFoundError(sprintf(env._t("No view of type '%s' could be found in the current action."),viewType));}
const newController=controller.action.controllers[viewType]||{jsId:`controller_${++id}`,Component:view.isLegacy?view.Controller:View,action:controller.action,views:controller.views,view,};if(view.isLegacy&&newController.jsId===controller.jsId){const{__legacy_widget__}=controller.getLocalState();const params={};if("resId"in props){params.currentId=props.resId;}
return __legacy_widget__.reload(params);}
const canProceed=await clearUncommittedChanges(env);if(!canProceed){return;}
Object.assign(newController,_getViewInfo(view,controller.action,controller.views,props));controller.action.controllers[viewType]=newController;let index;if(view.multiRecord){index=controllerStack.findIndex((ct)=>ct.action.jsId===controller.action.jsId);index=index>-1?index:controllerStack.length-1;}else{index=controllerStack.findIndex((ct)=>ct.action.jsId===controller.action.jsId&&!ct.view.multiRecord);index=index>-1?index:controllerStack.length;}
return _updateUI(newController,{index});}
async function restore(jsId){await keepLast.add(Promise.resolve());let index;if(!jsId){index=controllerStack.length-2;}else{index=controllerStack.findIndex((controller)=>controller.jsId===jsId);}
if(index<0){const msg=jsId?"Invalid controller to restore":"No controller to restore";throw new ControllerNotFoundError(msg);}
const canProceed=await clearUncommittedChanges(env);if(!canProceed){return;}
const controller=controllerStack[index];if(controller.action.type==="ir.actions.act_window"){const{action,exportedState,view,views}=controller;const props={...controller.props};if(exportedState&&"resId"in exportedState){props.resId=exportedState.resId;}
Object.assign(controller,_getViewInfo(view,action,views,props));}
return _updateUI(controller,{index});}
async function loadState(){const switchViewParams=_getSwitchViewParams();if(switchViewParams){const{viewType,props}=switchViewParams;const view=_getView(viewType);if(view){await switchView(viewType,props);return true;}}else{const actionParams=_getActionParams();if(actionParams){const{actionRequest,options}=actionParams;await doAction(actionRequest,options);return true;}}
return false;}
function pushState(controller){const newState={};const action=controller.action;if(action.id){newState.action=action.id;}else if(action.type==="ir.actions.client"){newState.action=action.tag;}
if(action.context){const activeId=action.context.active_id;if(activeId){newState.active_id=activeId;}
const activeIds=action.context.active_ids;if(activeIds&&!(activeIds.length===1&&activeIds[0]===activeId)){newState.active_ids=activeIds.join(",");}}
if(action.type==="ir.actions.act_window"){const props=controller.props;newState.model=props.resModel;newState.view_type=props.type;newState.id=props.resId||(props.state&&props.state.resId)||undefined;}
env.services.router.pushState(newState,{replace:true});}
return{doAction,doActionButton,switchView,restore,loadState,async loadAction(actionRequest,context){const action=await _loadAction(actionRequest,context);return _preprocessAction(action,context);},get currentController(){return _getCurrentController();},__legacy__isActionInStack(actionId){return controllerStack.find((c)=>c.action.jsId===actionId);},};}
const actionService=__exports.actionService={dependencies:["effect","localization","notification","router","rpc","title","view","ui","user",],start(env){return makeActionManager(env);},};registry.category("services").add("action",actionService);return __exports;});;

/* /web/static/src/webclient/actions/client_actions.js */
odoo.define('@web/webclient/actions/client_actions',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{escape,sprintf}=require("@web/core/utils/strings");const{Component,onMounted,xml}=require("@odoo/owl");__exports.displayNotificationAction=displayNotificationAction;function displayNotificationAction(env,action){const params=action.params||{};const options={className:params.className||"",sticky:params.sticky||false,title:params.title,type:params.type||"info",};const links=(params.links||[]).map((link)=>{return`<a href="${escape(link.url)}" target="_blank">${escape(link.label)}</a>`;});const message=owl.markup(sprintf(escape(params.message),...links));env.services.notification.add(message,options);return params.next;}
registry.category("actions").add("display_notification",displayNotificationAction);class InvalidAction extends Component{setup(){this.notification=useService("notification");onMounted(this.onMounted);}
onMounted(){const message=sprintf(this.env._t("No action with id '%s' could be found"),this.props.actionId);this.notification.add(message,{type:"danger"});}}
InvalidAction.template=xml`<div class="o_invalid_action"></div>`;registry.category("actions").add("invalid_action",InvalidAction);return __exports;});;

/* /web/static/src/webclient/actions/debug_items.js */
odoo.define('@web/webclient/actions/debug_items',async function(require){'use strict';let __exports={};const{editModelDebug}=require("@web/core/debug/debug_utils");const{registry}=require("@web/core/registry");const debugRegistry=registry.category("debug");function actionSeparator({action}){if(!action.id||!action.res_model){return null;}
return{type:"separator",sequence:100,};}
function accessSeparator({accessRights,action}){const{canSeeModelAccess,canSeeRecordRules}=accessRights;if(!action.res_model||(!canSeeModelAccess&&!canSeeRecordRules)){return null;}
return{type:"separator",sequence:200,};}
function editAction({action,env}){if(!action.id){return null;}
const description=env._t("Edit Action");return{type:"item",description,callback:()=>{editModelDebug(env,description,action.type,action.id);},sequence:110,};}
function viewFields({action,env}){if(!action.res_model){return null;}
const description=env._t("View Fields");return{type:"item",description,callback:async()=>{const modelId=(await env.services.orm.search("ir.model",[["model","=",action.res_model]],{limit:1,}))[0];env.services.action.doAction({res_model:"ir.model.fields",name:description,views:[[false,"list"],[false,"form"],],domain:[["model_id","=",modelId]],type:"ir.actions.act_window",context:{default_model_id:modelId,},});},sequence:120,};}
function manageFilters({action,env}){if(!action.res_model){return null;}
const description=env._t("Manage Filters");return{type:"item",description,callback:()=>{env.services.action.doAction({res_model:"ir.filters",name:description,views:[[false,"list"],[false,"form"],],type:"ir.actions.act_window",context:{search_default_my_filters:true,search_default_model_id:action.res_model,},});},sequence:130,};}
function viewAccessRights({accessRights,action,env}){if(!action.res_model||!accessRights.canSeeModelAccess){return null;}
const description=env._t("View Access Rights");return{type:"item",description,callback:async()=>{const modelId=(await env.services.orm.search("ir.model",[["model","=",action.res_model]],{limit:1,}))[0];env.services.action.doAction({res_model:"ir.model.access",name:description,views:[[false,"list"],[false,"form"],],domain:[["model_id","=",modelId]],type:"ir.actions.act_window",context:{default_model_id:modelId,},});},sequence:210,};}
function viewRecordRules({accessRights,action,env}){if(!action.res_model||!accessRights.canSeeRecordRules){return null;}
const description=env._t("Model Record Rules");return{type:"item",description:env._t("View Record Rules"),callback:async()=>{const modelId=(await env.services.orm.search("ir.model",[["model","=",action.res_model]],{limit:1,}))[0];env.services.action.doAction({res_model:"ir.rule",name:description,views:[[false,"list"],[false,"form"],],domain:[["model_id","=",modelId]],type:"ir.actions.act_window",context:{default_model_id:modelId,},});},sequence:220,};}
debugRegistry.category("action").add("actionSeparator",actionSeparator).add("editAction",editAction).add("viewFields",viewFields).add("manageFilters",manageFilters).add("accessSeparator",accessSeparator).add("viewAccessRights",viewAccessRights).add("viewRecordRules",viewRecordRules);return __exports;});;

/* /web/static/src/webclient/barcode/barcode_scanner.js */
odoo.define('@web/webclient/barcode/barcode_scanner',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const Dialog=require("web.OwlDialog");const{delay}=require("web.concurrency");const{loadJS,templates}=require("@web/core/assets");const{App,Component,EventBus,onMounted,onWillStart,onWillUnmount,useRef}=require("@odoo/owl");const{_t}=require("web.core");const bus=new EventBus();const busOk="BarcodeDialog-Ok";const busError="BarcodeDialog-Error";const HAVE_NOTHING=0;const HAVE_METADATA=1;function isVideoElementReady(video){return![HAVE_NOTHING,HAVE_METADATA].includes(video.readyState);}
function buildZXingBarcodeDetector(ZXing){const ZXingFormats=new Map([["aztec",ZXing.BarcodeFormat.AZTEC],["code_39",ZXing.BarcodeFormat.CODE_39],["code_128",ZXing.BarcodeFormat.CODE_128],["data_matrix",ZXing.BarcodeFormat.DATA_MATRIX],["ean_8",ZXing.BarcodeFormat.EAN_8],["ean_13",ZXing.BarcodeFormat.EAN_13],["itf",ZXing.BarcodeFormat.ITF],["pdf417",ZXing.BarcodeFormat.PDF_417],["qr_code",ZXing.BarcodeFormat.QR_CODE],["upc_a",ZXing.BarcodeFormat.UPC_A],["upc_e",ZXing.BarcodeFormat.UPC_E],]);const allSupportedFormats=Array.from(ZXingFormats.keys());class ZXingBarcodeDetector{constructor(opts={}){const formats=opts.formats||allSupportedFormats;const hints=new Map([[ZXing.DecodeHintType.POSSIBLE_FORMATS,formats.map((format)=>ZXingFormats.get(format)),],[ZXing.DecodeHintType.TRY_HARDER,true],]);this.reader=new ZXing.MultiFormatReader();this.reader.setHints(hints);}
async detect(video){if(!(video instanceof HTMLVideoElement)){throw new DOMException("imageDataFrom() requires an HTMLVideoElement","InvalidArgumentError");}
if(!isVideoElementReady(video)){throw new DOMException("HTMLVideoElement is not ready","InvalidStateError");}
const canvas=document.createElement("canvas");const ctx=canvas.getContext("2d");canvas.width=video.videoWidth;canvas.height=video.videoHeight;ctx.drawImage(video,0,0,video.videoWidth,video.videoHeight);const luminanceSource=new ZXing.HTMLCanvasElementLuminanceSource(canvas);const binaryBitmap=new ZXing.BinaryBitmap(new ZXing.HybridBinarizer(luminanceSource));try{const result=this.reader.decode(binaryBitmap);const format=Array.from(ZXingFormats).find(([k,val])=>val===result.getBarcodeFormat());const rawValue=result.getText();return[{format,rawValue,},];}catch(err){if(err.name==="NotFoundException"){return[];}
throw err;}}}
ZXingBarcodeDetector.getSupportedFormats=async()=>allSupportedFormats;return ZXingBarcodeDetector;}
class BarcodeDialog extends Component{setup(){this.videoPreviewRef=useRef("videoPreview");this.interval=null;this.stream=null;this.detector=null;onWillStart(async()=>{let DetectorClass;if("BarcodeDetector"in window){DetectorClass=BarcodeDetector;}else{await loadJS("/web/static/lib/zxing-library/zxing-library.js");DetectorClass=buildZXingBarcodeDetector(window.ZXing);}
const formats=await DetectorClass.getSupportedFormats();this.detector=new DetectorClass({formats});});onMounted(async()=>{const constraints={video:{facingMode:this.props.facingMode},audio:false,};try{this.stream=await browser.navigator.mediaDevices.getUserMedia(constraints);}catch(err){const errors={NotFoundError:_t("No device can be found."),NotAllowedError:_t("Odoo needs your authorization first."),};const errorMessage=_t("Could not start scanning. ")+(errors[err.name]||err.message);this.onError(new Error(errorMessage));return;}
this.videoPreviewRef.el.srcObject=this.stream;await this.isVideoReady();this.interval=setInterval(this.detectCode.bind(this),100);});onWillUnmount(()=>{clearInterval(this.interval);this.interval=null;if(this.stream){this.stream.getTracks().forEach((track)=>track.stop());this.stream=null;}});}
async isVideoReady(){return new Promise(async(resolve)=>{while(!isVideoElementReady(this.videoPreviewRef.el)){await delay(10);}
resolve();});}
onResult(result){this.props.onClose();bus.trigger(busOk,result);}
onError(error){this.props.onClose();bus.trigger(busError,{error});}
async detectCode(){try{const codes=await this.detector.detect(this.videoPreviewRef.el);if(codes.length===0){return;}
this.onResult(codes[0].rawValue);}catch(err){this.onError(err);}}}
Object.assign(BarcodeDialog,{components:{Dialog,},template:"web.BarcodeDialog",});__exports.isBarcodeScannerSupported=isBarcodeScannerSupported;function isBarcodeScannerSupported(){return browser.navigator.mediaDevices&&browser.navigator.mediaDevices.getUserMedia;}
__exports.scanBarcode=scanBarcode;async function scanBarcode(facingMode="environment"){const promise=new Promise((resolve,reject)=>{bus.on(busOk,null,resolve);bus.on(busError,null,reject);});const appForBarcodeDialog=new App(BarcodeDialog,{env:owl.Component.env,dev:owl.Component.env.isDebug(),templates,translatableAttributes:["data-tooltip"],translateFn:_t,props:{onClose:()=>appForBarcodeDialog.destroy(),facingMode:facingMode,},});await appForBarcodeDialog.mount(document.body);return promise;}
return __exports;});;

/* /web/static/src/webclient/burger_menu/burger_menu.js */
odoo.define('@web/webclient/burger_menu/burger_menu',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{Transition}=require("@web/core/transition");const{useService}=require("@web/core/utils/hooks");const{BurgerUserMenu}=require("@web/webclient/burger_menu/burger_user_menu/burger_user_menu");const{MobileSwitchCompanyMenu}=require("@web/webclient/burger_menu/mobile_switch_company_menu/mobile_switch_company_menu");const{Component,onMounted,useState}=require("@odoo/owl");const SWIPE_ACTIVATION_THRESHOLD=100;const BurgerMenu=__exports.BurgerMenu=class BurgerMenu extends Component{setup(){this.company=useService("company");this.user=useService("user");this.menuRepo=useService("menu");this.state=useState({isUserMenuOpened:false,isBurgerOpened:false,});this.swipeStartX=null;onMounted(()=>{this.env.bus.addEventListener("HOME-MENU:TOGGLED",()=>{this._closeBurger();});this.env.bus.addEventListener("ACTION_MANAGER:UPDATE",({detail:req})=>{if(req.id){this._closeBurger();}});});}
get currentApp(){return this.menuRepo.getCurrentApp();}
get currentAppSections(){return((this.currentApp&&this.menuRepo.getMenuAsTree(this.currentApp.id).childrenTree)||[]);}
get isUserMenuUnfolded(){return!this.isUserMenuTogglable||this.state.isUserMenuOpened;}
get isUserMenuTogglable(){return this.currentApp&&this.currentAppSections.length>0;}
_closeBurger(){this.state.isUserMenuOpened=false;this.state.isBurgerOpened=false;}
_openBurger(){this.state.isBurgerOpened=true;}
_toggleUserMenu(){this.state.isUserMenuOpened=!this.state.isUserMenuOpened;}
async _onMenuClicked(menu){await this.menuRepo.selectMenu(menu);this._closeBurger();}
_onSwipeStart(ev){this.swipeStartX=ev.changedTouches[0].clientX;}
_onSwipeEnd(ev){if(!this.swipeStartX){return;}
const deltaX=ev.changedTouches[0].clientX-this.swipeStartX;if(deltaX<SWIPE_ACTIVATION_THRESHOLD){return;}
this._closeBurger();this.swipeStartX=null;}}
BurgerMenu.template="web.BurgerMenu";BurgerMenu.components={BurgerUserMenu,MobileSwitchCompanyMenu,Transition,};const systrayItem={Component:BurgerMenu,};registry.category("systray").add("burger_menu",systrayItem,{sequence:0});return __exports;});;

/* /web/static/src/webclient/burger_menu/burger_user_menu/burger_user_menu.js */
odoo.define('@web/webclient/burger_menu/burger_user_menu/burger_user_menu',async function(require){'use strict';let __exports={};const{UserMenu}=require("@web/webclient/user_menu/user_menu");const BurgerUserMenu=__exports.BurgerUserMenu=class BurgerUserMenu extends UserMenu{_onItemClicked(callback){callback();}}
BurgerUserMenu.template="web.BurgerUserMenu";return __exports;});;

/* /web/static/src/webclient/burger_menu/mobile_switch_company_menu/mobile_switch_company_menu.js */
odoo.define('@web/webclient/burger_menu/mobile_switch_company_menu/mobile_switch_company_menu',async function(require){'use strict';let __exports={};const{SwitchCompanyMenu}=require("@web/webclient/switch_company_menu/switch_company_menu");const MobileSwitchCompanyMenu=__exports.MobileSwitchCompanyMenu=class MobileSwitchCompanyMenu extends SwitchCompanyMenu{}
MobileSwitchCompanyMenu.template="web.MobileSwitchCompanyMenu";return __exports;});;

/* /web/static/src/webclient/clickbot/clickbot_loader.js */
odoo.define('@web/webclient/clickbot/clickbot_loader',async function(require){'use strict';let __exports={};const{loadJS}=require("@web/core/assets");const{registry}=require("@web/core/registry");__exports[Symbol.for("default")]=startClickEverywhere;async function startClickEverywhere(xmlId,appsMenusOnly){await loadJS("web/static/src/webclient/clickbot/clickbot.js");window.clickEverywhere(xmlId,appsMenusOnly);}
function runClickTestItem({env}){return{type:"item",description:env._t("Run Click Everywhere Test"),callback:()=>{startClickEverywhere();},sequence:30,};}
registry.category("debug").category("default").add("runClickTestItem",runClickTestItem);return __exports;});odoo.define(`web.clickEverywhere`,async function(require){return require('@web/webclient/clickbot/clickbot_loader')[Symbol.for("default")];});;

/* /web/static/src/webclient/company_service.js */
odoo.define('@web/webclient/company_service',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{symmetricalDifference}=require("@web/core/utils/arrays");const{session}=require("@web/session");function parseCompanyIds(cidsFromHash){const cids=[];if(typeof cidsFromHash==="string"){cids.push(...cidsFromHash.split(",").map(Number));}else if(typeof cidsFromHash==="number"){cids.push(cidsFromHash);}
return cids;}
function computeAllowedCompanyIds(cids){const{user_companies}=session;let allowedCompanyIds=cids||[];const availableCompaniesFromSession=user_companies.allowed_companies;const notReallyAllowedCompanies=allowedCompanyIds.filter((id)=>!(id in availableCompaniesFromSession));if(!allowedCompanyIds.length||notReallyAllowedCompanies.length){allowedCompanyIds=[user_companies.current_company];}
return allowedCompanyIds;}
const companyService=__exports.companyService={dependencies:["user","router","cookie"],start(env,{user,router,cookie}){let cids;if("cids"in router.current.hash){cids=parseCompanyIds(router.current.hash.cids);}else if("cids"in cookie.current){cids=parseCompanyIds(cookie.current.cids);}
const allowedCompanyIds=computeAllowedCompanyIds(cids);const stringCIds=allowedCompanyIds.join(",");router.replaceState({cids:stringCIds},{lock:true});cookie.setCookie("cids",stringCIds);user.updateContext({allowed_company_ids:allowedCompanyIds});const availableCompanies=session.user_companies.allowed_companies;return{availableCompanies,get allowedCompanyIds(){return allowedCompanyIds.slice();},get currentCompany(){return availableCompanies[allowedCompanyIds[0]];},setCompanies(mode,...companyIds){let nextCompanyIds;if(mode==="toggle"){nextCompanyIds=symmetricalDifference(allowedCompanyIds,companyIds);}else if(mode==="loginto"){const companyId=companyIds[0];if(allowedCompanyIds.length===1){nextCompanyIds=[companyId];}else{nextCompanyIds=[companyId,...allowedCompanyIds.filter((id)=>id!==companyId),];}}
nextCompanyIds=nextCompanyIds.length?nextCompanyIds:[companyIds[0]];router.pushState({cids:nextCompanyIds},{lock:true});cookie.setCookie("cids",nextCompanyIds);browser.setTimeout(()=>browser.location.reload());},};},};registry.category("services").add("company",companyService);return __exports;});;

/* /web/static/src/webclient/debug_items.js */
odoo.define('@web/webclient/debug_items',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{browser}=require("@web/core/browser/browser");const{SelectCreateDialog}=require("@web/views/view_dialogs/select_create_dialog");function runJSTestsItem({env}){const runTestsURL=browser.location.origin+"/web/tests?debug=assets";return{type:"item",description:env._t("Run JS Tests"),href:runTestsURL,callback:()=>{browser.open(runTestsURL);},sequence:10,};}
function runJSTestsMobileItem({env}){const runTestsMobileURL=browser.location.origin+"/web/tests/mobile?debug=assets";return{type:"item",description:env._t("Run JS Mobile Tests"),href:runTestsMobileURL,callback:()=>{browser.open(runTestsMobileURL);},sequence:20,};}
__exports.openViewItem=openViewItem;function openViewItem({env}){async function onSelected(records){const views=await env.services.orm.searchRead("ir.ui.view",[["id","=",records[0]]],["name","model","type"],{limit:1});const view=views[0];view.type=view.type==="tree"?"list":view.type;env.services.action.doAction({type:"ir.actions.act_window",name:view.name,res_model:view.model,views:[[view.id,view.type]],});}
return{type:"item",description:env._t("Open View"),callback:()=>{env.services.dialog.add(SelectCreateDialog,{resModel:"ir.ui.view",title:env._t("Select a view"),multiSelect:false,domain:[["type","!=","qweb"],["type","!=","search"],],onSelected,});},sequence:40,};}
function globalSeparator(){return{type:"separator",sequence:400,};}
registry.category("debug").category("default").add("runJSTestsItem",runJSTestsItem).add("runJSTestsMobileItem",runJSTestsMobileItem).add("globalSeparator",globalSeparator).add("openViewItem",openViewItem);return __exports;});;

/* /web/static/src/webclient/loading_indicator/loading_indicator.js */
odoo.define('@web/webclient/loading_indicator/loading_indicator',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{Transition}=require("@web/core/transition");const{Component,onWillDestroy,useState}=require("@odoo/owl");const LoadingIndicator=__exports.LoadingIndicator=class LoadingIndicator extends Component{setup(){this.uiService=useService("ui");this.state=useState({count:0,show:false,});this.rpcIds=new Set();this.shouldUnblock=false;this.startShowTimer=null;this.blockUITimer=null;this.env.bus.addEventListener("RPC:REQUEST",this.requestCall.bind(this));this.env.bus.addEventListener("RPC:RESPONSE",this.responseCall.bind(this));onWillDestroy(()=>{this.env.bus.removeEventListener("RPC:REQUEST",this.requestCall.bind(this));this.env.bus.removeEventListener("RPC:RESPONSE",this.responseCall.bind(this));});}
requestCall({detail:rpcId}){if(this.state.count===0){browser.clearTimeout(this.startShowTimer);this.startShowTimer=browser.setTimeout(()=>{if(this.state.count){this.state.show=true;this.blockUITimer=browser.setTimeout(()=>{this.shouldUnblock=true;this.uiService.block();},3000);}},250);}
this.rpcIds.add(rpcId);this.state.count++;}
responseCall({detail:rpcId}){this.rpcIds.delete(rpcId);this.state.count=this.rpcIds.size;if(this.state.count===0){browser.clearTimeout(this.startShowTimer);browser.clearTimeout(this.blockUITimer);this.state.show=false;if(this.shouldUnblock){this.uiService.unblock();this.shouldUnblock=false;}}}}
LoadingIndicator.template="web.LoadingIndicator";LoadingIndicator.components={Transition};registry.category("main_components").add("LoadingIndicator",{Component:LoadingIndicator,});return __exports;});;

/* /web/static/src/webclient/menus/menu_helpers.js */
odoo.define('@web/webclient/menus/menu_helpers',async function(require){'use strict';let __exports={};function traverseMenuTree(tree,cb,parents=[]){cb(tree,parents);tree.childrenTree.forEach((c)=>traverseMenuTree(c,cb,parents.concat([tree])));}
__exports.computeAppsAndMenuItems=computeAppsAndMenuItems;function computeAppsAndMenuItems(menuTree){const apps=[];const menuItems=[];traverseMenuTree(menuTree,(menuItem,parents)=>{if(!menuItem.id||!menuItem.actionID){return;}
const isApp=menuItem.id===menuItem.appID;const item={parents:parents.slice(1).map((p)=>p.name).join(" / "),label:menuItem.name,id:menuItem.id,xmlid:menuItem.xmlid,actionID:menuItem.actionID,appID:menuItem.appID,};if(isApp){if(menuItem.webIconData){item.webIconData=menuItem.webIconData;}else{const[iconClass,color,backgroundColor]=(menuItem.webIcon||"").split(",");if(backgroundColor!==undefined){item.webIcon={iconClass,color,backgroundColor};}else{item.webIconData="/web_enterprise/static/img/default_icon_app.png";}}}else{item.menuID=parents[1].id;}
if(isApp){apps.push(item);}else{menuItems.push(item);}});return{apps,menuItems};}
return __exports;});;

/* /web/static/src/webclient/menus/menu_providers.js */
odoo.define('@web/webclient/menus/menu_providers',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{fuzzyLookup}=require("@web/core/utils/search");const{computeAppsAndMenuItems}=require("@web/webclient/menus/menu_helpers");const{Component}=require("@odoo/owl");class AppIconCommand extends Component{}
AppIconCommand.template="web.AppIconCommand";const commandCategoryRegistry=registry.category("command_categories");commandCategoryRegistry.add("apps",{namespace:"/"},{sequence:10});commandCategoryRegistry.add("menu_items",{namespace:"/"},{sequence:20});const commandSetupRegistry=registry.category("command_setup");commandSetupRegistry.add("/",{emptyMessage:_lt("No menu found"),name:_lt("menus"),placeholder:_lt("Search for a menu..."),});const commandProviderRegistry=registry.category("command_provider");commandProviderRegistry.add("menu",{namespace:"/",async provide(env,options){const result=[];const menuService=env.services.menu;let{apps,menuItems}=computeAppsAndMenuItems(menuService.getMenuAsTree("root"));if(options.searchValue!==""){apps=fuzzyLookup(options.searchValue,apps,(menu)=>menu.label);fuzzyLookup(options.searchValue,menuItems,(menu)=>(menu.parents+" / "+menu.label).split("/").reverse().join("/")).forEach((menu)=>{result.push({action(){menuService.selectMenu(menu);},category:"menu_items",name:menu.parents+" / "+menu.label,href:menu.href||`#menu_id=${menu.id}&amp;action_id=${menu.actionID}`,});});}
apps.forEach((menu)=>{const props={};if(menu.webIconData){const prefix=menu.webIconData.startsWith("P")?"data:image/svg+xml;base64,":"data:image/png;base64,";props.webIconData=menu.webIconData.startsWith("data:image")?menu.webIconData:prefix+menu.webIconData.replace(/\s/g,"");}else{props.webIcon=menu.webIcon;}
result.push({Component:AppIconCommand,action(){menuService.selectMenu(menu);},category:"apps",name:menu.label,href:menu.href||`#menu_id=${menu.id}&amp;action_id=${menu.actionID}`,props,});});return result;},});return __exports;});;

/* /web/static/src/webclient/menus/menu_service.js */
odoo.define('@web/webclient/menus/menu_service',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{session}=require("@web/session");const loadMenusUrl=`/web/webclient/load_menus`;function makeFetchLoadMenus(){const cacheHashes=session.cache_hashes;let loadMenusHash=cacheHashes.load_menus||new Date().getTime().toString();return async function fetchLoadMenus(reload){if(reload){loadMenusHash=new Date().getTime().toString();}else if(odoo.loadMenusPromise){return odoo.loadMenusPromise;}
const res=await browser.fetch(`${loadMenusUrl}/${loadMenusHash}`);if(!res.ok){throw new Error("Error while fetching menus");}
return res.json();};}
function makeMenus(env,menusData,fetchLoadMenus){let currentAppId;return{getAll(){return Object.values(menusData);},getApps(){return this.getMenu("root").children.map((mid)=>this.getMenu(mid));},getMenu(menuID){return menusData[menuID];},getCurrentApp(){if(!currentAppId){return;}
return this.getMenu(currentAppId);},getMenuAsTree(menuID){const menu=this.getMenu(menuID);if(!menu.childrenTree){menu.childrenTree=menu.children.map((mid)=>this.getMenuAsTree(mid));}
return menu;},async selectMenu(menu){menu=typeof menu==="number"?this.getMenu(menu):menu;if(!menu.actionID){return;}
await env.services.action.doAction(menu.actionID,{clearBreadcrumbs:true});this.setCurrentMenu(menu);},setCurrentMenu(menu){menu=typeof menu==="number"?this.getMenu(menu):menu;if(menu&&menu.appID!==currentAppId){currentAppId=menu.appID;env.bus.trigger("MENUS:APP-CHANGED");env.services.router.pushState({menu_id:menu.id},{lock:true});}},async reload(){if(fetchLoadMenus){menusData=await fetchLoadMenus(true);env.bus.trigger("MENUS:APP-CHANGED");}},};}
const menuService=__exports.menuService={dependencies:["action","router"],async start(env){const fetchLoadMenus=makeFetchLoadMenus();const menusData=await fetchLoadMenus();return makeMenus(env,menusData,fetchLoadMenus);},};registry.category("services").add("menu",menuService);return __exports;});;

/* /web/static/src/webclient/navbar/navbar.js */
odoo.define('@web/webclient/navbar/navbar',async function(require){'use strict';let __exports={};const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{useService}=require("@web/core/utils/hooks");const{registry}=require("@web/core/registry");const{debounce}=require("@web/core/utils/timing");const{ErrorHandler}=require("@web/core/utils/components");const{Component,onWillDestroy,onWillUnmount,useExternalListener,useEffect,useRef,}=require("@odoo/owl");const systrayRegistry=registry.category("systray");const getBoundingClientRect=Element.prototype.getBoundingClientRect;class NavBarDropdownItem extends DropdownItem{}
NavBarDropdownItem.template="web.NavBar.DropdownItem";NavBarDropdownItem.props={...DropdownItem.props,style:{type:String,optional:true},};const MenuDropdown=__exports.MenuDropdown=class MenuDropdown extends Dropdown{setup(){super.setup();useEffect(()=>{if(this.props.xmlid){this.togglerRef.el.dataset.menuXmlid=this.props.xmlid;}},()=>[]);}}
MenuDropdown.props.xmlid={type:String,optional:true,};const NavBar=__exports.NavBar=class NavBar extends Component{setup(){this.currentAppSectionsExtra=[];this.actionService=useService("action");this.menuService=useService("menu");this.root=useRef("root");this.appSubMenus=useRef("appSubMenus");const debouncedAdapt=debounce(this.adapt.bind(this),250);onWillDestroy(()=>debouncedAdapt.cancel());useExternalListener(window,"resize",debouncedAdapt);let adaptCounter=0;const renderAndAdapt=()=>{adaptCounter++;this.render();};systrayRegistry.on("UPDATE",this,renderAndAdapt);this.env.bus.on("MENUS:APP-CHANGED",this,renderAndAdapt);onWillUnmount(()=>{systrayRegistry.off("UPDATE",this);this.env.bus.off("MENUS:APP-CHANGED",this);});useEffect(()=>{this.adapt();},()=>[adaptCounter]);}
handleItemError(error,item){item.isDisplayed=()=>false;Promise.resolve().then(()=>{throw error;});}
get currentApp(){return this.menuService.getCurrentApp();}
get currentAppSections(){return((this.currentApp&&this.menuService.getMenuAsTree(this.currentApp.id).childrenTree)||[]);}
set currentAppSections(_){}
get systrayItems(){return systrayRegistry.getEntries().map(([key,value])=>({key,...value})).filter((item)=>("isDisplayed"in item?item.isDisplayed(this.env):true)).reverse();}
set systrayItems(_){}
async adapt(){if(!this.root.el){return;}
const sectionsMenu=this.appSubMenus.el;if(!sectionsMenu){return;}
const initialAppSectionsExtra=this.currentAppSectionsExtra;const firstInitialAppSectionExtra=[...initialAppSectionsExtra].shift();const initialAppId=firstInitialAppSectionExtra&&firstInitialAppSectionExtra.appID;const sections=[...sectionsMenu.querySelectorAll(":scope > *:not(.o_menu_sections_more)"),];for(const section of sections){section.classList.remove("d-none");}
this.currentAppSectionsExtra=[];const sectionsAvailableWidth=getBoundingClientRect.call(sectionsMenu).width;const sectionsTotalWidth=sections.reduce((sum,s)=>sum+getBoundingClientRect.call(s).width,0);if(sectionsAvailableWidth<sectionsTotalWidth){let width=46;for(const section of sections){if(sectionsAvailableWidth<width+section.offsetWidth){const overflowingSections=sections.slice(sections.indexOf(section));overflowingSections.forEach((s)=>{s.classList.add("d-none");const sectionId=s.dataset.section||s.querySelector("[data-section]").getAttribute("data-section");const currentAppSection=this.currentAppSections.find((appSection)=>appSection.id.toString()===sectionId);this.currentAppSectionsExtra.push(currentAppSection);});break;}
width+=section.offsetWidth;}}
const firstCurrentAppSectionExtra=[...this.currentAppSectionsExtra].shift();const currentAppId=firstCurrentAppSectionExtra&&firstCurrentAppSectionExtra.appID;if(initialAppSectionsExtra.length===this.currentAppSectionsExtra.length&&initialAppId===currentAppId){return;}
return this.render();}
onNavBarDropdownItemSelection(menu){if(menu){this.menuService.selectMenu(menu);}}
getMenuItemHref(payload){const parts=[`menu_id=${payload.id}`];if(payload.actionID){parts.push(`action=${payload.actionID}`);}
return"#"+parts.join("&");}}
NavBar.template="web.NavBar";NavBar.components={Dropdown,DropdownItem:NavBarDropdownItem,MenuDropdown,ErrorHandler};return __exports;});;

/* /web/static/src/webclient/settings_form_view/fields/upgrade_boolean_field.js */
odoo.define('@web/webclient/settings_form_view/fields/upgrade_boolean_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{BooleanField}=require("@web/views/fields/boolean/boolean_field");const{useService}=require("@web/core/utils/hooks");const{UpgradeDialog}=require("@web/webclient/settings_form_view/fields/upgrade_dialog");const UpgradeBooleanField=__exports.UpgradeBooleanField=class UpgradeBooleanField extends BooleanField{setup(){super.setup();this.dialogService=useService("dialog");this.isEnterprise=odoo.info&&odoo.info.isEnterprise;}
async onChange(newValue){if(!this.isEnterprise){this.dialogService.add(UpgradeDialog,{},{onClose:()=>{this.props.update(false);},});}else{super.onChange(...arguments);}}}
UpgradeBooleanField.isUpgradeField=true;UpgradeBooleanField.additionalClasses=[...UpgradeBooleanField.additionalClasses||[],"o_field_boolean",];registry.category("fields").add("upgrade_boolean",UpgradeBooleanField);return __exports;});;

/* /web/static/src/webclient/settings_form_view/fields/upgrade_dialog.js */
odoo.define('@web/webclient/settings_form_view/fields/upgrade_dialog',async function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{useService}=require("@web/core/utils/hooks");const{Component}=require("@odoo/owl");const UpgradeDialog=__exports.UpgradeDialog=class UpgradeDialog extends Component{setup(){this.orm=useService("orm");this.router=useService("router");}
async _confirmUpgrade(){const usersCount=await this.orm.call("res.users","search_count",[[["share","=",false]],]);window.open("https://www.odoo.com/odoo-enterprise/upgrade?num_users="+usersCount,"_blank");this.props.close();}}
UpgradeDialog.template="web.UpgradeDialog";UpgradeDialog.components={Dialog};return __exports;});;

/* /web/static/src/webclient/settings_form_view/highlight_text/form_label_highlight_text.js */
odoo.define('@web/webclient/settings_form_view/highlight_text/form_label_highlight_text',async function(require){'use strict';let __exports={};const{FormLabel}=require("@web/views/form/form_label");const{HighlightText}=require("@web/webclient/settings_form_view/highlight_text/highlight_text");const FormLabelHighlightText=__exports.FormLabelHighlightText=class FormLabelHighlightText extends FormLabel{setup(){super.setup();const isEnterprise=odoo.info&&odoo.info.isEnterprise;if(this.props.fieldInfo&&this.props.fieldInfo.FieldComponent&&this.props.fieldInfo.FieldComponent.isUpgradeField&&!isEnterprise){this.upgradeEnterprise=true;}}
get className(){if(this.props.className){return this.props.className;}
return super.className;}}
FormLabelHighlightText.template="web.FormLabelHighlightText";FormLabelHighlightText.components={HighlightText};return __exports;});;

/* /web/static/src/webclient/settings_form_view/highlight_text/highlight_text.js */
odoo.define('@web/webclient/settings_form_view/highlight_text/highlight_text',async function(require){'use strict';let __exports={};const{escapeRegExp}=require("@web/core/utils/strings");const{Component,useState,onWillRender}=require("@odoo/owl");const HighlightText=__exports.HighlightText=class HighlightText extends Component{setup(){this.searchState=useState(this.env.searchState);onWillRender(()=>{const splitText=this.props.originalText.split(new RegExp(`(${escapeRegExp(this.searchState.value)})`,"ig"));this.splitText=this.searchState.value.length&&splitText.length>1?splitText:[this.props.originalText];});}}
HighlightText.template="web.HighlightText";HighlightText.props={originalText:String,};HighlightText.highlightClass="highlighter";return __exports;});;

/* /web/static/src/webclient/settings_form_view/highlight_text/settings_radio_field.js */
odoo.define('@web/webclient/settings_form_view/highlight_text/settings_radio_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{RadioField}=require("@web/views/fields/radio/radio_field");const{FormLabelHighlightText}=require("@web/webclient/settings_form_view/highlight_text/form_label_highlight_text");const SettingsRadioField=__exports.SettingsRadioField=class SettingsRadioField extends RadioField{}
SettingsRadioField.extractStringExpr=(fieldName,record)=>{const radioItems=SettingsRadioField.getItems(fieldName,record);return radioItems.map((r)=>r[1]);};SettingsRadioField.template="web.SettingsRadioField";SettingsRadioField.components={...RadioField.components,FormLabelHighlightText};registry.category("fields").add("base_settings.radio",SettingsRadioField);return __exports;});;

/* /web/static/src/webclient/settings_form_view/settings/setting.js */
odoo.define('@web/webclient/settings_form_view/settings/setting',async function(require){'use strict';let __exports={};const{escapeRegExp}=require("@web/core/utils/strings");const{Component,useState,useChildSubEnv}=require("@odoo/owl");const Setting=__exports.Setting=class Setting extends Component{setup(){this.state=useState({search:this.env.searchState,showAllContainer:this.env.showAllContainer,});if(this.props.type==="header"){useChildSubEnv({searchState:{value:""}});}
this.labels=this.props.labels||[];}
visible(){if(!this.state.search.value){return true;}
if(this.props.type==="header"){return true;}
if(this.state.showAllContainer.showAllContainer){return true;}
const regexp=new RegExp(escapeRegExp(this.state.search.value),"i");if(regexp.test(this.labels.join())){return true;}
return false;}
get classNames(){const{class:_class,type}=this.props;const classNames={o_setting_box:true,o_searchable_setting:this.labels.length&&type!=="header",[_class]:Boolean(_class),};return classNames;}}
Setting.template="web.Setting";return __exports;});;

/* /web/static/src/webclient/settings_form_view/settings/settings_app.js */
odoo.define('@web/webclient/settings_form_view/settings/settings_app',async function(require){'use strict';let __exports={};const{Component,useState,useEffect,useRef}=require("@odoo/owl");const SettingsApp=__exports.SettingsApp=class SettingsApp extends Component{setup(){this.state=useState({search:this.env.searchState,});this.settingsAppRef=useRef("settingsApp");useEffect(()=>{if(this.settingsAppRef.el){const force=this.state.search.value&&!this.settingsAppRef.el.querySelector(".o_settings_container:not(.d-none)")&&!this.settingsAppRef.el.querySelector(".o_setting_box.o_searchable_setting");this.settingsAppRef.el.classList.toggle("d-none",force);}},()=>[this.state.search.value]);}}
SettingsApp.template="web.SettingsApp";return __exports;});;

/* /web/static/src/webclient/settings_form_view/settings/settings_container.js */
odoo.define('@web/webclient/settings_form_view/settings/settings_container',async function(require){'use strict';let __exports={};const{HighlightText}=require("@web/webclient/settings_form_view/highlight_text/highlight_text");const{escapeRegExp}=require("@web/core/utils/strings");const{Component,useState,useRef,useEffect,onWillRender,useChildSubEnv}=require("@odoo/owl");const SettingsContainer=__exports.SettingsContainer=class SettingsContainer extends Component{setup(){this.state=useState({search:this.env.searchState,});this.showAllContainerState=useState({showAllContainer:false,});useChildSubEnv({showAllContainer:this.showAllContainerState,});this.settingsContainerRef=useRef("settingsContainer");this.settingsContainerTitleRef=useRef("settingsContainerTitle");this.settingsContainerTipRef=useRef("settingsContainerTip");useEffect(()=>{const regexp=new RegExp(escapeRegExp(this.state.search.value),"i");const force=this.state.search.value&&!regexp.test([this.props.title,this.props.tip].join())&&!this.settingsContainerRef.el.querySelector(".o_setting_box.o_searchable_setting");this.toggleContainer(force);},()=>[this.state.search.value]);onWillRender(()=>{const regexp=new RegExp(escapeRegExp(this.state.search.value),"i");if(regexp.test([this.props.title,this.props.tip].join())){this.showAllContainerState.showAllContainer=true;}else{this.showAllContainerState.showAllContainer=false;}});}
toggleContainer(force){if(this.settingsContainerTitleRef.el){this.settingsContainerTitleRef.el.classList.toggle("d-none",force);}
if(this.settingsContainerTipRef.el){this.settingsContainerTipRef.el.classList.toggle("d-none",force);}
this.settingsContainerRef.el.classList.toggle("d-none",force);}}
SettingsContainer.template="web.SettingsContainer";SettingsContainer.components={HighlightText,};return __exports;});;

/* /web/static/src/webclient/settings_form_view/settings/settings_page.js */
odoo.define('@web/webclient/settings_form_view/settings/settings_page',async function(require){'use strict';let __exports={};const{ActionSwiper}=require("@web/core/action_swiper/action_swiper");const{Component,useState,useRef,useEffect}=require("@odoo/owl");const SettingsPage=__exports.SettingsPage=class SettingsPage extends Component{setup(){this.state=useState({selectedTab:"",search:this.env.searchState,});if(this.props.modules){this.state.selectedTab=this.props.initialTab||this.props.modules[0].key;}
this.settingsRef=useRef("settings");this.scrollMap=Object.create(null);useEffect((settingsEl,currentTab)=>{if(!settingsEl){return;}
const{scrollTop}=this.scrollMap[currentTab]||0;settingsEl.scrollTop=scrollTop;},()=>[this.settingsRef.el,this.state.selectedTab]);}
getCurrentIndex(){return this.props.modules.findIndex((object)=>{return object.key===this.state.selectedTab;});}
hasRightSwipe(){return(this.env.isSmall&&this.state.search.value.length===0&&this.getCurrentIndex()!==0);}
hasLeftSwipe(){return(this.env.isSmall&&this.state.search.value.length===0&&this.getCurrentIndex()!==this.props.modules.length-1);}
onRightSwipe(){this.state.selectedTab=this.props.modules[this.getCurrentIndex()-1].key;}
onLeftSwipe(){this.state.selectedTab=this.props.modules[this.getCurrentIndex()+1].key;}
onSettingTabClick(key){if(this.settingsRef.el){const{scrollTop}=this.settingsRef.el;this.scrollMap[this.state.selectedTab]={scrollTop};}
this.state.selectedTab=key;this.env.searchState.value="";}}
SettingsPage.template="web.SettingsPage";SettingsPage.components={ActionSwiper};return __exports;});;

/* /web/static/src/webclient/settings_form_view/settings_confirmation_dialog.js */
odoo.define('@web/webclient/settings_form_view/settings_confirmation_dialog',async function(require){'use strict';let __exports={};const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{_lt}=require("@web/core/l10n/translation");const SettingsConfirmationDialog=__exports.SettingsConfirmationDialog=class SettingsConfirmationDialog extends ConfirmationDialog{_stayHere(){if(this.props.stayHere){this.props.stayHere();}
this.props.close();}}
SettingsConfirmationDialog.defaultProps={title:_lt("Unsaved changes"),};SettingsConfirmationDialog.template="web.SettingsConfirmationDialog";SettingsConfirmationDialog.props={...ConfirmationDialog.props,stayHere:{type:Function,optional:true},};return __exports;});;

/* /web/static/src/webclient/settings_form_view/settings_form_arch_parser.js */
odoo.define('@web/webclient/settings_form_view/settings_form_arch_parser',async function(require){'use strict';let __exports={};const{evaluateExpr}=require("@web/core/py_js/py");const{formView}=require("@web/views/form/form_view");const SettingsArchParser=__exports.SettingsArchParser=class SettingsArchParser extends formView.ArchParser{parseXML(){const result=super.parseXML(...arguments);Array.from(result.querySelectorAll(".app_settings_header field")).forEach((el)=>{const options=evaluateExpr(el.getAttribute("options")||"{}");options.isHeaderField=true;el.setAttribute("options",JSON.stringify(options));});return result;}}
return __exports;});;

/* /web/static/src/webclient/settings_form_view/settings_form_compiler.js */
odoo.define('@web/webclient/settings_form_view/settings_form_compiler',async function(require){'use strict';let __exports={};const{append,createElement}=require("@web/core/utils/xml");const{FormCompiler}=require("@web/views/form/form_compiler");const{getModifier}=require("@web/views/view_compiler");function compileSettingsPage(el,params){const settingsPage=createElement("SettingsPage");settingsPage.setAttribute("slots","{NoContentHelper:props.slots.NoContentHelper}");settingsPage.setAttribute("initialTab","props.initialApp");settingsPage.setAttribute("t-slot-scope","settings");const modules=[];for(const child of el.children){if(child.nodeName==="div"&&child.classList.value.includes("app_settings_block")){params.module={key:child.getAttribute("data-key"),string:child.getAttribute("string"),imgurl:getAppIconUrl(child.getAttribute("data-key")),isVisible:getModifier(child,"invisible"),};if(!child.classList.value.includes("o_not_app")){modules.push(params.module);append(settingsPage,this.compileNode(child,params));}}}
settingsPage.setAttribute("modules",JSON.stringify(modules));return settingsPage;}
function getAppIconUrl(module){return module==="general_settings"?"/base/static/description/settings.png":"/"+module+"/static/description/icon.png";}
function compileSettingsApp(el,params){const settingsApp=createElement("SettingsApp");settingsApp.setAttribute("t-props",JSON.stringify(params.module));settingsApp.setAttribute("selectedTab","settings.selectedTab");for(const child of el.children){append(settingsApp,this.compileNode(child,params));}
return settingsApp;}
function compileSettingsHeader(el,params){const header=el.cloneNode();for(const child of el.children){append(header,this.compileNode(child,{...params,settingType:"header"}));}
return header;}
let settingsContainer=null;function compileSettingsGroupTitle(el,params){if(!settingsContainer){settingsContainer=createElement("SettingsContainer");}
settingsContainer.setAttribute("title",`\`${el.textContent}\``);}
function compileSettingsGroupTip(el,params){if(!settingsContainer){settingsContainer=createElement("SettingsContainer");}
settingsContainer.setAttribute("tip",`\`${el.textContent}\``);}
function compileSettingsContainer(el,params){if(!settingsContainer){settingsContainer=createElement("SettingsContainer");}
for(const child of el.children){append(settingsContainer,this.compileNode(child,params));}
const res=settingsContainer;settingsContainer=null;return res;}
function compileSettingBox(el,params){const setting=createElement("Setting");params.labels=[];if(params.settingType){setting.setAttribute("type",`\`${params.settingType}\``);}
if(el.getAttribute("title")){setting.setAttribute("title",`\`${el.getAttribute("title")}\``);}
for(const child of el.children){append(setting,this.compileNode(child,params));}
setting.setAttribute("labels",JSON.stringify(params.labels));return setting;}
function compileField(el,params){const res=this.compileField(el,params);let widgetName;if(el.hasAttribute("widget")){widgetName=el.getAttribute("widget");const label=params.getFieldExpr(el.getAttribute("name"),widgetName);if(label){params.labels.push(label);}}
return res;}
const labelsWeak=new WeakMap();function compileLabel(el,params){const res=this.compileLabel(el,params);if(res.textContent&&res.tagName!=="FormLabel"){params.labels.push(res.textContent.trim());labelsWeak.set(res,{textContent:res.textContent});highlightElement(res);}
return res;}
function compileGenericLabel(el,params){const res=this.compileGenericNode(el,params);if(res.textContent){params.labels.push(res.textContent.trim());highlightElement(res);}
return res;}
function highlightElement(el){for(const child of el.childNodes){if(child.nodeType===Node.TEXT_NODE){if(child.textContent.trim()){const highlight=createElement("HighlightText");highlight.setAttribute("originalText",`\`${child.textContent}\``);el.replaceChild(highlight,child);}}else if(child.childNodes.length){highlightElement(child);}}}
function compileForm(){const res=this.compileForm(...arguments);res.classList.remove("o_form_nosheet");res.classList.remove("p-2");res.classList.remove("px-lg-5");return res;}
const SettingsFormCompiler=__exports.SettingsFormCompiler=class SettingsFormCompiler extends FormCompiler{setup(){super.setup();this.compilers.unshift({selector:"form",fn:compileForm},{selector:"div.settings",fn:compileSettingsPage},{selector:"div.app_settings_block",fn:compileSettingsApp},{selector:"div.app_settings_header",fn:compileSettingsHeader},{selector:"div.o_setting_box",fn:compileSettingBox},{selector:"div.o_settings_container",fn:compileSettingsContainer},{selector:"h2",fn:compileSettingsGroupTitle},{selector:"h3.o_setting_tip",fn:compileSettingsGroupTip},{selector:"label",fn:compileLabel,doNotCopyAttributes:true},{selector:"span.o_form_label",fn:compileGenericLabel},{selector:"div.text-muted",fn:compileGenericLabel},{selector:"field",fn:compileField});}
createLabelFromField(fieldId,fieldName,fieldString,label,params){const labelweak=labelsWeak.get(label);if(labelweak){label.textContent=labelweak.textContent;}
const res=super.createLabelFromField(fieldId,fieldName,fieldString,label,params);if(labelweak||label.hasAttribute("data-no-label")){return res;}
let labelText=label.textContent||fieldString;labelText=labelText?labelText:params.record.fields[fieldName].string;params.labels.push(labelText);return res;}}
return __exports;});;

/* /web/static/src/webclient/settings_form_view/settings_form_controller.js */
odoo.define('@web/webclient/settings_form_view/settings_form_controller',async function(require){'use strict';let __exports={};const{useAutofocus}=require("@web/core/utils/hooks");const{pick}=require("@web/core/utils/objects");const{formView}=require("@web/views/form/form_view");const{SettingsConfirmationDialog}=require("@web/webclient/settings_form_view/settings_confirmation_dialog");const{SettingsFormRenderer}=require("@web/webclient/settings_form_view/settings_form_renderer");const{useSubEnv,useState,useRef,useEffect}=require("@odoo/owl");const SettingsFormController=__exports.SettingsFormController=class SettingsFormController extends formView.Controller{setup(){super.setup();useAutofocus();this.state=useState({displayNoContent:false});this.searchState=useState({value:""});this.rootRef=useRef("root");useSubEnv({searchState:this.searchState});useEffect(()=>{if(this.rootRef.el.querySelector(".o_settings_container:not(.d-none)")||this.rootRef.el.querySelector(".settings .o_settings_container:not(.d-none) .o_setting_box.o_searchable_setting")){this.state.displayNoContent=false;}else{this.state.displayNoContent=true;}},()=>[this.searchState.value]);useEffect(()=>{if(this.env.__getLocalState__){this.env.__getLocalState__.remove(this);}});this.initialApp="module"in this.props.context&&this.props.context.module;}
async beforeExecuteActionButton(clickParams){if(clickParams.name==="cancel"){return true;}
if(this.model.root.isDirty&&!["execute"].includes(clickParams.name)&&!clickParams.noSaveDialog){return this._confirmSave();}else{return this.model.root.save({stayInEdition:true});}}
displayName(){return this.env._t("Settings");}
beforeLeave(){if(this.model.root.isDirty){return this._confirmSave();}}
beforeUnload(){}
updateURL(){}
async saveButtonClicked(){await this._save();}
async _save(){this.env.onClickViewButton({clickParams:{name:"execute",type:"object",},getResParams:()=>pick(this.model.root,"context","evalContext","resModel","resId","resIds"),});}
discard(){this.env.onClickViewButton({clickParams:{name:"cancel",type:"object",special:"cancel",},getResParams:()=>pick(this.model.root,"context","evalContext","resModel","resId","resIds"),});}
async _confirmSave(){let _continue=true;await new Promise((resolve)=>{this.dialogService.add(SettingsConfirmationDialog,{body:this.env._t("Would you like to save your changes?"),confirm:async()=>{await this._save();_continue=false;resolve();},cancel:async()=>{await this.model.root.discard();await this.model.root.save({stayInEdition:true});_continue=true;resolve();},stayHere:()=>{_continue=false;resolve();},});});return _continue;}}
SettingsFormController.components={...formView.Controller.components,Renderer:SettingsFormRenderer,};SettingsFormController.template="web.SettingsFormView";return __exports;});;

/* /web/static/src/webclient/settings_form_view/settings_form_renderer.js */
odoo.define('@web/webclient/settings_form_view/settings_form_renderer',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{FormRenderer}=require("@web/views/form/form_renderer");const{FormLabelHighlightText}=require("@web/webclient/settings_form_view/highlight_text/form_label_highlight_text");const{HighlightText}=require("@web/webclient/settings_form_view/highlight_text/highlight_text");const{Setting}=require("@web/webclient/settings_form_view/settings/setting");const{SettingsContainer}=require("@web/webclient/settings_form_view/settings/settings_container");const{SettingsApp}=require("@web/webclient/settings_form_view/settings/settings_app");const{SettingsPage}=require("@web/webclient/settings_form_view/settings/settings_page");const{useState}=require("@odoo/owl");const fieldRegistry=registry.category("fields");const labels=Object.create(null);const SettingsFormRenderer=__exports.SettingsFormRenderer=class SettingsFormRenderer extends FormRenderer{setup(){if(!labels[this.props.archInfo.arch]){labels[this.props.archInfo.arch]=[];}
super.setup();this.searchState=useState(this.env.searchState);}
get shouldAutoFocus(){return false;}
get compileParams(){return{...super.compileParams,labels:labels[this.props.archInfo.arch],getFieldExpr:this.getFieldExpr,record:this.props.record,};}
getFieldExpr(fieldName,fieldWidget){const name=`base_settings.${fieldWidget}`;let fieldClass;if(fieldRegistry.contains(name)){fieldClass=fieldRegistry.get(name);}
if(fieldClass&&fieldClass.extractStringExpr){return fieldClass.extractStringExpr(fieldName,this.record);}else{return"";}}}
SettingsFormRenderer.components={...FormRenderer.components,Setting,SettingsContainer,SettingsPage,SettingsApp,HighlightText,FormLabel:FormLabelHighlightText,};return __exports;});;

/* /web/static/src/webclient/settings_form_view/settings_form_view.js */
odoo.define('@web/webclient/settings_form_view/settings_form_view',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{ControlPanel}=require("@web/search/control_panel/control_panel");const{formView}=require("@web/views/form/form_view");const{SettingsFormController}=require("@web/webclient/settings_form_view/settings_form_controller");const{SettingsFormRenderer}=require("@web/webclient/settings_form_view/settings_form_renderer");const{SettingsFormCompiler}=require("@web/webclient/settings_form_view/settings_form_compiler");const BasicModel=require("web.BasicModel");const{SettingsArchParser}=require("@web/webclient/settings_form_view/settings_form_arch_parser");const BaseSettingsModel=BasicModel.extend({isNew(id){return this.localData[id].model==="res.config.settings"?true:this._super.apply(this,arguments);},_applyChange:function(recordID,changes,options){const record=this.localData[recordID];let isHeaderField=false;for(const fieldName of Object.keys(changes)){const fieldInfo=record.fieldsInfo[options.viewType][fieldName];isHeaderField=fieldInfo.options&&fieldInfo.options.isHeaderField;}
if(isHeaderField){options.doNotSetDirty=true;}
return this._super.apply(this,arguments);},});class SettingsRelationalModel extends formView.Model{}
SettingsRelationalModel.LegacyModel=BaseSettingsModel;const settingsFormView=__exports.settingsFormView={...formView,display:{},buttonTemplate:"web.SettingsFormView.Buttons",ArchParser:SettingsArchParser,Model:SettingsRelationalModel,ControlPanel:ControlPanel,Controller:SettingsFormController,Compiler:SettingsFormCompiler,Renderer:SettingsFormRenderer,};registry.category("views").add("base_settings",settingsFormView);return __exports;});;

/* /web/static/src/webclient/settings_form_view/widgets/demo_data_service.js */
odoo.define('@web/webclient/settings_form_view/widgets/demo_data_service',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const demoDataService=__exports.demoDataService={dependencies:["rpc"],async start(env,{rpc}){let isDemoDataActiveProm;return{isDemoDataActive(){if(!isDemoDataActiveProm){isDemoDataActiveProm=rpc("/base_setup/demo_active");}
return isDemoDataActiveProm;},};},};registry.category("services").add("demo_data",demoDataService);return __exports;});;

/* /web/static/src/webclient/settings_form_view/widgets/res_config_dev_tool.js */
odoo.define('@web/webclient/settings_form_view/widgets/res_config_dev_tool',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{SettingsContainer}=require("@web/webclient/settings_form_view/settings/settings_container");const{Setting}=require("@web/webclient/settings_form_view/settings/setting");const{Component,onWillStart}=require("@odoo/owl");const ResConfigDevTool=__exports.ResConfigDevTool=class ResConfigDevTool extends Component{setup(){this.isDebug=Boolean(odoo.debug);this.isAssets=odoo.debug.includes("assets");this.isTests=odoo.debug.includes("tests");this.action=useService("action");this.demo=useService("demo_data");onWillStart(async()=>{this.isDemoDataActive=await this.demo.isDemoDataActive();});}
onClickForceDemo(){this.action.doAction("base.demo_force_install_action");}}
ResConfigDevTool.template="res_config_dev_tool";ResConfigDevTool.components={SettingsContainer,Setting,};registry.category("view_widgets").add("res_config_dev_tool",ResConfigDevTool);return __exports;});;

/* /web/static/src/webclient/settings_form_view/widgets/res_config_edition.js */
odoo.define('@web/webclient/settings_form_view/widgets/res_config_edition',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{session}=require("@web/session");const{Component}=require("@odoo/owl");const{DateTime}=luxon;class ResConfigEdition extends Component{setup(){this.serverVersion=session.server_version;this.expirationDate=session.expiration_date?DateTime.fromSQL(session.expiration_date).toLocaleString(DateTime.DATE_FULL):DateTime.now().plus({days:30}).toLocaleString(DateTime.DATE_FULL);}}
ResConfigEdition.template="res_config_edition";registry.category("view_widgets").add("res_config_edition",ResConfigEdition);return __exports;});;

/* /web/static/src/webclient/settings_form_view/widgets/res_config_invite_users.js */
odoo.define('@web/webclient/settings_form_view/widgets/res_config_invite_users',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{unique}=require("@web/core/utils/arrays");const{useService}=require("@web/core/utils/hooks");const{Component,useState,onWillStart}=require("@odoo/owl");class ResConfigInviteUsers extends Component{setup(){this.orm=useService("orm");this.invite=useService("user_invite");this.action=useService("action");this.notification=useService("notification");this.state=useState({status:"idle",emails:"",invite:null,});onWillStart(async()=>{this.state.invite=await this.invite.fetchData();});}
validateEmail(email){const re=/^([a-z0-9][-a-z0-9_+.]*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,63}(?:\.[a-z]{2})?)$/i;return re.test(email);}
get emails(){return unique(this.state.emails.split(/[ ,;\n]+/).map((email)=>email.trim()).filter((email)=>email.length));}
validate(){if(!this.emails.length){throw new Error(_t("Empty email address"));}
const invalidEmails=[];for(const email of this.emails){if(!this.validateEmail(email)){invalidEmails.push(email);}}
if(invalidEmails.length){throw new Error(`${_t("Invalid email address")}${
                    invalidEmails.length > 1 ? "es" : ""
                }: ${invalidEmails.join(", ")}`);}}
get inviteButtonText(){if(this.state.status==="inviting"){return _t("Inviting...");}
return _t("Invite");}
onClickMore(ev){this.action.doAction(this.state.invite.action_pending_users);}
onClickUser(ev,user){const action=Object.assign({},this.state.invite.action_pending_users,{res_id:user[0],});this.action.doAction(action);}
onKeydownUserEmails(ev){const keys=["Enter","Tab",","];if(keys.includes(ev.key)){if(ev.key==="Tab"&&!this.emails.length){return;}
ev.preventDefault();this.sendInvite();}}
async sendInvite(){try{this.validate();}catch(e){this.notification.add(e.message,{type:"danger"});return;}
this.state.status="inviting";const pendingUserEmails=this.state.invite.pending_users.map((user)=>user[1]);const emailsLeftToProcess=this.emails.filter((email)=>!pendingUserEmails.includes(email));try{if(emailsLeftToProcess){await this.orm.call("res.users","web_create_users",[emailsLeftToProcess]);this.state.invite=await this.invite.fetchData(true);}}finally{this.state.emails="";this.state.status="idle";}}}
ResConfigInviteUsers.template="res_config_invite_users";registry.category("view_widgets").add("res_config_invite_users",ResConfigInviteUsers);return __exports;});;

/* /web/static/src/webclient/settings_form_view/widgets/user_invite_service.js */
odoo.define('@web/webclient/settings_form_view/widgets/user_invite_service',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const userInviteService=__exports.userInviteService={dependencies:["rpc"],async start(env,{rpc}){let dataProm;return{fetchData(reload=false){if(!dataProm||reload){dataProm=rpc("/base_setup/data");}
return dataProm;},};},};registry.category("services").add("user_invite",userInviteService);return __exports;});;

/* /web/static/src/webclient/switch_company_menu/switch_company_menu.js */
odoo.define('@web/webclient/switch_company_menu/switch_company_menu',async function(require){'use strict';let __exports={};const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{useService}=require("@web/core/utils/hooks");const{registry}=require("@web/core/registry");const{browser}=require("@web/core/browser/browser");const{symmetricalDifference}=require("@web/core/utils/arrays");const{Component,useState}=require("@odoo/owl");const SwitchCompanyMenu=__exports.SwitchCompanyMenu=class SwitchCompanyMenu extends Component{setup(){this.companyService=useService("company");this.currentCompany=this.companyService.currentCompany;this.state=useState({companiesToToggle:[]});}
toggleCompany(companyId){this.state.companiesToToggle=symmetricalDifference(this.state.companiesToToggle,[companyId,]);browser.clearTimeout(this.toggleTimer);this.toggleTimer=browser.setTimeout(()=>{this.companyService.setCompanies("toggle",...this.state.companiesToToggle);},this.constructor.toggleDelay);}
logIntoCompany(companyId){browser.clearTimeout(this.toggleTimer);this.companyService.setCompanies("loginto",companyId);}
get selectedCompanies(){return symmetricalDifference(this.companyService.allowedCompanyIds,this.state.companiesToToggle);}}
SwitchCompanyMenu.template="web.SwitchCompanyMenu";SwitchCompanyMenu.components={Dropdown,DropdownItem};SwitchCompanyMenu.toggleDelay=1000;const systrayItem=__exports.systrayItem={Component:SwitchCompanyMenu,isDisplayed(env){const{availableCompanies}=env.services.company;return Object.keys(availableCompanies).length>1;},};registry.category("systray").add("SwitchCompanyMenu",systrayItem,{sequence:1});return __exports;});;

/* /web/static/src/webclient/user_menu/user_menu.js */
odoo.define('@web/webclient/user_menu/user_menu',async function(require){'use strict';let __exports={};const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{CheckBox}=require("@web/core/checkbox/checkbox");const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{Component}=require("@odoo/owl");const userMenuRegistry=registry.category("user_menuitems");const UserMenu=__exports.UserMenu=class UserMenu extends Component{setup(){this.user=useService("user");const{origin}=browser.location;const{userId}=this.user;this.source=`${origin}/web/image?model=res.users&field=avatar_128&id=${userId}`;}
getElements(){const sortedItems=userMenuRegistry.getAll().map((element)=>element(this.env)).sort((x,y)=>{const xSeq=x.sequence?x.sequence:100;const ySeq=y.sequence?y.sequence:100;return xSeq-ySeq;});return sortedItems;}}
UserMenu.template="web.UserMenu";UserMenu.components={Dropdown,DropdownItem,CheckBox};const systrayItem=__exports.systrayItem={Component:UserMenu,};registry.category("systray").add("web.user_menu",systrayItem,{sequence:0});return __exports;});;

/* /web/static/src/webclient/user_menu/user_menu_items.js */
odoo.define('@web/webclient/user_menu/user_menu_items',async function(require){'use strict';let __exports={};const{Component,markup}=require("@odoo/owl");const{isMacOS}=require("@web/core/browser/feature_detection");const{escape}=require("@web/core/utils/strings");const{session}=require("@web/session");const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");function documentationItem(env){const documentationURL="https://www.odoo.com/documentation/16.0";return{type:"item",id:"documentation",description:env._t("Documentation"),href:documentationURL,callback:()=>{browser.open(documentationURL,"_blank");},sequence:10,};}
function supportItem(env){const url=session.support_url;return{type:"item",id:"support",description:env._t("Support"),href:url,callback:()=>{browser.open(url,"_blank");},sequence:20,};}
class ShortcutsFooterComponent extends Component{setup(){this.runShortcutKey=isMacOS()?"CONTROL":"ALT";}}
ShortcutsFooterComponent.template="web.UserMenu.ShortcutsFooterComponent";function shortCutsItem(env){const shortcut=env._t("Shortcuts");return{type:"item",id:"shortcuts",hide:env.isSmall,description:markup(`<div class="d-flex align-items-center justify-content-between">
                <span>${escape(shortcut)}</span>
                <span class="fw-bold">${isMacOS() ? "CMD" : "CTRL"}+K</span>
            </div>`),callback:()=>{env.services.command.openMainPalette({FooterComponent:ShortcutsFooterComponent});},sequence:30,};}
function separator(){return{type:"separator",sequence:40,};}
__exports.preferencesItem=preferencesItem;function preferencesItem(env){return{type:"item",id:"settings",description:env._t("Preferences"),callback:async function(){const actionDescription=await env.services.orm.call("res.users","action_get");actionDescription.res_id=env.services.user.userId;env.services.action.doAction(actionDescription);},sequence:50,};}
function odooAccountItem(env){return{type:"item",id:"account",description:env._t("My Odoo.com account"),callback:()=>{env.services.rpc("/web/session/account").then((url)=>{browser.location.href=url;}).catch(()=>{browser.location.href="https://accounts.odoo.com/account";});},sequence:60,};}
function logOutItem(env){const route="/web/session/logout";return{type:"item",id:"logout",description:env._t("Log out"),href:`${browser.location.origin}${route}`,callback:()=>{browser.location.href=route;},sequence:70,};}
registry.category("user_menuitems").add("documentation",documentationItem).add("support",supportItem).add("shortcuts",shortCutsItem).add("separator",separator).add("profile",preferencesItem).add("odoo_account",odooAccountItem).add("log_out",logOutItem);return __exports;});;

/* /web/static/src/webclient/webclient.js */
odoo.define('@web/webclient/webclient',async function(require){'use strict';let __exports={};const{useOwnDebugContext}=require("@web/core/debug/debug_context");const{DebugMenu}=require("@web/core/debug/debug_menu");const{localization}=require("@web/core/l10n/localization");const{MainComponentsContainer}=require("@web/core/main_components_container");const{registry}=require("@web/core/registry");const{useBus,useService}=require("@web/core/utils/hooks");const{ActionContainer}=require("@web/webclient/actions/action_container");const{NavBar}=require("@web/webclient/navbar/navbar");const{Component,onMounted,useExternalListener,useState}=require("@odoo/owl");const WebClient=__exports.WebClient=class WebClient extends Component{setup(){this.menuService=useService("menu");this.actionService=useService("action");this.title=useService("title");this.router=useService("router");this.user=useService("user");useService("legacy_service_provider");useOwnDebugContext({categories:["default"]});if(this.env.debug){registry.category("systray").add("web.debug_mode_menu",{Component:DebugMenu,},{sequence:100});}
this.localization=localization;this.state=useState({fullscreen:false,});this.title.setParts({zopenerp:"Odoo"});useBus(this.env.bus,"ROUTE_CHANGE",this.loadRouterState);useBus(this.env.bus,"ACTION_MANAGER:UI-UPDATED",({detail:mode})=>{if(mode!=="new"){this.state.fullscreen=mode==="fullscreen";}});onMounted(()=>{this.loadRouterState();this.env.bus.trigger("WEB_CLIENT_READY");});useExternalListener(window,"click",this.onGlobalClick,{capture:true});}
async loadRouterState(){let stateLoaded=await this.actionService.loadState();let menuId=Number(this.router.current.hash.menu_id||0);if(!stateLoaded&&menuId){const menu=this.menuService.getAll().find((m)=>menuId===m.id);const actionId=menu&&menu.actionID;if(actionId){await this.actionService.doAction(actionId,{clearBreadcrumbs:true});stateLoaded=true;}}
if(stateLoaded&&!menuId){const currentController=this.actionService.currentController;const actionId=currentController&&currentController.action.id;const menu=this.menuService.getAll().find((m)=>m.actionID===actionId);menuId=menu&&menu.appID;}
if(menuId){this.menuService.setCurrentMenu(menuId);}
if(!stateLoaded){await this._loadDefaultApp();}}
_loadDefaultApp(){const root=this.menuService.getMenu("root");const firstApp=root.children[0];if(firstApp){return this.menuService.selectMenu(firstApp);}}
onGlobalClick(ev){if(ev.ctrlKey&&!ev.target.isContentEditable&&((ev.target instanceof HTMLAnchorElement&&ev.target.href)||(ev.target instanceof HTMLElement&&ev.target.closest("a[href]:not([href=''])")))){ev.stopImmediatePropagation();return;}}}
WebClient.components={ActionContainer,NavBar,MainComponentsContainer,};WebClient.template="web.WebClient";return __exports;});;

/* /web/static/src/webclient/actions/reports/report_action.js */
odoo.define('@web/webclient/actions/reports/report_action',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{Layout}=require("@web/search/layout");const{getDefaultConfig}=require("@web/views/view");const{useSetupAction}=require("@web/webclient/actions/action_hook");const{useEnrichWithActionLinks}=require("@web/webclient/actions/reports/report_hook");const{Component,useRef,useSubEnv}=require("@odoo/owl");const ReportAction=__exports.ReportAction=class ReportAction extends Component{setup(){useSubEnv({config:{...getDefaultConfig(),...this.env.config,},});useSetupAction();this.action=useService("action");this.title=this.props.display_name||this.props.name;this.reportUrl=this.props.report_url;this.iframe=useRef("iframe");useEnrichWithActionLinks(this.iframe);}
onIframeLoaded(ev){const iframeDocument=ev.target.contentWindow.document;iframeDocument.body.classList.add("o_in_iframe","container-fluid");iframeDocument.body.classList.remove("container");}
print(){this.action.doAction({type:"ir.actions.report",report_type:"qweb-pdf",report_name:this.props.report_name,report_file:this.props.report_file,data:this.props.data||{},context:this.props.context||{},display_name:this.title,});}}
ReportAction.components={Layout};ReportAction.template="web.ReportAction";return __exports;});;

/* /web/static/src/webclient/actions/reports/report_hook.js */
odoo.define('@web/webclient/actions/reports/report_hook',async function(require){'use strict';let __exports={};const{useComponent,useEffect}=require("@odoo/owl");__exports.useEnrichWithActionLinks=useEnrichWithActionLinks;function useEnrichWithActionLinks(ref,selector=null){const comp=useComponent();useEffect((element)=>{if(element.matches("iframe")){element.onload=()=>enrich(comp,element,selector,true);}else{enrich(comp,element,selector);}},()=>[ref.el]);}
function enrich(component,targetElement,selector,isIFrame=false){let doc=window.document;if(isIFrame){targetElement=targetElement.contentDocument;doc=targetElement;}
const targets=[];if(selector){targets.push(...targetElement.querySelectorAll(selector));}else{targets.push(targetElement);}
for(const currentTarget of targets){const elementsToWrap=currentTarget.querySelectorAll("[res-id][res-model][view-type]");for(const element of elementsToWrap.values()){const wrapper=doc.createElement("a");wrapper.setAttribute("href","#");wrapper.addEventListener("click",(ev)=>{ev.preventDefault();component.env.services.action.doAction({type:"ir.actions.act_window",view_mode:element.getAttribute("view-type"),res_id:Number(element.getAttribute("res-id")),res_model:element.getAttribute("res-model"),views:[[element.getAttribute("view-id"),element.getAttribute("view-type")]],});});element.parentNode.insertBefore(wrapper,element);wrapper.appendChild(element);}}}
return __exports;});;

/* /web/static/src/env.js */
odoo.define('@web/env',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{EventBus}=require("@odoo/owl");__exports.makeEnv=makeEnv;function makeEnv(){return{bus:new EventBus(),services:{},debug:odoo.debug,_t:()=>{throw new Error("Translations are not ready yet. Maybe use _lt instead?");},get isSmall(){throw new Error("UI service not initialized!");},};}
const serviceRegistry=registry.category("services");const SERVICES_METADATA=__exports.SERVICES_METADATA={};let startServicesPromise=null;__exports.startServices=startServices;async function startServices(env){const toStart=new Set();serviceRegistry.addEventListener("UPDATE",async(ev)=>{await Promise.resolve();const{operation,key:name,value:service}=ev.detail;if(operation==="delete"){return;}
if(toStart.size){const namedService=Object.assign(Object.create(service),{name});toStart.add(namedService);}else{await _startServices(env,toStart);}});await Promise.resolve();await _startServices(env,toStart);}
async function _startServices(env,toStart){if(startServicesPromise){return startServicesPromise.then(()=>_startServices(env,toStart));}
const services=env.services;for(const[name,service]of serviceRegistry.getEntries()){if(!(name in services)){const namedService=Object.assign(Object.create(service),{name});toStart.add(namedService);}}
async function start(){let service=null;const proms=[];while((service=findNext())){const name=service.name;toStart.delete(service);const entries=(service.dependencies||[]).map((dep)=>[dep,services[dep]]);const dependencies=Object.fromEntries(entries);let value;try{value=service.start(env,dependencies);}catch(e){value=e;console.error(e);}
if("async"in service){SERVICES_METADATA[name]=service.async;}
if(value instanceof Promise){proms.push(new Promise((resolve)=>{value.then((val)=>{services[name]=val||null;}).catch((error)=>{services[name]=error;console.error("Can't load service '"+name+"' because:",error);}).finally(resolve);}));}else{services[service.name]=value||null;}}
await Promise.all(proms);if(proms.length){return start();}}
startServicesPromise=start();await startServicesPromise;startServicesPromise=null;if(toStart.size){const names=[...toStart].map((s)=>s.name);const missingDeps=new Set();[...toStart].forEach((s)=>s.dependencies.forEach((dep)=>{if(!(dep in services)&&!names.includes(dep)){missingDeps.add(dep);}}));const depNames=[...missingDeps].join(", ");throw new Error(`Some services could not be started: ${names}. Missing dependencies: ${depNames}`);}
function findNext(){for(const s of toStart){if(s.dependencies){if(s.dependencies.every((d)=>d in services)){return s;}}else{return s;}}
return null;}}
return __exports;});;

/* /web/static/lib/jquery.scrollTo/jquery.scrollTo.js */
;(function(define){'use strict';define(['jquery'],function($){var $scrollTo=$.scrollTo=function(target,duration,settings){return $(window).scrollTo(target,duration,settings);};$scrollTo.defaults={axis:'xy',duration:0,limit:true};$scrollTo.window=function(scope){return $(window)._scrollable();};$.fn._scrollable=function(){return this.map(function(){var elem=this,isWin=!elem.nodeName||$.inArray(elem.nodeName.toLowerCase(),['iframe','#document','html','body'])!=-1;if(!isWin)
return elem;var doc=(elem.contentWindow||elem).document||elem.ownerDocument||elem;return/webkit/i.test(navigator.userAgent)||doc.compatMode=='BackCompat'?doc.body:doc.documentElement;});};$.fn.scrollTo=function(target,duration,settings){if(typeof duration=='object'){settings=duration;duration=0;}
if(typeof settings=='function')
settings={onAfter:settings};if(target=='max')
target=9e9;settings=$.extend({},$scrollTo.defaults,settings);duration=duration||settings.duration;settings.queue=settings.queue&&settings.axis.length>1;if(settings.queue)
duration/=2;settings.offset=both(settings.offset);settings.over=both(settings.over);return this._scrollable().each(function(){if(target==null)return;var elem=this,$elem=$(elem),targ=target,toff,attr={},win=$elem.is('html,body');switch(typeof targ){case'number':case'string':if(/^([+-]=?)?\d+(\.\d+)?(px|%)?$/.test(targ)){targ=both(targ);break;}
targ=win?$(targ):$(targ,this);if(!targ.length)return;case'object':if(targ.is||targ.style)
toff=(targ=$(targ)).offset();}
var offset=$.isFunction(settings.offset)&&settings.offset(elem,targ)||settings.offset;$.each(settings.axis.split(''),function(i,axis){var Pos=axis=='x'?'Left':'Top',pos=Pos.toLowerCase(),key='scroll'+Pos,old=elem[key],max=$scrollTo.max(elem,axis);if(toff){attr[key]=toff[pos]+(win?0:old-$elem.offset()[pos]);if(settings.margin){attr[key]-=parseInt(targ.css('margin'+Pos))||0;attr[key]-=parseInt(targ.css('border'+Pos+'Width'))||0;}
attr[key]+=offset[pos]||0;if(settings.over[pos])
attr[key]+=targ[axis=='x'?'width':'height']()*settings.over[pos];}else{var val=targ[pos];attr[key]=val.slice&&val.slice(-1)=='%'?parseFloat(val)/100*max:val;}
if(settings.limit&&/^\d+$/.test(attr[key]))
attr[key]=attr[key]<=0?0:Math.min(attr[key],max);if(!i&&settings.queue){if(old!=attr[key])
animate(settings.onAfterFirst);delete attr[key];}});animate(settings.onAfter);function animate(callback){$elem.animate(attr,duration,settings.easing,callback&&function(){callback.call(this,targ,settings);});}}).end();};$scrollTo.max=function(elem,axis){var Dim=axis=='x'?'Width':'Height',scroll='scroll'+Dim;if(!$(elem).is('html,body'))
return elem[scroll]-$(elem)[Dim.toLowerCase()]();var size='client'+Dim,html=elem.ownerDocument.documentElement,body=elem.ownerDocument.body;return Math.max(html[scroll],body[scroll])-Math.min(html[size],body[size]);};function both(val){return $.isFunction(val)||$.isPlainObject(val)?val:{top:val,left:val};}
return $scrollTo;})}(typeof define==='function'&&define.amd?define:function(deps,factory){if(typeof module!=='undefined'&&module.exports){module.exports=factory(require('jquery'));}else{factory(jQuery);}}));;

/* /web/static/lib/py.js/lib/py.js */
var py={};(function(py){var create=function(o,props){function F(){}
F.prototype=o;var inst=new F;if(props){for(var name in props){if(!props.hasOwnProperty(name)){continue;}
inst[name]=props[name];}}
return inst;};var symbols={};var comparators={};var Base={nud:function(){throw new Error(this.id+" undefined as prefix");},led:function(led){throw new Error(this.id+" undefined as infix");},toString:function(){if(this.id==='(constant)'||this.id==='(number)'||this.id==='(name)'||this.id==='(string)'){return[this.id.slice(0,this.id.length-1),' ',this.value,')'].join('');}else if(this.id==='(end)'){return'(end)';}else if(this.id==='(comparator)'){var repr=['(comparator',this.expressions[0]];for(var i=0;i<this.operators.length;++i){repr.push(this.operators[i],this.expressions[i+1]);}
return repr.join(' ')+')';}
var out=[this.id,this.first,this.second,this.third].filter(function(r){return r}).join(' ');return'('+out+')';}};function symbol(id,bp){bp=bp||0;var s=symbols[id];if(s){if(bp>s.lbp){s.lbp=bp;}
return s;}
return symbols[id]=create(Base,{id:id,lbp:bp});}
function constant(id){var s=symbol(id);s.id='(constant)';s.value=id;s.nud=function(){return this;};}
function prefix(id,bp,nud){symbol(id).nud=nud||function(){this.first=expression(bp);return this}}
function infix(id,bp,led){symbol(id,bp).led=led||function(left){this.first=left;this.second=expression(bp);return this;}}
function infixr(id,bp){symbol(id,bp).led=function(left){this.first=left;this.second=expression(bp-1);return this;}}
function comparator(id){comparators[id]=true;var bp=60;infix(id,bp,function(left){this.id='(comparator)';this.operators=[id];this.expressions=[left,expression(bp)];while(token.id in comparators){this.operators.push(token.id);advance();this.expressions.push(expression(bp));}
return this;});}
constant('None');constant('False');constant('True');symbol('(number)').nud=function(){return this;};symbol('(name)').nud=function(){return this;};symbol('(string)').nud=function(){return this;};symbol('(end)');symbol(':');symbol(')');symbol(']');symbol('}');symbol(',');symbol('else');infix('=',10,function(left){if(left.id!=='(name)'){throw new Error("Expected keyword argument name, got "+token.id);}
this.first=left;this.second=expression();return this;});symbol('lambda',20).nud=function(){this.first=[];if(token.id!==':'){for(;;){if(token.id!=='(name)'){throw new Error('Excepted an argument name');}
this.first.push(token);advance();if(token.id!==','){break;}
advance(',');}}
advance(':');this.second=expression();return this;};infix('if',20,function(left){this.ifTrue=left;this.condition=expression();advance('else');this.ifFalse=expression();return this;});infixr('or',30);infixr('and',40);prefix('not',50);comparator('in');comparator('not in');comparator('is');comparator('is not');comparator('<');comparator('<=');comparator('>');comparator('>=');comparator('<>');comparator('!=');comparator('==');infix('|',70);infix('^',80);infix('&',90);infix('<<',100);infix('>>',100);infix('+',110);infix('-',110);infix('*',120);infix('/',120);infix('//',120);infix('%',120);prefix('-',130);prefix('+',130);prefix('~',130);infixr('**',140);infix('.',150,function(left){if(token.id!=='(name)'){throw new Error('Expected attribute name, got '+token.id);}
this.first=left;this.second=token;advance();return this;});symbol('(',150).nud=function(){this.first=[];var comma=false;if(token.id!==')'){while(true){if(token.id===')'){break;}
this.first.push(expression());if(token.id!==','){break;}
comma=true;advance(',');}}
advance(')');if(!this.first.length||comma){return this;}else{return this.first[0];}};symbol('(').led=function(left){this.first=left;this.second=[];if(token.id!==")"){for(;;){this.second.push(expression());if(token.id!==','){break;}
advance(',');}}
advance(")");return this;};infix('[',150,function(left){this.first=left;this.second=expression();advance("]");return this;});symbol('[').nud=function(){this.first=[];if(token.id!==']'){for(;;){if(token.id===']'){break;}
this.first.push(expression());if(token.id!==','){break;}
advance(',');}}
advance(']');return this;};symbol('{').nud=function(){this.first=[];if(token.id!=='}'){for(;;){if(token.id==='}'){break;}
var key=expression();advance(':');var value=expression();this.first.push([key,value]);if(token.id!==','){break;}
advance(',');}}
advance('}');return this;};py.tokenize=(function(){function group(){return'('+Array.prototype.join.call(arguments,'|')+')';}
var Whitespace='[ \\f\\t]*';var Name='[a-zA-Z_]\\w*';var DecNumber='\\d+(L|l)?';var IntNumber=DecNumber;var Exponent='[eE][+-]?\\d+';var PointFloat=group(`\\d+\\.\\d*(${Exponent})?`,`\\.\\d+(${Exponent})?`);var FloatNumber=group(PointFloat,`\\d+${Exponent}`);var Number=group(FloatNumber,IntNumber);var Operator=group("\\*\\*=?",">>=?","<<=?","<>","!=","//=?","[+\\-*/%&|^=<>]=?","~");var Bracket='[\\[\\]\\(\\)\\{\\}]';var Special='[:;.,`@]';var Funny=group(Operator,Bracket,Special);var ContStr=group("([uU])?'([^\n'\\\\]*(?:\\\\.[^\n'\\\\]*)*)'",'([uU])?"([^\n"\\\\]*(?:\\\\.[^\n"\\\\]*)*)"');var PseudoToken=Whitespace+group(Number,Funny,ContStr,Name);var number_pattern=new RegExp('^'+Number+'$');var string_pattern=new RegExp('^'+ContStr+'$');var name_pattern=new RegExp('^'+Name+'$');var strip=new RegExp('^'+Whitespace);return function tokenize(s){var max=s.length,tokens=[],start,end;var pseudoprog=new RegExp(PseudoToken,'g');while(pseudoprog.lastIndex<max){var pseudomatch=pseudoprog.exec(s);if(!pseudomatch){if(/^\s+$/.test(s.slice(end))){break;}
throw new Error('Failed to tokenize <<'+s
+'>> at index '+(end||0)
+'; parsed so far: '+tokens);}
start=pseudomatch.index;end=pseudoprog.lastIndex;var token=s.slice(start,end).replace(strip,'');if(number_pattern.test(token)){tokens.push(create(symbols['(number)'],{value:parseFloat(token)}));}else if(string_pattern.test(token)){var m=string_pattern.exec(token);tokens.push(create(symbols['(string)'],{value:PY_decode_string_literal(m[3]!==undefined?m[3]:m[5],!!(m[2]||m[4]))}));}else if(token in symbols){var symbol;if(token==='in'&&tokens.length>1&&tokens[tokens.length-1].id==='not'){symbol=symbols['not in'];tokens.pop();}else if(token==='not'&&tokens.length>1&&tokens[tokens.length-1].id==='is'){symbol=symbols['is not'];tokens.pop();}else{symbol=symbols[token];}
tokens.push(create(symbol));}else if(name_pattern.test(token)){tokens.push(create(symbols['(name)'],{value:token}));}else{throw new Error("Tokenizing failure of <<"+s+">> at index "+start
+" for token [["+token+"]]"
+"; parsed so far: "+tokens);}}
tokens.push(create(symbols['(end)']));return tokens;}})();var token,next;function expression(rbp){rbp=rbp||0;var t=token;token=next();var left=t.nud();while(rbp<token.lbp){t=token;token=next();left=t.led(left);}
return left;}
function advance(id){if(id&&token.id!==id){throw new Error('Expected "'+id+'", got "'+token.id+'"');}
token=next();}
function PY_ensurepy(val,name){switch(val){case undefined:throw new Error("NameError: name '"+name+"' is not defined");case null:return py.None;case true:return py.True;case false:return py.False;}
var fn=function(){};fn.prototype=py.object;if(py.PY_isInstance(val,py.object)||py.PY_isSubclass(val,py.object)){return val;}
switch(typeof val){case'number':return py.float.fromJSON(val);case'string':return py.str.fromJSON(val);case'function':return py.PY_def.fromJSON(val);}
switch(val.constructor){case Object:var o=py.PY_call(py.object);for(var prop in val){if(val.hasOwnProperty(prop)){o[prop]=val[prop];}}
return o;case Array:return py.list.fromJSON(val);}
throw new Error("Could not convert "+val+" to a pyval");}
var typename=function(obj){if(obj.__class__){return obj.__class__.__name__;}else if(typeof obj!=='object'){return typeof obj;}else{return obj.constructor.name;}};py.py={};py.PY_parseArgs=function PY_parseArgs(argument,format){var out={};var args=argument[0];var kwargs={};for(var k in argument[1]){if(!argument[1].hasOwnProperty(k)){continue;}
kwargs[k]=argument[1][k];}
if(typeof format==='string'){format=format.split(/\s+/);}
var name=function(spec){if(typeof spec==='string'){return spec;}else if(spec instanceof Array&&spec.length===2){return spec[0];}
throw new Error("TypeError: unknown format specification "+
JSON.stringify(spec));};var spec;for(var i=0;i<args.length;++i){spec=format[i];if(!spec||spec==='*'){throw new Error("TypeError: function takes exactly "+(i-1)+" positional arguments ("+args.length+" given")}else if(/^\*\w/.test(spec)){out[name(spec.slice(1))]=args.slice(i);break;}
out[name(spec)]=args[i];}
for(var j=i;j<format.length;++j){spec=format[j];var n=name(spec);if(n in out){throw new Error("TypeError: function got multiple values "+"for keyword argument '"+kwarg+"'");}
if(/^\*\*\w/.test(n)){out[n.slice(2)]=kwargs;kwargs={};break;}
if(n in kwargs){out[n]=kwargs[n];delete kwargs[n];}}
for(var key in kwargs){throw new Error("TypeError: function got an unexpected keyword argument '"
+key+"'");}
var kwonly=0;for(var k=0;k<format.length;++k){if(/^\*/.test(format[k])){kwonly=1;break;}}
for(var k=0;k<format.length;++k){spec=format[k];var n=name(spec);if(/^\*/.test(n)||n in out){continue;}
if(!(spec instanceof Array)){throw new Error("TypeError: function takes exactly "+(format.length-kwonly)
+" arguments");}
out[n]=spec[1];}
return out;};py.PY_hasAttr=function(o,attr_name){try{py.PY_getAttr(o,attr_name);return true;}catch(e){return false;}};py.PY_getAttr=function(o,attr_name){return PY_ensurepy(o.__getattribute__(attr_name));};py.PY_str=function(o){var v=o.__str__();if(py.PY_isInstance(v,py.str)){return v;}
throw new Error('TypeError: __str__ returned non-string (type '
+typename(v)
+')');};py.PY_isInstance=function(inst,cls){var fn=function(){};fn.prototype=cls;return inst instanceof fn;};py.PY_isSubclass=function(derived,cls){var fn=function(){};fn.prototype=cls;return derived===cls||derived instanceof fn;};py.PY_call=function(callable,args,kwargs){if(!args){args=[];}
if(typeof args==='object'&&!(args instanceof Array)){kwargs=args;args=[];}
if(!kwargs){kwargs={};}
if(callable.__is_type){var instance=callable.__new__.call(callable,args,kwargs);var typ=function(){};typ.prototype=callable;if(instance instanceof typ){instance.__init__.call(instance,args,kwargs);}
return instance}
return callable.__call__(args,kwargs);};py.PY_isTrue=function(o){var res=o.__nonzero__();if(res===py.True){return true;}
if(res===py.False){return false;}
throw new Error("TypeError: __nonzero__ should return bool, returned "
+typename(res));};py.PY_not=function(o){return!py.PY_isTrue(o);};py.PY_size=function(o){if(!o.__len__){throw new Error("TypeError: object of type '"+
typename(o)+"' has no len()");}
var v=o.__len__();if(typeof v!=='number'){throw new Error("TypeError: a number is required");}
return v;};py.PY_getItem=function(o,key){if(!('__getitem__'in o)){throw new Error("TypeError: '"+typename(o)+"' object is unsubscriptable")}
if(!py.PY_isInstance(key,py.object)){throw new Error("TypeError: '"+typename(key)+"' is not a py.js object");}
var res=o.__getitem__(key);if(!py.PY_isInstance(key,py.object)){throw new Error("TypeError: __getitem__ must return a py.js object, got "
+typename(res));}
return res;};py.PY_setItem=function(o,key,v){if(!('__setitem__'in o)){throw new Error("TypeError: '"+typename(o)+"' object does not support item assignment");}
if(!py.PY_isInstance(key,py.object)){throw new Error("TypeError: '"+typename(key)+"' is not a py.js object");}
if(!py.PY_isInstance(v,py.object)){throw new Error("TypeError: '"+typename(v)+"' is not a py.js object");}
o.__setitem__(key,v);};py.PY_add=function(o1,o2){return PY_op(o1,o2,'+');};py.PY_subtract=function(o1,o2){return PY_op(o1,o2,'-');};py.PY_multiply=function(o1,o2){return PY_op(o1,o2,'*');};py.PY_divide=function(o1,o2){return PY_op(o1,o2,'/');};py.PY_negative=function(o){if(!o.__neg__){throw new Error("TypeError: bad operand for unary -: '"
+typename(o)
+"'");}
return o.__neg__();};py.PY_positive=function(o){if(!o.__pos__){throw new Error("TypeError: bad operand for unary +: '"
+typename(o)
+"'");}
return o.__pos__();};py.type=function type(name,bases,dict){if(typeof name!=='string'){throw new Error("ValueError: a class name should be a string");}
if(!bases||bases.length===0){bases=[py.object];}else if(bases.length>1){throw new Error("ValueError: can't provide multiple bases for a "
+"new type");}
var base=bases[0];var ClassObj=create(base);if(dict){for(var k in dict){if(!dict.hasOwnProperty(k)){continue;}
ClassObj[k]=dict[k];}}
ClassObj.__class__=ClassObj;ClassObj.__name__=name;ClassObj.__bases__=bases;ClassObj.__is_type=true;return ClassObj;};py.type.__call__=function(){var args=py.PY_parseArgs(arguments,['object']);return args.object.__class__;};var hash_counter=0;py.object=py.type('object',[{}],{__new__:function(){var inst=create(this);inst.__is_type=false;return inst;},__init__:function(){},__hash__:function(){if(this._hash){return this._hash;}
return this._hash='\0\0\0'+String(hash_counter++);},__eq__:function(other){return(this===other)?py.True:py.False;},__ne__:function(other){if(py.PY_isTrue(this.__eq__(other))){return py.False;}else{return py.True;}},__lt__:function(){return py.NotImplemented;},__le__:function(){return py.NotImplemented;},__ge__:function(){return py.NotImplemented;},__gt__:function(){return py.NotImplemented;},__str__:function(){return this.__unicode__();},__unicode__:function(){return py.str.fromJSON('<'+typename(this)+' object>');},__nonzero__:function(){return py.True;},__getattribute__:function(name){if(name in this){var val=this[name];if(typeof val==='object'&&'__get__'in val){return val.__get__(this,py.PY_call(py.type,[this]));}
if(typeof val==='function'&&!this.hasOwnProperty(name)){return PY_instancemethod.fromJSON(val,this);}
return val;}
if('__getattr__'in this){return this.__getattr__(name);}
throw new Error("AttributeError: object has no attribute '"+name+"'");},__setattr__:function(name,value){if(name in this&&'__set__'in this[name]){this[name].__set__(this,value);}
this[name]=value;},toJSON:function(){throw new Error(this.constructor.name+' can not be converted to JSON');}});var NoneType=py.type('NoneType',null,{__nonzero__:function(){return py.False;},toJSON:function(){return null;}});py.None=py.PY_call(NoneType);var NotImplementedType=py.type('NotImplementedType',null,{});py.NotImplemented=py.PY_call(NotImplementedType);var booleans_initialized=false;py.bool=py.type('bool',null,{__new__:function(){if(!booleans_initialized){return py.object.__new__.apply(this);}
var ph={};var args=py.PY_parseArgs(arguments,[['value',ph]]);if(args.value===ph){return py.False;}
return py.PY_isTrue(args.value)?py.True:py.False;},__str__:function(){return py.str.fromJSON((this===py.True)?"True":"False");},__nonzero__:function(){return this;},fromJSON:function(val){return val?py.True:py.False},toJSON:function(){return this===py.True;}});py.True=py.PY_call(py.bool);py.False=py.PY_call(py.bool);booleans_initialized=true;py.float=py.type('float',null,{__init__:function(){var placeholder={};var args=py.PY_parseArgs(arguments,[['value',placeholder]]);var value=args.value;if(value===placeholder){this._value=0;return;}
if(py.PY_isInstance(value,py.float)){this._value=value._value;}
if(py.PY_isInstance(value,py.object)&&'__float__'in value){var res=value.__float__();if(py.PY_isInstance(res,py.float)){this._value=res._value;return;}
throw new Error('TypeError: __float__ returned non-float (type '+
typename(res)+')');}
throw new Error('TypeError: float() argument must be a string or a number');},__str__:function(){return py.str.fromJSON(String(this._value));},__eq__:function(other){return this._value===other._value?py.True:py.False;},__lt__:function(other){if(!py.PY_isInstance(other,py.float)){return py.NotImplemented;}
return this._value<other._value?py.True:py.False;},__le__:function(other){if(!py.PY_isInstance(other,py.float)){return py.NotImplemented;}
return this._value<=other._value?py.True:py.False;},__gt__:function(other){if(!py.PY_isInstance(other,py.float)){return py.NotImplemented;}
return this._value>other._value?py.True:py.False;},__ge__:function(other){if(!py.PY_isInstance(other,py.float)){return py.NotImplemented;}
return this._value>=other._value?py.True:py.False;},__abs__:function(){return py.float.fromJSON(Math.abs(this._value));},__add__:function(other){if(!py.PY_isInstance(other,py.float)){return py.NotImplemented;}
return py.float.fromJSON(this._value+other._value);},__mod__:function(other){if(!py.PY_isInstance(other,py.float)){return py.NotImplemented;}
return py.float.fromJSON(this._value%other._value);},__neg__:function(){return py.float.fromJSON(-this._value);},__sub__:function(other){if(!py.PY_isInstance(other,py.float)){return py.NotImplemented;}
return py.float.fromJSON(this._value-other._value);},__mul__:function(other){if(!py.PY_isInstance(other,py.float)){return py.NotImplemented;}
return py.float.fromJSON(this._value*other._value);},__pow__:function(other){if(!py.PY_isInstance(other,py.float)){return py.NotImplemented;}
return py.float.fromJSON(this._value**other._value);},__div__:function(other){if(!py.PY_isInstance(other,py.float)){return py.NotImplemented;}
return py.float.fromJSON(this._value/other._value);},__nonzero__:function(){return this._value?py.True:py.False;},fromJSON:function(v){if(!(typeof v==='number')){throw new Error('py.float.fromJSON can only take numbers');}
var instance=py.PY_call(py.float);instance._value=v;return instance;},toJSON:function(){return this._value;}});py.str=py.type('str',null,{__init__:function(){var placeholder={};var args=py.PY_parseArgs(arguments,[['value',placeholder]]);var s=args.value;if(s===placeholder){this._value='';return;}
this._value=py.PY_str(s)._value;},__hash__:function(){return'\1\0\1'+this._value;},__str__:function(){return this;},__eq__:function(other){if(py.PY_isInstance(other,py.str)&&this._value===other._value){return py.True;}
return py.False;},__lt__:function(other){if(py.PY_not(py.PY_call(py.isinstance,[other,py.str]))){return py.NotImplemented;}
return this._value<other._value?py.True:py.False;},__le__:function(other){if(!py.PY_isInstance(other,py.str)){return py.NotImplemented;}
return this._value<=other._value?py.True:py.False;},__gt__:function(other){if(!py.PY_isInstance(other,py.str)){return py.NotImplemented;}
return this._value>other._value?py.True:py.False;},__ge__:function(other){if(!py.PY_isInstance(other,py.str)){return py.NotImplemented;}
return this._value>=other._value?py.True:py.False;},__add__:function(other){if(!py.PY_isInstance(other,py.str)){return py.NotImplemented;}
return py.str.fromJSON(this._value+other._value);},__nonzero__:function(){return this._value.length?py.True:py.False;},__contains__:function(s){return(this._value.indexOf(s._value)!==-1)?py.True:py.False;},fromJSON:function(s){if(typeof s==='string'){var instance=py.PY_call(py.str);instance._value=s;return instance;}
throw new Error("str.fromJSON can only take strings");},toJSON:function(){return this._value;}});py.tuple=py.type('tuple',null,{__init__:function(){this._values=[];},__len__:function(){return this._values.length;},__nonzero__:function(){return py.PY_size(this)>0?py.True:py.False;},__contains__:function(value){for(var i=0,len=this._values.length;i<len;++i){if(py.PY_isTrue(this._values[i].__eq__(value))){return py.True;}}
return py.False;},__getitem__:function(index){return this._values[index.toJSON()];},toJSON:function(){var out=[];for(var i=0;i<this._values.length;++i){out.push(this._values[i].toJSON());}
return out;},fromJSON:function(ar){if(!(ar instanceof Array)){throw new Error("Can only create a py.tuple from an Array");}
var t=py.PY_call(py.tuple);for(var i=0;i<ar.length;++i){t._values.push(PY_ensurepy(ar[i]));}
return t;}});py.list=py.type('list',null,{__nonzero__:function(){return this.__len__>0?py.True:py.False;},});_.defaults(py.list,py.tuple)
py.dict=py.type('dict',null,{__init__:function(){this._store={};},__getitem__:function(key){var h=key.__hash__();if(!(h in this._store)){throw new Error("KeyError: '"+key.toJSON()+"'");}
return this._store[h][1];},__setitem__:function(key,value){this._store[key.__hash__()]=[key,value];},__len__:function(){return Object.keys(this._store).length},__nonzero__:function(){return py.PY_size(this)>0?py.True:py.False;},get:function(){var args=py.PY_parseArgs(arguments,['k',['d',py.None]]);var h=args.k.__hash__();if(!(h in this._store)){return args.d;}
return this._store[h][1];},fromJSON:function(d){var instance=py.PY_call(py.dict);for(var k in(d||{})){if(!d.hasOwnProperty(k)){continue;}
instance.__setitem__(py.str.fromJSON(k),PY_ensurepy(d[k]));}
return instance;},toJSON:function(){var out={};for(var k in this._store){var item=this._store[k];out[item[0].toJSON()]=item[1].toJSON();}
return out;}});py.PY_def=py.type('function',null,{__call__:function(){return this._func.apply(this._inst,arguments);},fromJSON:function(nativefunc){var instance=py.PY_call(py.PY_def);instance._inst=null;instance._func=nativefunc;return instance;},toJSON:function(){return this._func;}});py.classmethod=py.type('classmethod',null,{__init__:function(){var args=py.PY_parseArgs(arguments,'function');this._func=args['function'];},__get__:function(obj,type){return PY_instancemethod.fromJSON(this._func,type);},fromJSON:function(func){return py.PY_call(py.classmethod,[func]);}});var PY_instancemethod=py.type('instancemethod',[py.PY_def],{fromJSON:function(nativefunc,instance){var inst=py.PY_call(PY_instancemethod);inst._inst=instance;inst._func=nativefunc;return inst;}});py.abs=new py.PY_def.fromJSON(function abs(){var args=py.PY_parseArgs(arguments,['number']);if(!args.number.__abs__){throw new Error("TypeError: bad operand type for abs(): '"
+typename(args.number)
+"'");}
return args.number.__abs__();});py.len=new py.PY_def.fromJSON(function len(){var args=py.PY_parseArgs(arguments,['object']);return py.float.fromJSON(py.PY_size(args.object));});py.isinstance=new py.PY_def.fromJSON(function isinstance(){var args=py.PY_parseArgs(arguments,['object','class']);return py.PY_isInstance(args.object,args['class'])?py.True:py.False;});py.issubclass=new py.PY_def.fromJSON(function issubclass(){var args=py.PY_parseArgs(arguments,['C','B']);return py.PY_isSubclass(args.C,args.B)?py.True:py.False;});var PY_decode_string_literal=function(str,unicode){var out=[],code;var direct_map={'\\':'\\','"':'"',"'":"'",'a':'\x07','b':'\x08','f':'\x0c','n':'\n','r':'\r','t':'\t','v':'\v'};for(var i=0;i<str.length;++i){if(str[i]!=='\\'){out.push(str[i]);continue;}
var escape=str[i+1];if(escape in direct_map){out.push(direct_map[escape]);++i;continue;}
switch(escape){case'\n':++i;continue;case'N':if(!unicode){break;}
throw Error("SyntaxError: \\N{} escape not implemented");case'u':if(!unicode){break;}
var uni=str.slice(i+2,i+6);if(!/[0-9a-f]{4}/i.test(uni)){throw new Error(["SyntaxError: (unicode error) 'unicodeescape' codec"," can't decode bytes in position ",i,"-",i+4,": truncated \\uXXXX escape"].join(''));}
code=parseInt(uni,16);out.push(String.fromCharCode(code));i+=5;continue;case'U':if(!unicode){break;}
throw Error("SyntaxError: \\U escape not implemented");case'x':var hex=str.slice(i+2,i+4);if(!/[0-9a-f]{2}/i.test(hex)){if(!unicode){throw new Error('ValueError: invalid \\x escape');}
throw new Error(["SyntaxError: (unicode error) 'unicodeescape'"," codec can't decode bytes in position ",i,'-',i+2,": truncated \\xXX escape"].join(''))}
code=parseInt(hex,16);out.push(String.fromCharCode(code));i+=3;continue;default:if(!/[0-8]/.test(escape)){break;}
var r=/[0-8]{1,3}/g;r.lastIndex=i+1;var m=r.exec(str);var oct=m[0];code=parseInt(oct,8);out.push(String.fromCharCode(code));i+=oct.length;continue;}
out.push('\\');}
return out.join('');};var PY_operators={'==':['eq','eq',function(a,b){return a===b;}],'!=':['ne','ne',function(a,b){return a!==b;}],'<>':['ne','ne',function(a,b){return a!==b;}],'<':['lt','gt',function(a,b){return a.__class__.__name__<b.__class__.__name__;}],'<=':['le','ge',function(a,b){return a.__class__.__name__<=b.__class__.__name__;}],'>':['gt','lt',function(a,b){return a.__class__.__name__>b.__class__.__name__;}],'>=':['ge','le',function(a,b){return a.__class__.__name__>=b.__class__.__name__;}],'+':['add','radd'],'-':['sub','rsub'],'*':['mul','rmul'],'/':['div','rdiv'],'//':['floordiv','rfloordiv'],'%':['mod','rmod'],'**':['pow','rpow'],'<<':['lshift','rlshift'],'>>':['rshift','rrshift'],'&':['and','rand'],'^':['xor','rxor'],'|':['or','ror']};var PY_op=function(o1,o2,op){var r;var methods=PY_operators[op];var forward='__'+methods[0]+'__',reverse='__'+methods[1]+'__';var otherwise=methods[2];if(forward in o1&&(r=o1[forward](o2))!==py.NotImplemented){return r;}
if(reverse in o2&&(r=o2[reverse](o1))!==py.NotImplemented){return r;}
if(otherwise){return PY_ensurepy(otherwise(o1,o2));}
throw new Error("TypeError: unsupported operand type(s) for "+op+": '"
+typename(o1)+"' and '"+typename(o2)+"'");};var PY_builtins={type:py.type,None:py.None,True:py.True,False:py.False,NotImplemented:py.NotImplemented,object:py.object,bool:py.bool,float:py.float,str:py.str,unicode:py.unicode,tuple:py.tuple,list:py.list,dict:py.dict,abs:py.abs,len:py.len,isinstance:py.isinstance,issubclass:py.issubclass,classmethod:py.classmethod,};py.parse=function(toks){var index=0;token=toks[0];next=function(){return toks[++index];};return expression();};var evaluate_operator=function(operator,a,b){switch(operator){case'is':return a===b?py.True:py.False;case'is not':return a!==b?py.True:py.False;case'in':return b.__contains__(a);case'not in':return py.PY_isTrue(b.__contains__(a))?py.False:py.True;case'==':case'!=':case'<>':case'<':case'<=':case'>':case'>=':return PY_op(a,b,operator);}
throw new Error('SyntaxError: unknown comparator [['+operator+']]');};py.evaluate=function(expr,context){context=context||{};switch(expr.id){case'(name)':var val=context[expr.value];if(val===undefined&&expr.value in PY_builtins){return PY_builtins[expr.value];}
return PY_ensurepy(val,expr.value);case'(string)':return py.str.fromJSON(expr.value);case'(number)':return py.float.fromJSON(expr.value);case'(constant)':switch(expr.value){case'None':return py.None;case'False':return py.False;case'True':return py.True;}
throw new Error("SyntaxError: unknown constant '"+expr.value+"'");case'(comparator)':var result,left=py.evaluate(expr.expressions[0],context);for(var i=0;i<expr.operators.length;++i){result=evaluate_operator(expr.operators[i],left,left=py.evaluate(expr.expressions[i+1],context));if(py.PY_not(result)){return py.False;}}
return py.True;case'not':return py.PY_isTrue(py.evaluate(expr.first,context))?py.False:py.True;case'and':var and_first=py.evaluate(expr.first,context);if(py.PY_isTrue(and_first.__nonzero__())){return py.evaluate(expr.second,context);}
return and_first;case'or':var or_first=py.evaluate(expr.first,context);if(py.PY_isTrue(or_first.__nonzero__())){return or_first}
return py.evaluate(expr.second,context);case'if':var cond=py.evaluate(expr.condition,context);if(py.PY_isTrue(cond)){return py.evaluate(expr.ifTrue,context);}else{return py.evaluate(expr.ifFalse,context);}
case'(':if(expr.second){var callable=py.evaluate(expr.first,context);var args=[],kwargs={};for(var jj=0;jj<expr.second.length;++jj){var arg=expr.second[jj];if(arg.id!=='='){args.push(py.evaluate(arg,context));}else{kwargs[arg.first.value]=py.evaluate(arg.second,context);}}
return py.PY_call(callable,args,kwargs);}
var tuple_exprs=expr.first,tuple_values=[];for(var j=0,len=tuple_exprs.length;j<len;++j){tuple_values.push(py.evaluate(tuple_exprs[j],context));}
return py.tuple.fromJSON(tuple_values);case'[':if(expr.second){return py.PY_getItem(py.evaluate(expr.first,context),py.evaluate(expr.second,context));}
var list_exprs=expr.first,list_values=[];for(var k=0;k<list_exprs.length;++k){list_values.push(py.evaluate(list_exprs[k],context));}
return py.list.fromJSON(list_values);case'{':var dict_exprs=expr.first,dict=py.PY_call(py.dict);for(var l=0;l<dict_exprs.length;++l){py.PY_setItem(dict,py.evaluate(dict_exprs[l][0],context),py.evaluate(dict_exprs[l][1],context));}
return dict;case'.':if(expr.second.id!=='(name)'){throw new Error('SyntaxError: '+expr);}
return py.PY_getAttr(py.evaluate(expr.first,context),expr.second.value);case'~':return(py.evaluate(expr.first,context)).__invert__();case'+':if(!expr.second){return py.PY_positive(py.evaluate(expr.first,context));}
case'-':if(!expr.second){return py.PY_negative(py.evaluate(expr.first,context));}
case'*':case'/':case'//':case'%':case'**':case'<<':case'>>':case'&':case'^':case'|':return PY_op(py.evaluate(expr.first,context),py.evaluate(expr.second,context),expr.id);default:throw new Error('SyntaxError: Unknown node [['+expr.id+']]');}};py.eval=function(str,context){return py.evaluate(py.parse(py.tokenize(str)),context).toJSON();}})(typeof exports==='undefined'?py:exports);;

/* /web/static/lib/py.js/lib/py_extras.js */
(function(py){"use strict";function divmod(a,b,fn){var mod=a%b;if(mod>0&&b<0||mod<0&&b>0){mod+=b;}
return fn(Math.floor(a/b),mod);}
function modf(x,fn){var mod=x%1;if(mod<0){mod+=1;}
return fn(mod,Math.floor(x));}
function assert(bool){if(!bool){throw new Error("AssertionError");}}
var obj=function(){};obj.prototype=py.object;var asJS=function(arg){if(arg instanceof obj){return arg.toJSON();}
return arg;};var datetime=py.PY_call(py.object);var zero=py.float.fromJSON(0);var DAYS_IN_MONTH=[null,31,28,31,30,31,30,31,31,30,31,30,31];var DAYS_BEFORE_MONTH=[null];var dbm=0;for(var i=1;i<DAYS_IN_MONTH.length;++i){DAYS_BEFORE_MONTH.push(dbm);dbm+=DAYS_IN_MONTH[i];}
function is_leap(year){return year%4===0&&(year%100!==0||year%400===0);}
function days_before_year(year){var y=year-1;return y*365+Math.floor(y/4)-Math.floor(y/100)+Math.floor(y/400);}
function days_in_month(year,month){if(month===2&&is_leap(year)){return 29;}
return DAYS_IN_MONTH[month];}
function days_before_month(year,month){var post_leap_feb=month>2&&is_leap(year);return DAYS_BEFORE_MONTH[month]+(post_leap_feb?1:0);}
function ymd2ord(year,month,day){var dim=days_in_month(year,month);if(!(1<=day&&day<=dim)){throw new Error("ValueError: day must be in 1.."+dim);}
return days_before_year(year)+
days_before_month(year,month)+
day;}
function get_quarter_number(month){return Math.ceil(month/3);}
function get_quarter(year,month){var quarter_number=get_quarter_number(month);var month_from=((quarter_number-1)*3)+1
var date_from={year:year,month:month_from,day:1}
var date_to={year:year,month:month_from+2,day:days_in_month(year,month)}
return[date_from,date_to];}
function get_day_of_week(year,month,day){var d=new Date(year,month-1,day);return(d.getDay()+6)%7;}
var DI400Y=days_before_year(401);var DI100Y=days_before_year(101);var DI4Y=days_before_year(5);function ord2ymd(n){--n;var n400,n100,n4,n1,n0;divmod(n,DI400Y,function(_n400,n){n400=_n400;divmod(n,DI100Y,function(_n100,n){n100=_n100;divmod(n,DI4Y,function(_n4,n){n4=_n4;divmod(n,365,function(_n1,n){n1=_n1;n0=n;});});});});n=n0;var year=n400*400+1+n100*100+n4*4+n1;if(n1==4||n100==100){assert(n0===0);return{year:year-1,month:12,day:31};}
var leapyear=n1===3&&(n4!==24||n100==3);assert(leapyear==is_leap(year));var month=(n+50)>>5;var preceding=DAYS_BEFORE_MONTH[month]+((month>2&&leapyear)?1:0);if(preceding>n){--month;preceding-=DAYS_IN_MONTH[month]+((month===2&&leapyear)?1:0);}
n-=preceding;return{year:year,month:month,day:n+1};}
function tmxxx(year,month,day,hour,minute,second,microsecond){hour=hour||0;minute=minute||0;second=second||0;microsecond=microsecond||0;if(microsecond<0||microsecond>999999){divmod(microsecond,1000000,function(carry,ms){microsecond=ms;second+=carry;});}
if(second<0||second>59){divmod(second,60,function(carry,s){second=s;minute+=carry;});}
if(minute<0||minute>59){divmod(minute,60,function(carry,m){minute=m;hour+=carry;});}
if(hour<0||hour>23){divmod(hour,24,function(carry,h){hour=h;day+=carry;});}
if(month<1||month>12){divmod(month-1,12,function(carry,m){month=m+1;year+=carry;});}
var dim=days_in_month(year,month);if(day<1||day>dim){if(day===0){--month;if(month>0){day=days_in_month(year,month);}else{--year;month=12;day=31;}}else if(day==dim+1){++month;day=1;if(month>12){month=1;++year;}}else{var r=ord2ymd(ymd2ord(year,month,1)+(day-1));year=r.year;month=r.month;day=r.day;}}
return{year:year,month:month,day:day,hour:hour,minute:minute,second:second,microsecond:microsecond};}
datetime.timedelta=py.type('timedelta',null,{__init__:function(){var args=py.PY_parseArgs(arguments,[['days',zero],['seconds',zero],['microseconds',zero],['milliseconds',zero],['minutes',zero],['hours',zero],['weeks',zero]]);var d=0,s=0,m=0;var days=args.days.toJSON()+args.weeks.toJSON()*7;var seconds=args.seconds.toJSON()
+args.minutes.toJSON()*60
+args.hours.toJSON()*3600;var microseconds=args.microseconds.toJSON()
+args.milliseconds.toJSON()*1000;var daysecondsfrac=modf(days,function(dayfrac,days){d=days;if(dayfrac){return modf(dayfrac*24*3600,function(dsf,dsw){s=dsw;return dsf;});}
return 0;});var secondsfrac=modf(seconds,function(sf,s){seconds=s;return sf+daysecondsfrac;});divmod(seconds,24*3600,function(days,seconds){d+=days;s+=seconds;});microseconds+=secondsfrac*1e6;divmod(microseconds,1000000,function(seconds,microseconds){divmod(seconds,24*3600,function(days,seconds){d+=days;s+=seconds;m+=Math.round(microseconds);});});this.days=d;this.seconds=s;this.microseconds=m;},__str__:function(){var hh,mm,ss;divmod(this.seconds,60,function(m,s){divmod(m,60,function(h,m){hh=h;mm=m;ss=s;});});var s=_.str.sprintf("%d:%02d:%02d",hh,mm,ss);if(this.days){s=_.str.sprintf("%d day%s, %s",this.days,(this.days!=1&&this.days!=-1)?'s':'',s);}
if(this.microseconds){s=_.str.sprintf("%s.%06d",s,this.microseconds);}
return py.str.fromJSON(s);},__eq__:function(other){if(!py.PY_isInstance(other,datetime.timedelta)){return py.False;}
return(this.days===other.days&&this.seconds===other.seconds&&this.microseconds===other.microseconds)?py.True:py.False;},__add__:function(other){if(!py.PY_isInstance(other,datetime.timedelta)){return py.NotImplemented;}
return py.PY_call(datetime.timedelta,[py.float.fromJSON(this.days+other.days),py.float.fromJSON(this.seconds+other.seconds),py.float.fromJSON(this.microseconds+other.microseconds)]);},__radd__:function(other){return this.__add__(other);},__sub__:function(other){if(!py.PY_isInstance(other,datetime.timedelta)){return py.NotImplemented;}
return py.PY_call(datetime.timedelta,[py.float.fromJSON(this.days-other.days),py.float.fromJSON(this.seconds-other.seconds),py.float.fromJSON(this.microseconds-other.microseconds)]);},__rsub__:function(other){if(!py.PY_isInstance(other,datetime.timedelta)){return py.NotImplemented;}
return this.__neg__().__add__(other);},__neg__:function(){return py.PY_call(datetime.timedelta,[py.float.fromJSON(-this.days),py.float.fromJSON(-this.seconds),py.float.fromJSON(-this.microseconds)]);},__pos__:function(){return this;},__mul__:function(other){if(!py.PY_isInstance(other,py.float)){return py.NotImplemented;}
var n=other.toJSON();return py.PY_call(datetime.timedelta,[py.float.fromJSON(this.days*n),py.float.fromJSON(this.seconds*n),py.float.fromJSON(this.microseconds*n)]);},__rmul__:function(other){return this.__mul__(other);},__div__:function(other){if(!py.PY_isInstance(other,py.float)){return py.NotImplemented;}
var usec=((this.days*24*3600)+this.seconds)*1000000
+this.microseconds;return py.PY_call(datetime.timedelta,[zero,zero,py.float.fromJSON(usec/other.toJSON())]);},__floordiv__:function(other){return this.__div__(other);},total_seconds:function(){return py.float.fromJSON(this.days*86400
+this.seconds
+this.microseconds/1000000);},__nonzero__:function(){return(!!this.days||!!this.seconds||!!this.microseconds)?py.True:py.False;}});datetime.datetime=py.type('datetime',null,{__init__:function(){var zero=py.float.fromJSON(0);var args=py.PY_parseArgs(arguments,['year','month','day',['hour',zero],['minute',zero],['second',zero],['microsecond',zero],['tzinfo',py.None]]);for(var key in args){if(!args.hasOwnProperty(key)){continue;}
this[key]=asJS(args[key]);}},__eq__:function(other){return(this.year===other.year&&this.month===other.month&&this.day===other.day&&this.hour===other.hour&&this.minute===other.minute&&this.second===other.second&&this.microsecond===other.microsecond&&this.tzinfo===other.tzinfo)?py.True:py.False;},replace:function(){var args=py.PY_parseArgs(arguments,[['year',py.None],['month',py.None],['day',py.None],['hour',py.None],['minute',py.None],['second',py.None],['microsecond',py.None]]);var params={};for(var key in args){if(!args.hasOwnProperty(key)){continue;}
var arg=args[key];params[key]=(arg===py.None?this[key]:asJS(arg));}
return py.PY_call(datetime.datetime,params);},start_of:function(){var args=py.PY_parseArgs(arguments,'granularity');var granularity=args.granularity.toJSON();if(granularity==='year'){return py.PY_call(datetime.datetime,[this.year,1,1]);}else if(granularity==='quarter'){var quarter=get_quarter(this.year,this.month)[0];return py.PY_call(datetime.datetime,[quarter.year,quarter.month,quarter.day]);}else if(granularity==='month'){return py.PY_call(datetime.datetime,[this.year,this.month,1]);}else if(granularity==='week'){var dow=get_day_of_week(this.year,this.month,this.day);return py.PY_call(datetime.datetime,[this.year,this.month,this.day-dow]);}else if(granularity==='day'){return py.PY_call(datetime.datetime,[this.year,this.month,this.day]);}else if(granularity==='hour'){return py.PY_call(datetime.datetime,[this.year,this.month,this.day,this.hour]);}else{throw new Error('ValueError: '+granularity+' is not a supported granularity, supported '+' granularities are: year, quarter, month, week, day and hour.')}},end_of:function(){var args=py.PY_parseArgs(arguments,'granularity');var granularity=args.granularity.toJSON();var min=[23,59,59];if(granularity==='year'){return py.PY_call(datetime.datetime,[this.year,12,31].concat(min));}else if(granularity==='quarter'){var quarter=get_quarter(this.year,this.month)[1];return py.PY_call(datetime.datetime,[quarter.year,quarter.month,quarter.day].concat(min));}else if(granularity==='month'){var dom=days_in_month(this.year,this.month);return py.PY_call(datetime.datetime,[this.year,this.month,dom].concat(min));}else if(granularity==='week'){var dow=get_day_of_week(this.year,this.month,this.day);return py.PY_call(datetime.datetime,[this.year,this.month,this.day+(6-dow)].concat(min));}else if(granularity==='day'){return py.PY_call(datetime.datetime,[this.year,this.month,this.day].concat(min));}else if(granularity==='hour'){return py.PY_call(datetime.datetime,[this.year,this.month,this.day,this.hour,59,59]);}else{throw new Error('ValueError: '+granularity+' is not a supported granularity, supported '+' granularities are: year, quarter, month, week, day and hour.')}},add:function(){var args=py.PY_parseArgs(arguments,[['years',py.None],['months',py.None],['days',py.None],['hours',py.None],['minutes',py.None],['seconds',py.None],]);return py.PY_add(this,py.PY_call(relativedelta,{'years':args.years,'months':args.months,'days':args.days,'hours':args.hours,'minutes':args.minutes,'seconds':args.seconds,}));},subtract:function(){var args=py.PY_parseArgs(arguments,[['years',py.None],['months',py.None],['days',py.None],['hours',py.None],['minutes',py.None],['seconds',py.None],]);var params={};for(var key in args){params[key]=(args[key]===py.None?args[key]:py.float.fromJSON(-asJS(args[key])));}
return py.PY_add(this,py.PY_call(relativedelta,params));},strftime:function(){var self=this;var args=py.PY_parseArgs(arguments,'format');return py.str.fromJSON(args.format.toJSON().replace(/%([A-Za-z])/g,function(m,c){switch(c){case'Y':return _.str.sprintf('%04d',self.year);case'm':return _.str.sprintf('%02d',self.month);case'd':return _.str.sprintf('%02d',self.day);case'H':return _.str.sprintf('%02d',self.hour);case'M':return _.str.sprintf('%02d',self.minute);case'S':return _.str.sprintf('%02d',self.second);}
throw new Error('ValueError: No known conversion for '+m);}));},to_utc:function(){var d=new Date(this.year,this.month-1,this.day,this.hour,this.minute,this.second);var offset=d.getTimezoneOffset();var kwargs={minutes:py.float.fromJSON(offset)};var timedelta=py.PY_call(py.extras.datetime.timedelta,[],kwargs);var s=tmxxx(this.year,this.month,this.day+timedelta.days,this.hour,this.minute,this.second+timedelta.seconds);return datetime.datetime.fromJSON(s.year,s.month,s.day,s.hour,s.minute,s.second);},now:py.classmethod.fromJSON(function(){var d=new Date();return py.PY_call(datetime.datetime,[d.getFullYear(),d.getMonth()+1,d.getDate(),d.getHours(),d.getMinutes(),d.getSeconds(),d.getMilliseconds()*1000]);}),today:py.classmethod.fromJSON(function(){var dt_class=py.PY_getAttr(datetime,'datetime');return py.PY_call(py.PY_getAttr(dt_class,'now'));}),utcnow:py.classmethod.fromJSON(function(){var d=new Date();return py.PY_call(datetime.datetime,[d.getUTCFullYear(),d.getUTCMonth()+1,d.getUTCDate(),d.getUTCHours(),d.getUTCMinutes(),d.getUTCSeconds(),d.getUTCMilliseconds()*1000]);}),combine:py.classmethod.fromJSON(function(){var args=py.PY_parseArgs(arguments,'date time');return py.PY_call(datetime.datetime,[py.PY_getAttr(args.date,'year'),py.PY_getAttr(args.date,'month'),py.PY_getAttr(args.date,'day'),py.PY_getAttr(args.time,'hour'),py.PY_getAttr(args.time,'minute'),py.PY_getAttr(args.time,'second')]);}),toJSON:function(){return new Date(this.year,this.month-1,this.day,this.hour,this.minute,this.second,this.microsecond/1000);},__add__:function(other){if(!py.PY_isInstance(other,datetime.timedelta)){return py.NotImplemented;}
var s=tmxxx(this.year,this.month,this.day+other.days,this.hour,this.minute,this.second+other.seconds);return datetime.datetime.fromJSON(s.year,s.month,s.day,s.hour,s.minute,s.second);},__sub__:function(other){if(py.PY_isInstance(other,datetime.timedelta)){return py.PY_add(this,py.PY_negative(other));}
return py.NotImplemented;},fromJSON:function(year,month,day,hour,minute,second){return py.PY_call(datetime.datetime,[year,month,day,hour,minute,second]);},});datetime.date=py.type('date',null,{__init__:function(){var args=py.PY_parseArgs(arguments,'year month day');this.year=asJS(args.year);this.month=asJS(args.month);this.day=asJS(args.day);},strftime:function(){var self=this;var args=py.PY_parseArgs(arguments,'format');return py.str.fromJSON(args.format.toJSON().replace(/%([A-Za-z])/g,function(m,c){switch(c){case'Y':return self.year;case'm':return _.str.sprintf('%02d',self.month);case'd':return _.str.sprintf('%02d',self.day);}
throw new Error('ValueError: No known conversion for '+m);}));},__eq__:function(other){return(this.year===other.year&&this.month===other.month&&this.day===other.day)?py.True:py.False;},replace:function(){var args=py.PY_parseArgs(arguments,[['year',py.None],['month',py.None],['day',py.None]]);var params={};for(var key in args){if(!args.hasOwnProperty(key)){continue;}
var arg=args[key];params[key]=(arg===py.None?this[key]:asJS(arg));}
return py.PY_call(datetime.date,params);},start_of:function(){var args=py.PY_parseArgs(arguments,'granularity');var granularity=args.granularity.toJSON();if(granularity==='year'){return py.PY_call(datetime.date,[this.year,1,1]);}else if(granularity==='quarter'){var quarter=get_quarter(this.year,this.month)[0];return py.PY_call(datetime.date,[quarter.year,quarter.month,quarter.day]);}else if(granularity==='month'){return py.PY_call(datetime.date,[this.year,this.month,1]);}else if(granularity==='week'){var dow=get_day_of_week(this.year,this.month,this.day);return py.PY_call(datetime.date,[this.year,this.month,this.day-dow]);}else if(granularity==='day'){return py.PY_call(datetime.date,[this.year,this.month,this.day]);}else{throw new Error('ValueError: '+granularity+' is not a supported granularity, supported '+' granularities are: year, quarter, month, week and day.')}},end_of:function(){var args=py.PY_parseArgs(arguments,'granularity');var granularity=args.granularity.toJSON();if(granularity==='year'){return py.PY_call(datetime.date,[this.year,12,31]);}else if(granularity==='quarter'){var quarter=get_quarter(this.year,this.month)[1];return py.PY_call(datetime.date,[quarter.year,quarter.month,quarter.day]);}else if(granularity==='month'){var dom=days_in_month(this.year,this.month);return py.PY_call(datetime.date,[this.year,this.month,dom]);}else if(granularity==='week'){var dow=get_day_of_week(this.year,this.month,this.day);return py.PY_call(datetime.date,[this.year,this.month,this.day+(6-dow)]);}else if(granularity==='day'){return py.PY_call(datetime.date,[this.year,this.month,this.day]);}else{throw new Error('ValueError: '+granularity+' is not a supported granularity, supported '+' granularities are: year, quarter, month, week and day.')}},add:function(){var args=py.PY_parseArgs(arguments,[['years',py.None],['months',py.None],['days',py.None],]);return py.PY_add(this,py.PY_call(relativedelta,{'years':args.years,'months':args.months,'days':args.days,}));},subtract:function(){var args=py.PY_parseArgs(arguments,[['years',py.None],['months',py.None],['days',py.None],]);var params={};for(var key in args){params[key]=(args[key]===py.None?args[key]:py.float.fromJSON(-asJS(args[key])));}
return py.PY_add(this,py.PY_call(relativedelta,params));},__add__:function(other){if(!py.PY_isInstance(other,datetime.timedelta)){return py.NotImplemented;}
var s=tmxxx(this.year,this.month,this.day+other.days);return datetime.date.fromJSON(s.year,s.month,s.day);},__radd__:function(other){return this.__add__(other);},__sub__:function(other){if(py.PY_isInstance(other,datetime.timedelta)){return py.PY_add(this,py.PY_negative(other));}
if(py.PY_isInstance(other,datetime.date)){return py.PY_call(datetime.timedelta,[py.PY_subtract(py.PY_call(py.PY_getAttr(this,'toordinal')),py.PY_call(py.PY_getAttr(other,'toordinal')))]);}
return py.NotImplemented;},toordinal:function(){return py.float.fromJSON(ymd2ord(this.year,this.month,this.day));},weekday:function(){return py.float.fromJSON((this.toordinal().toJSON()+6)%7);},fromJSON:function(year,month,day){return py.PY_call(datetime.date,[year,month,day]);},today:py.classmethod.fromJSON(function(){var d=new Date();return py.PY_call(datetime.date,[d.getFullYear(),d.getMonth()+1,d.getDate()]);}),});datetime.time=py.type('time',null,{__init__:function(){var zero=py.float.fromJSON(0);var args=py.PY_parseArgs(arguments,[['hour',zero],['minute',zero],['second',zero],['microsecond',zero],['tzinfo',py.None]]);for(var k in args){if(!args.hasOwnProperty(k)){continue;}
this[k]=asJS(args[k]);}}});var time=py.PY_call(py.object);time.strftime=py.PY_def.fromJSON(function(){var args=py.PY_parseArgs(arguments,'format');var dt_class=py.PY_getAttr(datetime,'datetime');var d=py.PY_call(py.PY_getAttr(dt_class,'utcnow'));return py.PY_call(py.PY_getAttr(d,'strftime'),[args.format]);});var args=_.map(('year month day hour minute second '
+'years months weeks days hours minutes seconds '
+'weekday leapdays yearday nlyearday').split(' '),function(arg){switch(arg){case'years':case'months':case'days':case'leapdays':case'weeks':case'hours':case'minutes':case'seconds':return[arg,zero];case'year':case'month':case'day':case'weekday':case'hour':case'minute':case'second':case'yearday':case'nlyearday':return[arg,null];default:throw new Error("Unknown relativedelta argument "+arg);}});args.unshift('*');var _utils={monthrange:function(year,month){if(month<1||month>12){throw new Error("Illegal month "+month);}
var day1=this.weekday(year,month,1);var ndays=this.mdays[month]+(month==this.February&&this.isleap(year));return[day1,ndays];},weekday:function(year,month,day){var date=py.PY_call(datetime.date,[year,month,day]);return py.PY_call(py.PY_getAttr(date,'weekday'));},isleap:function(year){return year%4===0&&(year%100!==0||year%400===0);},mdays:[0,31,28,31,30,31,30,31,31,30,31,30,31],January:1,February:2};var relativedelta=py.type('relativedelta',null,{__init__:function(){this.ops=py.PY_parseArgs(arguments,args);this.ops.days=py.float.fromJSON(asJS(this.ops.days)+asJS(this.ops.weeks)*7);var yday=zero;if(this.ops.nlyearday){yday=this.ops.nlyearday;}else if(this.ops.yearday){yday=this.ops.yearday;if(asJS(this.ops.yearday)>59){this.ops.leapdays=py.float.fromJS(-1);}}
if(py.PY_isTrue(yday)){var ydayidx=[31,59,90,120,151,181,212,243,273,304,334,366];for(var idx=0;idx<ydayidx.length;++idx){var ydays=ydayidx[idx];if(asJS(yday)<=ydays){this.ops.month=py.float.fromJSON(idx+1);if(!idx){this.ops.day=yday;}else{this.ops.day=py.PY_subtract(yday,py.float.fromJSON(ydayidx[idx-1]));}
break;}}
if(idx===ydayidx.length){throw new Error("Invalid year day ("+asJS(yday)+")");}}
this._fix();},_fix:function(){var self=this;var months=asJS(this.ops.months);if(Math.abs(months)>11){var s=months>0?1:-1;divmod(months*s,12,function(years,months){self.ops.months=py.float.fromJSON(months*s);self.ops.years=py.float.fromJSON(asJS(self.ops.years)+years*s);});}
this._has_time=0;},__add__:function(other){if(!(py.PY_isInstance(other,datetime.date)||py.PY_isInstance(other,datetime.datetime))){return py.NotImplemented;}
var year=(asJS(this.ops.year)||asJS(other.year))+asJS(this.ops.years);var month=asJS(this.ops.month)||asJS(other.month);var months;if(months=asJS(this.ops.months)){if(Math.abs(months)<1||Math.abs(months)>12){throw new Error("Can only use relative months between -12 and +12");}
month+=months;if(month>12){year+=1;month-=12;}
if(month<1){year-=1;month+=12;}}
var day=Math.min(_utils.monthrange(year,month)[1],asJS(this.ops.day)||asJS(other.day));var repl={year:py.float.fromJSON(year),month:py.float.fromJSON(month),day:py.float.fromJSON(day)};if(py.PY_isInstance(other,datetime.datetime)){repl.hour=py.float.fromJSON(asJS(this.ops.hour)||asJS(other.hour));repl.minute=py.float.fromJSON(asJS(this.ops.minute)||asJS(other.minute));repl.second=py.float.fromJSON(asJS(this.ops.second)||asJS(other.second));}
var days=asJS(this.ops.days);if(py.PY_isTrue(this.ops.leapdays)&&month>2&&_utils.isleap(year)){days+=asJS(this.ops.leapdays);}
var ret=py.PY_add(py.PY_call(py.PY_getAttr(other,'replace'),repl),py.PY_call(datetime.timedelta,{days:py.float.fromJSON(days),hours:py.float.fromJSON(asJS(this.ops.hours)),minutes:py.float.fromJSON(asJS(this.ops.minutes)),seconds:py.float.fromJSON(asJS(this.ops.seconds))}));if(this.ops.weekday){var weekday=asJS(this.ops.weekday),nth=1;var jumpdays=(Math.abs(nth)-1)*7;var ret_weekday=asJS(py.PY_call(py.PY_getAttr(ret,'weekday')));if(nth>0){jumpdays+=(7-ret_weekday+weekday)%7;}else{jumpdays+=(ret_weekday-weekday)%7;jumpdays*=-1;}
ret=py.PY_add(ret,py.PY_call(datetime.timedelta,{days:py.float.fromJSON(jumpdays)}));}
return ret;},__radd__:function(other){return this.__add__(other);},__rsub__:function(other){return this.__neg__().__radd__(other);},__neg__:function(){return py.PY_call(relativedelta,{years:py.PY_negative(this.ops.years),months:py.PY_negative(this.ops.months),days:py.PY_negative(this.ops.days),leapdays:this.ops.leapdays,hours:py.PY_negative(this.ops.hours),minutes:py.PY_negative(this.ops.minutes),seconds:py.PY_negative(this.ops.seconds),year:this.ops.year,month:this.ops.month,day:this.ops.day,weekday:this.ops.weekday,hour:this.ops.hour,minute:this.ops.minute,second:this.ops.second});}});py.extras={datetime:datetime,time:time,relativedelta:relativedelta,};})(typeof exports==='undefined'?py:exports);;

/* /web/static/lib/jquery.ba-bbq/jquery.ba-bbq.js */
(function($,window){'$:nomunge';var undefined,aps=Array.prototype.slice,decode=decodeURIComponent,jq_param=$.param,jq_param_sorted,jq_param_fragment,jq_deparam,jq_deparam_fragment,jq_bbq=$.bbq=$.bbq||{},jq_bbq_pushState,jq_bbq_getState,jq_elemUrlAttr,special=$.event.special,str_hashchange='hashchange',str_querystring='querystring',str_fragment='fragment',str_elemUrlAttr='elemUrlAttr',str_href='href',str_src='src',re_params_querystring=/^.*\?|#.*$/g,re_params_fragment,re_fragment,re_no_escape,ajax_crawlable,fragment_prefix,elemUrlAttr_cache={};function is_string(arg){return typeof arg==='string';};function curry(func){var args=aps.call(arguments,1);return function(){return func.apply(this,args.concat(aps.call(arguments)));};};function get_fragment(url){return url.replace(re_fragment,'$2');};function get_querystring(url){return url.replace(/(?:^[^?#]*\?([^#]*).*$)?.*/,'$1');};function jq_param_sub(is_fragment,get_func,url,params,merge_mode){var result,qs,matches,url_params,hash;if(params!==undefined){matches=url.match(is_fragment?re_fragment:/^([^#?]*)\??([^#]*)(#?.*)/);hash=matches[3]||'';if(merge_mode===2&&is_string(params)){qs=params.replace(is_fragment?re_params_fragment:re_params_querystring,'');}else{url_params=jq_deparam(matches[2]);params=is_string(params)?jq_deparam[is_fragment?str_fragment:str_querystring](params):params;qs=merge_mode===2?params:merge_mode===1?$.extend({},params,url_params):$.extend({},url_params,params);qs=jq_param_sorted(qs);if(is_fragment){qs=qs.replace(re_no_escape,decode);}}
result=matches[1]+(is_fragment?fragment_prefix:qs||!matches[1]?'?':'')+qs+hash;}else{result=get_func(url!==undefined?url:location.href);}
return result;};jq_param[str_querystring]=curry(jq_param_sub,0,get_querystring);jq_param[str_fragment]=jq_param_fragment=curry(jq_param_sub,1,get_fragment);jq_param.sorted=jq_param_sorted=function(a,traditional){var arr=[],obj={};$.each(jq_param(a,traditional).split('&'),function(i,v){var key=v.replace(/(?:%5B|=).*$/,''),key_obj=obj[key];if(!key_obj){key_obj=obj[key]=[];arr.push(key);}
key_obj.push(v);});return $.map(arr.sort(),function(v){return obj[v];}).join('&');};jq_param_fragment.noEscape=function(chars){chars=chars||'';var arr=$.map(chars.split(''),encodeURIComponent);re_no_escape=new RegExp(arr.join('|'),'g');};jq_param_fragment.noEscape(',/');jq_param_fragment.ajaxCrawlable=function(state){if(state!==undefined){if(state){re_params_fragment=/^.*(?:#!|#)/;re_fragment=/^([^#]*)(?:#!|#)?(.*)$/;fragment_prefix='#!';}else{re_params_fragment=/^.*#/;re_fragment=/^([^#]*)#?(.*)$/;fragment_prefix='#';}
ajax_crawlable=!!state;}
return ajax_crawlable;};jq_param_fragment.ajaxCrawlable(0);$.deparam=jq_deparam=function(params,coerce){var obj={},coerce_types={'true':!0,'false':!1,'null':null};$.each(params.replace(/\+/g,' ').split('&'),function(j,v){var param=v.split('='),key=decode(param[0]),val,cur=obj,i=0,keys=key.split(']['),keys_last=keys.length-1;if(/\[/.test(keys[0])&&/\]$/.test(keys[keys_last])){keys[keys_last]=keys[keys_last].replace(/\]$/,'');keys=keys.shift().split('[').concat(keys);keys_last=keys.length-1;}else{keys_last=0;}
if(param.length===2){val=decode(param[1]);if(coerce){val=val&&!isNaN(val)?+val:val==='undefined'?undefined:coerce_types[val]!==undefined?coerce_types[val]:val;}
if(keys_last){for(;i<=keys_last;i++){key=keys[i]===''?cur.length:keys[i];if(key==="__proto__"||key==="prototype"||key==="constructor")break;cur=cur[key]=i<keys_last?cur[key]||(keys[i+1]&&isNaN(keys[i+1])?{}:[]):val;}}else{if($.isArray(obj[key])){obj[key].push(val);}else if(obj[key]!==undefined){obj[key]=[obj[key],val];}else{obj[key]=val;}}}else if(key){obj[key]=coerce?undefined:'';}});return obj;};function jq_deparam_sub(is_fragment,url_or_params,coerce){if(url_or_params===undefined||typeof url_or_params==='boolean'){coerce=url_or_params;url_or_params=jq_param[is_fragment?str_fragment:str_querystring]();}else{url_or_params=is_string(url_or_params)?url_or_params.replace(is_fragment?re_params_fragment:re_params_querystring,''):url_or_params;}
return jq_deparam(url_or_params,coerce);};jq_deparam[str_querystring]=curry(jq_deparam_sub,0);jq_deparam[str_fragment]=jq_deparam_fragment=curry(jq_deparam_sub,1);$[str_elemUrlAttr]||($[str_elemUrlAttr]=function(obj){return $.extend(elemUrlAttr_cache,obj);})({a:str_href,base:str_href,iframe:str_src,img:str_src,input:str_src,form:'action',link:str_href,script:str_src});jq_elemUrlAttr=$[str_elemUrlAttr];function jq_fn_sub(mode,force_attr,params,merge_mode){if(!is_string(params)&&typeof params!=='object'){merge_mode=params;params=force_attr;force_attr=undefined;}
return this.each(function(){var that=$(this),attr=force_attr||jq_elemUrlAttr()[(this.nodeName||'').toLowerCase()]||'',url=attr&&that.attr(attr)||'';that.attr(attr,jq_param[mode](url,params,merge_mode));});};$.fn[str_querystring]=curry(jq_fn_sub,str_querystring);$.fn[str_fragment]=curry(jq_fn_sub,str_fragment);jq_bbq.pushState=jq_bbq_pushState=function(params,merge_mode){if(is_string(params)&&/^#/.test(params)&&merge_mode===undefined){merge_mode=2;}
var has_args=params!==undefined,url=jq_param_fragment(location.href,has_args?params:{},has_args?merge_mode:2);location.href=url;};jq_bbq.getState=jq_bbq_getState=function(key,coerce){return key===undefined||typeof key==='boolean'?jq_deparam_fragment(key):jq_deparam_fragment(coerce)[key];};jq_bbq.removeState=function(arr){var state={};if(arr!==undefined){state=jq_bbq_getState();$.each($.isArray(arr)?arr:arguments,function(i,v){delete state[v];});}
jq_bbq_pushState(state,2);};special[str_hashchange]=$.extend(special[str_hashchange],{add:function(handleObj){var old_handler;function new_handler(e){var hash=e[str_fragment]=jq_param_fragment();e.getState=function(key,coerce){return key===undefined||typeof key==='boolean'?jq_deparam(hash,key):jq_deparam(hash,coerce)[key];};old_handler.apply(this,arguments);};if($.isFunction(handleObj)){old_handler=handleObj;return new_handler;}else{old_handler=handleObj.handler;handleObj.handler=new_handler;}}});})(jQuery,this);(function($,window,undefined){'$:nomunge';var str_hashchange='hashchange',doc=document,fake_onhashchange,special=$.event.special,doc_mode=doc.documentMode,supports_onhashchange='on'+str_hashchange in window&&(doc_mode===undefined||doc_mode>7);function get_fragment(url){url=url||location.href;return'#'+url.replace(/^[^#]*#?(.*)$/,'$1');};$.fn[str_hashchange]=function(fn){return fn?this.bind(str_hashchange,fn):this.trigger(str_hashchange);};$.fn[str_hashchange].delay=50;special[str_hashchange]=$.extend(special[str_hashchange],{setup:function(){if(supports_onhashchange){return false;}
$(fake_onhashchange.start);},teardown:function(){if(supports_onhashchange){return false;}
$(fake_onhashchange.stop);}});fake_onhashchange=(function(){var self={},timeout_id,last_hash=get_fragment(),fn_retval=function(val){return val;},history_set=fn_retval,history_get=fn_retval;self.start=function(){timeout_id||poll();};self.stop=function(){timeout_id&&clearTimeout(timeout_id);timeout_id=undefined;};function poll(){var hash=get_fragment(),history_hash=history_get(last_hash);if(hash!==last_hash){history_set(last_hash=hash,history_hash);$(window).trigger(str_hashchange);}else if(history_hash!==last_hash){location.href=location.href.replace(/#.*/,'')+history_hash;}
timeout_id=setTimeout(poll,$.fn[str_hashchange].delay);};$.browser.msie&&!supports_onhashchange&&(function(){var iframe,iframe_src;self.start=function(){if(!iframe){iframe_src=$.fn[str_hashchange].src;iframe_src=iframe_src&&iframe_src+get_fragment();iframe=$('<iframe tabindex="-1" title="empty"/>').hide().one('load',function(){iframe_src||history_set(get_fragment());poll();}).attr('src',iframe_src||'javascript:0').insertAfter('body')[0].contentWindow;doc.onpropertychange=function(){try{if(event.propertyName==='title'){iframe.document.title=doc.title;}}catch(e){}};}};self.stop=fn_retval;history_get=function(){return get_fragment(iframe.location.href);};history_set=function(hash,history_hash){var iframe_doc=iframe.document,domain=$.fn[str_hashchange].domain;if(hash!==history_hash){iframe_doc.title=doc.title;iframe_doc.open();domain&&iframe_doc.write('<script>document.domain="'+domain+'"</script>');iframe_doc.close();iframe.location.hash=hash;}};})();return self;})();})(jQuery,this);;

/* /web/static/src/legacy/action_adapters.js */
odoo.define('@web/legacy/action_adapters',async function(require){'use strict';let __exports={};const Context=require("web.Context");const core=require("web.core");const{ComponentAdapter}=require("web.OwlCompatibility");const{objectToQuery}=require("@web/core/browser/router_service");const{useDebugCategory}=require("@web/core/debug/debug_context");const{Dialog}=require("@web/core/dialog/dialog");const{useService}=require("@web/core/utils/hooks");const{ViewNotFoundError}=require("@web/views/view");const{cleanDomFromBootstrap,wrapSuccessOrFail,useLegacyRefs}=require("@web/legacy/utils");const{mapDoActionOptionAPI}=require("@web/legacy/backend_utils");const{Component,onMounted,onWillUnmount,onWillUpdateProps,status,useEffect,useExternalListener,useComponent,xml,}=require("@odoo/owl");class WarningDialog extends Component{}
WarningDialog.template=xml`<Dialog title="props.title">
    <p style="white-space:pre-wrap" t-esc="props.message"/>
</Dialog>`;WarningDialog.components={Dialog};class ActionAdapter extends ComponentAdapter{setup(){super.setup();this.actionService=useService("action");this.router=useService("router");this.title=useService("title");this.notifications=useService("notification");this.dialogs=useService("dialog");this.wowlEnv=this.env;const legacyRefs=useLegacyRefs();legacyRefs.component=this;this.tempQuery={};let originalUpdateControlPanel;useEffect(()=>{legacyRefs.widget=this.widget;const query=this.widget.getState();Object.assign(query,this.tempQuery);this.tempQuery=null;this.__widget=this.widget;if(!this.wowlEnv.inDialog){this.pushState(query);}
const onActionManagerUpdate=()=>{this.env.bus.trigger("close_dialogs");cleanDomFromBootstrap();};this.wowlEnv.bus.addEventListener("ACTION_MANAGER:UPDATE",onActionManagerUpdate);originalUpdateControlPanel=this.__widget.updateControlPanel.bind(this.__widget);this.__widget.updateControlPanel=(newProps)=>{this.wowlEnv.config.setDisplayName(this.__widget.getTitle());return originalUpdateControlPanel(newProps);};core.bus.trigger("DOM_updated");return()=>{this.__widget.updateControlPanel=originalUpdateControlPanel;this.wowlEnv.bus.removeEventListener("ACTION_MANAGER:UPDATE",onActionManagerUpdate);};},()=>[]);useExternalListener(window,"click",()=>{cleanDomFromBootstrap();});onWillUpdateProps(()=>{if(this.widget===null){this.widget=this.__widget;}});onWillUnmount(()=>{if(this.__widget&&this.__widget.on_detach_callback){this.__widget.on_detach_callback();}});this.onScrollTo=(payload)=>{const contentEl=this.el.querySelector(".o_content");if(contentEl){contentEl.scrollLeft=payload.left||0;contentEl.scrollTop=payload.top||0;}};}
get actionId(){throw new Error("Should be implement by specific adapters");}
pushState(state){if(this.wowlEnv.inDialog){return;}
const query=objectToQuery(state);if(this.tempQuery){Object.assign(this.tempQuery,query);return;}
if(this.widget){const actionTitle=this.widget.getTitle();if(actionTitle){this.wowlEnv.config.setDisplayName(actionTitle);}}
if(this.props.onPushState){this.props.onPushState(query);}else{this.router.pushState(query);}}
_trigger_up(ev){const payload=ev.data;if(ev.name==="do_action"){if(payload.action.context){payload.action.context=new Context(payload.action.context).eval();}
this.onReverseBreadcrumb=payload.options&&payload.options.on_reverse_breadcrumb;const legacyOptions=mapDoActionOptionAPI(payload.options);wrapSuccessOrFail(this.actionService.doAction(payload.action,legacyOptions),payload);}else if(ev.name==="breadcrumb_clicked"){this.actionService.restore(payload.controllerID);}else if(ev.name==="push_state"){this.pushState(payload.state);}else if(ev.name==="set_title_part"){const{part,title}=payload;this.title.setParts({[part]:title||null});}else if(ev.name==="warning"){if(payload.type==="dialog"){this.dialogs.add(WarningDialog,{title:payload.title,message:payload.message,});}else{this.notifications.add(payload.message,{className:payload.className,sticky:payload.sticky,title:payload.title,type:"warning",});}}else if(ev.name==="history_back"){this.wowlEnv.config.historyBack();}else if(ev.name==="scrollTo"){this.onScrollTo(payload);}else{super._trigger_up(ev);}}
exportState(){this.widget=null;return{__legacy_widget__:this.__widget,__on_reverse_breadcrumb__:this.onReverseBreadcrumb,};}
canBeRemoved(){return this.__widget.canBeRemoved();}
__destroy(){if(this.actionService.__legacy__isActionInStack(this.actionId)){this.widget=null;}
super.__destroy(...arguments);}
get el(){return(this.widget||this.__widget).el;}}
const ClientActionAdapter=__exports.ClientActionAdapter=class ClientActionAdapter extends ActionAdapter{setup(){super.setup();useDebugCategory("action",{action:this.props.widgetArgs[0]});onMounted(()=>{const action=this.props.widgetArgs[0];if("params"in action){const newState={};Object.entries(action.params).forEach(([k,v])=>{if(typeof v==="string"||typeof v==="number"){newState[k]=v;}});this.wowlEnv.services.router.pushState(newState);}});this.env=Component.env;}
get actionId(){return this.props.widgetArgs[0].jsId;}
async onWillStart(){if(this.props.widget){this.widget=this.props.widget;this.widget.setParent(this);if(this.props.onReverseBreadcrumb){await this.props.onReverseBreadcrumb();}
return this.updateWidget();}
return super.onWillStart();}
updateWidget(){return this.widget.do_show();}
do_push_state(state){this.pushState(state);}}
const magicReloadSymbol=Symbol("magicReload");function useMagicLegacyReload(){const comp=useComponent();if(comp.props.widget&&comp.props.widget[magicReloadSymbol]){return comp.props.widget[magicReloadSymbol];}
let legacyReloadProm=null;const getReloadProm=()=>legacyReloadProm;let manualReload;useEffect(()=>{const widget=comp.widget;const controllerReload=widget.reload;widget.reload=function(...args){manualReload=true;legacyReloadProm=controllerReload.call(widget,...args);return legacyReloadProm.finally(()=>{if(manualReload){legacyReloadProm=null;manualReload=false;}});};const controllerUpdate=widget.update;widget.update=function(...args){const updateProm=controllerUpdate.call(widget,...args);const manualUpdate=!manualReload;if(manualUpdate){legacyReloadProm=updateProm;}
return updateProm.finally(()=>{if(manualUpdate){legacyReloadProm=null;}});};widget[magicReloadSymbol]=getReloadProm;},()=>[]);return getReloadProm;}
const ViewAdapter=__exports.ViewAdapter=class ViewAdapter extends ActionAdapter{setup(){super.setup();this.actionService=useService("action");this.vm=useService("view");this.shouldUpdateWidget=true;this.magicReload=useMagicLegacyReload();const debugContext={action:this.props.viewParams.action,component:this,};useDebugCategory("action",debugContext);useDebugCategory("view",debugContext);if(this.props.viewInfo.type==="form"){useDebugCategory("form_legacy",debugContext);}
this.env=Component.env;}
get actionId(){return this.props.viewParams.action.jsId;}
async onWillStart(){if(this.props.widget){this.widget=this.props.widget;this.widget.setParent(this);if(this.props.onReverseBreadcrumb){await this.props.onReverseBreadcrumb();}
return this.updateWidget(this.props.viewParams);}else{const view=new this.props.View(this.props.viewInfo,this.props.viewParams);this.widget=await view.getController(this);if(status(this)==="destroyed"){if(!this.actionService.__legacy__isActionInStack(this.actionId)){this.widget.destroy();}
return Promise.resolve();}
return this.widget._widgetRenderAndInsert(()=>{});}}
async updateWidget(nextProps){const shouldUpdateWidget=this.shouldUpdateWidget;this.shouldUpdateWidget=true;if(!shouldUpdateWidget){return this.magicReload();}
await this.widget.willRestore();const options={...this.props.viewParams,...nextProps.viewParams,shouldUpdateSearchComponents:true,};if(!this.magicReload()){this.widget.reload(options);}
return this.magicReload();}
async renderWidget(){}
exportState(){const state=super.exportState();const widgetState=this.__widget.exportState();return Object.assign({},state,widgetState);}
async loadViews(resModel,context,views){return(await this.vm.loadViews({resModel,views,context},{})).__legacy__.fields_views;}
async _trigger_up(ev){const payload=ev.data;if(ev.name==="switch_view"){if(payload.view_type==="form"){if(payload.res_id){const activeIds=this.__widget.model.get(this.__widget.handle).res_ids;return this.props.selectRecord(payload.res_id,{mode:payload.mode,activeIds,});}else{return this.props.createRecord();}}else{try{await this.actionService.switchView(payload.view_type);}catch(e){if(typeof e==="object"&&e instanceof ViewNotFoundError){return;}
throw e;}}}else if(ev.name==="execute_action"){const buttonContext=new Context(payload.action_data.context).eval();const envContext=new Context(payload.env.context).eval();wrapSuccessOrFail(this.actionService.doActionButton({args:payload.action_data.args,buttonContext:buttonContext,context:envContext,close:payload.action_data.close,resModel:payload.env.model,name:payload.action_data.name,resId:payload.env.currentID||null,resIds:payload.env.resIDs,special:payload.action_data.special,type:payload.action_data.type,onClose:payload.on_closed,effect:payload.action_data.effect,}),payload);}else{super._trigger_up(ev);}}}
return __exports;});;

/* /web/static/src/legacy/debug_manager.js */
odoo.define('@web/legacy/debug_manager',async function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{FormViewDialog}=require("@web/views/view_dialogs/form_view_dialog");const{formatDateTime,parseDateTime}=require("@web/core/l10n/dates");const{formatMany2one}=require("@web/views/fields/formatters");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{Component,onWillStart,useState}=require("@odoo/owl");const debugRegistry=registry.category("debug");class GetMetadataDialog extends Component{setup(){this.dialogService=useService("dialog");this.title=this.env._t("View Metadata");this.state=useState({});onWillStart(this.onWillStart);}
async onWillStart(){await this.getMetadata();}
async onClickCreateXmlid(){const context=Object.assign({},this.context,{default_module:"__custom__",default_res_id:this.state.id,default_model:this.props.res_model,});this.dialogService.add(FormViewDialog,{context,onRecordSaved:()=>this.getMetadata(),resModel:"ir.model.data",});}
async toggleNoupdate(){await this.env.services.orm.call("ir.model.data","toggle_noupdate",[this.props.res_model,this.state.id,]);await this.getMetadata();}
async getMetadata(){const metadata=(await this.env.services.orm.call(this.props.res_model,"get_metadata",[this.props.selectedIds,]))[0];this.state.id=metadata.id;this.state.xmlid=metadata.xmlid;this.state.xmlids=metadata.xmlids;this.state.creator=formatMany2one(metadata.create_uid);this.state.lastModifiedBy=formatMany2one(metadata.write_uid);this.state.noupdate=metadata.noupdate;this.state.createDate=formatDateTime(parseDateTime(metadata.create_date));this.state.writeDate=formatDateTime(parseDateTime(metadata.write_date));}}
GetMetadataDialog.template="web.DebugMenu.GetMetadataDialog";GetMetadataDialog.components={Dialog};class SetDefaultDialog extends Component{setup(){this.title=this.env._t("Set Defaults");this.state={fieldToSet:"",condition:"",scope:"self",};this.dataWidgetState=this.getDataWidgetState();this.defaultFields=this.getDefaultFields();this.conditions=this.getConditions();}
getDataWidgetState(){const renderer=this.props.component.widget.renderer;const state=renderer.state;const fields=state.fields;const fieldsInfo=state.fieldsInfo.form;const fieldNamesInView=state.getFieldNames();const fieldNamesOnlyOnView=["message_attachment_count"];const fieldsValues=state.data;const modifierDatas={};fieldNamesInView.forEach((fieldName)=>{modifierDatas[fieldName]=renderer.allModifiersData.find((modifierdata)=>{return modifierdata.node.attrs.name===fieldName;});});return{fields,fieldsInfo,fieldNamesInView,fieldNamesOnlyOnView,fieldsValues,modifierDatas,stateId:state.id,};}
getDefaultFields(){const{fields,fieldsInfo,fieldNamesInView,fieldNamesOnlyOnView,fieldsValues,modifierDatas,stateId,}=this.dataWidgetState;return fieldNamesInView.filter((fieldName)=>!fieldNamesOnlyOnView.includes(fieldName)).map((fieldName)=>{const modifierData=modifierDatas[fieldName];let invisibleOrReadOnly;if(modifierData){const evaluatedModifiers=modifierData.evaluatedModifiers[stateId];invisibleOrReadOnly=evaluatedModifiers.invisible||evaluatedModifiers.readonly;}
const fieldInfo=fields[fieldName];const valueDisplayed=this.display(fieldInfo,fieldsValues[fieldName]);const value=valueDisplayed[0];const displayed=valueDisplayed[1];if(!value||invisibleOrReadOnly||fieldInfo.type==="one2many"||fieldInfo.type==="many2many"||fieldInfo.type==="binary"||fieldsInfo[fieldName].options.isPassword){return false;}
return{name:fieldName,string:fieldInfo.string,value:value,displayed:displayed,};}).filter((val)=>val).sort((field)=>field.string);}
getConditions(){const{fields,fieldNamesInView,fieldsValues}=this.dataWidgetState;return fieldNamesInView.filter((fieldName)=>{const fieldInfo=fields[fieldName];return fieldInfo.change_default;}).map((fieldName)=>{const fieldInfo=fields[fieldName];const valueDisplayed=this.display(fieldInfo,fieldsValues[fieldName]);const value=valueDisplayed[0];const displayed=valueDisplayed[1];return{name:fieldName,string:fieldInfo.string,value:value,displayed:displayed,};});}
display(fieldInfo,value){let displayed=value;if(value&&fieldInfo.type==="many2one"){displayed=value.data.display_name;value=value.data.id;}else if(value&&fieldInfo.type==="selection"){displayed=fieldInfo.selection.find((option)=>{return option[0]===value;})[1];}
return[value,displayed];}
async saveDefault(){if(!this.state.fieldToSet){return;}
const fieldToSet=this.defaultFields.find((field)=>{return field.name===this.state.fieldToSet;}).value;await this.env.services.orm.call("ir.default","set",[this.props.res_model,this.state.fieldToSet,fieldToSet,this.state.scope==="self",true,this.state.condition||false,]);this.props.close();}}
SetDefaultDialog.template="web.DebugMenu.SetDefaultDialog";SetDefaultDialog.components={Dialog};function setDefaults({action,component,env}){return{type:"item",description:env._t("Set Defaults"),callback:()=>{env.services.dialog.add(SetDefaultDialog,{res_model:action.res_model,component,});},sequence:310,};}
function viewMetadata({action,component,env}){const selectedIds=component.widget.getSelectedIds();if(selectedIds.length!==1){return null;}
return{type:"item",description:env._t("View Metadata"),callback:()=>{env.services.dialog.add(GetMetadataDialog,{res_model:action.res_model,selectedIds,});},sequence:320,};}
function manageAttachments({action,component,env}){const selectedIds=component.widget.getSelectedIds();const description=env._t("Manage Attachments");if(selectedIds.length!==1){return null;}
return{type:"item",description,callback:()=>{const selectedId=selectedIds[0];env.services.action.doAction({res_model:"ir.attachment",name:description,views:[[false,"list"],[false,"form"],],type:"ir.actions.act_window",domain:[["res_model","=",action.res_model],["res_id","=",selectedId],],context:{default_res_model:action.res_model,default_res_id:selectedId,},});},sequence:330,};}
debugRegistry.category("form_legacy").add("setDefaults",setDefaults).add("viewMetadata",viewMetadata).add("manageAttachments",manageAttachments);return __exports;});;

/* /web/static/src/legacy/legacy_service_provider.js */
odoo.define('@web/legacy/legacy_service_provider',async function(require){'use strict';let __exports={};const{bus}=require("web.core");const Context=require("web.Context");const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{mapDoActionOptionAPI}=require("@web/legacy/backend_utils");const{wrapSuccessOrFail}=require("@web/legacy/utils");const legacyServiceProvider=__exports.legacyServiceProvider={dependencies:["effect","action"],start({services}){browser.addEventListener("show-effect",(ev)=>{services.effect.add(ev.detail);});bus.on("show-effect",this,(payload)=>{services.effect.add(payload);});browser.addEventListener("do-action",(ev)=>{const payload=ev.detail;if(payload.action.context){payload.action.context=new Context(payload.action.context).eval();}
const legacyOptions=mapDoActionOptionAPI(payload.options);services.action.doAction(payload.action,legacyOptions);});browser.addEventListener("execute-action",(ev)=>{const payload=ev.detail;const buttonContext=new Context(payload.action_data.context).eval();const envContext=new Context(payload.env.context).eval();wrapSuccessOrFail(services.action.doActionButton({args:payload.action_data.args,buttonContext:buttonContext,context:envContext,close:payload.action_data.close,resModel:payload.env.model,name:payload.action_data.name,resId:payload.env.currentID||null,resIds:payload.env.resIDs,special:payload.action_data.special,type:payload.action_data.type,onClose:payload.on_closed,effect:payload.action_data.effect,}),payload);});},};registry.category("services").add("legacy_service_provider",legacyServiceProvider);return __exports;});;

/* /web/static/src/legacy/legacy_client_actions.js */
odoo.define('@web/legacy/legacy_client_actions',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{action_registry:legacyActionRegistry}=require("web.core");const Widget=require("web.Widget");const{useSetupAction}=require("@web/webclient/actions/action_hook");const{ClientActionAdapter}=require("@web/legacy/action_adapters");const{breadcrumbsToLegacy}=require("@web/legacy/backend_utils");const{useLegacyRefs}=require("@web/legacy/utils");const{LegacyComponent}=require("@web/legacy/legacy_component");const{xml}=require("@odoo/owl");const actionRegistry=registry.category("actions");const legacyClientActionTemplate=xml`
    <ClientActionAdapter Component="Widget" widgetArgs="widgetArgs" widget="widget"
                         onReverseBreadcrumb="onReverseBreadcrumb"/>`;function registerClientAction(name,action){if(action.prototype instanceof Widget){class Action extends LegacyComponent{setup(){this.Widget=action;const options={};for(const key in this.props){if(key==="action"||key==="actionId"){continue;}else{options[key]=this.props[key];}}
const legacyRefs=useLegacyRefs();if(this.env.config.breadcrumbs){options.breadcrumbs=breadcrumbsToLegacy(this.env.config.breadcrumbs);}
this.user=useService("user");const clientAction=Object.assign({},this.props.action,{context:Object.assign({},this.user.context,this.props.action.context),});this.widgetArgs=[clientAction,options];this.widget=this.props.state&&this.props.state.__legacy_widget__;this.onReverseBreadcrumb=this.props.state&&this.props.state.__on_reverse_breadcrumb__;const rootRef={get el(){return legacyRefs.widget&&legacyRefs.widget.el;},};useSetupAction({beforeLeave:()=>legacyRefs.widget.canBeRemoved(),getLocalState:()=>legacyRefs.component.exportState(),rootRef,});}}
Action.template=legacyClientActionTemplate;Action.components={ClientActionAdapter};Action.isLegacy=true;Action.target=action.prototype.target;actionRegistry.add(name,Action);}else{actionRegistry.add(name,action);}}
for(const[name,action]of Object.entries(legacyActionRegistry.entries())){if(!actionRegistry.contains(name)){registerClientAction(name,action);}}
legacyActionRegistry.onAdd(registerClientAction);return __exports;});;

/* /web/static/src/legacy/legacy_dialog.js */
odoo.define('@web/legacy/legacy_dialog',async function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{patch}=require("@web/core/utils/patch");const OwlDialog=require("web.OwlDialog");const{useEffect}=require("@odoo/owl");patch(Dialog.prototype,"Legacy Adapted Dialog",{setup(){this._super();useEffect(()=>{OwlDialog.display(this);return()=>OwlDialog.hide(this);},()=>[]);},});return __exports;});;

/* /web/static/src/legacy/legacy_load_views.js */
odoo.define('@web/legacy/legacy_load_views',async function(require){'use strict';let __exports={};const xmlSerializer=new XMLSerializer();const domParser=new DOMParser();function traverse(tree,f){if(f(tree)){_.each(tree.children,function(c){traverse(c,f);});}}
__exports.generateLegacyLoadViewsResult=generateLegacyLoadViewsResult;function generateLegacyLoadViewsResult(resModel,views,models){const legacyFieldViews={fields:models[resModel],fields_views:{},};if(views.search&&views.search.filters){legacyFieldViews.filters=views.search.filters;}
for(const viewType in views){const{arch,toolbar,id}=views[viewType];const{arch:processedArch,viewFields}=processArch(arch,viewType,resModel,models);legacyFieldViews.fields_views[viewType]={arch:processedArch,fields:viewFields,model:resModel,toolbar,view_id:id,};}
return legacyFieldViews;}
__exports.processArch=processArch;function processArch(arch,viewType,resModel,models){const viewFields={};const archDoc=domParser.parseFromString(arch,"text/xml").documentElement;traverse(archDoc,function(node){if(node.nodeType===3){return false;}
if(node.tagName==="field"){const fieldName=node.getAttribute("name");if(viewFields[fieldName]===undefined){const viewFieldsInfo=models[resModel][fieldName];const nodeString=node.getAttribute("string");if(nodeString===null&&viewFieldsInfo===undefined){throw new Error(`Missing field string information for the field '${fieldName}' from the '${resModel}' model`);}
viewFields[fieldName]={...viewFieldsInfo,string:nodeString||viewFieldsInfo.string,views:{},};}
if(viewType==="form"||viewType==="list"){const coModel=models[resModel][fieldName].relation;const views={};for(const childNode of[...node.children]){const viewType=childNode.tagName==="tree"?"list":childNode.tagName;const{arch:subViewArch,viewFields:subViewFields}=processArch(xmlSerializer.serializeToString(childNode),viewType,coModel,models);views[viewType]={arch:subViewArch,fields:subViewFields};node.removeChild(childNode);}
viewFields[fieldName].views=views;}
return false;}
if(viewType==="list"&&node.tagName==="groupby"&&node!==archDoc){const fieldName=node.getAttribute("name");const coModel=models[resModel][fieldName].relation;const{arch:subViewArch,viewFields:subViewFields}=processArch(xmlSerializer.serializeToString(node),"groupby",coModel,models);const groupbyView={arch:subViewArch,fields:subViewFields};viewFields[fieldName]=viewFields[fieldName]||{...models[resModel][fieldName],views:{},};viewFields[fieldName].views.groupby=groupbyView;for(const child of[...node.children]){node.removeChild(child);}
return false;}
return true;});return{arch:xmlSerializer.serializeToString(archDoc),viewFields};}
return __exports;});;

/* /web/static/src/legacy/legacy_views.js */
odoo.define('@web/legacy/legacy_views',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{useSetupAction}=require("@web/webclient/actions/action_hook");const{useLegacyRefs}=require("@web/legacy/utils");const legacyViewRegistry=require("web.view_registry");const{ViewAdapter}=require("@web/legacy/action_adapters");const Widget=require("web.Widget");const{breadcrumbsToLegacy,getGlobalState,getLocalState,searchModelStateToLegacy,}=require("@web/legacy/backend_utils");const{getBundle,loadBundle}=require("@web/core/assets");const{registry}=require("@web/core/registry");const{LegacyComponent}=require("@web/legacy/legacy_component");const{xml,onWillStart}=require("@odoo/owl");const viewRegistry=registry.category("views");function getJsClassWidget(fieldsInfo){const parsedXML=new DOMParser().parseFromString(fieldsInfo.arch,"text/xml");const key=parsedXML.documentElement.getAttribute("js_class");return legacyViewRegistry.get(key);}
const legacyViewTemplate=xml`
    <ViewAdapter Component="Widget" View="View" viewInfo="viewInfo" viewParams="viewParams"
                 widget="widget" onReverseBreadcrumb="onReverseBreadcrumb" selectRecord="props.selectRecord" createRecord="props.createRecord"/>`;function registerView(name,LegacyView){if(viewRegistry.contains(name)){return;}
class Controller extends LegacyComponent{setup(){this.vm=useService("view");this.Widget=Widget;this.View=LegacyView;this.viewInfo={};let resIds;let searchModel;let searchPanel;const{globalState}=this.props;if(globalState){resIds=globalState.resIds;searchModel=searchModelStateToLegacy(globalState.searchModel);searchPanel=globalState.searchPanel;}
this.user=useService("user");const action=Object.assign({},this.props.action);action.context=Object.assign({},this.user.context,action.context);const{actionFlags,breadcrumbs,noBreadcrumbs}=this.env.config;if(noBreadcrumbs){action.context.no_breadcrumbs=true;}
this.viewParams=Object.assign({},actionFlags,{action,breadcrumbs:breadcrumbsToLegacy(breadcrumbs),modelName:this.props.resModel,currentId:this.props.resId,controllerState:{currentId:"resId"in this.props?this.props.resId:this.props.state&&this.props.state.currentId,resIds:this.props.resIds||resIds,searchModel,searchPanel,},});if(this.viewParams.currentId===false){this.viewParams.currentId=undefined;this.viewParams.controllerState.currentId=undefined;}
if(this.props.mode){this.viewParams.mode=this.props.mode;}
const legacyRefs=useLegacyRefs();this.widget=this.props.state&&this.props.state.__legacy_widget__;legacyRefs.widget=this.widget;this.onReverseBreadcrumb=this.props.state&&this.props.state.__on_reverse_breadcrumb__;useSetupAction({rootRef:{get el(){return legacyRefs.widget&&legacyRefs.widget.el;},},beforeLeave:()=>legacyRefs.widget.canBeRemoved(),getGlobalState:()=>getGlobalState(legacyRefs.component.exportState()),getLocalState:()=>getLocalState(legacyRefs.component.exportState()),});onWillStart(this.onWillStart);}
async onWillStart(){const params={resModel:this.props.resModel,views:this.props.views||this.env.config.views,context:this.props.context,};const options={actionId:this.env.config.actionId,loadActionMenus:this.props.loadActionMenus,loadIrFilters:this.props.loadIrFilters,};const viewDescriptions=await this.vm.loadViews(params,options);const result=viewDescriptions.__legacy__;const fieldsInfo=result.fields_views[this.props.type||this.env.config.viewType];const jsClass=getJsClassWidget(fieldsInfo);this.View=jsClass||this.View;this.viewInfo=Object.assign({},fieldsInfo,{fields:result.fields,viewFields:fieldsInfo.fields,type:this.props.type||this.env.config.viewType,});let controlPanelFieldsView;if(result.fields_views.search){controlPanelFieldsView=Object.assign({},result.fields_views.search,{favoriteFilters:result.filters,fields:result.fields,viewFields:result.fields_views.search.fields,});}
const{viewSwitcherEntries=[]}=this.env.config;const _views=this.viewParams.action.views||this.env.config.views;const views=_views.filter(([,vtype])=>vtype!=="search").map(([vid,vtype])=>{const view=viewSwitcherEntries.find((v)=>v.type===vtype);if(view){return Object.assign({},view,{viewID:vid});}else{return{viewID:vid,type:vtype,multiRecord:!legacyView.multiRecord,};}});this.viewParams.action=Object.assign({},this.viewParams.action,{controlPanelFieldsView,_views,views,});}}
Controller.template=legacyViewTemplate;Controller.components={ViewAdapter};Controller.isLegacy=true;const legacyView={type:LegacyView.prototype.viewType,display_name:LegacyView.prototype.display_name,icon:LegacyView.prototype.icon,isMobileFriendly:LegacyView.prototype.mobile_friendly,multiRecord:LegacyView.prototype.multi_record,isLegacy:true,Controller,};viewRegistry.add(name,legacyView);if(odoo.debug){console.log(`Views: using legacy view: ${name}`);}}
for(const[name,action]of Object.entries(legacyViewRegistry.entries())){registerView(name,action);}
legacyViewRegistry.onAdd(registerView);__exports.loadLegacyViews=loadLegacyViews;async function loadLegacyViews(){const assets=await getBundle("web.assets_backend_legacy_lazy");await loadBundle(assets);}
return __exports;});;

/* /web/static/src/legacy/legacy_promise_error_handler.js */
odoo.define('@web/legacy/legacy_promise_error_handler',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");function legacyRejectPromiseHandler(env,error,originalError){if(error.name.startsWith("UncaughtPromiseError")){const isLegitError=originalError&&originalError instanceof Error;const isLegacyRPC=originalError&&originalError.legacy;if(!isLegitError&&!isLegacyRPC){error.unhandledRejectionEvent.preventDefault();return true;}}
return false;}
registry.category("error_handlers").add("legacyRejectPromiseHandler",legacyRejectPromiseHandler,{sequence:1});return __exports;});;

/* /web/static/src/legacy/legacy_rpc_error_handler.js */
odoo.define('@web/legacy/legacy_rpc_error_handler',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{ConnectionLostError,RPCError}=require("@web/core/network/rpc_service");const{lostConnectionHandler,rpcErrorHandler}=require("@web/core/errors/error_handlers");const errorHandlerRegistry=registry.category("error_handlers");function legacyRPCErrorHandler(env,error,originalError){if(originalError&&originalError.legacy&&originalError.message&&(originalError.message instanceof RPCError||originalError.message instanceof ConnectionLostError)){const event=originalError.event;originalError=originalError.message;if(event.isDefaultPrevented()){error.unhandledRejectionEvent.preventDefault();return true;}
event.preventDefault();if(originalError instanceof ConnectionLostError){return lostConnectionHandler(env,error,originalError);}
return rpcErrorHandler(env,error,originalError);}
return false;}
errorHandlerRegistry.add("legacyRPCErrorHandler",legacyRPCErrorHandler,{sequence:97});return __exports;});;

/* /web/static/src/legacy/root_widget.js */
odoo.define("root.widget",function(require){require("web.legacySetup");const{ComponentAdapter}=require("web.OwlCompatibility");return new ComponentAdapter({Component:owl.Component},owl.Component.env);});;

/* /web/static/src/legacy/systray_menu.js */
odoo.define("web.SystrayMenu",function(){return{Items:[]};});;

/* /web/static/src/legacy/systray_menu_item.js */
odoo.define('@web/legacy/systray_menu_item',async function(require){'use strict';let __exports={};const{ComponentAdapter}=require("web.OwlCompatibility");const legacySystrayMenu=require("web.SystrayMenu");const{registry}=require("@web/core/registry");const{LegacyComponent}=require("@web/legacy/legacy_component");const{Component,xml}=require("@odoo/owl");const systrayRegistry=registry.category("systray");class SystrayItemAdapter extends ComponentAdapter{constructor(){super(...arguments);this.env=Component.env;}}
const legacySystrayMenuItems=legacySystrayMenu.Items;const convertedItems=[];let id=1;const legacySystrayItemTemplate=xml`<SystrayItemAdapter Component="Widget" />`;function addSystrayItem(Widget){const name=`_legacy_systray_item_${id++}`;class SystrayItem extends LegacyComponent{setup(){this.Widget=Widget;}}
SystrayItem.template=legacySystrayItemTemplate;SystrayItem.components={SystrayItemAdapter};systrayRegistry.add(name,{Component:SystrayItem},{sequence:Widget.prototype.sequence});convertedItems.push(Widget);}
legacySystrayMenuItems.forEach(addSystrayItem);const push=legacySystrayMenuItems.push.bind(legacySystrayMenuItems);legacySystrayMenuItems.push=function(Widget){push(Widget);addSystrayItem(Widget);};const splice=legacySystrayMenuItems.splice.bind(legacySystrayMenuItems);legacySystrayMenuItems.splice=function(){splice(...arguments);legacySystrayMenuItems.forEach((Widget)=>{if(!convertedItems.includes(Widget)){addSystrayItem(Widget);}});};return __exports;});;

/* /web/static/src/legacy/backend_utils.js */
odoo.define('@web/legacy/backend_utils',async function(require){'use strict';let __exports={};const ActionModel=require("@web/legacy/js/views/action_model")[Symbol.for("default")];const{makeContext}=require("@web/core/context");function searchModelStateFromLegacy(state){const parsedState=JSON.parse(state);const newState={};if(parsedState.ControlPanelModelExtension){const{query,filters,nextGroupId,nextGroupNumber,nextId,}=parsedState.ControlPanelModelExtension;newState.nextGroupId=nextGroupId;newState.nextGroupNumber=nextGroupNumber;newState.nextId=nextId;newState.query=[];newState.searchItems={};for(const queryElem of query){const filterId=queryElem.filterId;const filter=filters[filterId];const newQueryElem={searchItemId:filterId};switch(filter.type){case"filter":if(filter.hasOptions){newQueryElem.generatorId=queryElem.optionId;}
break;case"groupBy":if(filter.hasOptions){newQueryElem.intervalId=queryElem.optionId;}
break;case"field":newQueryElem.autocompleteValue={value:queryElem.value,label:queryElem.label,operator:queryElem.operator,};break;}
newState.query.push(newQueryElem);}
for(const filter of Object.values(filters)){const item=Object.assign({},filter);switch(item.type){case"groupBy":if(filter.hasOptions){item.type="dateGroupBy";item.defaultIntervalId=item.defaultOptionId;delete item.hasOptions;delete item.defaultOptionId;}
break;case"filter":if(filter.hasOptions){item.type="dateFilter";item.defaultGeneratorId=item.defaultOptionId;delete item.hasOptions;delete item.isDateFilter;delete item.defaultOptionId;}
break;case"favorite":item.orderBy=item.orderedBy;delete item.orderedBy;break;}
newState.searchItems[filter.id]=item;}}
if(parsedState.SearchPanelModelExtension){const{sections,searchPanelInfo}=parsedState.SearchPanelModelExtension;newState.sections=sections;newState.searchPanelInfo=searchPanelInfo;if(newState.searchPanelInfo){newState.searchPanelInfo.loaded=true;}}
for(const[key,extension]of Object.entries(ActionModel.registry.entries())){if(!["ControlPanel","SearchPanel"].includes(key)&&parsedState[extension.name]!==undefined){newState[key]=parsedState[extension.name];}}
if(!Object.keys(newState).length){return;}
return JSON.stringify(newState);}
__exports.searchModelStateToLegacy=searchModelStateToLegacy;function searchModelStateToLegacy(state){if(!state){return;}
const parsedState=JSON.parse(state);const query=[];for(const queryElem of parsedState.query){const searchItemId=queryElem.searchItemId;const searchItem=parsedState.searchItems[searchItemId];const groupId=searchItem.groupId;const legacyQueryElem={filterId:searchItemId,groupId};switch(searchItem.type){case"dateFilter":legacyQueryElem.optionId=queryElem.generatorId;break;case"dateGroupBy":legacyQueryElem.optionId=queryElem.intervalId;break;case"comparison":legacyQueryElem.type="comparison";legacyQueryElem.dateFilterId=searchItem.dateFilterId;break;case"field":legacyQueryElem.value=queryElem.autocompleteValue.value;legacyQueryElem.label=queryElem.autocompleteValue.label;legacyQueryElem.operator=queryElem.autocompleteValue.operator;break;}
query.push(legacyQueryElem);}
const filters={};for(const item of Object.values(parsedState.searchItems)){const filter=Object.assign({},item);switch(item.type){case"dateGroupBy":filter.type="groupBy";filter.hasOptions=true;filter.defaultOptionId=item.defaultIntervalId;delete filter.defaultIntervalId;break;case"dateFilter":filter.type="filter";filter.isDateFilter=true;filter.hasOptions=true;filter.defaultOptionId=item.defaultGeneratorId;delete filter.defaultGeneratorId;break;case"favorite":filter.orderedBy=item.orderBy;delete filter.orderBy;break;case"filter":{let context=item.context;try{context=makeContext([context]);}catch(_e){}
filter.context=context;}}
filters[item.id]=filter;}
const{nextGroupId,nextGroupNumber,nextId,sections,searchPanelInfo}=parsedState;const legacyState={};legacyState.ControlPanelModelExtension={query,filters,nextGroupId,nextGroupNumber,nextId,};legacyState.SearchPanelModelExtension={sections,searchPanelInfo};for(const[key,extension]of Object.entries(ActionModel.registry.entries())){if(!["ControlPanel","SearchPanel"].includes(key)&&parsedState[key]!==undefined){legacyState[extension.name]=parsedState[key];}}
return JSON.stringify(legacyState);}
__exports.getGlobalState=getGlobalState;function getGlobalState(legacyControllerState){const{resIds,searchModel,searchPanel}=legacyControllerState;const globalState={};if(searchPanel){globalState.searchPanel=searchPanel;}
if(resIds){globalState.resIds=resIds;}
const newSearchModel=searchModelStateFromLegacy(searchModel);if(newSearchModel){globalState.searchModel=newSearchModel;}
return globalState;}
__exports.getLocalState=getLocalState;function getLocalState(legacyControllerState){const state=Object.assign({},legacyControllerState);if("currentId"in state){state.resId=state.currentId;delete state.currentId;}
delete state.searchModel;delete state.searchPanel;delete state.resIds;return state;}
__exports.mapDoActionOptionAPI=mapDoActionOptionAPI;function mapDoActionOptionAPI(legacyOptions){legacyOptions=legacyOptions||{};Object.assign(legacyOptions,{additionalContext:legacyOptions.additional_context,clearBreadcrumbs:legacyOptions.clear_breadcrumbs,viewType:legacyOptions.view_type,onClose:legacyOptions.on_close,props:Object.assign({resId:legacyOptions.res_id},legacyOptions.props),});if(legacyOptions.controllerState){legacyOptions.props.globalState=getGlobalState(legacyOptions.controllerState);}
delete legacyOptions.additional_context;delete legacyOptions.clear_breadcrumbs;delete legacyOptions.view_type;delete legacyOptions.res_id;delete legacyOptions.on_close;return legacyOptions;}
__exports.makeLegacyActionManagerService=makeLegacyActionManagerService;function makeLegacyActionManagerService(legacyEnv){return{dependencies:["action"],start(env){function do_action(action,options){const legacyOptions=mapDoActionOptionAPI(options);return env.services.action.doAction(action,legacyOptions);}
legacyEnv.bus.on("do-action",null,(payload)=>{const{action,options}=payload;do_action(action,options);});return{do_action};},};}
__exports.breadcrumbsToLegacy=breadcrumbsToLegacy;function breadcrumbsToLegacy(breadcrumbs){if(!breadcrumbs){return;}
return breadcrumbs.slice(0,-1).map((bc)=>{return{title:bc.name,controllerID:bc.jsId};});}
return __exports;});;

/* /web/static/src/legacy/utils.js */
odoo.define('@web/legacy/utils',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const AbstractStorageService=require("web.AbstractStorageService");const{ConnectionAbortedError,RPCError,makeErrorFromResponse,ConnectionLostError,}=require("@web/core/network/rpc_service");const{ErrorDialog}=require("@web/core/errors/error_dialogs");const{useService}=require("@web/core/utils/hooks");const{useComponent}=require("@odoo/owl");const wowlServicesSymbol=__exports.wowlServicesSymbol=Symbol("wowlServices");__exports.makeLegacyRpcService=makeLegacyRpcService;function makeLegacyRpcService(legacyEnv){return{start(env){legacyEnv.bus.on("rpc_request",null,(rpcId)=>{env.bus.trigger("RPC:REQUEST",rpcId);});legacyEnv.bus.on("rpc_response",null,(rpcId)=>{env.bus.trigger("RPC:RESPONSE",rpcId);});legacyEnv.bus.on("rpc_response_failed",null,(rpcId)=>{env.bus.trigger("RPC:RESPONSE",rpcId);});},};}
__exports.makeLegacyDialogMappingService=makeLegacyDialogMappingService;function makeLegacyDialogMappingService(legacyEnv){return{dependencies:["ui","hotkey"],start(env){const{ui,hotkey}=env.services;function getModalEl(dialog){return dialog.modalRef?dialog.modalRef.el:dialog.$modal[0];}
function getCloseCallback(dialog){return dialog.modalRef?()=>dialog._close():()=>dialog.$modal.modal("hide");}
const dialogHotkeyRemoveMap=new Map();function onOpenDialog(dialog){ui.activateElement(getModalEl(dialog));const remove=hotkey.add("escape",getCloseCallback(dialog));dialogHotkeyRemoveMap.set(dialog,remove);}
function onCloseDialog(dialog){ui.deactivateElement(getModalEl(dialog));if(dialogHotkeyRemoveMap.has(dialog)){const removeHotkey=dialogHotkeyRemoveMap.get(dialog);removeHotkey();dialogHotkeyRemoveMap.delete(dialog);}}
legacyEnv.bus.on("legacy_dialog_opened",null,onOpenDialog);legacyEnv.bus.on("legacy_dialog_destroyed",null,onCloseDialog);legacyEnv.bus.on("owl_dialog_mounted",null,onOpenDialog);legacyEnv.bus.on("owl_dialog_willunmount",null,onCloseDialog);},};}
__exports.makeLegacyCommandService=makeLegacyCommandService;function makeLegacyCommandService(legacyEnv){return{dependencies:["command"],start(env){const{command}=env.services;const commandRemoveMap=new Map();function setLegacyCommand(uniqueId,getCommandDefinition){const{name,action,options}=getCommandDefinition(env);removeLegacyCommand(uniqueId);commandRemoveMap.set(uniqueId,command.add(name,action,options));}
function removeLegacyCommand(uniqueId){if(commandRemoveMap.has(uniqueId)){const removeCommand=commandRemoveMap.get(uniqueId);removeCommand();commandRemoveMap.delete(uniqueId);}}
function openMainPalette(config={}){command.openMainPalette(config);}
legacyEnv.bus.on("set_legacy_command",null,setLegacyCommand);legacyEnv.bus.on("remove_legacy_command",null,removeLegacyCommand);legacyEnv.bus.on("openMainPalette",null,openMainPalette);},};}
__exports.makeLegacyDropdownService=makeLegacyDropdownService;function makeLegacyDropdownService(legacyEnv){return{dependencies:["ui","hotkey"],start(_,{ui,hotkey}){legacyEnv.services.ui=ui;legacyEnv.services.hotkey=hotkey;},};}
__exports.makeLegacySessionService=makeLegacySessionService;function makeLegacySessionService(legacyEnv,session){return{dependencies:["user"],start(env){function mapContext(){return Object.assign({},env.services.user.context);}
Object.defineProperty(legacyEnv.session,"userContext",{get:()=>mapContext(),});Object.defineProperty(session,"user_context",{get:()=>mapContext(),});},};}
__exports.mapLegacyEnvToWowlEnv=mapLegacyEnvToWowlEnv;function mapLegacyEnvToWowlEnv(legacyEnv,wowlEnv){legacyEnv[wowlServicesSymbol]=wowlEnv.services;legacyEnv.session.rpc=(...args)=>{let rejection;const prom=new Promise((resolve,reject)=>{const[route,params,settings={}]=args;if(params&&params.kwargs){params.kwargs.context=Object.assign({},legacyEnv.session.user_context,params.kwargs.context,);}
const jsonrpc=wowlEnv.services.rpc(route,params,{silent:settings.shadow,xhr:settings.xhr,});rejection=()=>{jsonrpc.abort();};jsonrpc.then(resolve).catch((reason)=>{if(reason instanceof RPCError||reason instanceof ConnectionLostError){reject({message:reason,event:$.Event(),legacy:true});}else if(reason instanceof ConnectionAbortedError){reject({message:reason.message,event:$.Event("abort")});}else{reject(reason);}});});prom.abort=rejection;return prom;};function mapStorage(storage){const StorageService=AbstractStorageService.extend({storage});return new StorageService();}
legacyEnv.services.local_storage=mapStorage(browser.localStorage);legacyEnv.services.session_storage=mapStorage(browser.sessionStorage);legacyEnv.services.dialog=wowlEnv.services.dialog;wowlEnv.bus.addEventListener("WEB_CLIENT_READY",()=>{legacyEnv.bus.trigger("web_client_ready");});wowlEnv.bus.addEventListener("SCROLLER:ANCHOR_LINK_CLICKED",(ev)=>{legacyEnv.bus.trigger("SCROLLER:ANCHOR_LINK_CLICKED",ev.detail);});legacyEnv.bus.on("clear_cache",null,()=>{wowlEnv.bus.trigger("CLEAR-CACHES");});}
const reBSTooltip=/^bs-.*$/;__exports.cleanDomFromBootstrap=cleanDomFromBootstrap;function cleanDomFromBootstrap(){const body=document.body;const tooltips=body.querySelectorAll("body .tooltip");for(const tt of tooltips){if(Array.from(tt.classList).find((cls)=>reBSTooltip.test(cls))){tt.parentNode.removeChild(tt);}}}
__exports.makeLegacyNotificationService=makeLegacyNotificationService;function makeLegacyNotificationService(legacyEnv){return{dependencies:["notification"],start(env,{notification}){let notifId=0;const idsToRemoveFn={};function notify({title,message,subtitle,buttons=[],sticky,type,className,onClose,}){if(subtitle){title=[title,subtitle].filter(Boolean).join(" ");}
if(!message&&title){message=title;title=undefined;}
buttons=buttons.map((button)=>{return{name:button.text,icon:button.icon,primary:button.primary,onClick:button.click,};});const removeFn=notification.add(message,{sticky,title,type,className,onClose,buttons,});const id=++notifId;idsToRemoveFn[id]=removeFn;return id;}
function close(id,_,wait){const removeFn=idsToRemoveFn[id];delete idsToRemoveFn[id];if(wait){browser.setTimeout(()=>{removeFn(id);},wait);}else{removeFn(id);}}
legacyEnv.services.notification={notify,close};},};}
__exports.makeLegacyCrashManagerService=makeLegacyCrashManagerService;function makeLegacyCrashManagerService(legacyEnv){return{dependencies:["dialog"],start(env){legacyEnv.services.crash_manager={show_message(message){env.services.dialog.add(ErrorDialog,{traceback:message});},rpc_error(errorResponse){Promise.reject(makeErrorFromResponse(errorResponse));},};},};}
__exports.wrapSuccessOrFail=wrapSuccessOrFail;function wrapSuccessOrFail(promise,{on_success,on_fail}={}){return promise.then(on_success||(()=>{})).catch((reason)=>{let alreadyThrown=false;if(on_fail){alreadyThrown=on_fail(reason)==="alreadyThrown";}
const error=reason instanceof Error&&"cause"in reason?reason.cause:reason;if(error instanceof Error&&!alreadyThrown){throw reason;}});}
__exports.makeLegacyRainbowManService=makeLegacyRainbowManService;function makeLegacyRainbowManService(legacyEnv){return{dependencies:["effect"],start(env,{effect}){legacyEnv.bus.on("show-effect",null,(payload)=>{effect.add(payload);});},};}
__exports.useLegacyRefs=useLegacyRefs;function useLegacyRefs(){const env=owl.useEnv();let legacyRefs;if(env.legacyRefs){legacyRefs=env.legacyRefs;}else{legacyRefs={component:null,widget:null,};}
owl.useChildSubEnv({legacyRefs,});return legacyRefs;}
__exports.useWowlService=useWowlService;function useWowlService(serviceName){const component=useComponent();const env=component.env;component.env={services:env[wowlServicesSymbol]};const service=useService(serviceName);component.env=env;return service;}
return __exports;});;

/* /web/static/src/legacy/web_client.js */
odoo.define("web.web_client",function(){return{};});odoo.define("web.pseudo_web_client",function(require){const FakeWebClient=require("web.web_client");function makeLegacyWebClientService(legacyEnv){const legacyPseudoWebClient={dependencies:["title","router"],start(env){function setTitlePart(part,title=null){env.services.title.setParts({[part]:title});}
legacyEnv.bus.on("set_title_part",null,(params)=>{const{part,title}=params;setTitlePart(part,title||null);});Object.assign(FakeWebClient,{do_push_state(state){if("title"in state){setTitlePart("action",state.title);delete state.title;}
env.services.router.pushState(state);},set_title(title){setTitlePart("action",title);},});},};return legacyPseudoWebClient;}
return makeLegacyWebClientService;});;

/* /web/static/src/legacy/js/_deprecated/basic_fields.js */
odoo.define('web.basic_fields.deprecated',function(require){"use strict";var AbstractField=require('web.AbstractField');var core=require('web.core');var _lt=core._lt;var FieldBoolean=AbstractField.extend({className:'o_field_boolean',description:_lt("Checkbox"),events:_.extend({},AbstractField.prototype.events,{change:'_onChange',}),supportedFieldTypes:['boolean'],isQuickEditable:true,activate:function(options){var activated=this._super.apply(this,arguments);if(activated&&options&&options.event&&$(options.event.target).closest('.form-check').length){this._setValue(!this.value);}
return activated;},getFocusableElement:function(){return this.mode==='readonly'?$():this.$input;},isSet:function(){return true;},reset:function(record,event){var rendered=this._super.apply(this,arguments);if(event&&event.target.name===this.name){this.activate();}
return rendered;},setIDForLabel:function(id){this._super.apply(this,arguments);this.$('.form-check-label').attr('for',id);},_quickEdit:function(extraInfo){this._super(...arguments);this._setValue(extraInfo.value===undefined?!this.value:extraInfo.value);},_getQuickEditExtraInfo(){return{value:!this.value,};},_render:function(){var $checkbox=this._formatValue(this.value);this.$input=$checkbox.find('input');this.$input.prop('disabled',this.hasReadonlyModifier&&this.mode!='edit');this.$el.addClass($checkbox.attr('class'));this.$el.empty().append($checkbox.contents());},_onChange:function(){this._setValue(this.$input[0].checked);},_onKeydown:function(ev){switch(ev.which){case $.ui.keyCode.ENTER:ev.preventDefault();this.$input.prop('checked',!this.value);this._setValue(!this.value);return;case $.ui.keyCode.UP:case $.ui.keyCode.RIGHT:case $.ui.keyCode.DOWN:case $.ui.keyCode.LEFT:ev.preventDefault();}
this._super.apply(this,arguments);},});return{FieldBoolean:FieldBoolean,};});;

/* /web/static/src/legacy/js/_deprecated/crash_manager_warning_dialog.js */
odoo.define('@web/legacy/js/_deprecated/crash_manager_warning_dialog',async function(require){'use strict';let __exports={};const Dialog=require("web.Dialog");const core=require("web.core");const WarningDialog=__exports.WarningDialog=Dialog.extend({template:'web.LegacyWarningDialog',init:function(parent,options,error){options.size=options.size||"medium";this._super.apply(this,[parent,options]);this.message=error.message;core.bus.off('close_dialogs',this);},open:function(){this._super({shouldFocusButtons:true});},});return __exports;});;

/* /web/static/src/legacy/js/_deprecated/data.js */
odoo.define('web.data',function(require){"use strict";var Class=require('web.Class');var Context=require('web.Context');var concurrency=require('web.concurrency');var mixins=require('web.mixins');var session=require('web.session');var translation=require('web.translation');var pyUtils=require('web.py_utils');var _t=translation._t;function serialize_sort(criterion){return _.map(criterion,function(criteria){if(criteria[0]==='-'){return criteria.slice(1)+' DESC';}
return criteria+' ASC';}).join(', ');}
function deserialize_sort(criterion){return _.map(criterion,function(criteria){var split=_.without(criteria.split(' '),'');return(split[1]&&split[1].toLowerCase()==='desc'?'-':'')+split[0];});}
var Query=Class.extend({init:function(model,fields){this._model=model;this._fields=fields;this._filter=[];this._context={};this._lazy=true;this._limit=false;this._offset=0;this._order_by=[];},clone:function(to_set){to_set=to_set||{};var q=new Query(this._model,this._fields);q._context=this._context;q._filter=this._filter;q._lazy=this._lazy;q._limit=this._limit;q._offset=this._offset;q._order_by=this._order_by;for(var key in to_set){if(!to_set.hasOwnProperty(key)){continue;}
switch(key){case'filter':q._filter=(q._filter||[]).concat(to_set.filter||[]);break;case'context':q._context=new Context(q._context,to_set.context);break;case'lazy':case'limit':case'offset':case'order_by':q['_'+key]=to_set[key];}}
return q;},_execute:function(options){var self=this;options=options||{};return session.rpc('/web/dataset/search_read',{model:this._model.name,fields:this._fields||false,domain:pyUtils.eval('domains',[this._model.domain(this._filter)]),context:pyUtils.eval('contexts',[this._model.context(this._context)]),offset:this._offset,limit:this._limit,sort:serialize_sort(this._order_by)},options).then(function(results){self._count=results.length;return results.records;},null);},first:function(options){var self=this;return this.clone({limit:1})._execute(options).then(function(records){delete self._count;if(records.length){return records[0];}
return null;});},all:function(options){return this._execute(options);},count:function(){if(this._count!==undefined){return Promise.resolve(this._count);}
return this._model.call('search_count',[this._filter],{context:this._model.context(this._context)});},group_by:function(grouping){var ctx=pyUtils.eval('context',this._model.context(this._context));if(_.isUndefined(grouping)){grouping=[];}
if(!(grouping instanceof Array)){grouping=_.toArray(arguments);}
if(_.isEmpty(grouping)&&!ctx.group_by_no_leaf){return null;}
var raw_fields=_.map(grouping.concat(this._fields||[]),function(field){return field.split(':')[0];});var self=this;return this._model.call('read_group',{groupby:grouping,fields:_.uniq(raw_fields),domain:this._model.domain(this._filter),context:ctx,offset:this._offset,lazy:this._lazy,limit:this._limit,orderby:serialize_sort(this._order_by)||false}).then(function(results){return _(results).map(function(result){result.__context=result.__context||{};result.__context.group_by=result.__context.group_by||[];_.defaults(result.__context,ctx);var grouping_fields=self._lazy?[grouping[0]]:grouping;return new QueryGroup(self._model.name,grouping_fields,result);});});},context:function(context){if(!context){return this;}
return this.clone({context:context});},filter:function(domain){if(!domain){return this;}
return this.clone({filter:domain});},lazy:function(lazy){return this.clone({lazy:lazy});},limit:function(limit){return this.clone({limit:limit});},offset:function(offset){return this.clone({offset:offset});},order_by:function(fields){if(fields===undefined){return this;}
if(!(fields instanceof Array)){fields=_.toArray(arguments);}
if(_.isEmpty(fields)){return this;}
return this.clone({order_by:fields});}});var QueryGroup=Class.extend({init:function(model,grouping_fields,read_group_group){var fixed_group=_.extend({__context:{group_by:[]},__domain:[]},read_group_group);var count_key=(grouping_fields[0]&&grouping_fields[0].split(':')[0])+'_count';var aggregates={};for(var key in fixed_group){if(fixed_group.hasOwnProperty(key)){if(!(key.indexOf('__')===0||_.contains(grouping_fields,key)||(key===count_key))){aggregates[key]=fixed_group[key]||0;}}}
this.model=new Model(model,fixed_group.__context,fixed_group.__domain);var group_size=fixed_group[count_key]||fixed_group.__count||0;var leaf_group=fixed_group.__context.group_by.length===0;var value=(grouping_fields.length===1)?fixed_group[grouping_fields[0]]:_.map(grouping_fields,function(field){return fixed_group[field];});var grouped_on=(grouping_fields.length===1)?grouping_fields[0]:grouping_fields;this.attributes={folded:!!(fixed_group.__fold),grouped_on:grouped_on,length:group_size,value:value,has_children:!(leaf_group&&fixed_group.__context.group_by_no_leaf),aggregates:aggregates};},get:function(key){return this.attributes[key];},subgroups:function(){return this.model.query().group_by(this.model.context().group_by);},query:function(){return this.model.query.apply(this.model,arguments);}});var DataSet=Class.extend(mixins.PropertiesMixin,{init:function(parent,model,context){mixins.PropertiesMixin.init.call(this);this.setParent(parent);this.model=model;this.context=context||{};this.index=null;this._sort=[];this._model=new Model(model,context);this.orderer=new concurrency.DropMisordered();},previous:function(){this.index-=1;if(!this.ids.length){this.index=null;}else if(this.index<0){this.index=this.ids.length-1;}
return this;},next:function(){this.index+=1;if(!this.ids.length){this.index=null;}else if(this.index>=this.ids.length){this.index=0;}
return this;},select_id:function(id){var idx=this.get_id_index(id);if(idx===null){return false;}else{this.index=idx;return true;}},get_id_index:function(id){for(var i=0,ii=this.ids.length;i<ii;i++){if(id==this.ids[i]){return i;}}
return null;},read_ids:function(ids,fields,options){if(_.isEmpty(ids)){return Promise.resolve([]);}
options=options||{};var method='read';var ids_arg=ids;var context=this.get_context(options.context);if(options.check_access_rule===true){method='search_read';ids_arg=[['id','in',ids]];context=new Context(context,{active_test:false});}
return this._model.call(method,[ids_arg,fields||false],{context:context}).then(function(records){if(records.length<=1){return records;}
var indexes={};for(var i=0;i<ids.length;i++){indexes[ids[i]]=i;}
records.sort(function(a,b){return indexes[a.id]-indexes[b.id];});return records;});},read_slice:function(fields,options){var self=this;options=options||{};var query=this._model.query(fields).limit(options.limit||false).offset(options.offset||0).all();var prom=this.orderer.add(query);prom.then(function(records){self.ids=_(records).pluck('id');});return prom;},read_index:function(fields,options){options=options||{};return this.read_ids([this.ids[this.index]],fields,options).then(function(records){if(_.isEmpty(records)){return Promise.reject();}
return records[0];});},default_get:function(fields,options){options=options||{};return this._model.call('default_get',[fields],{context:this.get_context(options.context)});},create:function(data,options){var self=this;var prom=this._model.call('create',[data],{context:this.get_context()});prom.then(function(){self.trigger('dataset_changed',data,options);});return prom;},write:function(id,data,options){options=options||{};var self=this;var prom=this._model.call('write',[[id],data],{context:this.get_context(options.context)});prom.then(function(){self.trigger('dataset_changed',id,data,options);});return prom;},unlink:function(ids){var self=this;var prom=this._model.call('unlink',[ids],{context:this.get_context()});prom.then(function(){self.trigger('dataset_changed',ids);});return prom;},call:function(method,args){return this._model.call(method,args);},call_button:function(method,args){return this._model.call_button(method,args);},name_get:function(ids){return this._model.call('name_get',[ids],{context:this.get_context()});},name_search:function(name,domain,operator,limit){return this._model.call('name_search',{name:name||'',args:domain||false,operator:operator||'ilike',context:this._model.context(),limit:limit||0});},name_create:function(name,context){return this._model.call('name_create',[name],{context:this.get_context(context)});},get_context:function(request_context){return this._model.context(request_context);},sort:function(field,force_reverse){if(!field){return serialize_sort(this._sort);}
var reverse=force_reverse||(this._sort[0]===field);this._sort.splice.apply(this._sort,[0,this._sort.length].concat(_.without(this._sort,field,'-'+field)));this._sort.unshift((reverse?'-':'')+field);return undefined;},set_sort:function(fields_list){this._sort=deserialize_sort(fields_list);},size:function(){return this.ids.length;},alter_ids:function(n_ids){this.ids=n_ids;},remove_ids:function(ids){this.alter_ids(_(this.ids).difference(ids));},add_ids:function(ids,at){var args=[at,0].concat(_.difference(ids,this.ids));this.ids.splice.apply(this.ids,args);},resequence:function(ids,options){options=options||{};return session.rpc('/web/dataset/resequence',{model:this.model,ids:ids,context:pyUtils.eval('context',this.get_context(options.context)),}).then(function(results){return results;});},});var DataSetStatic=DataSet.extend({init:function(parent,model,context,ids){this._super(parent,model,context);this.ids=ids||[];},read_slice:function(fields,options){options=options||{};fields=fields||{};var offset=options.offset||0,limit=options.limit||false;var end_pos=limit&&limit!==-1?offset+limit:this.ids.length;return this.read_ids(this.ids.slice(offset,end_pos),fields,options);},set_ids:function(ids){this.ids=ids;if(ids.length===0){this.index=null;}else if(this.index>=ids.length-1){this.index=ids.length-1;}},unlink:function(ids){this.set_ids(_.without.apply(null,[this.ids].concat(ids)));this.trigger('unlink',ids);return Promise.resolve({result:true});},});var DataSetSearch=DataSet.extend({init:function(parent,model,context,domain){this._super(parent,model,context);this.domain=domain||[];this._length=null;this.ids=[];this._model=new Model(model,context,domain);},read_slice:function(fields,options){options=options||{};var self=this;var q=this._model.query(fields||false).filter(options.domain).context(options.context).offset(options.offset||0).limit(options.limit||false);q=q.order_by.apply(q,this._sort);var prom=this.orderer.add(q.all());prom.then(function(records){q.count().then(function(count){self._length=count;});self.ids=_(records).pluck('id');});return prom;},get_domain:function(other_domain){return this._model.domain(other_domain);},alter_ids:function(ids){this._super(ids);if(this.index!==null&&this.index>=this.ids.length){this.index=this.ids.length>0?this.ids.length-1:0;}},remove_ids:function(ids){var before=this.ids.length;this._super(ids);if(this._length){this._length-=(before-this.ids.length);}},add_ids:function(ids,at){var before=this.ids.length;this._super(ids,at);if(this._length){this._length+=(this.ids.length-before);}},unlink:function(ids,callback,error_callback){var self=this;var prom=this._super(ids);prom.then(function(){self.remove_ids(ids);self.trigger("dataset_changed",ids,callback,error_callback);});return prom;},size:function(){if(this._length!==null){return this._length;}
return this._super();}});var data={Query:Query,DataSet:DataSet,DataSetStatic:DataSetStatic,DataSetSearch:DataSetSearch,noDisplayContent:"<em class=\"text-warning\">"+_t("Unnamed")+"</em>",};var Model=Class.extend({init:function(name,context,domain){this.name=name;this._context=context||{};this._domain=domain||[];},get_func:function(method_name){var self=this;return function(){return self.call(method_name,_.toArray(arguments));};},query:function(fields){return new data.Query(this,fields);},domain:function(domain){if(!domain){return this._domain;}
return this._domain.concat(domain);},context:function(context){return new Context(session.user_context,this._context,context||{});},call:function(method,args,kwargs,options){args=args||[];kwargs=kwargs||{};if(!_.isArray(args)){kwargs=args;args=[];}
pyUtils.ensure_evaluated(args,kwargs);var call_kw='/web/dataset/call_kw/'+this.name+'/'+method;return session.rpc(call_kw,{model:this.name,method:method,args:args,kwargs:kwargs},options);},call_button:function(method,args){pyUtils.ensure_evaluated(args,{});var context=(args||[]).length>0?args.pop():{};return session.rpc('/web/dataset/call_button',{model:this.name,method:method,args:args||[],kwargs:{context:context},});},});return data;});;

/* /web/static/src/legacy/js/chrome/abstract_action.js */
odoo.define('@web/legacy/js/chrome/abstract_action',async function(require){'use strict';let __exports={};const ActionMixin=require("web.ActionMixin");const ActionModel=require("web.ActionModel");const ControlPanel=require("web.ControlPanel");const Widget=require("web.Widget");const{ComponentWrapper}=require("web.OwlCompatibility");const{Component}=require("@odoo/owl");const AbstractAction=Widget.extend(ActionMixin,{config:{ControlPanel:ControlPanel,},hasControlPanel:false,loadControlPanel:false,withSearchBar:false,searchMenuTypes:[],init:function(parent,action,options){this._super(parent);this._title=action.display_name||action.name;this.searchModelConfig={context:Object.assign({},action.context),domain:action.domain||[],env:Component.env,searchMenuTypes:this.searchMenuTypes,};this.extensions={};if(this.hasControlPanel){this.extensions.ControlPanel={actionId:action.id,withSearchBar:this.withSearchBar,};this.viewId=action.search_view_id&&action.search_view_id[0];this.controlPanelProps={action,breadcrumbs:options&&options.breadcrumbs,withSearchBar:this.withSearchBar,searchMenuTypes:this.searchMenuTypes,};}},willStart:async function(){const superPromise=this._super(...arguments);if(this.hasControlPanel){if(this.loadControlPanel){const{context,modelName}=this.searchModelConfig;const options={load_filters:this.searchMenuTypes.includes('favorite')};const{arch,fields,favoriteFilters}=await this.loadFieldView(modelName,context||{},this.viewId,'search',options);const archs={search:arch};const{ControlPanel:controlPanelInfo}=ActionModel.extractArchInfo(archs);Object.assign(this.extensions.ControlPanel,{archNodes:controlPanelInfo.children,favoriteFilters,fields,});this.controlPanelProps.fields=fields;}}
this.searchModel=new ActionModel(this.extensions,this.searchModelConfig);if(this.hasControlPanel){this.controlPanelProps.searchModel=this.searchModel;}
return Promise.all([superPromise,this.searchModel.load(),]);},start:async function(){await this._super(...arguments);if(this.hasControlPanel){if('title'in this.controlPanelProps){this._setTitle(this.controlPanelProps.title);}
this.controlPanelProps.title=this.getTitle();this._controlPanelWrapper=new ComponentWrapper(this,this.config.ControlPanel,this.controlPanelProps);await this._controlPanelWrapper.mount(this.el,{position:'first-child'});}},destroy:function(){this._super.apply(this,arguments);ActionMixin.destroy.call(this);},on_attach_callback:function(){ActionMixin.on_attach_callback.call(this);this.searchModel.on('search',this,this._onSearch);if(this.hasControlPanel){this.searchModel.on('get-controller-query-params',this,this._onGetOwnedQueryParams);}},on_detach_callback:function(){ActionMixin.on_detach_callback.call(this);this.searchModel.off('search',this);if(this.hasControlPanel){this.searchModel.off('get-controller-query-params',this);}},_onSearch:function(){},});__exports[Symbol.for("default")]=AbstractAction;return __exports;});odoo.define(`web.AbstractAction`,async function(require){return require('@web/legacy/js/chrome/abstract_action')[Symbol.for("default")];});;

/* /web/static/src/legacy/js/chrome/action_mixin.js */
odoo.define('web.ActionMixin',function(require){"use strict";const core=require('web.core');const{WidgetAdapterMixin}=require('web.OwlCompatibility');const ActionMixin=Object.assign({},WidgetAdapterMixin,{template:'Action',contentTemplate:null,custom_events:{get_controller_query_params:'_onGetOwnedQueryParams',},_controlPanel:null,_title:'',renderElement:function(){this._super.apply(this,arguments);if(this.contentTemplate){const content=core.qweb.render(this.contentTemplate,{widget:this});this.$('.o_content').append(content);}},willRestore:function(){},canBeRemoved:function(){return Promise.resolve();},getOwnedQueryParams:function(){return{};},getState:function(){return{};},getTitle:function(){return this._title;},renderButtons:function($node){},updateButtons:function(){},updateControlPanel:async function(newProps={}){if(!this.withControlPanel&&!this.hasControlPanel){return;}
const props=Object.assign({},newProps);if('title'in props){this._setTitle(props.title);this.controlPanelProps.title=this.getTitle();delete props.title;}
if('cp_content'in props){this.controlPanelProps.cp_content=Object.assign({},this.controlPanelProps.cp_content,props.cp_content,);delete props.cp_content;}
Object.assign(this.controlPanelProps,props);return this._controlPanelWrapper.update(this.controlPanelProps);},_setTitle:function(title){this._title=title;},_onGetOwnedQueryParams:function(callback){const state=this.getOwnedQueryParams();callback(state||{});},});return ActionMixin;});;

/* /web/static/src/legacy/js/components/action_menus.js */
odoo.define('web.ActionMenus',function(require){"use strict";const Context=require('web.Context');const DropdownMenu=require('web.DropdownMenu');const Registry=require('web.Registry');const{LegacyComponent}=require("@web/legacy/legacy_component");const{onMounted,onPatched,onWillStart,onWillUpdateProps,}=owl;let registryActionId=1;class ActionMenus extends LegacyComponent{setup(){this.actionButtonStrings={title:this.env._t("Action"),hotkey:this.env._t("Additionnal actions"),};this.printButtonStrings={title:this.env._t("Print"),hotkey:this.env._t("Printing options"),};onWillStart(async()=>{this.actionItems=await this._setActionItems(this.props);this.printItems=await this._setPrintItems(this.props);});onWillUpdateProps(async(nextProps)=>{this.actionItems=await this._setActionItems(nextProps);this.printItems=await this._setPrintItems(nextProps);});onMounted(()=>{this._addTooltips();});onPatched(()=>{this._addTooltips();});}
_addTooltips(){$(this.el.querySelectorAll('[title]')).tooltip({delay:{show:500,hide:0}});}
async _setActionItems(props){const callbackActions=(props.items.other||[]).map(action=>Object.assign({key:`action-${action.description}`},action));const actionActions=props.items.action||[];const relateActions=props.items.relate||[];const formattedActions=[...actionActions,...relateActions].map(action=>({action,description:action.name,key:action.id}));const registryActions=[];const rpc=this.rpc.bind(this);for(const{Component,getProps}of this.constructor.registry.values()){const itemProps=await getProps(props,this.env,rpc);if(itemProps){registryActions.push({Component,key:`registry-action-${registryActionId++}`,props:itemProps,});}}
return[...callbackActions,...formattedActions,...registryActions];}
async _setPrintItems(props){const printActions=props.items.print||[];const printItems=printActions.map(action=>({action,description:action.name,key:action.id}));return printItems;}
async _executeAction(action){let activeIds=this.props.activeIds;if(this.props.isDomainSelected){activeIds=await this.rpc({model:this.env.action.res_model,method:'search',args:[this.props.domain],kwargs:{limit:this.env.session.active_ids_limit,context:this.props.context,},});}
const activeIdsContext={active_id:activeIds[0],active_ids:activeIds,active_model:this.env.action.res_model,};if(this.props.domain){activeIdsContext.active_domain=this.props.domain;}
const context=new Context(this.props.context,activeIdsContext).eval();const result=await this.rpc({route:'/web/action/load',params:{action_id:action.id,context},});result.context=new Context(result.context||{},activeIdsContext).set_eval_context(context);this.trigger('do-action',{action:result,options:{on_close:()=>this.trigger('reload'),},});}
_onItemSelected(ev){ev.stopPropagation();const{item}=ev.detail;if(item.callback){item.callback([item]);}else if(item.action){this._executeAction(item.action);}else if(item.url){this.env.services.navigate(item.url);}}}
ActionMenus.registry=new Registry();ActionMenus.components={DropdownMenu};ActionMenus.props={activeIds:{type:Array,element:[Number,String]},context:Object,domain:{type:Array,optional:1},isDomainSelected:{type:Boolean,optional:1},items:{type:Object,shape:{action:{type:Array,optional:1},print:{type:Array,optional:1},other:{type:Array,optional:1},},},};ActionMenus.template='web.Legacy.ActionMenus';return ActionMenus;});;

/* /web/static/src/legacy/js/components/custom_checkbox.js */
odoo.define('web.CustomCheckbox',function(require){"use strict";const utils=require('web.utils');const{LegacyComponent}=require("@web/legacy/legacy_component");class CustomCheckbox extends LegacyComponent{setup(){this._id=`checkbox-comp-${utils.generateID()}`;}}
CustomCheckbox.defaultProps={onChange:()=>{},};CustomCheckbox.props={id:{type:[String,Number],optional:1,},class:{type:String,optional:1,},disabled:{type:Boolean,optional:1,},onChange:{type:Function,optional:1,},value:{type:Boolean,optional:1,},text:{type:String,optional:1,},};CustomCheckbox.template='web.CustomCheckbox';return CustomCheckbox;});;

/* /web/static/src/legacy/js/components/custom_file_input.js */
odoo.define('web.CustomFileInput',function(require){"use strict";const{LegacyComponent}=require("@web/legacy/legacy_component");const{useRef}=owl;class CustomFileInput extends LegacyComponent{setup(){this.fileInputRef=useRef('file-input');}
async _onFileInputChange(){const{action,model,id}=this.props;const params={csrf_token:odoo.csrf_token,ufile:[...this.fileInputRef.el.files],};if(model){params.model=model;}
if(id){params.id=id;}
const fileData=await this.env.services.httpRequest(action,params,'text');const parsedFileData=JSON.parse(fileData);if(parsedFileData.error){throw new Error(parsedFileData.error);}
this.trigger('uploaded',{files:parsedFileData});}
_onTriggerClicked(){this.fileInputRef.el.click();}}
CustomFileInput.defaultProps={accepted_file_extensions:'*',action:'/web/binary/upload',multi_upload:false,onUpload:()=>{},};CustomFileInput.props={accepted_file_extensions:{type:String,optional:true},action:{type:String,optional:true},id:{type:Number,optional:true},model:{type:String,optional:true},multi_upload:{type:Boolean,optional:true},onUpload:{type:Function,optional:true},slots:{type:Object,optional:true},};CustomFileInput.template='web.CustomFileInput';return CustomFileInput;});;

/* /web/static/src/legacy/js/components/datepicker.js */
odoo.define('web.DatePickerOwl',function(require){"use strict";const config=require('web.config');const field_utils=require('web.field_utils');const time=require('web.time');const{useAutofocus}=require("@web/core/utils/hooks");const{LegacyComponent}=require("@web/legacy/legacy_component");const{onMounted,onPatched,onWillUnmount,onWillUpdateProps,useExternalListener,useState,}=owl;let datePickerId=0;class DatePicker extends LegacyComponent{setup(){this.state=useState({warning:false});this.datePickerId=`o_datepicker_${datePickerId++}`;this.typeOfDate='date';this.inputRef=useAutofocus();useExternalListener(window,'scroll',this._onWindowScroll);onMounted(()=>{$(this.el).on('show.datetimepicker',this._onDateTimePickerShow.bind(this));$(this.el).on('hide.datetimepicker',this._onDateTimePickerHide.bind(this));$(this.el).on('error.datetimepicker',()=>false);const pickerOptions=Object.assign({format:this.defaultFormat},this.props);this._datetimepicker(pickerOptions);this.inputRef.el.value=this._formatDate(this.props.date);});onWillUnmount(()=>{$(this.el).off('show.datetimepicker hide.datetimepicker error.datetimepicker');this._datetimepicker('destroy');});let newDateReceived=false;onWillUpdateProps((nextProps)=>{for(const prop in nextProps){if(prop=="onDateTimeChanged"){continue;}
this._datetimepicker(prop,nextProps[prop]);}
if(nextProps.date){newDateReceived=true;}});onPatched(()=>{if(newDateReceived){newDateReceived=false;this.inputRef.el.value=this._formatDate(this.props.date);}});}
get defaultFormat(){return time.getLangDateFormat();}
_datetimepicker(...args){this.ignoreBootstrapEvents=true;$(this.el).datetimepicker(...args);this.ignoreBootstrapEvents=false;}
_formatDate(date){try{return field_utils.format[this.typeOfDate](date,null,{timezone:false});}catch(_err){return false;}}
_parseInput(inputValue){try{return field_utils.parse[this.typeOfDate](inputValue,null,{timezone:false});}catch(_err){return false;}}
_onDateTimePickerHide(){if(this.ignoreBootstrapEvents){return;}
const date=this._parseInput(this.inputRef.el.value);this.state.warning=date.format('YYYY-MM-DD')>moment().format('YYYY-MM-DD');this.props.onDateTimeChanged(date);}
_onDateTimePickerShow(){if(this.ignoreBootstrapEvents){return;}
this.inputRef.el.select();}
_onInputClick(){this._datetimepicker('toggle');}
_onInputChange(){const date=this._parseInput(this.inputRef.el.value);if(date){this.state.warning=date.format('YYYY-MM-DD')>moment().format('YYYY-MM-DD');this.props.onDateTimeChanged(date);}else{this.inputRef.el.value=this._formatDate(this.props.date);}}
_onWindowScroll(ev){if(!config.device.isIOS&&ev.target!==this.inputRef.el){this._datetimepicker('hide');}}}
DatePicker.defaultProps={calendarWeeks:true,icons:{clear:'fa fa-delete',close:'fa fa-check primary',date:'fa fa-calendar',down:'fa fa-chevron-down',next:'fa fa-chevron-right',previous:'fa fa-chevron-left',time:'fa fa-clock-o',today:'fa fa-calendar-check-o',up:'fa fa-chevron-up',},get locale(){return moment.locale();},maxDate:moment({y:9999,M:11,d:31}),minDate:moment({y:1000}),useCurrent:false,widgetParent:'body',};DatePicker.props={date:moment,onDateTimeChanged:Function,buttons:{type:Object,shape:{showClear:Boolean,showClose:Boolean,showToday:Boolean,},optional:1,},calendarWeeks:{type:Boolean,optional:true},format:{type:String,optional:1},icons:{type:Object,shape:{clear:String,close:String,date:String,down:String,next:String,previous:String,time:String,today:String,up:String,},optional:true,},keyBinds:{validate:kb=>typeof kb==='object'||kb===null,optional:1},locale:{type:String,optional:true},maxDate:{type:moment,optional:true},minDate:{type:moment,optional:true},readonly:{type:Boolean,optional:1},useCurrent:{type:Boolean,optional:true},widgetParent:{type:String,optional:true},};DatePicker.template="web.Legacy.DatePicker";class DateTimePicker extends DatePicker{setup(){super.setup();this.typeOfDate='datetime';}
get defaultFormat(){return time.getLangDatetimeFormat();}}
DateTimePicker.defaultProps=Object.assign(Object.create(DatePicker.defaultProps),{buttons:{showClear:false,showClose:true,showToday:false,},});return{DatePicker,DateTimePicker,};});;

/* /web/static/src/legacy/js/components/dropdown_menu.js */
odoo.define('web.DropdownMenu',function(require){"use strict";const{_t}=require('web.core');const DropdownMenuItem=require('web.DropdownMenuItem');const{LegacyComponent}=require("@web/legacy/legacy_component");const{useExternalListener,useRef,useState}=owl;class DropdownMenu extends LegacyComponent{setup(){this.dropdownMenu=useRef('dropdown');this.state=useState({open:false});useExternalListener(window,'click',this._onWindowClick,true);useExternalListener(window,'keydown',this._onWindowKeydown);}
get displayCaret(){return false;}
get displayChevron(){return this.env.device.isMobile;}
get dropdownMenuAlignClass(){if(this.env.device.isMobile){const threshold=document.documentElement.clientWidth/2;const{left,right}=this.el.getBoundingClientRect();if(_t.database.parameters.direction==='rtl'){return right>threshold?'dropdown-menu-start':'dropdown-menu-end';}
return left>threshold?'dropdown-menu-end':'dropdown-menu-start';}
return'';}
get icon(){return this.props.icon;}
get items(){return this.props.items;}
get title(){return this.props.title;}
_onButtonKeydown(ev){switch(ev.key){case'ArrowLeft':case'ArrowRight':case'ArrowUp':case'ArrowDown':const firstItem=this.el.querySelector('.dropdown-item');if(firstItem){ev.preventDefault();firstItem.focus();}}}
_onItemSelected(){if(this.props.closeOnSelected){this.state.open=false;}}
_onWindowClick(ev){if(this.state.open&&!this.el.contains(ev.target)&&!this.el.contains(document.activeElement)){if(document.body.classList.contains("modal-open")){const modal=this.el.closest(".modal[role='dialog']:not(.o_inactive_modal)")
if(!modal){return;}}
if(document.querySelector('body > .bootstrap-datetimepicker-widget')){return;}
this.state.open=false;}}
_onWindowKeydown(ev){if(this.state.open&&ev.key==='Escape'){this.state.open=false;}}}
DropdownMenu.components={DropdownMenuItem};DropdownMenu.defaultProps={items:[]};DropdownMenu.props={icon:{type:String,optional:1},items:{type:Array,element:Object,optional:1,},title:{type:String,optional:1},closeOnSelected:{type:Boolean,optional:1},hotkey:{type:String,optional:1},hotkeyTitle:{type:String,optional:1},};DropdownMenu.template='web.DropdownMenu';return DropdownMenu;});;

/* /web/static/src/legacy/js/components/dropdown_menu_item.js */
odoo.define('web.DropdownMenuItem',function(require){"use strict";const{useListener}=require("@web/core/utils/hooks");const{LegacyComponent}=require("@web/legacy/legacy_component");const{useExternalListener,useRef,useState}=owl;class DropdownMenuItem extends LegacyComponent{setup(){this.canBeOpened=Boolean(this.props.options&&this.props.options.length);this.fallbackFocusRef=useRef('fallback-focus');this.state=useState({open:false});useExternalListener(window,'click',this._onWindowClick);useListener('keydown',this._onKeydown);}
_onKeydown(ev){if(['INPUT','TEXTAREA'].includes(document.activeElement.tagName)){return;}
if(['ArrowUp','ArrowDown'].includes(ev.key)){const{key,target}=ev;const items=[].concat(...Element.prototype.querySelectorAll.call(this.el.parentElement,'.o-dropdown-menu .dropdown-item:not(.disabled):not(:disabled)'))
if(!items.length){return}
const shouldGetNext=key==='ArrowDown';const isCycleAllowed=!items.includes(target);let index=items.indexOf(target)
if(index===-1){items[!shouldGetNext&&isCycleAllowed?items.length-1:0].focus();}else{const listLength=items.length
index+=shouldGetNext?1:-1
if(isCycleAllowed){index=(index+listLength)%listLength}
items[Math.max(0,Math.min(index,listLength-1))].focus();}}
switch(ev.key){case'ArrowLeft':if(this.canBeOpened&&this.state.open){ev.preventDefault();if(this.fallbackFocusRef.el){this.fallbackFocusRef.el.focus();}
this.state.open=false;}
break;case'ArrowRight':if(this.canBeOpened&&!this.state.open){ev.preventDefault();this.state.open=true;}
break;case'Escape':ev.target.blur();if(this.canBeOpened&&this.state.open){ev.preventDefault();ev.stopPropagation();if(this.fallbackFocusRef.el){this.fallbackFocusRef.el.focus();}
this.state.open=false;}}}
_onWindowClick(ev){if(this.state.open&&!this.el.contains(ev.target)&&!this.el.contains(document.activeElement)){this.state.open=false;}}}
DropdownMenuItem.template='web.DropdownMenuItem';return DropdownMenuItem;});;

/* /web/static/src/legacy/js/components/pager.js */
odoo.define('web.Pager',function(require){"use strict";const{useAutofocus}=require("@web/core/utils/hooks");const{LegacyComponent}=require("@web/legacy/legacy_component");const{onWillUpdateProps,useState}=owl;class Pager extends LegacyComponent{setup(){this.state=useState({disabled:false,editing:false,});useAutofocus();onWillUpdateProps(this.onWillUpdateProps);}
async onWillUpdateProps(){this.state.editing=false;this.state.disabled=false;}
get maximum(){return Math.min(this.props.currentMinimum+this.props.limit-1,this.props.size);}
get singlePage(){return(1===this.props.currentMinimum)&&(this.maximum===this.props.size);}
get value(){return this.props.currentMinimum+(this.props.limit>1?`-${this.maximum}`:'');}
async _changeSelection(direction){try{await this.props.validate();}catch(_err){return;}
const{limit,size}=this.props;let currentMinimum=(this.props.currentMinimum+limit*direction);if(currentMinimum>size){currentMinimum=1;}else if((currentMinimum<1)&&(limit===1)){currentMinimum=size;}else if((currentMinimum<1)&&(limit>1)){currentMinimum=size-((size%limit)||limit)+1;}
this._updateAndDisable(currentMinimum,limit);}
async _saveValue(value){try{await this.props.validate();}catch(_err){return;}
const[min,max]=value.trim().split(/\s*[\-\s,;]\s*/);let currentMinimum=Math.max(Math.min(parseInt(min,10),this.props.size),1);let maximum=max?Math.max(Math.min(parseInt(max,10),this.props.size),1):min;if(!isNaN(currentMinimum)&&!isNaN(maximum)&&currentMinimum<=maximum){const limit=Math.max(maximum-currentMinimum)+1;this._updateAndDisable(currentMinimum,limit);}}
_updateAndDisable(currentMinimum,limit){if(currentMinimum!==this.props.currentMinimum||limit!==this.props.limit){this.state.disabled=true;}else{this.state.editing=false;}
this.props.onPagerChanged({currentMinimum,limit});}
_onEdit(){if(this.props.editable&&!this.state.editing&&!this.state.disabled){this.state.editing=true;}}
_onValueChange(ev){this._saveValue(ev.currentTarget.value);if(!this.state.disabled){ev.preventDefault();}}
_onValueKeydown(ev){switch(ev.key){case'Enter':ev.preventDefault();ev.stopPropagation();this._saveValue(ev.currentTarget.value);break;case'Escape':ev.preventDefault();ev.stopPropagation();this.state.editing=false;break;}}}
Pager.defaultProps={editable:true,validate:async()=>{},withAccessKey:true,};Pager.props={currentMinimum:{type:Number,optional:1},editable:{type:Boolean,optional:true},limit:{validate:l=>!isNaN(l),optional:1},size:{type:Number,optional:1},validate:{type:Function,optional:true},withAccessKey:{type:Boolean,optional:true},onPagerChanged:Function,};Pager.template='web.legacy.Pager';return Pager;});;

/* /web/static/src/legacy/js/control_panel/comparison_menu.js */
odoo.define("web.ComparisonMenu",function(require){"use strict";const{Dropdown}=require("@web/core/dropdown/dropdown");const{SearchDropdownItem}=require("@web/search/search_dropdown_item/search_dropdown_item");const{FACET_ICONS}=require("web.searchUtils");const{useModel}=require("web.Model");const{LegacyComponent}=require("@web/legacy/legacy_component");class ComparisonMenu extends LegacyComponent{setup(){this.icon=FACET_ICONS.comparison;this.model=useModel('searchModel');}
get items(){return this.model.get('filters',f=>f.type==='comparison');}
onComparisonSelected(itemId){this.model.dispatch("toggleComparison",itemId);}}
ComparisonMenu.template="web.ComparisonMenu";ComparisonMenu.components={Dropdown,DropdownItem:SearchDropdownItem};return ComparisonMenu;});;

/* /web/static/src/legacy/js/control_panel/control_panel.js */
odoo.define('web.ControlPanel',function(require){"use strict";const ActionMenus=require('web.ActionMenus');const ComparisonMenu=require('web.ComparisonMenu');const ActionModel=require('web.ActionModel');const FavoriteMenu=require('web.FavoriteMenu');const FilterMenu=require('web.FilterMenu');const GroupByMenu=require('web.GroupByMenu');const Pager=require('web.Pager');const SearchBar=require('web.SearchBar');const{useModel}=require('web.Model');const{LegacyComponent}=require("@web/legacy/legacy_component");const{onMounted,onPatched,onWillDestroy,onWillUpdateProps,toRaw,useRef,useSubEnv,}=owl;function getAdditionalContent(props){const additionalContent={};if('cp_content'in props){const content=props.cp_content||{};if('$buttons'in content){additionalContent.buttons=content.$buttons;}
if('$searchview'in content){additionalContent.searchView=content.$searchview;}
if('$pager'in content){additionalContent.pager=content.$pager;}
if('$searchview_buttons'in content){additionalContent.searchViewButtons=content.$searchview_buttons;}}
return additionalContent;}
class ControlPanel extends LegacyComponent{setup(){this.additionalContent=getAdditionalContent(this.props);let subEnvView=this.props.view;useSubEnv({action:this.props.action,searchModel:this.props.searchModel,get view(){return subEnvView;},});if(this.env.searchModel){this.model=useModel('searchModel');}
this.contentRefs={buttons:useRef('buttons'),pager:useRef('pager'),searchView:useRef('searchView'),searchViewButtons:useRef('searchViewButtons'),};this.fields=this._formatFields(toRaw(this.props.fields||{}));this.sprintf=_.str.sprintf;onWillDestroy(()=>{const content=this.props.cp_content;if(content){if(content.$buttons){content.$buttons.remove();}
if(content.$searchview){content.$searchview.remove();}
if(content.$pager){content.$pager.remove();}
if(content.$searchview_buttons){content.$searchview_buttons.remove();}}});onMounted(()=>this._attachAdditionalContent());onPatched(()=>this._attachAdditionalContent());onWillUpdateProps((nextProps)=>{if("view"in nextProps){subEnvView=nextProps.view;}
if("fields"in nextProps){this.fields=this._formatFields(toRaw(nextProps.fields));}
this.additionalContent=getAdditionalContent(nextProps);});}
_attachAdditionalContent(){for(const key in this.additionalContent){if(this.additionalContent[key]&&this.additionalContent[key].length){const target=this.contentRefs[key].el;if(target){target.innerHTML="";target.append(...this.additionalContent[key]);}}}}
_formatFields(fields){const formattedFields={};for(const fieldName in fields){formattedFields[fieldName]=Object.assign({description:fields[fieldName].string,name:fieldName,},fields[fieldName]);}
return formattedFields;}}
ControlPanel.modelExtension="ControlPanel";ControlPanel.components={SearchBar,ActionMenus,Pager,ComparisonMenu,FilterMenu,GroupByMenu,FavoriteMenu,};ControlPanel.defaultProps={breadcrumbs:[],fields:{},searchMenuTypes:[],views:[],withBreadcrumbs:true,withSearchBar:true,};ControlPanel.props={action:Object,breadcrumbs:{type:Array,optional:true},searchModel:ActionModel,cp_content:{type:Object,optional:1},fields:{type:Object,optional:true},pager:{validate:p=>typeof p==='object'||p===null,optional:1},searchMenuTypes:{type:Array,optional:true},actionMenus:{validate:s=>typeof s==='object'||s===null,optional:1},title:{type:String,optional:1},view:{type:Object,optional:1},views:{type:Array,optional:true},withBreadcrumbs:{type:Boolean,optional:true},withSearchBar:{type:Boolean,optional:true},};ControlPanel.template='web.Legacy.ControlPanel';return ControlPanel;});;

/* /web/static/src/legacy/js/control_panel/control_panel_model_extension.js */
odoo.define("web/static/src/js/control_panel/control_panel_model_extension.js",function(require){"use strict";const ActionModel=require("web.ActionModel");const Domain=require('web.Domain');const pyUtils=require('web.py_utils');const{DEFAULT_INTERVAL,DEFAULT_PERIOD,getComparisonOptions,getIntervalOptions,getPeriodOptions,constructDateDomain,rankInterval,yearSelected}=require('web.searchUtils');const FAVORITE_PRIVATE_GROUP=1;const FAVORITE_SHARED_GROUP=2;const DISABLE_FAVORITE="search_disable_custom_filters";const{toRaw}=owl;class ControlPanelModelExtension extends ActionModel.Extension{constructor(){super(...arguments);this.actionContext=Object.assign({},this.config.context);this.searchMenuTypes=this.config.searchMenuTypes||[];this.favoriteFilters=this.config.favoriteFilters||[];this.fields=toRaw(this.config.fields||{});this.searchDefaults={};for(const key in this.actionContext){const match=/^search_default_(.*)$/.exec(key);if(match){const val=this.actionContext[key];if(val){this.searchDefaults[match[1]]=val;}
delete this.actionContext[key];}}
this.labelPromises=[];this.referenceMoment=moment();this.optionGenerators=getPeriodOptions(this.referenceMoment);this.intervalOptions=getIntervalOptions();this.comparisonOptions=getComparisonOptions();}
get(property,...args){switch(property){case"context":return this.getContext();case"domain":return this.getDomain();case"facets":return this._getFacets();case"filters":return this._getFilters(...args);case"groupBy":return this.getGroupBy();case"orderedBy":return this.getOrderedBy();case"timeRanges":return this.getTimeRanges();case"irFilterValues":return this.getIrFilterValues({type:"favorite"});}}
async load(){await Promise.all(this.labelPromises);}
prepareState(){Object.assign(this.state,{nextGroupId:1,nextGroupNumber:1,nextId:1,filters:{},query:[],});if(this.config.withSearchBar!==false){this._addFilters();this._activateDefaultFilters();}}
get activeComparison(){return this.state.query.find(queryElem=>queryElem.type==='comparison');}
addAutoCompletionValues({filterId,label,value,operator}){const queryElem=this.state.query.find(queryElem=>queryElem.filterId===filterId&&queryElem.value===value&&queryElem.operator===operator);if(!queryElem){const{groupId}=this.state.filters[filterId];this.state.query.push({filterId,groupId,label,value,operator});}else{queryElem.label=label;}}
clearQuery(){this.state.query=[];}
getIrFilterValues(preFilter){const groups=this._getGroups();const userContext=this.env.session.user_context;let controllerQueryParams;this.config.trigger("get-controller-query-params",params=>{controllerQueryParams=params;});controllerQueryParams=controllerQueryParams||{};controllerQueryParams.context=controllerQueryParams.context||{};const queryContext=this._getContext(groups);const context=pyUtils.eval('contexts',[userContext,controllerQueryParams.context,queryContext]);for(const key in userContext){delete context[key];}
const requireEvaluation=false;const domain=this._getDomain(groups);const groupBys=this._getGroupBy(groups);const timeRanges=this._getTimeRanges(requireEvaluation);const orderedBy=controllerQueryParams.orderedBy?controllerQueryParams.orderedBy:(this._getOrderedBy(groups)||[]);const userId=preFilter.isShared?false:this.env.session.uid;delete preFilter.isShared;Object.assign(preFilter,{context,domain,groupBys,groupNumber:userId?FAVORITE_PRIVATE_GROUP:FAVORITE_SHARED_GROUP,orderedBy,removable:true,userId,});if(timeRanges){preFilter.comparison=timeRanges;}
return this._favoriteToIrFilter(preFilter);}
async createNewFavorite(preFilter){const preFavorite=await this._saveQuery(preFilter);this.clearQuery();const filter=Object.assign(preFavorite,{groupId:this.state.nextGroupId,id:this.state.nextId,});this.state.filters[this.state.nextId]=filter;this.state.query.push({groupId:this.state.nextGroupId,filterId:this.state.nextId});this.state.nextGroupId++;this.state.nextId++;}
createNewFilters(prefilters){if(!prefilters.length){return[];}
const newFilterIdS=[];prefilters.forEach(preFilter=>{const filter=Object.assign(preFilter,{groupId:this.state.nextGroupId,groupNumber:this.state.nextGroupNumber,id:this.state.nextId,type:'filter',});this.state.filters[this.state.nextId]=filter;this.state.query.push({groupId:this.state.nextGroupId,filterId:this.state.nextId});newFilterIdS.push(this.state.nextId);this.state.nextId++;});this.state.nextGroupId++;this.state.nextGroupNumber++;return newFilterIdS;}
createNewGroupBy(field){const groupBy=Object.values(this.state.filters).find(f=>f.type==='groupBy');const filter={description:field.string||field.name,fieldName:field.name,fieldType:field.type,groupId:groupBy?groupBy.groupId:this.state.nextGroupId++,groupNumber:this.state.nextGroupNumber,id:this.state.nextId,type:'groupBy',custom:true,};this.state.filters[this.state.nextId]=filter;if(['date','datetime'].includes(field.type)){filter.hasOptions=true;filter.defaultOptionId=DEFAULT_INTERVAL;this.toggleFilterWithOptions(this.state.nextId);}else{this.toggleFilter(this.state.nextId);}
this.state.nextGroupNumber++;this.state.nextId++;}
deactivateGroup(groupId){this.state.query=this.state.query.filter(queryElem=>queryElem.groupId!==groupId);this._checkComparisonStatus();}
async deleteFavorite(filterId){const{serverSideId}=this.state.filters[filterId];await this.env.dataManager.delete_filter(serverSideId);const index=this.state.query.findIndex(queryElem=>queryElem.filterId===filterId);delete this.state.filters[filterId];if(index>=0){this.state.query.splice(index,1);}}
getContext(){const groups=this._getGroups();return this._getContext(groups);}
getDomain(){const groups=this._getGroups();const userContext=this.env.session.user_context;try{return Domain.prototype.stringToArray(this._getDomain(groups),Object.assign({},this.actionContext,userContext));}catch(err){throw new Error(`${this.env._t("Control panel model extension failed to evaluate domain")}:/n${JSON.stringify(err)}`);}}
getGroupBy(){const groups=this._getGroups();return this._getGroupBy(groups);}
getOrderedBy(){const groups=this._getGroups();return this._getOrderedBy(groups);}
getTimeRanges(){const requireEvaluation=true;return this._getTimeRanges(requireEvaluation);}
search(){}
toggleComparison(filterId){const{groupId,dateFilterId}=this.state.filters[filterId];const queryElem=this.state.query.find(queryElem=>queryElem.type==='comparison'&&queryElem.filterId===filterId);this.state.query=this.state.query.filter(queryElem=>queryElem.type!=='comparison');if(!queryElem){this.state.query.push({groupId,filterId,dateFilterId,type:'comparison',});}}
toggleFilter(filterId){const index=this.state.query.findIndex(queryElem=>queryElem.filterId===filterId);if(index>=0){this.state.query.splice(index,1);}else{const{groupId,type}=this.state.filters[filterId];if(type==='favorite'){this.state.query=[];}
this.state.query.push({groupId,filterId});}}
toggleFilterWithOptions(filterId,optionId){const filter=this.state.filters[filterId];optionId=optionId||filter.defaultOptionId;const option=this.optionGenerators.find(o=>o.id===optionId);const index=this.state.query.findIndex(queryElem=>queryElem.filterId===filterId&&queryElem.optionId===optionId);if(index>=0){this.state.query.splice(index,1);if(filter.type==='filter'&&!yearSelected(this._getSelectedOptionIds(filterId))){this.state.query=this.state.query.filter(queryElem=>queryElem.filterId!==filterId);}}else{this.state.query.push({groupId:filter.groupId,filterId,optionId});if(filter.type==='filter'&&!yearSelected(this._getSelectedOptionIds(filterId))){this.state.query.push({groupId:filter.groupId,filterId,optionId:option.defaultYearId,});}}
if(filter.type==='filter'){this._checkComparisonStatus();}}
_activateDefaultFilters(){if(this.defaultFavoriteId){this.toggleFilter(this.defaultFavoriteId);}else{Object.values(this.state.filters).filter((f)=>f.isDefault&&f.type!=='favorite').sort((f1,f2)=>(f1.defaultRank||100)-(f2.defaultRank||100)).forEach(f=>{if(f.hasOptions){this.toggleFilterWithOptions(f.id);}else if(f.type==='field'){let{operator,label,value}=f.defaultAutocompleteValue;this.addAutoCompletionValues({filterId:f.id,value,operator,label,});}else{this.toggleFilter(f.id);}});}}
_addFilters(){this._createGroupOfFavorites();this._createGroupOfFiltersFromArch();this._createGroupOfDynamicFilters();}
_checkComparisonStatus(){const activeComparison=this.activeComparison;if(!activeComparison){return;}
const{dateFilterId}=activeComparison;const dateFilterIsActive=this.state.query.some(queryElem=>queryElem.filterId===dateFilterId);if(!dateFilterIsActive){this.state.query=this.state.query.filter(queryElem=>queryElem.type!=='comparison');}}
_computeTimeRanges(comparisonFilter){const{filterId}=this.activeComparison;if(filterId!==comparisonFilter.id){return null;}
const{dateFilterId,comparisonOptionId}=comparisonFilter;const{fieldName,fieldType,description:dateFilterDescription,}=this.state.filters[dateFilterId];const selectedOptionIds=this._getSelectedOptionIds(dateFilterId);const{domain:range,description:rangeDescription}=constructDateDomain(this.referenceMoment,fieldName,fieldType,selectedOptionIds,);const{domain:comparisonRange,description:comparisonRangeDescription,}=constructDateDomain(this.referenceMoment,fieldName,fieldType,selectedOptionIds,comparisonOptionId);return{comparisonId:comparisonOptionId,fieldName,fieldDescription:dateFilterDescription,range,rangeDescription,comparisonRange,comparisonRangeDescription,};}
_createGroupOfComparisons(dateFilters){const preFilters=[];for(const dateFilter of dateFilters){for(const comparisonOption of this.comparisonOptions){const{id:dateFilterId,description}=dateFilter;const preFilter={type:'comparison',comparisonOptionId:comparisonOption.id,description:`${description}: ${comparisonOption.description}`,dateFilterId,};preFilters.push(preFilter);}}
this._createGroupOfFilters(preFilters);}
_createGroupOfDynamicFilters(){const dynamicFilters=this.config.dynamicFilters||[];const pregroup=dynamicFilters.map(filter=>{return{description:filter.description,domain:JSON.stringify(filter.domain),isDefault:true,type:'filter',};});this._createGroupOfFilters(pregroup);}
_createGroupOfFavorites(){const activateFavorite=DISABLE_FAVORITE in this.actionContext?!this.actionContext[DISABLE_FAVORITE]:true;this.favoriteFilters.forEach(irFilter=>{const favorite=this._irFilterToFavorite(irFilter);this._createGroupOfFilters([favorite]);if(activateFavorite&&favorite.isDefault){this.defaultFavoriteId=favorite.id;}});}
_createGroupOfFilters(pregroup){pregroup.forEach(preFilter=>{const filter=Object.assign(preFilter,{groupId:this.state.nextGroupId,id:this.state.nextId});this.state.filters[this.state.nextId]=filter;if(!this.defaultFavoriteId&&filter.isDefault&&filter.type==='field'){this._prepareDefaultLabel(filter);}
this.state.nextId++;});this.state.nextGroupId++;}
_createGroupOfFiltersFromArch(){const preFilters=this.config.archNodes.reduce((preFilters,child)=>{if(child.tag==='group'){return[...preFilters,...child.children.map(c=>this._evalArchChild(c))];}else{return[...preFilters,this._evalArchChild(child)];}},[]);preFilters.push({tag:'separator'});let currentTag;let currentGroup=[];let pregroupOfGroupBys=[];preFilters.forEach(preFilter=>{if(preFilter.tag!==currentTag||['separator','field'].includes(preFilter.tag)){if(currentGroup.length){if(currentTag==='groupBy'){pregroupOfGroupBys=[...pregroupOfGroupBys,...currentGroup];}else{this._createGroupOfFilters(currentGroup);}}
currentTag=preFilter.tag;currentGroup=[];this.state.nextGroupNumber++;}
if(preFilter.tag!=='separator'){const filter={type:preFilter.tag,};if(preFilter.attrs&&JSON.parse(preFilter.attrs.modifiers||'{}').invisible){filter.invisible=true;let preFilterFieldName=null;if(preFilter.tag==='filter'&&preFilter.attrs.date){preFilterFieldName=preFilter.attrs.date;}else if(preFilter.tag==='groupBy'){preFilterFieldName=preFilter.attrs.fieldName;}
if(preFilterFieldName&&!this.fields[preFilterFieldName]){return;}}
if(filter.type==='filter'||filter.type==='groupBy'){filter.groupNumber=this.state.nextGroupNumber;}
this._extractAttributes(filter,preFilter.attrs);currentGroup.push(filter);}});if(pregroupOfGroupBys.length){this._createGroupOfFilters(pregroupOfGroupBys);}
const dateFilters=Object.values(this.state.filters).filter((filter)=>filter.isDateFilter);if(dateFilters.length){this._createGroupOfComparisons(dateFilters);}}
_enrichFilterCopy(filter,filterQueryElements){const isActive=Boolean(filterQueryElements.length);const f=Object.assign({isActive},filter);function _enrichOptions(options){return options.map(o=>{const{description,id,groupNumber}=o;const isActive=filterQueryElements.some(a=>a.optionId===id);return{description,id,groupNumber,isActive};});}
switch(f.type){case'comparison':{const{dateFilterId}=filter;const dateFilterIsActive=this.state.query.some(queryElem=>queryElem.filterId===dateFilterId);if(!dateFilterIsActive){return null;}
break;}
case'filter':if(f.hasOptions){f.options=_enrichOptions(this.optionGenerators);}
break;case'groupBy':if(f.hasOptions){f.options=_enrichOptions(this.intervalOptions);}
break;case'field':f.autoCompleteValues=filterQueryElements.map(({label,value,operator})=>({label,value,operator}));break;}
return f;}
_evalArchChild(child){if(child.attrs.context){try{const context=pyUtils.eval('context',child.attrs.context);child.attrs.context=context;if(context.group_by){child.attrs.fieldName=context.group_by.split(':')[0];child.attrs.defaultInterval=context.group_by.split(':')[1];child.tag='groupBy';}}catch(_e){}}
if(child.attrs.name in this.searchDefaults){child.attrs.isDefault=true;let value=this.searchDefaults[child.attrs.name];if(child.tag==='field'){child.attrs.defaultValue=this.fields[child.attrs.name].type==='many2one'&&Array.isArray(value)?value[0]:value;}else if(child.tag==='groupBy'){child.attrs.defaultRank=typeof value==='number'?value:100;}}
return child;}
_extractAttributes(filter,attrs){if(attrs.isDefault){filter.isDefault=attrs.isDefault;}
filter.description=attrs.string||attrs.help||attrs.name||attrs.domain||'Ω';switch(filter.type){case'filter':if(attrs.context){filter.context=attrs.context;}
if(attrs.date){filter.isDateFilter=true;filter.hasOptions=true;filter.fieldName=attrs.date;filter.fieldType=this.fields[attrs.date].type;filter.defaultOptionId=attrs.default_period||DEFAULT_PERIOD;}else{filter.domain=attrs.domain||'[]';}
if(filter.isDefault){filter.defaultRank=-5;}
if(attrs.name){filter.name=attrs.name;}
break;case'groupBy':filter.fieldName=attrs.fieldName;filter.fieldType=this.fields[attrs.fieldName].type;if(['date','datetime'].includes(filter.fieldType)){filter.hasOptions=true;filter.defaultOptionId=attrs.defaultInterval||DEFAULT_INTERVAL;}
if(filter.isDefault){filter.defaultRank=attrs.defaultRank;}
if(attrs.name){filter.name=attrs.name;}
break;case'field':{const field=this.fields[attrs.name];filter.fieldName=attrs.name;filter.fieldType=field.type;if(attrs.domain){filter.domain=attrs.domain;}
if(attrs.filter_domain){filter.filterDomain=attrs.filter_domain;}else if(attrs.operator){filter.operator=attrs.operator;}
if(attrs.context){filter.context=attrs.context;}
if(filter.isDefault){let operator=filter.operator;if(!operator){const type=attrs.widget||filter.fieldType;if(["char","html","many2many","one2many","text"].includes(type)){operator="ilike";}else{operator="=";}}
filter.defaultRank=-10;filter.defaultAutocompleteValue={operator,value:attrs.defaultValue,};}
break;}}
if(filter.fieldName&&!attrs.string){const{string}=this.fields[filter.fieldName];filter.description=string;}}
_favoriteToIrFilter(favorite){const irFilter={action_id:this.config.actionId,model_id:this.config.modelName,};if('description'in favorite){irFilter.name=favorite.description;}
if('domain'in favorite){irFilter.domain=favorite.domain;}
if('isDefault'in favorite){irFilter.is_default=favorite.isDefault;}
if('orderedBy'in favorite){const sort=favorite.orderedBy.map(ob=>ob.name+(ob.asc===false?" desc":""));irFilter.sort=JSON.stringify(sort);}
if('serverSideId'in favorite){irFilter.id=favorite.serverSideId;}
if('userId'in favorite){irFilter.user_id=favorite.userId;}
const context=Object.assign({},favorite.context);if('groupBys'in favorite){context.group_by=favorite.groupBys;}
if('comparison'in favorite){context.comparison=favorite.comparison;}
if(Object.keys(context).length){irFilter.context=context;}
return irFilter;}
_getAutoCompletionFilterDomain(filter,filterQueryElements){const domains=filterQueryElements.map(({label,value,operator})=>{let domain;if(filter.filterDomain){domain=Domain.prototype.stringToArray(filter.filterDomain,{self:label,raw_value:value,});}else{domain=[[filter.fieldName,operator,value]];}
return Domain.prototype.arrayToString(domain);});return pyUtils.assembleDomains(domains,'OR');}
_getContext(groups){const types=['filter','favorite','field'];const contexts=groups.reduce((contexts,group)=>{if(types.includes(group.type)){contexts.push(...this._getGroupContexts(group));}
return contexts;},[]);const evaluationContext=this.env.session.user_context;try{return pyUtils.eval('contexts',contexts,evaluationContext);}catch(err){throw new Error(this.env._t("Failed to evaluate search context")+":\n"+
JSON.stringify(err));}}
_getDateFilterDomain(filter,filterQueryElements,key='domain'){const{fieldName,fieldType}=filter;const selectedOptionIds=filterQueryElements.map(queryElem=>queryElem.optionId);const dateFilterRange=constructDateDomain(this.referenceMoment,fieldName,fieldType,selectedOptionIds,);return dateFilterRange[key];}
_getDomain(groups){const types=['filter','favorite','field'];const domains=[];for(const group of groups){if(types.includes(group.type)){domains.push(this._getGroupDomain(group));}}
return pyUtils.assembleDomains(domains,'AND');}
_getFacetDescriptions(activities,type){const facetDescriptions=[];if(type==='field'){for(const queryElem of activities[0].filterQueryElements){facetDescriptions.push(queryElem.label);}}else if(type==='groupBy'){for(const{filter,filterQueryElements}of activities){if(filter.hasOptions){for(const queryElem of filterQueryElements){const option=this.intervalOptions.find(o=>o.id===queryElem.optionId);facetDescriptions.push(filter.description+': '+option.description);}}else{facetDescriptions.push(filter.description);}}}else{let facetDescription;for(const{filter,filterQueryElements}of activities){facetDescription=filter.description;if(filter.isDateFilter){const description=this._getDateFilterDomain(filter,filterQueryElements,'description');facetDescription+=`: ${description}`;}
facetDescriptions.push(facetDescription);}}
return facetDescriptions;}
_getFacets(){const facets=this._getGroups().map(({activities,type,id})=>{const values=this._getFacetDescriptions(activities,type);const title=activities[0].filter.description;return{groupId:id,title,type,values};});return facets;}
_getFilters(predicate){const filters=[];Object.values(this.state.filters).forEach(filter=>{if((!predicate||predicate(filter))&&!filter.invisible){const filterQueryElements=this.state.query.filter(queryElem=>queryElem.filterId===filter.id);const enrichedFilter=this._enrichFilterCopy(filter,filterQueryElements);if(enrichedFilter){filters.push(enrichedFilter);}}});if(filters.some(f=>f.type==='favorite')){filters.sort((f1,f2)=>f1.groupNumber-f2.groupNumber);}
return filters;}
_getFilterContext(filter,filterQueryElements){let context=filter.context||{};if(filter.type==='field'&&filter.context){context=pyUtils.eval('context',filter.context,{self:filterQueryElements.map(({value})=>value)},);}
if(filter.type==='field'&&filter.isDefault&&filter.fieldType==='many2one'){context[`default_${filter.fieldName}`]=filter.defaultAutocompleteValue.value;}
return context;}
_getFilterDomain(filter,filterQueryElements){if(filter.type==='filter'&&filter.hasOptions){const{dateFilterId}=this.activeComparison||{};if(this.searchMenuTypes.includes('comparison')&&dateFilterId===filter.id){return"[]";}
return this._getDateFilterDomain(filter,filterQueryElements);}else if(filter.type==='field'){return this._getAutoCompletionFilterDomain(filter,filterQueryElements);}
return filter.domain;}
_getFilterGroupBys(filter,filterQueryElements){if(filter.type==='groupBy'){const fieldName=filter.fieldName;if(filter.hasOptions){return filterQueryElements.map(({optionId})=>`${fieldName}:${optionId}`);}else{return[fieldName];}}else{return filter.groupBys;}}
_getGroupBy(groups){const groupBys=groups.reduce((groupBys,group)=>{if(['groupBy','favorite'].includes(group.type)){groupBys.push(...this._getGroupGroupBys(group));}
return groupBys;},[]);const groupBy=groupBys.length?groupBys:(this.actionContext.group_by||[]);return typeof groupBy==='string'?[groupBy]:groupBy;}
_getGroupContexts(group){const contexts=group.activities.reduce((ctx,qe)=>[...ctx,this._getFilterContext(qe.filter,qe.filterQueryElements)],[]);return contexts;}
_getGroupDomain(group){const domains=group.activities.map(({filter,filterQueryElements})=>{return this._getFilterDomain(filter,filterQueryElements);});return pyUtils.assembleDomains(domains,'OR');}
_getGroupGroupBys(group){const groupBys=group.activities.reduce((gb,qe)=>[...gb,...this._getFilterGroupBys(qe.filter,qe.filterQueryElements)],[]);return groupBys;}
_getGroups(){const groups=this.state.query.reduce((groups,queryElem)=>{const{groupId,filterId}=queryElem;let group=groups.find(group=>group.id===groupId);const filter=this.state.filters[filterId];if(!group){const{type}=filter;group={id:groupId,type,activities:[]};groups.push(group);}
group.activities.push(queryElem);return groups;},[]);groups.forEach(g=>this._mergeActivities(g));return groups;}
_getOrderedBy(groups){return groups.reduce((orderedBy,group)=>{if(group.type==='favorite'){const favoriteOrderedBy=group.activities[0].filter.orderedBy;if(favoriteOrderedBy){orderedBy=[...favoriteOrderedBy,...orderedBy];}}
return orderedBy;},[]);}
_getSelectedOptionIds(dateFilterId){const selectedOptionIds=[];for(const queryElem of this.state.query){if(queryElem.filterId===dateFilterId){selectedOptionIds.push(queryElem.optionId);}}
return selectedOptionIds;}
_getTimeRanges(evaluation){let timeRanges;for(const queryElem of this.state.query.slice().reverse()){const filter=this.state.filters[queryElem.filterId];if(filter.type==='comparison'){timeRanges=this._computeTimeRanges(filter);break;}else if(filter.type==='favorite'&&filter.comparison){timeRanges=filter.comparison;break;}}
if(timeRanges){if(evaluation){timeRanges.range=Domain.prototype.stringToArray(timeRanges.range);timeRanges.comparisonRange=Domain.prototype.stringToArray(timeRanges.comparisonRange);}
return timeRanges;}
return null;}
_irFilterToFavorite(irFilter){let userId=irFilter.user_id||false;if(Array.isArray(userId)){userId=userId[0];}
const groupNumber=userId?FAVORITE_PRIVATE_GROUP:FAVORITE_SHARED_GROUP;const context=pyUtils.eval('context',irFilter.context,this.env.session.user_context);let groupBys=[];if(context.group_by){groupBys=context.group_by;delete context.group_by;}
let comparison;if(context.comparison){comparison=context.comparison;delete context.comparison;}
let sort;try{sort=JSON.parse(irFilter.sort);}catch(err){if(err instanceof SyntaxError){sort=[];}else{throw err;}}
const orderedBy=sort.map(order=>{let fieldName;let asc;const sqlNotation=order.split(' ');if(sqlNotation.length>1){fieldName=sqlNotation[0];asc=sqlNotation[1]==='asc';}else{fieldName=order[0]==='-'?order.slice(1):order;asc=order[0]==='-'?false:true;}
return{asc:asc,name:fieldName,};});const favorite={context,description:irFilter.name,domain:irFilter.domain,groupBys,groupNumber,orderedBy,removable:true,serverSideId:irFilter.id,type:'favorite',userId,};if(irFilter.is_default){favorite.isDefault=irFilter.is_default;}
if(comparison){favorite.comparison=comparison;}
return favorite;}
_mergeActivities(group){const{activities,type}=group;let res=[];switch(type){case'filter':case'groupBy':{for(const activity of activities){const{filterId}=activity;let a=res.find(({filter})=>filter.id===filterId);if(!a){a={filter:this.state.filters[filterId],filterQueryElements:[]};res.push(a);}
a.filterQueryElements.push(activity);}
break;}
case'favorite':case'field':case'comparison':{const{filterId}=group.activities[0];const filter=this.state.filters[filterId];res.push({filter,filterQueryElements:group.activities});break;}}
if(type==='groupBy'){res.forEach(activity=>{activity.filterQueryElements.sort((qe1,qe2)=>rankInterval(qe1.optionId)-rankInterval(qe2.optionId));});}
group.activities=res;}
_prepareDefaultLabel(filter){const{id,fieldType,fieldName,defaultAutocompleteValue}=filter;const{selection,context,relation}=this.fields[fieldName];if(fieldType==='selection'){defaultAutocompleteValue.label=selection.find(sel=>sel[0]===defaultAutocompleteValue.value)[1];}else if(fieldType==='many2one'){const updateLabel=label=>{const queryElem=this.state.query.find(({filterId})=>filterId===id);if(queryElem){queryElem.label=label;defaultAutocompleteValue.label=label;}};const promise=this.env.services.rpc({args:[defaultAutocompleteValue.value],context:context,method:'name_get',model:relation,}).then(results=>updateLabel(results[0][1])).guardedCatch(()=>updateLabel(defaultAutocompleteValue.value));this.labelPromises.push(promise);}else{defaultAutocompleteValue.label=defaultAutocompleteValue.value;}}
async _saveQuery(preFilter){const irFilter=this.getIrFilterValues(preFilter);const serverSideId=await this.env.dataManager.create_filter(irFilter);preFilter.serverSideId=serverSideId;return preFilter;}
static extractArchInfo(archs){const{attrs,children}=archs.search;const controlPanelInfo={attrs,children:[],};for(const child of children){if(child.tag!=="searchpanel"){controlPanelInfo.children.push(child);}}
return controlPanelInfo;}}
ActionModel.registry.add("ControlPanel",ControlPanelModelExtension,10);return ControlPanelModelExtension;});;

/* /web/static/src/legacy/js/control_panel/control_panel_x2many.js */
odoo.define('web.ControlPanelX2Many',function(require){const ControlPanel=require('web.ControlPanel');class ControlPanelX2Many extends ControlPanel{_shouldShowPager(){if(!this.props.pager||!this.props.pager.limit){return false;}
const{currentMinimum,limit,size}=this.props.pager;const maximum=Math.min(currentMinimum+limit-1,size);const singlePage=(1===currentMinimum)&&(maximum===size);return!singlePage;}}
ControlPanelX2Many.defaultProps={};ControlPanelX2Many.props={cp_content:{type:Object,optional:1},pager:Object,};ControlPanelX2Many.template='web.Legacy.ControlPanelX2Many';return ControlPanelX2Many;});;

/* /web/static/src/legacy/js/control_panel/custom_favorite_item.js */
odoo.define('web.CustomFavoriteItem',function(require){"use strict";const{CheckBox}=require("@web/core/checkbox/checkbox");const{Dropdown}=require("@web/core/dropdown/dropdown");const FavoriteMenu=require('web.FavoriteMenu');const{useModel}=require('web.Model');const{LegacyComponent}=require("@web/legacy/legacy_component");const{useState,useRef}=owl;let favoriteId=0;class CustomFavoriteItem extends LegacyComponent{setup(){const favId=favoriteId++;this.useByDefaultId=`o_favorite_use_by_default_${favId}`;this.shareAllUsersId=`o_favorite_share_all_users_${favId}`;this.descriptionRef=useRef("description");this.model=useModel("searchModel");this.interactive=true;this.state=useState({description:this.env.action.name||"",isDefault:false,isShared:false,});}
saveFavorite(){if(!this.state.description){this.env.services.notification.notify({message:this.env._t("A name for your favorite filter is required."),type:'danger',});return this.descriptionRef.el.focus();}
const favorites=this.model.get('filters',f=>f.type==='favorite');if(favorites.some(f=>f.description===this.state.description)){this.env.services.notification.notify({message:this.env._t("Filter with same name already exists."),type:'danger',});return this.descriptionRef.el.focus();}
this.model.dispatch('createNewFavorite',{type:'favorite',description:this.state.description,isDefault:this.state.isDefault,isShared:this.state.isShared,});Object.assign(this.state,{description:this.env.action.name||"",isDefault:false,isShared:false,open:false,});}
onDefaultCheckboxChange(checked){this.state.isDefault=checked;if(checked){this.state.isShared=false;}}
onShareCheckboxChange(checked){this.state.isShared=checked;if(checked){this.state.isDefault=false;}}
onInputKeydown(ev){switch(ev.key){case'Enter':ev.preventDefault();this.saveFavorite();break;case'Escape':ev.preventDefault();ev.target.blur();break;}}
static shouldBeDisplayed(env){return true;}}
CustomFavoriteItem.props={};CustomFavoriteItem.template="web.CustomFavoriteItem";CustomFavoriteItem.components={CheckBox,Dropdown};CustomFavoriteItem.groupNumber=3;FavoriteMenu.registry.add('favorite-generator-menu',CustomFavoriteItem,0);return CustomFavoriteItem;});;

/* /web/static/src/legacy/js/control_panel/custom_filter_item.js */
odoo.define('web.CustomFilterItem',function(require){"use strict";const{Dropdown}=require("@web/core/dropdown/dropdown");const{DatePicker,DateTimePicker}=require('web.DatePickerOwl');const Domain=require('web.Domain');const{FIELD_OPERATORS,FIELD_TYPES}=require('web.searchUtils');const field_utils=require('web.field_utils');const{useModel}=require('web.Model');const{LegacyComponent}=require("@web/legacy/legacy_component");const{useState}=owl;class CustomFilterItem extends LegacyComponent{setup(){this.model=useModel('searchModel');this.conditions=useState([]);this.fields=Object.values(this.props.fields).filter(field=>this._validateField(field)).concat({string:'ID',type:'id',name:'id'}).sort(({string:a},{string:b})=>a>b?1:a<b?-1:0);this.DECIMAL_POINT=this.env._t.database.parameters.decimal_point;this.OPERATORS=FIELD_OPERATORS;this.FIELD_TYPES=FIELD_TYPES;this.addNewCondition();}
addNewCondition(){const lastCondition=[...this.conditions].pop();const condition=lastCondition?Object.assign({},lastCondition):{field:0,operator:0,};this._setDefaultValue(condition);this.conditions.push(condition);}
_validateField(field){return!field.deprecated&&field.searchable&&FIELD_TYPES[field.type]&&field.name!=='id';}
_setDefaultValue(condition){const fieldType=this.fields[condition.field].type;const genericType=FIELD_TYPES[fieldType];const operator=FIELD_OPERATORS[genericType][condition.operator];switch(genericType){case'id':case'number':condition.value=0;break;case'date':condition.value=[moment()];if(operator.symbol==='between'){condition.value.push(moment());}
break;case'datetime':condition.value=[moment('00:00:00','hh:mm:ss').utcOffset(0,true)];if(operator.symbol==='between'){condition.value.push(moment('23:59:59','hh:mm:ss').utcOffset(0,true));}
break;case'selection':if(this.fields[condition.field].selection.length){const[firstValue]=this.fields[condition.field].selection[0];condition.value=firstValue;}
else{condition.value="";}
break;default:condition.value="";}
if(["float","monetary"].includes(fieldType)){condition.displayedValue=`0${this.DECIMAL_POINT}0`;}else{condition.displayedValue=String(condition.value);}}
onApply(){const preFilters=this.conditions.map(condition=>{const field=this.fields[condition.field];const type=this.FIELD_TYPES[field.type];const operator=this.OPERATORS[type][condition.operator];const descriptionArray=[field.string,operator.description];const domainArray=[];let domainValue;if('value'in operator){domainValue=[operator.value];}else if(['date','datetime'].includes(type)){domainValue=condition.value.map(val=>field_utils.parse[type](val,{type},{timezone:true}));const dateValue=condition.value.map(val=>field_utils.format[type](val,{type},{timezone:false}));descriptionArray.push(`"${dateValue.join(" " + this.env._t("and") + " ")}"`);}else if(type==="selection"){domainValue=[condition.value];const formattedValue=field_utils.format[type](condition.value,field);descriptionArray.push(`"${formattedValue}"`);}else{domainValue=[condition.value];descriptionArray.push(`"${condition.value}"`);}
if(operator.symbol==='between'){domainArray.push([field.name,'>=',domainValue[0]],[field.name,'<=',domainValue[1]]);}else{domainArray.push([field.name,operator.symbol,domainValue[0]]);}
const preFilter={description:descriptionArray.join(" "),domain:Domain.prototype.arrayToString(domainArray),type:'filter',};return preFilter;});this.model.dispatch('createNewFilters',preFilters);this.conditions.splice(0,this.conditions.length);this.addNewCondition();}
onDateTimeChanged(condition,valueIndex,date){condition.value[valueIndex]=date;}
onFieldSelect(condition,ev){Object.assign(condition,{field:ev.target.selectedIndex,operator:0,});this._setDefaultValue(condition);}
onOperatorSelect(condition,ev){condition.operator=ev.target.selectedIndex;this._setDefaultValue(condition);}
onRemoveCondition(conditionIndex){this.conditions.splice(conditionIndex,1);}
onValueChange(condition,ev){if(!ev.target.value){return this._setDefaultValue(condition);}
let{type}=this.fields[condition.field];if(type==="id"){type="integer";}
if(FIELD_TYPES[type]==="number"){try{condition.value=field_utils.parse[type](ev.target.value);condition.displayedValue=ev.target.value;}catch(_err){ev.target.value=condition.displayedValue;}}else{condition.value=condition.displayedValue=ev.target.value;}}}
CustomFilterItem.components={DatePicker,DateTimePicker,Dropdown};CustomFilterItem.props={fields:Object};CustomFilterItem.template="web.CustomFilterItem";return CustomFilterItem;});;

/* /web/static/src/legacy/js/control_panel/favorite_menu.js */
odoo.define('web.FavoriteMenu',function(require){"use strict";const{Dropdown}=require("@web/core/dropdown/dropdown");const{SearchDropdownItem}=require("@web/search/search_dropdown_item/search_dropdown_item");const Dialog=require('web.OwlDialog');const{FACET_ICONS}=require("web.searchUtils");const Registry=require('web.Registry');const{useModel}=require('web.Model');const{LegacyComponent}=require("@web/legacy/legacy_component");const{useState}=owl;class FavoriteMenu extends LegacyComponent{setup(){this.icon=FACET_ICONS.favorite;this.model=useModel('searchModel');this.state=useState({deletedFavorite:false});}
get items(){const favorites=this.model.get('filters',f=>f.type==='favorite');const registryMenus=this.constructor.registry.values().reduce((menus,Component)=>{if(Component.shouldBeDisplayed(this.env)){menus.push({key:Component.name,groupNumber:Component.groupNumber,Component,});}
return menus;},[]);return[...favorites,...registryMenus];}
openConfirmationDialog(id){const favorite=this.items.find(fav=>fav.id===id);this.state.deletedFavorite=favorite;}
onFavoriteSelected(itemId){this.model.dispatch('toggleFilter',itemId);}
async _onRemoveFavorite(){this.model.dispatch('deleteFavorite',this.state.deletedFavorite.id);this.state.deletedFavorite=false;}}
FavoriteMenu.registry=new Registry();FavoriteMenu.components={Dialog,Dropdown,DropdownItem:SearchDropdownItem};FavoriteMenu.template='web.Legacy.FavoriteMenu';return FavoriteMenu;});;

/* /web/static/src/legacy/js/control_panel/filter_menu.js */
odoo.define('web.FilterMenu',function(require){"use strict";const{Dropdown}=require("@web/core/dropdown/dropdown");const{SearchDropdownItem}=require("@web/search/search_dropdown_item/search_dropdown_item");const CustomFilterItem=require('web.CustomFilterItem');const{FACET_ICONS}=require("web.searchUtils");const{useModel}=require('web.Model');const{LegacyComponent}=require("@web/legacy/legacy_component");class FilterMenu extends LegacyComponent{setup(){this.icon=FACET_ICONS.filter;this.model=useModel('searchModel');}
get items(){return this.model.get('filters',f=>f.type==='filter');}
onFilterSelected({itemId,optionId}){if(optionId){this.model.dispatch('toggleFilterWithOptions',itemId,optionId);}else{this.model.dispatch('toggleFilter',itemId);}}}
FilterMenu.defaultProps={class:"",};FilterMenu.props={fields:Object,class:{String,optional:true},};FilterMenu.template="web.legacy.FilterMenu";FilterMenu.components={CustomFilterItem,Dropdown,DropdownItem:SearchDropdownItem};return FilterMenu;});;

/* /web/static/src/legacy/js/control_panel/groupby_menu.js */
odoo.define('web.GroupByMenu',function(require){"use strict";const{Dropdown}=require("@web/core/dropdown/dropdown");const{SearchDropdownItem}=require("@web/search/search_dropdown_item/search_dropdown_item");const{CustomGroupByItem}=require('@web/search/group_by_menu/custom_group_by_item');const{FACET_ICONS,GROUPABLE_TYPES}=require('web.searchUtils');const{useModel}=require('web.Model');const{LegacyComponent}=require("@web/legacy/legacy_component");class GroupByMenu extends LegacyComponent{setup(){this.icon=FACET_ICONS.groupBy;this.fields=Object.values(this.props.fields).filter(field=>this._validateField(field)).sort(({string:a},{string:b})=>a>b?1:a<b?-1:0);this.model=useModel('searchModel');}
get items(){return this.model.get('filters',f=>f.type==='groupBy');}
_validateField(field){return(field.type==="many2many"?field.store:field.sortable)&&field.name!=="id"&&GROUPABLE_TYPES.includes(field.type);}
onGroupBySelected({itemId,optionId}){if(optionId){this.model.dispatch('toggleFilterWithOptions',itemId,optionId);}else{this.model.dispatch('toggleFilter',itemId);}}
onAddCustomGroup(fieldName){const field=this.props.fields[fieldName];this.model.dispatch("createNewGroupBy",field);}}
GroupByMenu.components={CustomGroupByItem,Dropdown,DropdownItem:SearchDropdownItem};GroupByMenu.props={fields:Object};GroupByMenu.template="web.GroupByMenu";return GroupByMenu;});;

/* /web/static/src/legacy/js/control_panel/search_bar.js */
odoo.define('web.SearchBar',function(require){"use strict";const Domain=require('web.Domain');const field_utils=require('web.field_utils');const{useAutofocus}=require("@web/core/utils/hooks");const{useModel}=require('web.Model');const{fuzzyTest}=require('@web/core/utils/search');const{LegacyComponent}=require("@web/legacy/legacy_component");const{onMounted,onWillUnmount,toRaw,useExternalListener,useState}=owl;const CHAR_FIELDS=['char','html','many2many','many2one','one2many','text'];let sourceId=0;class SearchBar extends LegacyComponent{setup(){this.inputRef=useAutofocus();this.model=useModel('searchModel');this.state=useState({sources:[],focusedItem:0,inputValue:"",});this.autoCompleteSources=this.model.get('filters',f=>f.type==='field').map(filter=>this._createSource(filter));this.noResultItem=[null,this.env._t("(no result)")];useExternalListener(window,'click',this._onWindowClick);useExternalListener(window,'keydown',this._onWindowKeydown);onMounted(()=>{this.model.on('search',this,()=>{this.inputRef.el.focus();});this.model.on('focus-control-panel',this,()=>{this.inputRef.el.focus();});});onWillUnmount(()=>{this.model.off('search',this);this.model.off('focus-control-panel',this);});}
_closeAutoComplete(){this.state.sources=[];this.state.focusedItem=0;this.state.inputValue="";this.inputRef.el.value="";this.inputRef.el.focus();}
_createSource(filter){const field=toRaw(this.props.fields)[filter.fieldName];const type=field.type==="reference"?"char":field.type;const source={active:true,description:filter.description,filterId:filter.id,filterOperator:filter.operator,id:sourceId++,operator:CHAR_FIELDS.includes(type)?'ilike':'=',parent:false,type,};switch(type){case'selection':{source.active=false;source.selection=field.selection||[];break;}
case'boolean':{source.active=false;source.selection=[[true,this.env._t("Yes")],[false,this.env._t("No")],];break;}
case'many2one':{source.expand=true;source.expanded=false;source.context=field.context;source.relation=field.relation;if(filter.domain){source.domain=filter.domain;}}}
return source;}
_createSubSource(source,[value,label],active=true){const subSource={active,filterId:source.filterId,filterOperator:source.filterOperator,id:sourceId++,label,operator:'=',parent:source,value,};return subSource;}
async _expandSource(source,shouldExpand){source.expanded=shouldExpand;if(shouldExpand){let args=source.domain;if(typeof args==='string'){try{args=Domain.prototype.stringToArray(args);}catch(_err){args=[];}}
const results=await this.rpc({kwargs:{args,context:source.context,limit:8,name:this.state.inputValue.trim(),},method:'name_search',model:source.relation,});const options=results.map(result=>this._createSubSource(source,result));const parentIndex=this.state.sources.indexOf(source);if(!options.length){options.push(this._createSubSource(source,this.noResultItem,false));}
this.state.sources.splice(parentIndex+1,0,...options);}else{this.state.sources=this.state.sources.filter(src=>src.parent!==source);}}
_filterSources(query){return this.autoCompleteSources.reduce((sources,source)=>{if(source.selection){const options=[];source.selection.forEach(result=>{if(fuzzyTest(query,result[1].toLowerCase())){options.push(this._createSubSource(source,result));}});if(options.length){sources.push(...options);}}else if(this._validateSource(query,source)){sources.push(source);}
if(source.expanded){source.expanded=false;}
return sources;},[]);}
_focusFacet(index){const facets=this.el.getElementsByClassName('o_searchview_facet');if(facets.length){facets[index].focus();}}
_parseWithSource(rawValue,{type}){const parser=field_utils.parse[type];let parsedValue;switch(type){case'date':case'datetime':{const parsedDate=parser(rawValue,{type},{timezone:true});const dateFormat=type==='datetime'?'YYYY-MM-DD HH:mm:ss':'YYYY-MM-DD';const momentValue=moment(parsedDate,dateFormat);if(!momentValue.isValid()){throw new Error('Invalid date');}
parsedValue=parsedDate.toJSON();break;}
case'many2one':{parsedValue=rawValue;break;}
default:{parsedValue=parser(rawValue);}}
return parsedValue;}
_selectSource(source){if(source.active){const labelValue=source.label||this.state.inputValue.trim();this.model.dispatch('addAutoCompletionValues',{filterId:source.filterId,value:"value"in source?source.value:this._parseWithSource(labelValue,source),label:labelValue,operator:source.filterOperator||source.operator,});}
this._closeAutoComplete();}
_validateSource(query,source){try{this._parseWithSource(query,source);}catch(_err){return false;}
return true;}
_onFacetKeydown(facet,facetIndex,ev){switch(ev.key){case'ArrowLeft':if(facetIndex===0){this.inputRef.el.focus();}else{this._focusFacet(facetIndex-1);}
break;case'ArrowRight':const facets=this.el.getElementsByClassName('o_searchview_facet');if(facetIndex===facets.length-1){this.inputRef.el.focus();}else{this._focusFacet(facetIndex+1);}
break;case'Backspace':this._onFacetRemove(facet);break;}}
_onFacetRemove(facet){this.model.dispatch('deactivateGroup',facet.groupId);}
_onSearchKeydown(ev){if(ev.isComposing){return;}
const currentItem=this.state.sources[this.state.focusedItem]||{};switch(ev.key){case'ArrowDown':ev.preventDefault();if(Object.keys(this.state.sources).length){let nextIndex=this.state.focusedItem+1;if(nextIndex>=this.state.sources.length){nextIndex=0;}
this.state.focusedItem=nextIndex;}else{this.env.bus.trigger('focus-view');}
break;case'ArrowLeft':if(currentItem.expanded){ev.preventDefault();this._expandSource(currentItem,false);}else if(currentItem.parent){ev.preventDefault();this.state.focusedItem=this.state.sources.indexOf(currentItem.parent);}else if(ev.target.selectionStart===0){this._focusFacet(this.model.get("facets").length-1);}
break;case'ArrowRight':if(ev.target.selectionStart===this.state.inputValue.length){if(currentItem.expand){ev.preventDefault();if(currentItem.expanded){this.state.focusedItem++;}else{this._expandSource(currentItem,true);}}else if(ev.target.selectionStart===this.state.inputValue.length){this._focusFacet(0);}}
break;case'ArrowUp':ev.preventDefault();let previousIndex=this.state.focusedItem-1;if(previousIndex<0){previousIndex=this.state.sources.length-1;}
this.state.focusedItem=previousIndex;break;case'Backspace':if(!this.state.inputValue.length){const facets=this.model.get("facets");if(facets.length){this._onFacetRemove(facets[facets.length-1]);}}
break;case'Enter':if(!this.state.inputValue.length){this.model.dispatch('search');break;}
case'Tab':if(this.state.inputValue.length){ev.preventDefault();this._selectSource(currentItem);}
break;case'Escape':if(this.state.sources.length){this._closeAutoComplete();}
break;}}
_onSearchInput(ev){this.state.inputValue=ev.target.value;const wasVisible=this.state.sources.length;const query=this.state.inputValue.trim().toLowerCase();if(query.length){this.state.sources=this._filterSources(query);}else if(wasVisible){this._closeAutoComplete();}}
_onSourceMousemove(resultIndex){this.state.focusedItem=resultIndex;}
_onWindowClick(ev){if(this.state.sources.length&&!this.el.contains(ev.target)){this._closeAutoComplete();}}
_onWindowKeydown(ev){if(ev.key==='Escape'&&this.state.sources.length){ev.preventDefault();ev.stopPropagation();this._closeAutoComplete();}}}
SearchBar.defaultProps={fields:{},};SearchBar.props={fields:{type:Object,optional:true},};SearchBar.template='web.Legacy.SearchBar';return SearchBar;});;

/* /web/static/src/legacy/js/control_panel/search_utils.js */
odoo.define('web.searchUtils',function(require){"use strict";const{_lt,_t}=require('web.core');const Domain=require('web.Domain');const pyUtils=require('web.py_utils');const FIELD_OPERATORS={binary:[{symbol:"!=",description:_lt("is set"),value:false},{symbol:"=",description:_lt("is not set"),value:false},],boolean:[{symbol:"=",description:_lt("is Yes"),value:true},{symbol:"!=",description:_lt("is No"),value:true},],char:[{symbol:"ilike",description:_lt("contains")},{symbol:"not ilike",description:_lt("doesn't contain")},{symbol:"=",description:_lt("is equal to")},{symbol:"!=",description:_lt("is not equal to")},{symbol:"!=",description:_lt("is set"),value:false},{symbol:"=",description:_lt("is not set"),value:false},],date:[{symbol:"=",description:_lt("is equal to")},{symbol:"!=",description:_lt("is not equal to")},{symbol:">",description:_lt("is after")},{symbol:"<",description:_lt("is before")},{symbol:">=",description:_lt("is after or equal to")},{symbol:"<=",description:_lt("is before or equal to")},{symbol:"between",description:_lt("is between")},{symbol:"!=",description:_lt("is set"),value:false},{symbol:"=",description:_lt("is not set"),value:false},],datetime:[{symbol:"between",description:_lt("is between")},{symbol:"=",description:_lt("is equal to")},{symbol:"!=",description:_lt("is not equal to")},{symbol:">",description:_lt("is after")},{symbol:"<",description:_lt("is before")},{symbol:">=",description:_lt("is after or equal to")},{symbol:"<=",description:_lt("is before or equal to")},{symbol:"!=",description:_lt("is set"),value:false},{symbol:"=",description:_lt("is not set"),value:false},],id:[{symbol:"=",description:_lt("is")},{symbol:"<=",description:_lt("less than or equal to")},{symbol:">",description:_lt("greater than")},],number:[{symbol:"=",description:_lt("is equal to")},{symbol:"!=",description:_lt("is not equal to")},{symbol:">",description:_lt("greater than")},{symbol:"<",description:_lt("less than")},{symbol:">=",description:_lt("greater than or equal to")},{symbol:"<=",description:_lt("less than or equal to")},{symbol:"!=",description:_lt("is set"),value:false},{symbol:"=",description:_lt("is not set"),value:false},],selection:[{symbol:"=",description:_lt("is")},{symbol:"!=",description:_lt("is not")},{symbol:"!=",description:_lt("is set"),value:false},{symbol:"=",description:_lt("is not set"),value:false},],};const FIELD_TYPES={binary:'binary',boolean:'boolean',char:'char',date:'date',datetime:'datetime',float:'number',id:'id',integer:'number',html:'char',many2many:'char',many2one:'char',monetary:'number',one2many:'char',text:'char',selection:'selection',};const DEFAULT_PERIOD='this_month';const QUARTERS={1:{description:_lt("Q1"),coveredMonths:[0,1,2]},2:{description:_lt("Q2"),coveredMonths:[3,4,5]},3:{description:_lt("Q3"),coveredMonths:[6,7,8]},4:{description:_lt("Q4"),coveredMonths:[9,10,11]},};const MONTH_OPTIONS={this_month:{id:'this_month',groupNumber:1,format:'MMMM',addParam:{},granularity:'month',},last_month:{id:'last_month',groupNumber:1,format:'MMMM',addParam:{months:-1},granularity:'month',},antepenultimate_month:{id:'antepenultimate_month',groupNumber:1,format:'MMMM',addParam:{months:-2},granularity:'month',},};const QUARTER_OPTIONS={fourth_quarter:{id:'fourth_quarter',groupNumber:1,description:QUARTERS[4].description,setParam:{quarter:4},granularity:'quarter',},third_quarter:{id:'third_quarter',groupNumber:1,description:QUARTERS[3].description,setParam:{quarter:3},granularity:'quarter',},second_quarter:{id:'second_quarter',groupNumber:1,description:QUARTERS[2].description,setParam:{quarter:2},granularity:'quarter',},first_quarter:{id:'first_quarter',groupNumber:1,description:QUARTERS[1].description,setParam:{quarter:1},granularity:'quarter',},};const YEAR_OPTIONS={this_year:{id:'this_year',groupNumber:2,format:'YYYY',addParam:{},granularity:'year',},last_year:{id:'last_year',groupNumber:2,format:'YYYY',addParam:{years:-1},granularity:'year',},antepenultimate_year:{id:'antepenultimate_year',groupNumber:2,format:'YYYY',addParam:{years:-2},granularity:'year',},};const PERIOD_OPTIONS=Object.assign({},MONTH_OPTIONS,QUARTER_OPTIONS,YEAR_OPTIONS);const GROUPABLE_TYPES=['boolean','char','date','datetime','integer','many2one','many2many','selection',];const DEFAULT_INTERVAL='month';const INTERVAL_OPTIONS={year:{description:_lt("Year"),id:'year',groupNumber:1},quarter:{description:_lt("Quarter"),id:'quarter',groupNumber:1},month:{description:_lt("Month"),id:'month',groupNumber:1},week:{description:_lt("Week"),id:'week',groupNumber:1},day:{description:_lt("Day"),id:'day',groupNumber:1}};const COMPARISON_OPTIONS={previous_period:{description:_lt("Previous Period"),id:'previous_period',},previous_year:{description:_lt("Previous Year"),id:'previous_year',addParam:{years:-1},},};const PER_YEAR={year:1,quarter:4,month:12,};const FACET_ICONS={filter:'fa fa-filter',groupBy:'oi oi-group',favorite:'fa fa-star',comparison:'fa fa-adjust',};function constructDateDomain(referenceMoment,fieldName,fieldType,selectedOptionIds,comparisonOptionId){let addParam;let selectedOptions;if(comparisonOptionId){[addParam,selectedOptions]=getComparisonParams(referenceMoment,selectedOptionIds,comparisonOptionId);}else{selectedOptions=getSelectedOptions(referenceMoment,selectedOptionIds);}
const yearOptions=selectedOptions.year;const otherOptions=[...(selectedOptions.quarter||[]),...(selectedOptions.month||[])];sortPeriodOptions(yearOptions);sortPeriodOptions(otherOptions);const ranges=[];for(const yearOption of yearOptions){const constructRangeParams={referenceMoment,fieldName,fieldType,addParam,};if(otherOptions.length){for(const option of otherOptions){const setParam=Object.assign({},yearOption.setParam,option?option.setParam:{});const{granularity}=option;const range=constructDateRange(Object.assign({granularity,setParam},constructRangeParams));ranges.push(range);}}else{const{granularity,setParam}=yearOption;const range=constructDateRange(Object.assign({granularity,setParam},constructRangeParams));ranges.push(range);}}
const domain=pyUtils.assembleDomains(ranges.map(range=>range.domain),'OR');const description=ranges.map(range=>range.description).join("/");return{domain,description};}
function constructDateRange({referenceMoment,fieldName,fieldType,granularity,setParam,addParam,}){const date=referenceMoment.clone().set(setParam).add(addParam||{});let leftBound=date.clone().locale('en').startOf(granularity);let rightBound=date.clone().locale('en').endOf(granularity);if(fieldType==='date'){leftBound=leftBound.format('YYYY-MM-DD');rightBound=rightBound.format('YYYY-MM-DD');}else{leftBound=leftBound.utc().format('YYYY-MM-DD HH:mm:ss');rightBound=rightBound.utc().format('YYYY-MM-DD HH:mm:ss');}
const domain=Domain.prototype.arrayToString(['&',[fieldName,'>=',leftBound],[fieldName,'<=',rightBound]]);const descriptions=[date.format("YYYY")];const method=_t.database.parameters.direction==="rtl"?"push":"unshift";if(granularity==="month"){descriptions[method](date.format("MMMM"));}else if(granularity==="quarter"){descriptions[method](QUARTERS[date.quarter()].description);}
const description=descriptions.join(" ");return{domain,description,};}
function getComparisonOptions(){return getOptionsWithDescriptions(COMPARISON_OPTIONS);}
function getComparisonParams(referenceMoment,selectedOptionIds,comparisonOptionId){const comparisonOption=COMPARISON_OPTIONS[comparisonOptionId];const selectedOptions=getSelectedOptions(referenceMoment,selectedOptionIds);let addParam=comparisonOption.addParam;if(addParam){return[addParam,selectedOptions];}
addParam={};let globalGranularity='year';if(selectedOptions.month){globalGranularity='month';}else if(selectedOptions.quarter){globalGranularity='quarter';}
const granularityFactor=PER_YEAR[globalGranularity];const years=selectedOptions.year.map(o=>o.setParam.year);const yearMin=Math.min(...years);const yearMax=Math.max(...years);let optionMin=0;let optionMax=0;if(selectedOptions.quarter){const quarters=selectedOptions.quarter.map(o=>o.setParam.quarter);if(globalGranularity==='month'){delete selectedOptions.quarter;for(const quarter of quarters){for(const month of QUARTERS[quarter].coveredMonths){const monthOption=selectedOptions.month.find(o=>o.setParam.month===month);if(!monthOption){selectedOptions.month.push({setParam:{month,},granularity:'month',});}}}}else{optionMin=Math.min(...quarters);optionMax=Math.max(...quarters);}}
if(selectedOptions.month){const months=selectedOptions.month.map(o=>o.setParam.month);optionMin=Math.min(...months);optionMax=Math.max(...months);}
addParam[globalGranularity]=-1+
granularityFactor*(yearMin-yearMax)+
optionMin-optionMax;return[addParam,selectedOptions];}
function getIntervalOptions(){return getOptionsWithDescriptions(INTERVAL_OPTIONS);}
function getPeriodOptions(referenceMoment){const options=[];for(const option of Object.values(PERIOD_OPTIONS)){const{id,groupNumber,description,}=option;const res={id,groupNumber,};const date=referenceMoment.clone().set(option.setParam).add(option.addParam);if(description){res.description=description.toString();}else{res.description=date.format(option.format.toString());}
res.setParam=getSetParam(option,referenceMoment);res.defaultYear=date.year();options.push(res);}
for(const option of options){const yearOption=options.find(o=>o.setParam&&o.setParam.year===option.defaultYear);option.defaultYearId=yearOption.id;delete option.defaultYear;delete option.setParam;}
return options;}
function getOptionsWithDescriptions(OPTIONS){const options=[];for(const option of Object.values(OPTIONS)){const{id,groupNumber,description,}=option;const res={id,};if(description){res.description=description.toString();}
if(groupNumber){res.groupNumber=groupNumber;}
options.push(res);}
return options;}
function getSelectedOptions(referenceMoment,selectedOptionIds){const selectedOptions={year:[]};for(const optionId of selectedOptionIds){const option=PERIOD_OPTIONS[optionId];const setParam=getSetParam(option,referenceMoment);const granularity=option.granularity;if(!selectedOptions[granularity]){selectedOptions[granularity]=[];}
selectedOptions[granularity].push({granularity,setParam});}
return selectedOptions;}
function getSetParam(periodOption,referenceMoment){if(periodOption.setParam){return periodOption.setParam;}
const date=referenceMoment.clone().add(periodOption.addParam);const setParam={};setParam[periodOption.granularity]=date[periodOption.granularity]();return setParam;}
function rankInterval(intervalOptionId){return Object.keys(INTERVAL_OPTIONS).indexOf(intervalOptionId);}
function sortPeriodOptions(options){options.sort((o1,o2)=>{const granularity1=o1.granularity;const granularity2=o2.granularity;if(granularity1===granularity2){return o1.setParam[granularity1]-o2.setParam[granularity1];}
return granularity1<granularity2?-1:1;});}
function yearSelected(selectedOptionIds){return selectedOptionIds.some(optionId=>!!YEAR_OPTIONS[optionId]);}
return{COMPARISON_OPTIONS,DEFAULT_INTERVAL,DEFAULT_PERIOD,FACET_ICONS,FIELD_OPERATORS,FIELD_TYPES,GROUPABLE_TYPES,INTERVAL_OPTIONS,PERIOD_OPTIONS,constructDateRange,constructDateDomain,getComparisonOptions,getIntervalOptions,getPeriodOptions,rankInterval,yearSelected,};});;

/* /web/static/src/legacy/js/core/domain.js */
odoo.define("web.Domain",function(require){"use strict";var collections=require("web.collections");var pyUtils=require("web.py_utils");var py=window.py;const TRUE_LEAF=[1,'=',1];const FALSE_LEAF=[0,'=',1];const TRUE_DOMAIN=[TRUE_LEAF];const FALSE_DOMAIN=[FALSE_LEAF];function compare(a,b){return JSON.stringify(a)===JSON.stringify(b);}
var Domain=collections.Tree.extend({init:function(domain,evalContext){this._super.apply(this,arguments);if(_.isArray(domain)||_.isString(domain)){this._parse(this.normalizeArray(_.clone(this.stringToArray(domain,evalContext))));}else{this._data=!!domain;}},compute:function(values){if(this._data===true||this._data===false){return this._data;}else if(_.isArray(this._data)){var isParentField=false;var fieldName=this._data[0];let fieldValue;if(compare(this._data,FALSE_LEAF)||compare(this._data,TRUE_LEAF)){fieldValue=this._data[0];}else{var parentField=this._data[0].split('.');if('parent'in values&&parentField.length===2){fieldName=parentField[1];isParentField=parentField[0]==='parent'&&fieldName in values.parent;}
if(!(this._data[0]in values)&&!(isParentField)){throw new Error(_.str.sprintf("Unknown field %s in domain",this._data[0]));}
fieldValue=isParentField?values.parent[fieldName]:values[fieldName];}
switch(this._data[1]){case"=":case"==":return _.isEqual(fieldValue,this._data[2]);case"!=":case"<>":return!_.isEqual(fieldValue,this._data[2]);case"<":return(fieldValue<this._data[2]);case">":return(fieldValue>this._data[2]);case"<=":return(fieldValue<=this._data[2]);case">=":return(fieldValue>=this._data[2]);case"in":return _.intersection(_.isArray(this._data[2])?this._data[2]:[this._data[2]],_.isArray(fieldValue)?fieldValue:[fieldValue],).length!==0;case"not in":return _.intersection(_.isArray(this._data[2])?this._data[2]:[this._data[2]],_.isArray(fieldValue)?fieldValue:[fieldValue],).length===0;case"like":if(fieldValue===false){return false;}
return(fieldValue.indexOf(this._data[2])>=0);case"=like":if(fieldValue===false){return false;}
return new RegExp(this._data[2].replace(/%/g,'.*')).test(fieldValue);case"ilike":if(fieldValue===false){return false;}
return(fieldValue.toLowerCase().indexOf(this._data[2].toLowerCase())>=0);case"=ilike":if(fieldValue===false){return false;}
return new RegExp(this._data[2].replace(/%/g,'.*'),'i').test(fieldValue);default:throw new Error(_.str.sprintf("Domain %s uses an unsupported operator",this._data));}}else{switch(this._data){case"&":return _.every(this._children,function(child){return child.compute(values);});case"|":return _.some(this._children,function(child){return child.compute(values);});case"!":return!this._children[0].compute(values);}}},toArray:function(){if(this._data===false){throw new Error("'false' domain cannot be converted to array");}else if(this._data===true){return[];}else{var arr=[this._data];return arr.concat.apply(arr,_.map(this._children,function(child){return child.toArray();}));}},toString:function(){return Domain.prototype.arrayToString(this.toArray());},_parse:function(domain){this._data=(domain.length===0?true:domain[0]);if(domain.length<=1)return;var expected=1;for(var i=1;i<domain.length;i++){if(domain[i]==="&"||domain[i]==="|"){expected++;}else if(domain[i]!=="!"){expected--;}
if(!expected){i++;this._addSubdomain(domain.slice(1,i));this._addSubdomain(domain.slice(i));break;}}},_addSubdomain:function(domain){if(!domain.length)return;var subdomain=new Domain(domain);if(!subdomain._children.length||subdomain._data!==this._data){this._children.push(subdomain);}else{var self=this;_.each(subdomain._children,function(childDomain){self._children.push(childDomain);});}},arrayToString:function(domain){if(_.isString(domain))return domain;function jsToPy(p){switch(p){case null:return"None";case true:return"True";case false:return"False";default:if(Array.isArray(p)){return`[${p.map(jsToPy)}]`;}
return JSON.stringify(p);}}
return`[${(domain || []).map(jsToPy)}]`;},stringToArray:function(domain,evalContext){if(!_.isString(domain))return _.clone(domain);return pyUtils.eval("domain",domain?domain.replace(/%%/g,'%'):"[]",evalContext);},normalizeArray:function(domain){if(domain.length===0){return domain;}
var expected=1;_.each(domain,function(item){if(item==="&"||item==="|"){expected++;}else if(item!=="!"){expected--;}});if(expected<0){domain.unshift.apply(domain,_.times(Math.abs(expected),_.constant("&")));}else if(expected>0){throw new Error(_.str.sprintf("invalid domain %s (missing %d segment(s))",JSON.stringify(domain),expected));}
return domain;},domainToCondition:function(domain){if(!domain.length){return'True';}
function consume(stack){var len=stack.length;if(len<=1){return stack;}else if(stack[len-1]==='|'||stack[len-1]==='&'||stack[len-2]==='|'||stack[len-2]==='&'){return stack;}else if(len==2){stack.splice(-2,2,stack[len-2]+' and '+stack[len-1]);}else if(stack[len-3]=='|'){if(len===3){stack.splice(-3,3,stack[len-2]+' or '+stack[len-1]);}else{stack.splice(-3,3,'('+stack[len-2]+' or '+stack[len-1]+')');}}else{stack.splice(-3,3,stack[len-2]+' and '+stack[len-1]);}
consume(stack);}
var stack=[];_.each(domain,function(dom){if(dom==='|'||dom==='&'){stack.push(dom);}else{var operator=dom[1]==='='?'==':dom[1];if(!operator){throw new Error('Wrong operator for this domain');}
if(operator==='!='&&dom[2]===false){stack.push(dom[0]);}else if(dom[2]===null||dom[2]===true||dom[2]===false){stack.push(dom[0]+' '+(operator==='!='?'is not ':'is ')+(dom[2]===null?'None':(dom[2]?'True':'False')));}else{stack.push(dom[0]+' '+operator+' '+JSON.stringify(dom[2]));}
consume(stack);}});if(stack.length!==1){throw new Error('Wrong domain');}
return stack[0];},conditionToDomain:function(condition){if(!condition||condition.match(/^\s*(True)?\s*$/)){return[];}
var ast=py.parse(py.tokenize(condition));function astToStackValue(node){switch(node.id){case'(name)':return node.value;case'.':return astToStackValue(node.first)+'.'+astToStackValue(node.second);case'(string)':return node.value;case'(number)':return node.value;case'(constant)':return node.value==='None'?null:node.value==='True'?true:false;case'(':case'[':return _.map(node.first,function(node){return astToStackValue(node);});}}
function astToStack(node){switch(node.id){case'(name)':return[[astToStackValue(node),'!=',false]];case'.':return[[astToStackValue(node.first)+'.'+astToStackValue(node.second),'!=',false]];case'not':return[[astToStackValue(node.first),'=',false]];case'or':return['|'].concat(astToStack(node.first)).concat(astToStack(node.second));case'and':return['&'].concat(astToStack(node.first)).concat(astToStack(node.second));case'(comparator)':if(node.operators.length!==1){throw new Error('Wrong condition to convert in domain');}
var right=astToStackValue(node.expressions[0]);var left=astToStackValue(node.expressions[1]);var operator=node.operators[0];switch(operator){case'is':operator='=';break;case'is not':operator='!=';break;case'==':operator='=';break;}
return[[right,operator,left]];default:throw"Condition cannot be transformed into domain";}}
return astToStack(ast);},});Domain.TRUE_LEAF=TRUE_LEAF;Domain.FALSE_LEAF=FALSE_LEAF;Domain.TRUE_DOMAIN=TRUE_DOMAIN;Domain.FALSE_DOMAIN=FALSE_DOMAIN;return Domain;});;

/* /web/static/src/legacy/js/core/mvc.js */
odoo.define('web.mvc',function(require){"use strict";var Class=require('web.Class');var mixins=require('web.mixins');var ServicesMixin=require('web.ServicesMixin');var Widget=require('web.Widget');const{loadBundle}=require('@web/core/assets');var Model=Class.extend(mixins.EventDispatcherMixin,ServicesMixin,{init:function(parent,params){mixins.EventDispatcherMixin.init.call(this);this.setParent(parent);},get:function(){},load:function(){return Promise.resolve();},});var Renderer=Widget.extend({init:function(parent,state,params){this._super(parent);this.state=state;},});var Controller=Widget.extend({init:function(parent,model,renderer,params){this._super.apply(this,arguments);this.handle=params.handle||null;this.model=model;this.renderer=renderer;},start:function(){return Promise.all([this._super.apply(this,arguments),this._startRenderer()]);},_startRenderer:function(){return this.renderer.appendTo(this.$el);},});var Factory=Class.extend({config:{Model:Model,Renderer:Renderer,Controller:Controller,},init:function(){this.rendererParams={};this.controllerParams={};this.modelParams={};this.loadParams={};},getController:function(parent){var self=this;var model=this.getModel(parent);return Promise.all([this._loadData(model),loadBundle(this)]).then(function(result){const{state,handle}=result[0];var renderer=self.getRenderer(parent,state);var Controller=self.Controller||self.config.Controller;const initialState=model.get(handle);var controllerParams=_.extend({initialState,handle,},self.controllerParams);var controller=new Controller(parent,model,renderer,controllerParams);model.setParent(controller);renderer.setParent(controller);return controller;});},getModel:function(parent){var Model=this.config.Model;return new Model(parent,this.modelParams);},getRenderer:function(parent,state){var Renderer=this.config.Renderer;return new Renderer(parent,state,this.rendererParams);},_loadData:function(model,options={}){options.withSampleData='withSampleData'in options?options.withSampleData:true;return model.load(this.loadParams).then(function(handle){return{state:model.get(handle,options),handle};});},});return{Factory:Factory,Model:Model,Renderer:Renderer,Controller:Controller,};});;

/* /web/static/src/legacy/js/core/py_utils.js */
odoo.define('web.py_utils',function(require){"use strict";var core=require('web.core');var _t=core._t;var py=window.py;function wrap(value){if(value===null){return py.None;}
switch(typeof value){case'undefined':throw new Error("No conversion for undefined");case'boolean':return py.bool.fromJSON(value);case'number':return py.float.fromJSON(value);case'string':return py.str.fromJSON(value);}
switch(value.constructor){case Object:return wrapping_dict.fromJSON(value);case Array:return wrapping_list.fromJSON(value);}
throw new Error("ValueError: unable to wrap "+value);}
var wrapping_dict=py.type('wrapping_dict',null,{__init__:function(){this._store={};},__getitem__:function(key){var k=key.toJSON();if(!(k in this._store)){throw new Error("KeyError: '"+k+"'");}
return wrap(this._store[k]);},__getattr__:function(key){return this.__getitem__(py.str.fromJSON(key));},__len__:function(){return Object.keys(this._store).length;},__nonzero__:function(){return py.PY_size(this)>0?py.True:py.False;},get:function(){var args=py.PY_parseArgs(arguments,['k',['d',py.None]]);if(!(args.k.toJSON()in this._store)){return args.d;}
return this.__getitem__(args.k);},fromJSON:function(d){var instance=py.PY_call(wrapping_dict);instance._store=d;return instance;},toJSON:function(){return this._store;},});var wrapping_list=py.type('wrapping_list',null,{__init__:function(){this._store=[];},__getitem__:function(index){return wrap(this._store[index.toJSON()]);},__len__:function(){return this._store.length;},__nonzero__:function(){return py.PY_size(this)>0?py.True:py.False;},fromJSON:function(ar){var instance=py.PY_call(wrapping_list);instance._store=ar;return instance;},toJSON:function(){return this._store;},});function wrap_context(context){for(var k in context){if(!context.hasOwnProperty(k)){continue;}
var val=context[k];if(val===null){continue;}
if(val.constructor===Array){context[k]=wrapping_list.fromJSON(val);}else if(val.constructor===Object&&!py.PY_isInstance(val,py.object)){context[k]=wrapping_dict.fromJSON(val);}}
return context;}
function eval_contexts(contexts,evaluation_context){evaluation_context=_.extend(pycontext(),evaluation_context||{});return _(contexts).reduce(function(result_context,ctx){if(_.isEmpty(ctx)){return result_context;}
if(_.isString(ctx)){ctx={__ref:'context',__debug:ctx};}
var evaluated=ctx;switch(ctx.__ref){case'context':evaluation_context.context=evaluation_context;evaluated=py.eval(ctx.__debug,wrap_context(evaluation_context));break;case'compound_context':var eval_context=eval_contexts([ctx.__eval_context]);evaluated=eval_contexts(ctx.__contexts,_.extend({},evaluation_context,eval_context));break;}
_.extend(evaluation_context,evaluated);return _.extend(result_context,evaluated);},{});}
function eval_domains(domains,evaluation_context){evaluation_context=_.extend(pycontext(),evaluation_context||{});var result_domain=[];var need_normalization=(domains&&domains.length>0&&domains[0].length===1&&(domains[0][0]==="|"||domains[0][0]==="!"));_(domains).each(function(domain){if(_.isString(domain)){domain={__ref:'domain',__debug:domain};}
var domain_array_to_combine;switch(domain.__ref){case'domain':evaluation_context.context=evaluation_context;domain_array_to_combine=py.eval(domain.__debug,wrap_context(evaluation_context));break;default:domain_array_to_combine=domain;}
if(need_normalization){domain_array_to_combine=get_normalized_domain(domain_array_to_combine);}
result_domain.push.apply(result_domain,domain_array_to_combine);});return result_domain;}
function get_normalized_domain(domain_array){var expected=1;_.each(domain_array,function(item){if(item==="&"||item==="|"){expected++;}else if(item!=="!"){expected--;}});var new_explicit_ands=_.times(-expected,_.constant("&"));return new_explicit_ands.concat(domain_array);}
function eval_groupbys(contexts,evaluation_context){evaluation_context=_.extend(pycontext(),evaluation_context||{});var result_group=[];_(contexts).each(function(ctx){if(_.isString(ctx)){ctx={__ref:'context',__debug:ctx};}
var group;var evaluated=ctx;switch(ctx.__ref){case'context':evaluation_context.context=evaluation_context;evaluated=py.eval(ctx.__debug,wrap_context(evaluation_context));break;case'compound_context':var eval_context=eval_contexts([ctx.__eval_context]);evaluated=eval_contexts(ctx.__contexts,_.extend({},evaluation_context,eval_context));break;}
group=evaluated.group_by;if(!group){return;}
if(typeof group==='string'){result_group.push(group);}else if(group instanceof Array){result_group.push.apply(result_group,group);}else{throw new Error('Got invalid groupby {{'
+JSON.stringify(group)+'}}');}
_.extend(evaluation_context,evaluated);});return result_group;}
function context_today(){var d=new Date();return py.PY_call(py.extras.datetime.date,[d.getFullYear(),d.getMonth()+1,d.getDate()]);}
function tz_offset(){var offset=new Date().getTimezoneOffset();var kwargs={minutes:py.float.fromJSON(offset)};return py.PY_call(py.extras.datetime.timedelta,[],kwargs);}
function pycontext(){const d=new Date();const today=`${
        String(d.getFullYear()).padStart(4, "0")}-${
        String(d.getMonth() + 1).padStart(2, "0")}-${
        String(d.getDate()).padStart(2, "0")}`;const now=`${
        String(d.getUTCFullYear()).padStart(4, "0")}-${
        String(d.getUTCMonth() + 1).padStart(2, "0")}-${
        String(d.getUTCDate()).padStart(2, "0")} ${
        String(d.getUTCHours()).padStart(2, "0")}:${
        String(d.getUTCMinutes()).padStart(2, "0")}:${
        String(d.getUTCSeconds()).padStart(2, "0")}`;const{datetime,relativedelta,time}=py.extras;return{current_date:today,datetime,time,now,today,relativedelta,context_today,tz_offset,};}
function pyeval(type,object,context){context=_.extend(pycontext(),context||{});switch(type){case'context':case'contexts':if(type==='context'){object=[object];}
return eval_contexts(object,context);case'domain':case'domains':if(type==='domain')
object=[object];return eval_domains(object,context);case'groupbys':return eval_groupbys(object,context);}
throw new Error("Unknow evaluation type "+type);}
function eval_arg(arg){if(typeof arg!=='object'||!arg.__ref){return arg;}
switch(arg.__ref){case'domain':return pyeval('domains',[arg]);case'context':case'compound_context':return pyeval('contexts',[arg]);default:throw new Error(_t("Unknown nonliteral type ")+' '+arg.__ref);}}
function ensure_evaluated(args,kwargs){for(var i=0;i<args.length;++i){args[i]=eval_arg(args[i]);}
for(var k in kwargs){if(!kwargs.hasOwnProperty(k)){continue;}
kwargs[k]=eval_arg(kwargs[k]);}}
function eval_domains_and_contexts(source){return{context:pyeval('contexts',source.contexts||[],source.eval_context),domain:pyeval('domains',source.domains,source.eval_context),group_by:pyeval('groupbys',source.group_by_seq||[],source.eval_context),};}
function py_eval(expr,context){return py.eval(expr,_.extend({},context||{},{"true":true,"false":false,"null":null}));}
function assembleDomains(domains,operator){var ASTs=domains.map(_getPyJSAST);if(operator==="OR"){operator=py.tokenize("'|'")[0];}else{operator=py.tokenize("'&'")[0];}
var result=_getPyJSAST("[]");var normalizedDomains=ASTs.filter(function(AST){return AST.first.length>0;}).map(_normalizeDomainAST);if(normalizedDomains.length>0){result.first=normalizedDomains.reduce(function(acc,ast){return acc.concat(ast.first);},_.times(normalizedDomains.length-1,_.constant(operator)));}
return _formatAST(result);}
function normalizeDomain(domain){return _formatAST(_normalizeDomainAST(_getPyJSAST(domain)));}
var BINDING_POWERS={or:30,and:40,not:50,};function _formatAST(ast,lbp){lbp=lbp||0;switch(ast.id){case"(number)":return String(ast.value);case"(string)":return JSON.stringify(ast.value);case"(constant)":return ast.value;case"(name)":return ast.value;case"[":if(ast.second){return _formatAST(ast.first)+'['+_formatAST(ast.second)+']';}else{var values=ast.first.map(_formatAST);return'['+values.join(', ')+']';}
case"{":var keyValues=ast.first.map(function(kv){return _formatAST(kv[0])+': '+_formatAST(kv[1]);});return'{'+keyValues.join(', ')+'}';case"=":return _formatAST(ast.first)+' '+ast.id+' '+_formatAST(ast.second);case"-":case"+":case"~":case"*":case"**":case"%":case"//":case"and":case"or":if(ast.second){var r=_formatAST(ast.first,ast.lbp)+' '+ast.id+' '+_formatAST(ast.second,ast.lbp);if(ast.lbp<lbp){r='('+r+')';}
return r;}
var actualBP=BINDING_POWERS[ast.id]||130;return ast.id+_formatAST(ast.first,actualBP);case"if":var t=_formatAST(ast.ifTrue)
+' if '+_formatAST(ast.condition)
+' else '+_formatAST(ast.ifFalse);return ast.lbp<lbp?'('+t+')':t;case".":return _formatAST(ast.first,ast.lbp)+'.'+_formatAST(ast.second);case"not":return"not "+_formatAST(ast.first);case"(comparator)":var operator=ast.operators[0];return _formatAST(ast.expressions[0])+' '+operator+' '+_formatAST(ast.expressions[1]);case"(":if(ast.second){return _formatAST(ast.first)+'('+ast.second.map(_formatAST).join(', ')+')';}else{return'('+ast.first.map(_formatAST).join(', ')+')';}}
throw new Error("Unimplemented python construct");}
function _getPyJSAST(domain){return py.parse(py.tokenize(domain));}
function _normalizeDomainAST(domain){var expected=1;for(var i=0;i<domain.first.length;i++){var value=domain.first[i].value;if(value==='&'||value==='|'){expected++;}else if(value!=='!'){expected--;}}
var andOperator=py.tokenize("'&'")[0];if(expected<0){domain.first.unshift.apply(domain.first,_.times(Math.abs(expected),_.constant(andOperator)));}
return domain;}
return{context:pycontext,ensure_evaluated:ensure_evaluated,eval:pyeval,eval_domains_and_contexts:eval_domains_and_contexts,py_eval:py_eval,normalizeDomain:normalizeDomain,assembleDomains:assembleDomains,_getPyJSAST:_getPyJSAST,_formatAST:_formatAST,_normalizeDomainAST:_normalizeDomainAST,};});;

/* /web/static/src/legacy/js/core/context.js */
odoo.define('web.Context',function(require){"use strict";var Class=require('web.Class');var pyUtils=require('web.py_utils');var Context=Class.extend({init:function(){this.__ref="compound_context";this.__contexts=[];this.__eval_context=null;var self=this;_.each(arguments,function(x){self.add(x);});},add:function(context){this.__contexts.push(context);return this;},eval:function(){return pyUtils.eval('context',this);},set_eval_context:function(evalContext){for(var key in evalContext){if(evalContext[key]instanceof moment){evalContext[key]=evalContext[key].toJSON();}}
this.__eval_context=evalContext;return this;},});return Context;});;

/* /web/static/src/legacy/js/core/misc.js */
odoo.define('web.framework',function(require){"use strict";var core=require('web.core');var ajax=require('web.ajax');var Widget=require('web.Widget');const{sprintf}=require('web.utils')
var _t=core._t;var messages_by_seconds=function(){return[[0,_t("Loading...")],[20,_t("Still loading...")],[60,_t("Still loading...<br />Please be patient.")],[120,_t("Don't leave yet,<br />it's still loading...")],[300,_t("You may not believe it,<br />but the application is actually loading...")],[420,_t("Take a minute to get a coffee,<br />because it's loading...")],[3600,_t("Maybe you should consider reloading the application by pressing F5...")]];};var Throbber=Widget.extend({template:"Throbber",start:function(){this.start_time=new Date().getTime();this.act_message();},act_message:function(){var self=this;setTimeout(function(){if(self.isDestroyed())
return;var seconds=(new Date().getTime()-self.start_time)/1000;var mes;_.each(messages_by_seconds(),function(el){if(seconds>=el[0])
mes=el[1];});self.$(".oe_throbber_message").html(mes);self.act_message();},1000);},});if($.blockUI){$.blockUI.defaults.baseZ=1100;$.blockUI.defaults.message='<div class="openerp oe_blockui_spin_container" style="background-color: transparent;">';$.blockUI.defaults.css.border='0';$.blockUI.defaults.css["background-color"]='';}
function blockAccessKeys(){var elementWithAccessKey=[];elementWithAccessKey=document.querySelectorAll('[accesskey]');_.each(elementWithAccessKey,function(elem){elem.setAttribute("data-accesskey",elem.getAttribute('accesskey'));elem.removeAttribute('accesskey');});}
function unblockAccessKeys(){var elementWithDataAccessKey=[];elementWithDataAccessKey=document.querySelectorAll('[data-accesskey]');_.each(elementWithDataAccessKey,function(elem){elem.setAttribute('accesskey',elem.getAttribute('data-accesskey'));elem.removeAttribute('data-accesskey');});}
var throbbers=[];function blockUI(){var tmp=$.blockUI.apply($,arguments);var throbber=new Throbber();throbbers.push(throbber);throbber.appendTo($(".oe_blockui_spin_container"));$(document.body).addClass('o_ui_blocked');blockAccessKeys();return tmp;}
function unblockUI(){_.invoke(throbbers,'destroy');throbbers=[];$(document.body).removeClass('o_ui_blocked');unblockAccessKeys();return $.unblockUI.apply($,arguments);}
function redirect(url,wait){var load=function(){var old=""+window.location;var old_no_hash=old.split("#")[0];var url_no_hash=url.split("#")[0];location.assign(url);if(old_no_hash===url_no_hash){location.reload(true);}};var wait_server=function(){ajax.rpc("/web/webclient/version_info",{}).then(load).guardedCatch(function(){setTimeout(wait_server,250);});};if(wait){setTimeout(wait_server,1000);}else{load();}}
function Reload(parent,action){var params=action.params||{};var menu_id=params.menu_id||false;var action_id=params.action_id||false;var l=window.location;var sobj=$.deparam(l.search.substr(1));if(params.url_search){sobj=_.extend(sobj,params.url_search);}
var search='?'+$.param(sobj);var hash=l.hash;if(menu_id){hash="#menu_id="+menu_id;if(action_id){hash+="&action="+action_id;}}else if(action_id){hash="#action="+action_id;}
var url=l.protocol+"//"+l.host+l.pathname+search+hash;core.bus.trigger('clear_cache');redirect(url,params.wait);}
core.action_registry.add("reload",Reload);function Home(parent,action){var url='/'+(window.location.search||'');redirect(url,action&&action.params&&action.params.wait);}
core.action_registry.add("home",Home);function login(){redirect('/web/login');}
core.action_registry.add("login",login);function logout(){redirect('/web/session/logout');}
core.action_registry.add("logout",logout);function displayNotification(parent,action){let{title='',message='',links=[],type='info',sticky=false,next}=action.params||{};links=links.map(({url,label})=>`<a href="${_.escape(url)}" target="_blank">${_.escape(label)}</a>`)
parent.displayNotification({title,message:owl.markup(sprintf(_.escape(message),...links)),type,sticky,});return next;}
core.action_registry.add("display_notification",displayNotification);function ReloadContext(parent,action){ajax.rpc("/web/session/get_session_info",{}).then(function(){Reload(parent,action);});}
core.action_registry.add("reload_context",ReloadContext);if(!document.contains){document.contains=function contains(node){if(!(0 in arguments)){throw new TypeError('1 argument is required');}
do{if(this===node){return true;}}while(node=node&&node.parentNode);return false;};}
return{blockUI:blockUI,unblockUI:unblockUI,redirect:redirect,};});;

/* /web/static/src/legacy/js/fields/abstract_field.js */
odoo.define('web.AbstractField',function(require){"use strict";var field_utils=require('web.field_utils');var Widget=require('web.Widget');var AbstractField=Widget.extend({events:{'keydown':'_onKeydown',},custom_events:{navigation_move:'_onNavigationMove',},isQuickEditable:false,quickEditExclusion:[],fieldDependencies:{},resetOnAnyFieldChange:false,specialData:false,supportedFieldTypes:[],description:"",noLabel:false,label:'',init:function(parent,name,record,options){this._super(parent);options=options||{};this.name=name;this.record=record;this.field=record.fields[name];this.viewType=options.viewType||'default';var fieldsInfo=record.fieldsInfo[this.viewType];this.attrs=options.attrs||(fieldsInfo&&fieldsInfo[name])||{};this.additionalContext=options.additionalContext||{};this.value=record.data[name];this.recordData=record.data;this.string=this.attrs.string||this.field.string||this.name;this.nodeOptions=this.attrs.options||{};this.dataPointID=record.id;this.res_id=record.res_id;this.model=record.model;this.mode=options.mode||"readonly";this.hasReadonlyModifier=options.hasReadonlyModifier||false;this._isValid=true;this.lastSetValue=undefined;this.formatType=this.attrs.widget in field_utils.format?this.attrs.widget:this.field.type;this.formatOptions={};this.parseOptions={};if(this.attrs.decorations){this.resetOnAnyFieldChange=true;}
this._canQuickEdit=this.isQuickEditable;},start:function(){var self=this;return this._super.apply(this,arguments).then(function(){self.$el.attr('name',self.name);self.$el.addClass('o_field_widget').addClass("o_legacy_field_widget");self.$el.toggleClass('o_quick_editable',self._canQuickEdit);if(self.viewType==='form'){self.$el.on('click',self._onClick.bind(self));}
return self._render();});},activate:function(options){if(this.isFocusable()){var $focusable=this.getFocusableElement();$focusable.focus();if($focusable.is('input[type="text"], textarea')){$focusable[0].selectionStart=$focusable[0].selectionEnd=$focusable[0].value.length;if(options&&!options.noselect){$focusable.select();}}
return true;}
return false;},commitChanges:function(){},quickEdit:function(extraInfo){if(this._canQuickEdit&&this.mode!=="readonly"){this._quickEdit(extraInfo);}},getFocusableElement:function(){return $();},isEmpty:function(){return!this.isSet();},isFocusable:function(){var $focusable=this.getFocusableElement();return $focusable.length&&$focusable.is(':visible');},isSet:function(){return!!this.value;},isValid:function(){return this._isValid;},reset:function(record,event){this._reset(record,event);return this._render()||Promise.resolve();},removeInvalidClass:function(){this.$el.removeClass('o_field_invalid');this.$el.removeAttr('aria-invalid');},setIDForLabel:function(id){this.getFocusableElement().attr('id',id);},setInvalidClass:function(){this.$el.addClass('o_field_invalid');this.$el.attr('aria-invalid','true');},updateModifiersValue:function(modifiers){this.attrs.modifiersValue=modifiers||{};},_applyDecorations:function(){var self=this;this.attrs.decorations.forEach(function(dec){var isToggled=py.PY_isTrue(py.evaluate(dec.expression,self.record.evalContext));const className=self._getClassFromDecoration(dec.name);self.$el.toggleClass(className,isToggled);});},_quickEdit:function(extraInfo){this.activate({noAutomaticCreate:true});},_formatValue:function(value,formatType){formatType=formatType||this.formatType;if(!formatType){throw new Error(`Missing format type for '${this.name}' value from the '${this.model}' model`);}
var options=_.extend({},this.nodeOptions,{data:this.recordData},this.formatOptions);return field_utils.format[formatType](value,this.field,options);},_getClassFromDecoration:function(decoration){return`text-${decoration.split('-')[1]}`;},_getQuickEditExtraInfo(ev){return{};},_isLastSetValue:function(value){return this.lastSetValue===value||(this.value===false&&value==='');},_isSameValue:function(value){return this.value===value;},_parseValue:function(value){return field_utils.parse[this.formatType](value,this.field,this.parseOptions);},_render:function(){if(this.attrs.decorations){this._applyDecorations();}
if(this.mode==='edit'){return this._renderEdit();}else if(this.mode==='readonly'){return this._renderReadonly();}},_renderEdit:function(){},_renderReadonly:function(){},_reset:function(record,event){this.lastSetValue=undefined;this.record=record;this.value=record.data[this.name];this.recordData=record.data;},_setValue:function(value,options){if(this._isLastSetValue(value)){return Promise.resolve();}
this.lastSetValue=value;try{value=this._parseValue(value);this._isValid=true;}catch(_e){this._isValid=false;this.trigger_up('set_dirty',{dataPointID:this.dataPointID});return Promise.reject({message:"Value set is not valid"});}
if(!(options&&options.forceChange)&&this._isSameValue(value)){return Promise.resolve();}
var self=this;return new Promise(function(resolve,reject){var changes={};changes[self.name]=value;self.trigger_up('field_changed',{dataPointID:self.dataPointID,changes:changes,viewType:self.viewType,doNotSetDirty:options&&options.doNotSetDirty,notifyChange:!options||options.notifyChange!==false,allowWarning:options&&options.allowWarning,onSuccess:resolve,onFailure:reject,});});},_onClick:function(ev){if(!this.hasReadonlyModifier&&this._canQuickEdit&&this.mode==='readonly'&&!this.quickEditExclusion.some(x=>ev.target.closest(x))){this.trigger_up('quick_edit',{fieldName:this.name,target:this.el,extraInfo:this._getQuickEditExtraInfo(ev),});}},_onKeydown:function(ev){switch(ev.which){case $.ui.keyCode.TAB:var event=this.trigger_up('navigation_move',{direction:ev.shiftKey?'previous':'next',});if(event.is_stopped()){ev.preventDefault();ev.stopPropagation();}
break;case $.ui.keyCode.ENTER:ev.preventDefault();ev.stopPropagation();this.trigger_up('navigation_move',{direction:'next_line'});break;case $.ui.keyCode.ESCAPE:this.trigger_up('navigation_move',{direction:'cancel',originalEvent:ev});break;case $.ui.keyCode.UP:ev.stopPropagation();this.trigger_up('navigation_move',{direction:'up'});break;case $.ui.keyCode.RIGHT:ev.stopPropagation();this.trigger_up('navigation_move',{direction:'right'});break;case $.ui.keyCode.DOWN:ev.stopPropagation();this.trigger_up('navigation_move',{direction:'down'});break;case $.ui.keyCode.LEFT:ev.stopPropagation();this.trigger_up('navigation_move',{direction:'left'});break;}},_onNavigationMove:function(ev){ev.data.target=this;},});return AbstractField;});;

/* /web/static/src/legacy/js/fields/abstract_field_owl.js */
odoo.define('web.AbstractFieldOwl',function(require){"use strict";const field_utils=require('web.field_utils');const{useListener}=require("@web/core/utils/hooks");const{LegacyComponent}=require("@web/legacy/legacy_component");const{onWillUpdateProps,useEffect}=owl;class AbstractField extends LegacyComponent{setup(){this._canQuickEdit=this.constructor.isQuickEditable;this._isValid=true;this._lastSetValue=undefined;useListener('click',this._onClick);useListener('keydown',this._onKeydown);useListener('navigation-move',this._onNavigationMove);useEffect(()=>this._applyDecorations());useEffect(()=>{this.el.setAttribute('name',this.name);this.el.classList.add('o_field_widget');this.el.classList.toggle('o_quick_editable',this._canQuickEdit);});onWillUpdateProps(()=>{this._lastSetValue=undefined;});}
get additionalContext(){return this.options.additionalContext||{};}
get attrs(){const fieldsInfo=this.record.fieldsInfo[this.viewType];return this.options.attrs||(fieldsInfo&&fieldsInfo[this.name])||{};}
get dataPointId(){return this.record.id;}
get field(){return this.record.fields[this.name];}
get focusableElement(){return null;}
get formatOptions(){return{};}
get formatType(){return this.attrs.widget in field_utils.format?this.attrs.widget:this.field.type;}
get hasReadonlyModifier(){return this.options.hasReadonlyModifier||false;}
get isEmpty(){return!this.isSet;}
get isFocusable(){const focusable=this.focusableElement;return focusable&&!!(focusable.offsetWidth||focusable.offsetHeight||focusable.getClientRects().length);}
get isSet(){return!!this.value;}
get isValid(){return this._isValid;}
get mode(){return this.options.mode||"readonly";}
get model(){return this.record.model;}
get name(){return this.props.fieldName;}
get nodeOptions(){return this.attrs.options||{};}
get options(){return this.props.options||{};}
get parseOptions(){return{};}
get record(){return this.props.record;}
get recordData(){return this.record.data;}
get resetOnAnyFieldChange(){return!!this.attrs.decorations;}
get resId(){return this.record.res_id;}
get string(){return this.attrs.string||this.field.string||this.name;}
get value(){return this.record.data[this.name];}
get viewType(){return this.options.viewType||'default';}
activate(options){if(this.isFocusable){const focusable=this.focusableElement;focusable.focus();if(focusable.matches('input[type="text"], textarea')){focusable.selectionStart=focusable.selectionEnd=focusable.value.length;if(options&&!options.noselect){focusable.select();}}
return true;}
return false;}
commitChanges(){}
quickEdit(extraInfo){if(this._canQuickEdit&&this.mode!=='readonly'){this._quickEdit(extraInfo);}}
removeInvalidClass(){this.el.classList.remove('o_field_invalid');this.el.removeAttribute('aria-invalid');}
setIdForLabel(id){if(this.focusableElement){this.focusableElement.setAttribute('id',id);}}
setInvalidClass(){this.el.classList.add('o_field_invalid');this.el.setAttribute('aria-invalid','true');}
_applyDecorations(){for(const dec of this.attrs.decorations||[]){const isToggled=py.PY_isTrue(py.evaluate(dec.expression,this.record.evalContext));const className=this._getClassFromDecoration(dec.name);this.el.classList.toggle(className,isToggled);}}
_quickEdit(extraInfo){this.activate({noAutomaticCreate:true});}
_formatValue(value){const options=Object.assign({},this.nodeOptions,{data:this.recordData},this.formatOptions);return field_utils.format[this.formatType](value,this.field,options);}
_getClassFromDecoration(decoration){return`text-${decoration.split('-')[1]}`;}
_getQuickEditExtraInfo(ev){return{};}
_isLastSetValue(value){return this._lastSetValue===value||(this.value===false&&value==='');}
_isSameValue(value){return this.value===value;}
_parseValue(value){return field_utils.parse[this.formatType](value,this.field,this.parseOptions);}
_setValue(value,options){if(this._isLastSetValue(value)){return Promise.resolve();}
this._lastSetValue=value;try{value=this._parseValue(value);this._isValid=true;}catch(_e){this._isValid=false;this.trigger('set-dirty',{dataPointID:this.dataPointId});return Promise.reject({message:"Value set is not valid"});}
if(!(options&&options.forceChange)&&this._isSameValue(value)){return Promise.resolve();}
return new Promise((resolve,reject)=>{const changes={};changes[this.name]=value;this.trigger('field-changed',{dataPointID:this.dataPointId,changes:changes,viewType:this.viewType,doNotSetDirty:options&&options.doNotSetDirty,notifyChange:!options||options.notifyChange!==false,allowWarning:options&&options.allowWarning,onSuccess:resolve,onFailure:reject,});});}
_onClick(ev){if(this._canQuickEdit&&!this.constructor.quickEditExclusion.some(x=>ev.target.closest(x))){this.trigger('quick-edit',{fieldName:this.name,target:this.el,extraInfo:this._getQuickEditExtraInfo(ev),});}}
_onKeydown(ev){switch(ev.which){case $.ui.keyCode.TAB:this.trigger('navigation-move',{direction:ev.shiftKey?'previous':'next',originalEvent:ev,});break;case $.ui.keyCode.ENTER:ev.preventDefault();ev.stopPropagation();this.trigger('navigation-move',{direction:'next_line'});break;case $.ui.keyCode.ESCAPE:this.trigger('navigation-move',{direction:'cancel',originalEvent:ev});break;case $.ui.keyCode.UP:ev.stopPropagation();this.trigger('navigation-move',{direction:'up'});break;case $.ui.keyCode.RIGHT:ev.stopPropagation();this.trigger('navigation-move',{direction:'right'});break;case $.ui.keyCode.DOWN:ev.stopPropagation();this.trigger('navigation-move',{direction:'down'});break;case $.ui.keyCode.LEFT:ev.stopPropagation();this.trigger('navigation-move',{direction:'left'});break;}}
_onNavigationMove(ev){ev.detail.target=this;}}
AbstractField.fieldDependencies={};AbstractField.specialData=false;AbstractField.supportedFieldTypes=[];AbstractField.description="";AbstractField.noLabel=false;AbstractField.label="";AbstractField.isQuickEditable=false;AbstractField.quickEditExclusion=[];return AbstractField;});;

/* /web/static/src/legacy/js/fields/basic_fields.js */
odoo.define('web.basic_fields',function(require){"use strict";var AbstractField=require('web.AbstractField');var config=require('web.config');var core=require('web.core');var datepicker=require('web.datepicker');var deprecatedFields=require('web.basic_fields.deprecated');var dom=require('web.dom');var Domain=require('web.Domain');var DomainSelector=require('web.DomainSelector');var DomainSelectorDialog=require('web.DomainSelectorDialog');var ModelFieldSelectorPopover=require("web.ModelFieldSelectorPopover");var framework=require('web.framework');var py_utils=require('web.py_utils');var session=require('web.session');var utils=require('web.utils');var view_dialogs=require('web.view_dialogs');var field_utils=require('web.field_utils');var time=require('web.time');const{ColorpickerDialog}=require('web.Colorpicker');const{hidePDFJSButtons}=require('@web/legacy/js/libs/pdfjs');let FieldBoolean=deprecatedFields.FieldBoolean;require("web.zoomodoo");var qweb=core.qweb;var _t=core._t;var _lt=core._lt;var TranslatableFieldMixin={_renderTranslateButton:function(){if(_t.database.multi_lang&&this.field.translate){var lang=_t.database.parameters.code.split('_')[0].toUpperCase();return $(`<span class="o_field_translate btn btn-link">${lang}</span>`).on('click',this._onTranslate.bind(this));}
return $();},_onTranslate:function(ev){ev.preventDefault();this.trigger_up('translate',{fieldName:this.name,id:this.dataPointID,isComingFromTranslationAlert:false,});},};var DynamicPlaceholderFieldMixin={DYNAMIC_PLACEHOLDER_TRIGGER_KEY:'#',positionModelSelector:function(modelSelector){let relativeParent=this.el.closest('div.modal-content');if(!relativeParent){relativeParent=this.el;while(!relativeParent||!['absolute','relative'].includes(getComputedStyle(relativeParent).position)){relativeParent=relativeParent.offsetParent;}}
const relatedElementPosition=this.el.getBoundingClientRect();const relativeParentPosition=relativeParent.getBoundingClientRect();let topPosition=relatedElementPosition.top+relatedElementPosition.height-relativeParentPosition.top
let leftPosition=relatedElementPosition.left-relativeParentPosition.left;modelSelector.el.style.top=topPosition+'px';modelSelector.el.style.left=leftPosition+'px';},_openNewModelSelector:async function(baseModel,chain,onFieldChanged=null,onFieldCancel=null){const triggerKeyReplaceRegex=new RegExp(`${this.DYNAMIC_PLACEHOLDER_TRIGGER_KEY}$`);const modelSelector=new ModelFieldSelectorPopover(this,baseModel,[],{readonly:false,needDefaultValue:true,cancelOnEscape:true,chainedTitle:true,filter:(model)=>!["one2many","boolean","many2many"].includes(model.type)});if(!onFieldChanged){onFieldChanged=(ev)=>{this.$el.focus();if(ev.data.chain.length){let dynamicPlaceholder="{{object."+ev.data.chain.join('.');const defaultValue=ev.data.defaultValue;dynamicPlaceholder+=defaultValue&&defaultValue!==''?` or '''${defaultValue}'''}}`:'}}';this.el.value=this.el.value.replace(triggerKeyReplaceRegex,'')+dynamicPlaceholder;}
modelSelector.destroy();};}
if(onFieldCancel===null){onFieldCancel=()=>{this.$el.focus();modelSelector.destroy();};}
modelSelector.on("field_chain_changed",undefined,onFieldChanged);modelSelector.on("field_chain_cancel",undefined,onFieldCancel);const modalParent=this.el.closest('div.modal-content');if(modalParent){await modelSelector.appendTo(modalParent);}else{await modelSelector.insertAfter(this.el);}
this.positionModelSelector(modelSelector);modelSelector.open(chain,true);return modelSelector;},};var DebouncedField=AbstractField.extend({DEBOUNCE:1000000000,init:function(){this._super.apply(this,arguments);this._isDirty=false;if(this.mode==='edit'){if(this.DEBOUNCE){this._doDebouncedAction=_.debounce(this._doAction,this.DEBOUNCE);}else{this._doDebouncedAction=this._doAction;}
var self=this;var debouncedFunction=this._doDebouncedAction;this._doDebouncedAction=function(){self._isDirty=true;debouncedFunction.apply(self,arguments);};}},commitChanges:function(){if(this._isDirty&&this.mode==='edit'){return this._doAction();}},_doAction:function(){if(!this.isDestroyed()){return this._setValue(this._getValue());}},_getValue:function(){},_onBlur:function(){},});var InputField=DebouncedField.extend({custom_events:_.extend({},DebouncedField.prototype.custom_events,{field_changed:'_onFieldChanged',}),events:_.extend({},DebouncedField.prototype.events,{'input':'_onInput','change':'_onChange','blur':'_onBlur',}),init:function(){this._super.apply(this,arguments);this.nodeOptions.isPassword='password'in this.attrs;if(this.mode==='edit'){this.tagName='input';}
this.isDirty=false;this.lastChangeEvent=undefined;},getFocusableElement:function(){return this.$input||$();},reset:function(record,event){this._reset(record,event);if(!event||event===this.lastChangeEvent){this.isDirty=false;}
if(this.isDirty||(event&&event.target===this&&event.data.changes&&event.data.changes[this.name]===this.value)){if(this.attrs.decorations){this._applyDecorations();}
return Promise.resolve();}else{return this._render();}},_getValue:function(){return this.$input.val();},_notifyChanges(){this.isDirty=!this._isLastSetValue(this.$input.val());this._doDebouncedAction();},_prepareInput:function($input){this.$input=$input||$("<input/>");this.$input.addClass('o_input');var inputAttrs={placeholder:this.attrs.placeholder||""};var inputVal;if(this.nodeOptions.isPassword){inputAttrs=_.extend(inputAttrs,{type:'password',autocomplete:this.attrs.autocomplete||'new-password'});inputVal=this.value||'';}else{inputAttrs=_.extend(inputAttrs,{type:'text',autocomplete:this.attrs.autocomplete||'off'});inputVal=this._formatValue(this.value);}
this.$input.attr(inputAttrs);this.$input.val(inputVal);return this.$input;},_renderEdit:function(){this._prepareInput(this.$el);},_renderReadonly:function(){this.$el.text(this._formatValue(this.value));},_onChange:function(){this._doAction();},_onFieldChanged:function(event){this.lastChangeEvent=event;},_onInput(){this._notifyChanges();},_onNavigationMove:function(ev){this._super.apply(this,arguments);if(this.mode==='edit'&&ev.data.direction!=='cancel'){var input=this.$input[0];var selecting=(input.selectionEnd!==input.selectionStart);if((ev.data.direction==="left"&&(selecting||input.selectionStart!==0))||(ev.data.direction==="right"&&(selecting||input.selectionStart!==input.value.length))){ev.stopPropagation();}
if(ev.data.direction==='next'&&this.attrs.modifiersValue&&this.attrs.modifiersValue.required&&this.viewType!=='list'){if(!this.$input.val()){this.setInvalidClass();ev.stopPropagation();}else{this.removeInvalidClass();}}}},});var NumericField=InputField.extend({tagName:'span',init(){this._super.apply(this,arguments);this.shouldFormat=Boolean(JSON.parse('format'in this.nodeOptions?this.nodeOptions.format:true));},isSet:function(){return this.value===0||this._super.apply(this,arguments);},_evalFormula:function(expr,context){var val=expr.replace(new RegExp(/( )/g),'');var safeEvalString='';for(let v of val.split(new RegExp(/([-+*/()^])/g))){if(!['+','-','*','/','(',')','^'].includes(v)&&v.length){v=field_utils.parse.float(v);}
if(v==='^'){v='**';}
safeEvalString+=v;};return py_utils.py_eval(safeEvalString,context);},_formatValue:function(value){if(!this.shouldFormat||(this.mode==='edit'&&this.nodeOptions.type==='number')){return value;}
return this._super.apply(this,arguments);},_parseValue:function(value){if(this.mode==='edit'&&this.nodeOptions.type==='number'){return Number(value);}
return this._super.apply(this,arguments);},_prepareInput:function($input){var result=this._super.apply(this,arguments);if(this.nodeOptions.type==='number'){this.$input.attr({type:'number'});}
if(this.nodeOptions.step){this.$input.attr({step:this.nodeOptions.step});}
return result;},_setValue:function(value,options){var originalValue=value;value=value.trim();if(value.startsWith('=')){try{value=this._evalFormula(value.substr(1));value=this._formatValue(value);this.$input.val(value);}catch(_err){value=originalValue;}}
return this._super(value,options);},_onKeydown(ev){const kbdEvt=ev.originalEvent;if(kbdEvt&&utils.isNumpadDecimalSeparatorKey(kbdEvt)){const inputField=this.$input[0];if(inputField.type==='number'){return this._super(...arguments);}
const curVal=inputField.value;const from=inputField.selectionStart;const to=inputField.selectionEnd;const point=_t.database.parameters.decimal_point;inputField.value=curVal.slice(0,from)+point+curVal.slice(to);inputField.selectionStart=inputField.selectionEnd=from+point.length;this._notifyChanges();kbdEvt.preventDefault();return;}
return this._super(...arguments);},});var FieldChar=InputField.extend(TranslatableFieldMixin,DynamicPlaceholderFieldMixin,{description:_lt("Text"),className:'o_field_char',tagName:'span',supportedFieldTypes:['char'],isQuickEditable:true,init:function(){this._super(...arguments);if(this.nodeOptions&&this.nodeOptions.dynamic_placeholder){this.resetOnAnyFieldChange=true;}},async _onKeydown(ev){this._super(...arguments);if(this.nodeOptions&&this.nodeOptions.dynamic_placeholder&&ev.key===this.DYNAMIC_PLACEHOLDER_TRIGGER_KEY){ev.preventDefault();const baseModel=this.recordData&&this.recordData.mailing_model_real?this.recordData.mailing_model_real:undefined;if(baseModel){await this._openNewModelSelector(baseModel);}
this.el.value+=ev.key;}},_renderEdit:function(){var def=this._super.apply(this,arguments);if(this.field.size&&this.field.size>0){this.$el.attr('maxlength',this.field.size);}
if(this.field.translate){this.$el=this.$el.add(this._renderTranslateButton());this.$el.addClass('o_field_translate');}
return def;},_setValue:function(value,options){if(this.field.trim){value=value.trim();}
return this._super(value,options);},});var FieldDateRange=InputField.extend({className:'o_field_date_range',tagName:'span',jsLibs:['/web/static/lib/daterangepicker/daterangepicker.js','/web/static/src/legacy/js/libs/daterangepicker.js',],supportedFieldTypes:['date','datetime'],isQuickEditable:true,init:function(){this._super.apply(this,arguments);this.formatType=this.nodeOptions.format_type||this.formatType;this.isDateField=this.formatType==='date';this.dateRangePickerOptions=_.defaults({},this.nodeOptions.picker_options||{},{timePicker:!this.isDateField,timePicker24Hour:_t.database.parameters.time_format.search('%H')!==-1,autoUpdateInput:false,timePickerIncrement:5,locale:{applyLabel:_t('Apply'),cancelLabel:_t('Cancel'),format:this.isDateField?time.getLangDateFormat():time.getLangDatetimeFormat(),},});this.relatedEndDate=this.nodeOptions.related_end_date;this.relatedStartDate=this.nodeOptions.related_start_date;},destroy:function(){if(this.$pickerContainer){this.$pickerContainer.remove();}
if(this._onScroll){window.removeEventListener('scroll',this._onScroll,true);}
this._super.apply(this,arguments);},isValid:function(){const value=this.mode==="readonly"?this.value:this.$input.val();try{return field_utils.parse[this.formatType](value,this.field,{timezone:true})||true;}catch(_error){return false;}},_getValue:function(){try{this.removeInvalidClass();return field_utils.parse[this.formatType](this.$input.val(),this.field,{timezone:true});}catch(_error){this.setInvalidClass();return false;}},_applyChanges:function(ev,picker){var changes={};var displayStartDate=field_utils.format[this.formatType](picker.startDate,{},{timezone:false});var displayEndDate=field_utils.format[this.formatType](picker.endDate,{},{timezone:false});var changedStartDate=picker.startDate;var changedEndDate=picker.endDate;if(this.isDateField){changedStartDate=picker.startDate.add(session.getTZOffset(picker.startDate),'minutes');changedEndDate=picker.endDate.startOf('day').add(session.getTZOffset(picker.endDate),'minutes');}
if(this.relatedEndDate){this.$el.val(displayStartDate);changes[this.name]=this._parseValue(changedStartDate);changes[this.relatedEndDate]=this._parseValue(changedEndDate);}
if(this.relatedStartDate){this.$el.val(displayEndDate);changes[this.name]=this._parseValue(changedEndDate);changes[this.relatedStartDate]=this._parseValue(changedStartDate);}
this.trigger_up('field_changed',{dataPointID:this.dataPointID,viewType:this.viewType,changes:changes,});},_renderEdit:function(){this._super.apply(this,arguments);var self=this;const[startDate,endDate]=this._getDateRangeFromInputField();this.dateRangePickerOptions.startDate=startDate||moment();this.dateRangePickerOptions.endDate=endDate||moment();this.$el.daterangepicker(this.dateRangePickerOptions);this.$el.on('apply.daterangepicker',this._applyChanges.bind(this));this.$el.on('show.daterangepicker',this._onDateRangePickerShow.bind(this));this.$el.on('hide.daterangepicker',this._onDateRangePickerHide.bind(this));this.$el.off('keyup.daterangepicker');this.$pickerContainer=this.$el.data('daterangepicker').container;this.$pickerContainer.on('click',function(ev){ev.stopPropagation();if($(ev.target).hasClass('applyBtn')){self.$el.data('daterangepicker').hide();}});this.$pickerContainer.on('focusin.bs.modal','select',function(ev){ev.stopPropagation();});},_quickEdit:function(){if(this.$el){this.$el.click()}},_onDateRangePickerHide(){if(this._onScroll){window.removeEventListener('scroll',this._onScroll,true);}},_onDateRangePickerShow(){const daterangepicker=this.$el.data('daterangepicker');this._onScroll=ev=>{if(!config.device.isMobile&&!this.$pickerContainer.get(0).contains(ev.target)){daterangepicker.hide();}};window.addEventListener('scroll',this._onScroll,true);const[startDate,endDate]=this._getDateRangeFromInputField();daterangepicker.setStartDate(startDate?startDate.utcOffset(session.getTZOffset(startDate)):moment());daterangepicker.setEndDate(endDate?endDate.utcOffset(session.getTZOffset(endDate)):moment());daterangepicker.updateView();},_getDateRangeFromInputField(){let startDate,endDate;if(this.relatedEndDate){startDate=this.value;endDate=this.recordData[this.relatedEndDate];}
if(this.relatedStartDate){startDate=this.recordData[this.relatedStartDate];endDate=this.value;}
return[startDate,endDate];},});var FieldDate=InputField.extend({description:_lt("Date"),className:"o_field_date",tagName:"span",supportedFieldTypes:['date','datetime'],isQuickEditable:true,events:AbstractField.prototype.events,init:function(){this._super.apply(this,arguments);this.formatOptions.timezone=true;this.datepickerOptions=_.defaults({},this.nodeOptions.datepicker||{},{defaultDate:this.value});},start:function(){var self=this;var prom;if(this.mode==='edit'){this.datewidget=this._makeDatePicker();this.datewidget.on('datetime_changed',this,function(){var value=this._getValue();if((!value&&this.value)||(value&&!this._isSameValue(value))){this._setValue(value);}});prom=this.datewidget.appendTo('<div>').then(function(){self.datewidget.$el.addClass(self.$el.attr('class'));self._prepareInput(self.datewidget.$input);self._replaceElement(self.datewidget.$el);});}
return Promise.resolve(prom).then(this._super.bind(this));},activate:function(){if(this.isFocusable()&&this.datewidget){this.datewidget.$input.focus();this.datewidget.$input.select();return true;}
return false;},_doDebouncedAction:function(){this.datewidget.changeDatetime();},_quickEdit:function(){if(this.datewidget){this.datewidget.$input.click();}},_getValue:function(){return this.datewidget.getValue();},_isSameValue:function(value){if(this.value===false||value===false){return this.value===value;}
return value.isSame(this.value,'day');},_makeDatePicker:function(){return new datepicker.DateWidget(this,this.datepickerOptions);},_renderEdit:function(){this.datewidget.setValue(this.value);this.$input=this.datewidget.$input;},async _onKeydown(ev){this._super(...arguments);if(ev.which===$.ui.keyCode.ENTER){let value=this.$input.val();try{value=this._parseValue(value);if(this.datewidget.type_of_date==="datetime"){value.add(-this.getSession().getTZOffset(value),"minutes");}}catch(_err){}
await this._setValue(value);this._render();}},});var FieldDateTime=FieldDate.extend({description:_lt("Date & Time"),supportedFieldTypes:['datetime'],isQuickEditable:true,init:function(){this._super.apply(this,arguments);if(this.value){var offset=this.getSession().getTZOffset(this.value);var displayedValue=this.value.clone().add(offset,'minutes');this.datepickerOptions.defaultDate=displayedValue;}},_getValue:function(){var value=this.datewidget.getValue();return value&&value.add(-this.getSession().getTZOffset(value),'minutes');},_isSameValue:function(value){if(this.value===false||value===false){return this.value===value;}
return value.isSame(this.value);},_makeDatePicker:function(){return new datepicker.DateTimeWidget(this,this.datepickerOptions);},_renderEdit:function(){var value=this.value&&this.value.clone().add(this.getSession().getTZOffset(this.value),'minutes');this.datewidget.setValue(value);this.$input=this.datewidget.$input;},});const RemainingDays=AbstractField.extend({description:_lt("Remaining Days"),supportedFieldTypes:['date','datetime'],init(){this._super(...arguments);this.formatOptions.timezone=true;},getFocusableElement(){return this.datewidget&&this.datewidget.$input||$();},_getValue(){let value=this.datewidget.getValue();if(this.field.type==="datetime"){value=value&&value.add(-this.getSession().getTZOffset(value),'minutes');}
return value;},_makeDatePicker(){this.datepickerOptions=_.defaults({},{defaultDate:this.value});if(this.field.type==="datetime"&&this.value){const offset=this.getSession().getTZOffset(this.value);const displayedValue=this.value.clone().add(offset,'minutes');this.datepickerOptions.defaultDate=displayedValue;}
if(this.field.type==="date"){return new datepicker.DateWidget(this,this.datepickerOptions);}
return new datepicker.DateTimeWidget(this,this.datepickerOptions);},async _renderEdit(){await this._super(...arguments);if(this.datewidget){this.datewidget.destroy();}
this.datewidget=this._makeDatePicker();this.datewidget.on('datetime_changed',this,()=>{const value=this._getValue();if((!value&&this.value)||(value&&!this._isSameValue(value))){this._setValue(value);}});await this.datewidget.appendTo('<div>');this.$el.append(this.datewidget.$el);},_renderReadonly(){if(this.value===false){this.$el.removeClass('fw-bold text-danger text-warning');return;}
const nowUTC=moment().utc();const nowUserTZ=nowUTC.clone().add(session.getTZOffset(nowUTC),'minutes');const fieldValue=this.field.type=="datetime"?this.value.clone().add(session.getTZOffset(this.value),'minutes'):this.value;const diffDays=fieldValue.startOf('day').diff(nowUserTZ.startOf('day'),'days');let text;if(Math.abs(diffDays)>99){text=this._formatValue(this.value,'date');}else if(diffDays===0){text=_t("Today");}else if(diffDays<0){text=diffDays===-1?_t("Yesterday"):_.str.sprintf(_t('%s days ago'),-diffDays);}else{text=diffDays===1?_t("Tomorrow"):_.str.sprintf(_t('In %s days'),diffDays);}
this.$el.text(text).attr('title',this._formatValue(this.value,'date'));this.$el.toggleClass('fw-bold',diffDays<=0);this.$el.toggleClass('text-danger',diffDays<0);this.$el.toggleClass('text-warning',diffDays===0);},});var FieldMonetary=NumericField.extend({description:_lt("Monetary"),className:'o_field_monetary o_field_number',tagName:'span',supportedFieldTypes:['float','monetary'],resetOnAnyFieldChange:true,isQuickEditable:true,init:function(){this._super.apply(this,arguments);this._setCurrency();if(this.mode==='edit'){this.tagName='div';this.className+=' o_input';this.formatOptions.noSymbol=true;}
this.formatOptions.currency=this.currency;this.formatOptions.digits=[16,2];this.formatOptions.field_digits=this.nodeOptions.field_digits;},isSet:function(){return this.value===0||this._super.apply(this,arguments);},_renderEdit:function(){this.$el.empty();var def=this._prepareInput(this.$input).appendTo(this.$el);if(this.currency&&!this.nodeOptions.no_symbol){var $currencySymbol=$('<span>',{text:this.currency.symbol});if(this.currency.position==="after"){this.$el.append($currencySymbol);}else{this.$el.prepend($currencySymbol);}}
return def;},_renderReadonly:function(){this.$el.html(this._formatValue(this.value));},_reset:function(){this._super.apply(this,arguments);this._setCurrency();},_setCurrency:function(){var currencyField=this.nodeOptions.currency_field||this.field.currency_field||'currency_id';var currencyID=this.record.data[currencyField]&&this.record.data[currencyField].res_id;this.currency=session.get_currency(currencyID);this.formatOptions.currency=this.currency;},});var FieldInteger=NumericField.extend({description:_lt("Integer"),className:'o_field_integer o_field_number',supportedFieldTypes:['integer'],isQuickEditable:true,_formatValue:function(value){if(typeof value==='string'){if(!/^[0-9]+-/.test(value)){throw new Error('"'+value+'" is not an integer or a virtual id');}
return value;}
return this._super.apply(this,arguments);},});var FieldFloat=NumericField.extend({description:_lt("Decimal"),className:'o_field_float o_field_number',supportedFieldTypes:['float'],isQuickEditable:true,init:function(){this._super.apply(this,arguments);if(this.attrs.digits){this.nodeOptions.digits=JSON.parse(this.attrs.digits);}},});var FieldFloatTime=FieldFloat.extend({description:_lt("Time"),formatType:'float_time',isQuickEditable:true,init:function(){this._super.apply(this,arguments);this.formatType='float_time';},async reset(){await this._super(...arguments);if(!this.isDirty){await this._render();}},});var FieldFloatFactor=FieldFloat.extend({supportedFieldTypes:['float'],className:'o_field_float_factor',formatType:'float_factor',isQuickEditable:true,init:function(){this._super.apply(this,arguments);if(!this.nodeOptions.factor){this.nodeOptions.factor=1;}
this.parseOptions=this.nodeOptions;}});var FieldFloatToggle=AbstractField.extend({supportedFieldTypes:['float'],formatType:'float_factor',className:'o_field_float_toggle',tagName:'span',events:{click:'_onClick'},init:function(){this._super.apply(this,arguments);this.formatType='float_factor';if(this.mode==='edit'||this.nodeOptions.force_button){this.tagName='button';}
if(this.attrs.digits){this.nodeOptions.digits=JSON.parse(this.attrs.digits);}
if(!this.nodeOptions.factor){this.nodeOptions.factor=1;}
if(!this.nodeOptions.range){this.nodeOptions.range=[0.0,0.5,1.0];}
this.parseOptions=this.nodeOptions;},_getDisplayedValue:function(){var usrFormatValue=this._formatValue(this.value);return field_utils.parse['float'](usrFormatValue);},_renderEdit:function(){this.$el.text(this._formatValue(this.value));},_renderReadonly:function(){this.$el.text(this._formatValue(this.value));},_nextValue:function(){var range=this.nodeOptions.range;var val=utils.closestNumber(this._getDisplayedValue(),range);var index=_.indexOf(range,val);if(index!==-1){if(index+1<range.length){return range[index+1];}}
return range[0];},_onClick:function(ev){if(this.mode==='edit'||this.nodeOptions.force_button){ev.stopPropagation();var next_val=this._nextValue();next_val=field_utils.format['float'](next_val);this._setValue(next_val);}},isSet:function(){return this.value===0||this._super(...arguments);},});var FieldPercentage=FieldFloat.extend({className:'o_field_float_percentage o_field_number',description:_lt("Percentage"),init(){this._super(...arguments);if(this.mode==='edit'){this.tagName='div';this.className+=' o_input';this.formatOptions.noSymbol=true;}},_renderEdit(){this.$el.empty();this._prepareInput(this.$input).appendTo(this.$el);const $percentageSymbol=$('<span>',{text:'%'});this.$el.append($percentageSymbol);},});var FieldText=InputField.extend(TranslatableFieldMixin,{description:_lt("Multiline Text"),className:'o_field_text',supportedFieldTypes:['text','html'],tagName:'span',isQuickEditable:true,init:function(){this._super.apply(this,arguments);if(this.mode==='edit'){this.tagName='textarea';}
this.autoResizeOptions={parent:this};},start:function(){if(this.mode==='edit'){dom.autoresize(this.$el,this.autoResizeOptions);if(this.field.translate){this.$el=this.$el.add(this._renderTranslateButton());this.$el.addClass('o_field_translate');}}
return this._super();},reset:function(){var self=this;return Promise.resolve(this._super.apply(this,arguments)).then(function(){if(self.mode==='edit'){self.$input.trigger('change');}});},_quickEdit:function(){this.activate({noselect:true,noAutomaticCreate:true});},_onKeydown:function(ev){if(ev.which===$.ui.keyCode.ENTER){ev.stopPropagation();return;}
this._super.apply(this,arguments);},});var ListFieldText=FieldText.extend({init:function(){this._super.apply(this,arguments);this.autoResizeOptions.min_height=0;},});var HandleWidget=AbstractField.extend({description:_lt("Handle"),noLabel:true,className:'o_row_handle fa fa-sort ui-sortable-handle',widthInList:'33px',tagName:'span',supportedFieldTypes:['integer'],isSet:function(){return true;},});var FieldEmail=InputField.extend({description:_lt("Email"),className:'o_field_email',events:_.extend({},InputField.prototype.events,{'click':'_onClickLink',}),prefix:'mailto',supportedFieldTypes:['char'],isQuickEditable:true,init:function(){this._super.apply(this,arguments);this.tagName=this.mode==='readonly'?'div':'input';},getFocusableElement:function(){return this.mode==='readonly'?this.$el.find('a'):this._super.apply(this,arguments);},_renderReadonly:function(){if(this.value){this.el.innerHTML='';this.el.classList.add("o_form_uri","o_text_overflow");const anchorEl=Object.assign(document.createElement('a'),{text:this.value,href:`${this.prefix}:${this.value}`,});this.el.appendChild(anchorEl);}},_setValue:function(value,options){if(this.field.trim){value=value.trim();}
return this._super(value,options);},_onClickLink:function(ev){if(ev.target.matches("a")){ev.stopImmediatePropagation();}},});var FieldPhone=FieldEmail.extend({description:_lt("Phone"),className:'o_field_phone',prefix:'tel',_renderReadonly:function(){this._super();this.$el.removeClass('o_text_overflow');},});var UrlWidget=InputField.extend({description:_lt("URL"),className:'o_field_url',events:_.extend({},InputField.prototype.events,{'click':'_onClick',}),supportedFieldTypes:['char'],isQuickEditable:true,init:function(){this._super.apply(this,arguments);this.tagName=this.mode==='readonly'?'div':'input';this.websitePath=this.nodeOptions.website_path||false;},getFocusableElement:function(){return this.mode==='readonly'?this.$el.find('a'):this._super.apply(this,arguments);},_renderReadonly:function(){if(!this.value){return;}
let href=this.value;if(this.value&&!this.websitePath){const regex=/^((ftp|http)s?:\/)?\//i;href=!regex.test(this.value)?`http://${href}`:href;}
this.el.classList.add("o_form_uri","o_text_overflow");const anchorEl=Object.assign(document.createElement('a'),{text:this.attrs.text||this.value,href:href,target:'_blank',});this.el.textContent='';this.el.appendChild(anchorEl);},_onClick:function(ev){ev.stopPropagation();},});var CopyClipboard={quickEditExclusion:['.o_clipboard_button',],destroy:function(){this._super.apply(this,arguments);if(this.clipboard){this.clipboard.destroy();}},_initClipboard:function(){var self=this;var $clipboardBtn=this.$('.o_clipboard_button');$clipboardBtn.tooltip({title:_t('Copied !'),trigger:'manual',placement:'right'});this.clipboard=new ClipboardJS($clipboardBtn[0],{text:function(){return self.value.trim();},container:self.$el[0]});this.clipboard.on('success',function(){_.defer(function(){$clipboardBtn.tooltip('show');_.delay(function(){$clipboardBtn.tooltip('hide');},800);});});},_renderReadonly:function(){this._super.apply(this,arguments);if(this.value){this.$el.append($(qweb.render(this.clipboardTemplate)));this._initClipboard();}}};var ButtonCopyClipboard=AbstractField.extend(CopyClipboard,{description:_lt('Copy to Clipboard'),clipboardTemplate:'CopyClipboardButton',className:'',events:_.extend({},AbstractField.prototype.events,{'click':'_onClick',}),_onClick:event=>{event.stopPropagation();},_renderReadonly:function(){this._super.apply(this,arguments);if(this.value){const $btn=$(qweb.render(this.clipboardTemplate));$btn.addClass(this.nodeOptions&&this.nodeOptions.classes||'btn-primary');if(this.nodeOptions&&this.nodeOptions.label){$btn.text(_t(this.nodeOptions.label));}
this.$el.empty().append($btn);this._initClipboard();}},});var TextCopyClipboard=FieldText.extend(CopyClipboard,{description:_lt("Copy to Clipboard"),clipboardTemplate:'CopyClipboardText',className:"o_field_copy",});var CharCopyClipboard=FieldChar.extend(CopyClipboard,{description:_lt("Copy to Clipboard"),clipboardTemplate:'CopyClipboardChar',className:'o_field_copy o_text_overflow',});var URLCopyClipboard=FieldChar.extend(CopyClipboard,{description:_lt("Copy to Clipboard"),clipboardTemplate:'CopyClipboardChar',className:'o_field_copy o_text_overflow o_field_copy_url',events:_.extend({},FieldChar.prototype.events,{'click':'_onClick',}),_onClick:function(ev){if(ev.target.className.includes('o_field_copy_url')){ev.stopPropagation();window.open(this.value,'_blank');}}});var AbstractFieldBinary=AbstractField.extend({events:_.extend({},AbstractField.prototype.events,{'change .o_input_file':'on_file_change','click .o_select_file_button':function(){this.$('.o_input_file').click();},'click .o_clear_file_button':'_onClearClick',}),init:function(parent,name,record){this._super.apply(this,arguments);this.fields=record.fields;this.useFileAPI=!!window.FileReader;this.max_upload_size=session.max_file_upload_size||128*1024*1024;this.accepted_file_extensions=(this.nodeOptions&&this.nodeOptions.accepted_file_extensions)||this.accepted_file_extensions||'*';if(!this.useFileAPI){var self=this;this.fileupload_id=_.uniqueId('o_fileupload');$(window).on(this.fileupload_id,function(){var args=[].slice.call(arguments).slice(1);self.on_file_uploaded.apply(self,args);});}},destroy:function(){if(this.fileupload_id){$(window).off(this.fileupload_id);}
this._super.apply(this,arguments);},on_file_change:function(e){var self=this;var file_node=e.target;if((this.useFileAPI&&file_node.files.length)||(!this.useFileAPI&&$(file_node).val()!=='')){if(this.useFileAPI){var file=file_node.files[0];if(file.size>this.max_upload_size){var msg=_t("The selected file exceed the maximum file size of %s.");this.displayNotification({title:_t("File upload"),message:_.str.sprintf(msg,utils.human_size(this.max_upload_size)),type:'danger'});return false;}
utils.getDataURLFromFile(file).then(function(data){data=data.split(',')[1];self.on_file_uploaded(file.size,file.name,file.type,data);});}else{this.$('form.o_form_binary_form').submit();}
this.$('.o_form_binary_progress').show();this.$('button').hide();}},on_file_uploaded:function(size,name){if(size===false){this.displayNotification({message:_t("There was a problem while uploading your file"),type:'danger'});console.warn("Error while uploading file : ",name);}else{this.on_file_uploaded_and_valid.apply(this,arguments);}
this.$('.o_form_binary_progress').hide();this.$('button').show();},on_file_uploaded_and_valid:function(size,name,content_type,file_base64){this.set_filename(name);this._setValue(file_base64);this._render();},set_filename:function(value){var filename=this.attrs.filename;if(filename&&filename in this.fields){var changes={};changes[filename]=value;this.trigger_up('field_changed',{dataPointID:this.dataPointID,changes:changes,viewType:this.viewType,});}},_clearFile:function(){var self=this;this.$('.o_input_file').val('');this.set_filename('');if(!this.isDestroyed()){this._setValue(false).then(function(){self._render();});}},_onClearClick:function(ev){this._clearFile();},});var FieldBinaryImage=AbstractFieldBinary.extend({description:_lt("Image"),fieldDependencies:_.extend({},AbstractFieldBinary.prototype.fieldDependencies,{__last_update:{type:'datetime'},}),template:'FieldBinaryImage',placeholder:"/web/static/img/placeholder.png",events:_.extend({},AbstractFieldBinary.prototype.events,{'click img':'_onImageClick',}),supportedFieldTypes:['binary'],file_type_magic_word:{'/':'jpg','R':'gif','i':'png','P':'svg+xml',},accepted_file_extensions:'image/*',_getImageUrl:function(model,res_id,field,unique){return session.url('/web/image',{model:model,id:JSON.stringify(res_id),field:field,unique:field_utils.format.datetime(unique).replace(/[^0-9]/g,''),});},_render:function(){var self=this;var url=this.placeholder;if(this.value){if(!utils.is_bin_size(this.value)){url='data:image/'+(this.file_type_magic_word[this.value[0]]||'png')+';base64,'+this.value;}else{var field=this.nodeOptions.preview_image||this.name;var unique=this.recordData.__last_update;url=this._getImageUrl(this.model,this.res_id,field,unique);}}
var $img=$(qweb.render("FieldBinaryImage-img",{widget:this,url:url}));var width=this.nodeOptions.size?this.nodeOptions.size[0]:this.attrs.width;var height=this.nodeOptions.size?this.nodeOptions.size[1]:this.attrs.height;if(width){$img.attr('width',width);$img.css('max-width',width+'px');if(!height){$img.css('height','auto');$img.css('max-height','100%');}}
if(height){$img.attr('height',height);$img.css('max-height',height+'px');if(!width){$img.css('width','auto');$img.css('max-width','100%');}}
this.$('> img').remove();this.$el.prepend($img);$img.one('error',function(){$img.attr('src',self.placeholder);self.displayNotification({message:_t("Could not display the selected image"),type:'danger'});});return this._super.apply(this,arguments);},_renderReadonly:function(){this._super.apply(this,arguments);var unique=this.recordData.__last_update;var url=this._getImageUrl(this.model,this.res_id,'image_1920',unique);var $img;var imageField=_.find(Object.keys(this.recordData),function(o){return o.startsWith('image_');});if(this.nodeOptions.background)
{if('tag'in this.nodeOptions){this.tagName=this.nodeOptions.tag;}
if('class'in this.attrs){this.$el.addClass(this.attrs.class);}
var urlThumb=this._getImageUrl(this.model,this.res_id,this.name,unique);this.$el.empty();$img=this.$el;$img.css('backgroundImage','url('+urlThumb+')');}else{$img=this.$('img');}
if(this.nodeOptions.zoom){var zoomDelay=0;if(this.nodeOptions.zoom_delay){zoomDelay=this.nodeOptions.zoom_delay;}
if(this.recordData[imageField]){$img.attr('data-zoom',1);$img.attr('data-zoom-image',url);$img.zoomOdoo({event:'mouseenter',timer:zoomDelay,attach:'.o_content',attachToTarget:true,disabledOnMobile:false,onShow:function(){var zoomHeight=Math.ceil(this.$zoom.height());var zoomWidth=Math.ceil(this.$zoom.width());if(zoomHeight<128&&zoomWidth<128){this.hide();}
core.bus.on('keydown',this,this.hide);core.bus.on('click',this,this.hide);},beforeAttach:function(){this.$flyout.css({width:'512px',height:'512px'});},preventClicks:this.nodeOptions.preventClicks,});}}},_onImageClick:function(ev){if(this.mode==="readonly"){this.trigger_up('bounce_edit');}},});var CharImageUrl=AbstractField.extend({className:'o_field_image',description:_lt("Image"),supportedFieldTypes:['char'],placeholder:"/web/static/img/placeholder.png",_renderReadonly:function(){var self=this;const url=this.value;if(url){var $img=$(qweb.render("FieldBinaryImage-img",{widget:this,url:url}));const width=this.nodeOptions.size?this.nodeOptions.size[0]:this.attrs.width;const height=this.nodeOptions.size?this.nodeOptions.size[1]:this.attrs.height;if(width){$img.attr('width',width);$img.css('max-width',width+'px');if(!height){$img.css('height','auto');$img.css('max-height','100%');}}
if(height){$img.attr('height',height);$img.css('max-height',height+'px');if(!width){$img.css('width','auto');$img.css('max-width','100%');}}
this.$('> img').remove();this.$el.prepend($img);$img.one('error',function(){$img.attr('src',self.placeholder);self.displayNotification({type:'info',message:_t("Could not display the specified image url."),});});}
return this._super.apply(this,arguments);},});var KanbanFieldBinaryImage=FieldBinaryImage.extend({events:{},});var KanbanCharImageUrl=CharImageUrl.extend({events:{},});var FieldBinaryFile=AbstractFieldBinary.extend({description:_lt("File"),template:'FieldBinaryFile',events:_.extend({},AbstractFieldBinary.prototype.events,{'click':function(event){if(this.mode==='readonly'&&this.value&&this.recordData.id){this.on_save_as(event);}},'click .o_input':function(){this.$('.o_input_file').click();},}),supportedFieldTypes:['binary'],init:function(){this._super.apply(this,arguments);this.filename_value=this.recordData[this.attrs.filename];},_renderReadonly:function(){var visible=!!(this.value&&this.res_id);this.$el.empty().css('cursor','not-allowed');this.do_toggle(visible);if(visible){this.$el.css('cursor','pointer').text(this.filename_value||'').prepend($('<span class="fa fa-download"/>'),' ');}},_renderEdit:function(){if(this.value){this.$el.children().removeClass('o_hidden');this.$('.o_select_file_button').first().addClass('o_hidden');this.$('.o_input').eq(0).val(this.filename_value||this.value);}else{this.$el.children().addClass('o_hidden');this.$('.o_select_file_button').first().removeClass('o_hidden');}},set_filename:function(value){this._super.apply(this,arguments);this.filename_value=value;this.$('.o_save_file_button').prop('disabled',true);},on_save_as:function(ev){if(!this.value){this.displayNotification({message:_t("The field is empty, there's nothing to save."),type:'danger'});ev.stopPropagation();}else if(this.res_id){framework.blockUI();var filename_fieldname=this.attrs.filename;this.getSession().get_file({complete:framework.unblockUI,data:{'model':this.model,'id':this.res_id,'field':this.name,'filename_field':filename_fieldname,'filename':this.recordData[filename_fieldname]||"",'download':true,'data':utils.is_bin_size(this.value)?null:this.value,},error:(error)=>this.call('crash_manager','rpc_error',error),url:'/web/content',});ev.stopPropagation();}},});var FieldPdfViewer=FieldBinaryFile.extend({description:_lt("PDF Viewer"),supportedFieldTypes:['binary'],template:'FieldPdfViewer',accepted_file_extensions:'application/pdf',init:function(){this._super.apply(this,arguments);this.PDFViewerApplication=false;},_getURI:function(fileURI){var page=this.recordData[this.name+'_page']||1;if(!fileURI){var queryObj={model:this.model,field:this.name,id:this.res_id,};var queryString=$.param(queryObj);fileURI='/web/content?'+queryString;}
fileURI=encodeURIComponent(fileURI);var viewerURL='/web/static/lib/pdfjs/web/viewer.html?file=';return viewerURL+fileURI+'#page='+page;},_render:function(){var self=this;var $pdfViewer=this.$('.o_form_pdf_controls').children().add(this.$('.o_pdfview_iframe'));var $selectUpload=this.$('.o_select_file_button').first();var $iFrame=this.$('.o_pdfview_iframe');$iFrame.on('load',function(){self.PDFViewerApplication=this.contentWindow.window.PDFViewerApplication;});if(this.mode==="readonly"&&this.value){$iFrame.attr('src',this._getURI());}else{if(this.value){var binSize=utils.is_bin_size(this.value);$pdfViewer.removeClass('o_hidden');$selectUpload.addClass('o_hidden');if(binSize){$iFrame.attr('src',this._getURI());}}else{$pdfViewer.addClass('o_hidden');$selectUpload.removeClass('o_hidden');}}
hidePDFJSButtons($iFrame[0]);},on_file_change:function(ev){this._super.apply(this,arguments);var files=ev.target.files;if(!files||files.length===0){return;}
var fileURI=URL.createObjectURL(files[0]);if(this.PDFViewerApplication){this.PDFViewerApplication.open(fileURI,0);}else{this.$('.o_pdfview_iframe').attr('src',this._getURI(fileURI));}},on_save_as:function(ev){ev.stopPropagation();},});var PriorityWidget=AbstractField.extend({description:_lt("Priority"),className:"o_priority",attributes:{'role':'radiogroup',},events:{'mouseover > a':'_onMouseOver','mouseout > a':'_onMouseOut','click > a':'_onPriorityClick','keydown > a':'_onKeydown',},supportedFieldTypes:['selection'],isSet:function(){return true;},getFocusableElement:function(){var checked=this.$("[aria-checked='true']");return checked.length?checked:this.$("[data-index='1']");},on_attach_callback(){const self=this;if(self.viewType==="form"){let provide=()=>{return self.field.selection.map((value)=>({name:value[1],action:()=>{this._setValue(value[0]);}}))}
let getCommandDefinition=(env)=>({name:env._t("Set priority..."),options:{activeElement:env.services.ui.getActiveElementOf(self.el),category:"smart_action",hotkey:"alt+r",},action(){return{placeholder:env._t("Set a priority..."),providers:[{provide}],};},});core.bus.trigger("set_legacy_command","web.PriorityWidget.setPriority",getCommandDefinition);}},on_detach_callback(){core.bus.trigger("remove_legacy_command","web.PriorityWidget.setPriority");},_render:function(){var self=this;var index_value=this.value?_.findIndex(this.field.selection,function(v){return v[0]===self.value;}):0;this.$el.empty();this.empty_value=this.field.selection[0][0];this.$el.attr('aria-label',this.string);const isReadonly=this.record.evalModifiers(this.attrs.modifiers).readonly;_.each(this.field.selection.slice(1),function(choice,index){const tag=isReadonly?'<span>':'<a href="#">';self.$el.append(self._renderStar(tag,index_value>=index+1,index+1,`${self.string}: ${choice[1]}`,index_value));});},_renderStar:function(tag,isFull,index,tip,indexValue){var isChecked=indexValue===index;var defaultFocus=indexValue===0&&index===1;return $(tag).attr('role','radio').attr('aria-checked',isChecked).attr('title',tip).attr('aria-label',tip).attr('tabindex',isChecked||defaultFocus?0:-1).attr('data-index',index).addClass('o_priority_star fa').toggleClass('fa-star',isFull).toggleClass('fa-star-o',!isFull);},_onPriorityClick:function(event){event.preventDefault();event.stopPropagation();var index=$(event.currentTarget).data('index');var newValue=this.field.selection[index][0];if(newValue===this.value){newValue=this.empty_value;}
this._setValue(newValue);},_onMouseOut:function(){clearTimeout(this.hoverTimer);var self=this;this.hoverTimer=setTimeout(function(){self._render();},200);},_onMouseOver:function(event){clearTimeout(this.hoverTimer);this.$('.o_priority_star').removeClass('fa-star-o').addClass('fa-star');$(event.currentTarget).nextAll().removeClass('fa-star').addClass('fa-star-o');},_onKeydown:function(event){if(event.which===$.ui.keyCode.ENTER){return;}
this._super.apply(this,arguments);},_onNavigationMove:function(ev){var $curControl=this.$('a:focus');var $nextControl;if(ev.data.direction==='right'||ev.data.direction==='down'){$nextControl=$curControl.next('a');}else if(ev.data.direction==='left'||ev.data.direction==='up'){$nextControl=$curControl.prev('a');}
if($nextControl&&$nextControl.length){ev.stopPropagation();$nextControl.focus();return;}
this._super.apply(this,arguments);},});var AttachmentImage=AbstractField.extend({className:'o_attachment_image',events:_.omit(AbstractField.prototype.events,'click'),_render:function(){if(this.value){this.$el.empty().append($('<img>/',{src:"/web/image/"+this.value.data.id+"?unique=1",title:this.value.data.display_name,alt:_t("Image")}));}}});var StateSelectionWidget=AbstractField.extend({template:'FormSelection',events:{'click .dropdown-item':'_setSelection',},supportedFieldTypes:['selection'],getFocusableElement:function(){return this.$("a[data-bs-toggle='dropdown']");},on_attach_callback(){const self=this;if(self.viewType==="form"){let provide=()=>{return self.field.selection.map((value)=>({name:value[1],action:()=>{this._setValue(value[0]);}}))}
let getCommandDefinition=(env)=>({name:env._t("Set kanban state..."),options:{activeElement:env.services.ui.getActiveElementOf(self.el),category:"smart_action",hotkey:"alt+shift+r",},action(){return{placeholder:env._t("Set a kanban state..."),providers:[{provide}],}},});core.bus.trigger("set_legacy_command","web.StateSelectionWidget.setKanbanState",getCommandDefinition);}},on_detach_callback(){core.bus.trigger("remove_legacy_command","web.StateSelectionWidget.setKanbanState");},_prepareDropdownValues:function(){var self=this;var _data=[];var current_stage_id=self.recordData.stage_id&&self.recordData.stage_id[0];var stage_data={id:current_stage_id,legend_normal:this.recordData.legend_normal||undefined,legend_blocked:this.recordData.legend_blocked||undefined,legend_done:this.recordData.legend_done||undefined,};_.map(this.field.selection||[],function(selection_item){var value={'name':selection_item[0],'tooltip':selection_item[1],};if(selection_item[0]==='normal'){value.state_name=stage_data.legend_normal?stage_data.legend_normal:selection_item[1];}else if(selection_item[0]==='done'){value.state_class='o_status_green';value.state_name=stage_data.legend_done?stage_data.legend_done:selection_item[1];}else{value.state_class='o_status_red';value.state_name=stage_data.legend_blocked?stage_data.legend_blocked:selection_item[1];}
_data.push(value);});return _data;},_render:function(){var states=this._prepareDropdownValues();var currentState=_.findWhere(states,{name:this.value})||states[0];this.$('.o_status').removeClass('o_status_red o_status_green').addClass(currentState.state_class).prop('special_click',true).parent().attr('title',currentState.state_name).attr('aria-label',this.string+": "+currentState.state_name);var $items=$(qweb.render('FormSelection.items',{states:_.without(states,currentState)}));var $dropdown=this.$('.dropdown-menu');$dropdown.children().remove();$items.appendTo($dropdown);var isReadonly=this.record.evalModifiers(this.attrs.modifiers).readonly;this.$('a[data-bs-toggle=dropdown]').toggleClass('disabled',isReadonly||false);},_setSelection:function(ev){ev.preventDefault();if(this.mode!=='edit'){ev.stopPropagation();}
var $item=$(ev.currentTarget);var value=String($item.data('value'));this._setValue(value);if(this.mode==='edit'){this._render();}},});const ListStateSelectionWidget=StateSelectionWidget.extend({_render(){this._super.apply(this,arguments);const hideLabel=utils.toBoolElse(this.nodeOptions.hide_label||'',false);if(!hideLabel){const states=this._prepareDropdownValues();const currentState=states.find(state=>state.name===this.value)||states[0];const statusEL=this.el.querySelector('.o_status_label');if(statusEL){statusEL.innerText=currentState.state_name;}else{const labelEL=Object.assign(document.createElement('span'),{innerText:currentState.state_name,className:'o_status_label align-middle',});this.el.appendChild(labelEL);}}},});var FavoriteWidget=AbstractField.extend({className:'o_favorite',events:{'click':'_setFavorite'},supportedFieldTypes:['boolean'],isSet:function(){return true;},_render:function(){var tip=this.value?_t('Remove from Favorites'):_t('Add to Favorites');var template=this.attrs.nolabel?'<a href="#"><i class="fa %s" title="%s" aria-label="%s" role="img"></i></a>':'<a href="#"><i class="fa %s" role="img" aria-label="%s"></i> %s</a>';this.$el.empty().append(_.str.sprintf(template,this.value?'fa-star':'fa-star-o',tip,tip));},_setFavorite:function(event){event.preventDefault();event.stopPropagation();this._setValue(!this.value);},});var LabelSelection=AbstractField.extend({supportedFieldTypes:['selection'],_render:function(){this.classes=this.nodeOptions&&this.nodeOptions.classes||{};var labelClass=this.classes[this.value]||'primary';this.$el.addClass('badge text-bg-'+labelClass).text(this._formatValue(this.value));},});var BooleanToggle=FieldBoolean.extend({description:_lt("Toggle"),className:FieldBoolean.prototype.className+' o_boolean_toggle form-switch',isQuickEditable:true,events:{'click':'_onClick'},async _render(){await this._super(...arguments);const isReadonly=this.record.evalModifiers(this.attrs.modifiers).readonly||false;this.$input.prop('disabled',isReadonly);},_onClick:async function(event){event.stopPropagation();if(!this.$input.prop('disabled')){await this._setValue(!this.value);this._render();}},});var StatInfo=AbstractField.extend({supportedFieldTypes:['integer','float'],isSet:function(){return true;},_render:function(){var options={value:this._formatValue(this.value||0),};if(!this.attrs.nolabel){if(this.nodeOptions.label_field&&this.recordData[this.nodeOptions.label_field]){options.text=this.recordData[this.nodeOptions.label_field];}else{options.text=this.string;}}
this.$el.html(qweb.render("StatInfo",options));this.$el.addClass('o_stat_info');},});var FieldPercentPie=AbstractField.extend({description:_lt("Percentage Pie"),template:'FieldPercentPie',supportedFieldTypes:['integer','float'],isQuickEditable:true,start:function(){this.$leftMask=this.$('.o_mask').first();this.$rightMask=this.$('.o_mask').last();this.$pieValue=this.$('.o_pie_value');return this._super();},isSet:function(){return true;},_render:function(){var value=this.value||0;var degValue=360*value/100;this.$rightMask.toggleClass('o_full',degValue>=180);var leftDeg='rotate('+((degValue<180)?180:degValue)+'deg)';var rightDeg='rotate('+((degValue<180)?degValue:0)+'deg)';this.$leftMask.css({transform:leftDeg,msTransform:leftDeg,mozTransform:leftDeg,webkitTransform:leftDeg});this.$rightMask.css({transform:rightDeg,msTransform:rightDeg,mozTransform:rightDeg,webkitTransform:rightDeg});this.$pieValue.text(Math.round(value)+'%');},});var FieldProgressBar=AbstractField.extend({description:_lt("Progress Bar"),template:"ProgressBar",events:{'change input':'on_change_input','input input':'on_change_input','keyup input':function(e){if(e.which===$.ui.keyCode.ENTER){this.on_change_input(e);}},},supportedFieldTypes:['integer','float'],init:function(){this._super.apply(this,arguments);if(this.recordData[this.nodeOptions.current_value]){this.value=this.recordData[this.nodeOptions.current_value];}
this.editable_readonly=!!this.nodeOptions.editable_readonly;this.readonly=this.nodeOptions.readonly||!this.nodeOptions.editable;this.canWrite=!this.readonly&&(this.mode==='edit'||(this.editable_readonly&&this.mode==='readonly')||(this.viewType==='kanban'));this.edit_max_value=!!this.nodeOptions.edit_max_value;this.max_value=this.recordData[this.nodeOptions.max_value]||100;this.title=_t(this.attrs.title||this.nodeOptions.title)||'';this.enableBarAsInput=false;this.edit_on_click=this.enableBarAsInput&&this.mode==='readonly'&&!this.edit_max_value;this.write_mode=false;},_render:function(){var self=this;this._render_value();if(this.canWrite){if(this.edit_on_click){this.$el.on('click','.o_progress',function(e){var $target=$(e.currentTarget);var numValue=Math.floor((e.pageX-$target.offset().left)/$target.outerWidth()*self.max_value);self.on_update(numValue);self._render_value();});}else{this.$el.on('click',function(){if(!self.write_mode){var $input=$('<input>',{type:'text',class:'o_progressbar_value o_input'});$input.on('blur',self.on_change_input.bind(self));self.$('.o_progressbar_value').replaceWith($input);self.write_mode=true;self._render_value();}});}}
return this._super();},on_update:function(value){if(this.edit_max_value){this.max_value=value;this._isValid=true;var changes={};changes[this.nodeOptions.max_value]=this.max_value;this.trigger_up('field_changed',{dataPointID:this.dataPointID,changes:changes,});}else{var formattedValue=this._formatValue(value);this._setValue(formattedValue);}},on_change_input:function(e){var $input=$(e.target);if(e.type==='change'&&!$input.is(':focus')){return;}
var parsedValue;try{parsedValue=field_utils.parse.float($input.val());}catch(_error){this.displayNotification({message:_t("Please enter a numerical value"),type:'danger'});}
if(parsedValue!==undefined){if(e.type==='input'){this._render_value(parsedValue);if(parsedValue===0){$input.select();}}else{if(this.edit_max_value){parsedValue=parsedValue||100;}
var $div=$('<div>',{class:'o_progressbar_value'});this.$('.o_progressbar_value').replaceWith($div);this.write_mode=false;this.on_update(parsedValue);this._render_value();}}},_render_value:function(v){var value=this.value;var max_value=this.max_value;if(!isNaN(v)){if(this.edit_max_value){max_value=v;}else{value=v;}}
value=value||0;max_value=max_value||0;var widthComplete;if(value<=max_value){widthComplete=value/max_value*100;}else{widthComplete=100;}
this.$('.o_progress').toggleClass('o_progress_overflow',value>max_value).attr('aria-valuemin','0').attr('aria-valuemax',max_value).attr('aria-valuenow',value);this.$('.o_progressbar_complete').css('width',widthComplete+'%');if(!this.write_mode){if(max_value!==100){this.$('.o_progressbar_value').text(utils.human_number(value)+" / "+utils.human_number(max_value));}else{this.$('.o_progressbar_value').text(utils.human_number(value)+"%");}}else if(isNaN(v)){this.$('.o_progressbar_value').val(this.edit_max_value?max_value:value);this.$('.o_progressbar_value').focus().select();}},_reset:function(){this._super.apply(this,arguments);var new_max_value=this.recordData[this.nodeOptions.max_value];this.max_value=new_max_value!==undefined?new_max_value:this.max_value;},isSet:function(){return true;},});var FieldToggleBoolean=AbstractField.extend({description:_lt("Button"),template:"toggle_button",events:{'click':'_onToggleButton'},supportedFieldTypes:['boolean'],isSet:function(){return true;},_render:function(){this.$('i').toggleClass('o_toggle_button_success',!!this.value).toggleClass('text-muted',!this.value);const isReadonly=this.record.evalModifiers(this.attrs.modifiers).readonly;if(isReadonly){this.el.setAttribute('disabled',isReadonly);}
var title=this.value?this.attrs.options.active:this.attrs.options.inactive;this.$el.attr('title',title);this.$el.attr('aria-pressed',this.value);},_onToggleButton:function(event){event.stopPropagation();this._setValue(!this.value);},});var JournalDashboardGraph=AbstractField.extend({className:"o_dashboard_graph",jsLibs:['/web/static/lib/Chart/Chart.js',],init:function(){this._super.apply(this,arguments);this.graph_type=this.attrs.graph_type;this.data=JSON.parse(this.value);},on_attach_callback:function(){this._isInDOM=true;this._renderInDOM();},on_detach_callback:function(){this._isInDOM=false;},_render:function(){if(this._isInDOM){return this._renderInDOM();}
return Promise.resolve();},_renderInDOM:function(){this.$el.empty();var config,cssClass;if(this.graph_type==='line'){config=this._getLineChartConfig();cssClass='o_graph_linechart';}else if(this.graph_type==='bar'){config=this._getBarChartConfig();cssClass='o_graph_barchart';}
this.$canvas=$('<canvas/>');this.$el.addClass(cssClass);this.$el.empty();this.$el.append(this.$canvas);var context=this.$canvas[0].getContext('2d');this.chart=new Chart(context,config);},_getLineChartConfig:function(){var labels=this.data[0].values.map(function(pt){return pt.x;});var borderColor=this.data[0].is_sample_data?'#dddddd':'#875a7b';var backgroundColor=this.data[0].is_sample_data?'#ebebeb':'#dcd0d9';return{type:'line',data:{labels:labels,datasets:[{data:this.data[0].values,fill:'start',label:this.data[0].key,backgroundColor:backgroundColor,borderColor:borderColor,borderWidth:2,}]},options:{legend:{display:false},scales:{yAxes:[{display:false}],xAxes:[{display:false}]},maintainAspectRatio:false,elements:{line:{tension:0.000001}},tooltips:{intersect:false,position:'nearest',caretSize:0,},},};},_getBarChartConfig:function(){var data=[];var labels=[];var backgroundColor=[];this.data[0].values.forEach(function(pt){data.push(pt.value);labels.push(pt.label);var color=pt.type==='past'?'#ccbdc8':(pt.type==='future'?'#a5d8d7':'#ebebeb');backgroundColor.push(color);});return{type:'bar',data:{labels:labels,datasets:[{data:data,fill:'start',label:this.data[0].key,backgroundColor:backgroundColor,}]},options:{legend:{display:false},scales:{yAxes:[{display:false}],},maintainAspectRatio:false,tooltips:{intersect:false,position:'nearest',caretSize:0,},elements:{line:{tension:0.000001}},},};},});var FieldDomain=AbstractField.extend({resetOnAnyFieldChange:true,events:_.extend({},AbstractField.prototype.events,{"click .o_domain_show_selection_button":"_onShowSelectionButtonClick","click .o_field_domain_dialog_button":"_onDialogEditButtonClick","click .o_refresh_count":"_onRefreshCountClick",}),custom_events:_.extend({},AbstractField.prototype.custom_events,{domain_changed:"_onDomainSelectorValueChange",domain_selected:"_onDomainSelectorDialogValueChange",open_record:"_onOpenRecord",}),init:function(){this._super.apply(this,arguments);this.inDialog=!!this.nodeOptions.in_dialog;this.fsFilters=this.nodeOptions.fs_filters||{};this.className="o_field_domain";if(this.mode==="edit"){this.className+=" o_edit_mode";}
if(!this.inDialog){this.className+=" o_inline_mode";}
this._setState();this._isValidForModel=true;this.nbRecords=null;this.lastCountFetchKey=null;this.debugEdition=false;},on_attach_callback(){if(this.domainSelector&&!this.inDialog){this.domainSelector.on_attach_callback();}},commitChanges(){if(this.debugEdition){return this._fetchCount();}},isSet:function(){return true;},isValid:function(){return(this._super.apply(this,arguments)&&(!this.domainSelector||this.domainSelector.isValid())&&this._isValidForModel);},_fetchCount(force=false){if(!this._domainModel){this._isValidForModel=true;this.nbRecords=0;return Promise.resolve();}
const value=this.value||"[]";const key=`${this._domainModel}/${value}`;if(!force&&this.lastCountFetchKey===key){return this.lastCountFetchProm;}
this.lastCountFetchKey=key;this.nbRecords=null;const context=this.record.getContext({fieldName:this.name});this.lastCountFetchProm=new Promise((resolve)=>{this._rpc({model:this._domainModel,method:'search_count',args:[Domain.prototype.stringToArray(value,this.record.evalContext)],context:context},{shadow:true}).then((nbRecords)=>{this._isValidForModel=true;this.nbRecords=nbRecords;resolve();}).guardedCatch((reason)=>{reason.event.preventDefault();this._isValidForModel=false;this.nbRecords=0;resolve();});});return this.lastCountFetchProm;},_render:async function(){if(!this._domainModel){this._replaceContent();return Promise.resolve();}
var value=this.value||"[]";var def;if(!this.domainSelector){this.domainSelector=new DomainSelector(this,this._domainModel,value,{readonly:this.mode==="readonly"||this.inDialog,filters:this.fsFilters,debugMode:config.isDebug(),});def=this.domainSelector.prependTo(this.$el);}else if(!this.debugEdition){def=this.domainSelector.setDomain(value);}
await Promise.resolve(def);this._replaceContent();if(!this.debugEdition){this._fetchCount().then(()=>this._replaceContent());}},_replaceContent:function(){if(this._$content){this._$content.remove();}
this._$content=$(qweb.render("FieldDomain.content",{hasModel:!!this._domainModel,isValid:!!this._isValidForModel,nbRecords:this.nbRecords,inDialog:this.inDialog,editMode:this.mode==="edit",isDebug:config.isDebug(),}));this._$content.appendTo(this.$el);},_reset:function(record,ev){this._super.apply(this,arguments);var oldDomainModel=this._domainModel;this._setState();if(this.domainSelector&&this._domainModel!==oldDomainModel){this.domainSelector.destroy();this.domainSelector=null;}
if(!ev||ev.target!==this){this.debugEdition=false;}},_setState:function(){let domainModel=this.nodeOptions.model;if(Object.prototype.hasOwnProperty.call(this.record.data,domainModel)){domainModel=this.record.data[domainModel];}
this._domainModel=domainModel;},async _onRefreshCountClick(ev){ev.stopPropagation();ev.currentTarget.setAttribute("disabled","disabled");await this._fetchCount(true);this._replaceContent();},_onShowSelectionButtonClick:function(e){e.preventDefault();new view_dialogs.SelectCreateDialog(this,{title:_t("Selected records"),res_model:this._domainModel,context:this.record.getContext({fieldName:this.name,viewType:this.viewType}),domain:this.value||"[]",no_create:true,readonly:true,disable_multiple_selection:true,}).open();},_onDialogEditButtonClick:function(e){e.preventDefault();new DomainSelectorDialog(this,this._domainModel,this.value||"[]",{readonly:this.mode==="readonly",filters:this.fsFilters,debugMode:config.isDebug(),}).open();},_onDomainSelectorValueChange:function(e){this.debugEdition=!!e.data.debug;this._setValue(e.data.domain);},_onDomainSelectorDialogValueChange:function(e){this._setValue(Domain.prototype.arrayToString(e.data.domain));},_onOpenRecord:function(event){event.stopPropagation();},_onKeydown:function(ev){if(ev.which===$.ui.keyCode.ENTER&&ev.target.tagName==="TEXTAREA"){ev.stopPropagation();return;}
this._super.apply(this,arguments);},});var AceEditor=DebouncedField.extend({template:"AceEditor",jsLibs:['/web/static/lib/ace/ace.js',['/web/static/lib/ace/mode-python.js','/web/static/lib/ace/mode-xml.js','/web/static/lib/ace/mode-qweb.js']],events:{},start:function(){this._startAce(this.$('.ace-view-editor')[0]);return this._super.apply(this,arguments);},destroy:function(){if(this.aceEditor){this.aceEditor.destroy();}
this._super.apply(this,arguments);},_formatValue:function(value){return this._super.apply(this,arguments)||'';},_getValue:function(){return this.aceSession.getValue();},_render:function(){var newValue=this._formatValue(this.value);if(this.aceSession.getValue()!==newValue){this.aceSession.setValue(newValue);}},_startAce:function(node){this.aceEditor=ace.edit(node);this.aceEditor.setOptions({maxLines:Infinity,showPrintMargin:false,});if(this.mode==='readonly'){this.aceEditor.renderer.setOptions({displayIndentGuides:false,showGutter:false,});this.aceEditor.setOptions({highlightActiveLine:false,highlightGutterLine:false,readOnly:true,});this.aceEditor.renderer.$cursorLayer.element.style.display="none";}
this.aceEditor.$blockScrolling=true;this.aceSession=this.aceEditor.getSession();const mode=this.nodeOptions.mode||'qweb';this.aceSession.setOptions({useWorker:false,mode:"ace/mode/"+(mode==='xml'?'qweb':mode),tabSize:2,useSoftTabs:true,});if(this.mode==="edit"){this.aceEditor.on("change",this._doDebouncedAction.bind(this));this.aceEditor.on("blur",this._doAction.bind(this));}},});var FieldColor=AbstractField.extend({template:'FieldColor',events:_.extend({},AbstractField.prototype.events,{'click .o_field_color':'_onColorClick',}),custom_events:_.extend({},AbstractField.prototype.custom_events,{'colorpicker:saved':'_onColorpickerSaved',}),getFocusableElement:function(){return this.$('.o_field_color');},_render:function(){this.$('.o_field_color').data('value',this.value).css('background-color',this.value).attr('title',this.value);return this._super.apply(this,arguments);},_onColorClick:function(){if(this.mode==='edit'){const dialog=new ColorpickerDialog(this,{defaultColor:this.value,noTransparency:true,}).open();dialog.on('closed',this,()=>{Promise.resolve().then(()=>{this.getFocusableElement().focus();});});}},_onColorpickerSaved:function(ev){this._setValue(ev.data.hex);},_onKeydown:function(ev){if(ev.which===$.ui.keyCode.ENTER){ev.preventDefault();ev.stopPropagation();this._onColorClick(ev);}else{this._super.apply(this,arguments);}},});var FieldColorPicker=FieldInteger.extend({RECORD_COLORS:[_t('No color'),_t('Red'),_t('Orange'),_t('Yellow'),_t('Light blue'),_t('Dark purple'),_t('Salmon pink'),_t('Medium blue'),_t('Dark blue'),_t('Fushia'),_t('Green'),_t('Purple'),],widthInList:'1',init:function(){this._super.apply(this,arguments);this.tagName='div';},_renderEdit:function(){this.$el.html(qweb.render('ColorPicker'));this._setupColorPicker();this._highlightSelectedColor();},_renderReadonly:function(){var selectedColorName=this.RECORD_COLORS[this.value];this.$el.html(qweb.render('ColorPickerReadonly',{active_color:this.value,name_color:selectedColorName}));this.$el.on('click','a',function(ev){ev.preventDefault();});},_setupColorPicker:function(){var $colorpicker=this.$('ul');if(!$colorpicker.length){return;}
$colorpicker.html(qweb.render('web.Legacy.KanbanColorPicker',{colors:this.RECORD_COLORS}));$colorpicker.on('click','a',this._onColorChanged.bind(this));},_getValue:function(){return this.value;},_onColorChanged:function(ev){ev.preventDefault();var color=null;if(ev.currentTarget&&ev.currentTarget.dataset&&ev.currentTarget.dataset.color){color=ev.currentTarget.dataset.color;}
if(color){this.value=color;this._onChange();this._renderEdit();}},_highlightSelectedColor:function(){try{$(this.$('li')[parseInt(this.value)]).css('border','2px solid teal');}catch(_err){}},_onNavigationMove(){}});return{TranslatableFieldMixin:TranslatableFieldMixin,DynamicPlaceholderFieldMixin:DynamicPlaceholderFieldMixin,DebouncedField:DebouncedField,FieldEmail:FieldEmail,FieldBinaryFile:FieldBinaryFile,FieldPdfViewer:FieldPdfViewer,AbstractFieldBinary:AbstractFieldBinary,FieldBinaryImage:FieldBinaryImage,KanbanFieldBinaryImage:KanbanFieldBinaryImage,CharImageUrl:CharImageUrl,KanbanCharImageUrl:KanbanCharImageUrl,FieldBoolean:FieldBoolean,BooleanToggle:BooleanToggle,FieldChar:FieldChar,FieldDate:FieldDate,FieldDateTime:FieldDateTime,FieldDateRange:FieldDateRange,RemainingDays:RemainingDays,FieldDomain:FieldDomain,FieldFloat:FieldFloat,FieldFloatTime:FieldFloatTime,FieldFloatFactor:FieldFloatFactor,FieldFloatToggle:FieldFloatToggle,FieldPercentage:FieldPercentage,FieldInteger:FieldInteger,FieldMonetary:FieldMonetary,FieldPercentPie:FieldPercentPie,FieldPhone:FieldPhone,FieldProgressBar:FieldProgressBar,FieldText:FieldText,ListFieldText:ListFieldText,FieldToggleBoolean:FieldToggleBoolean,HandleWidget:HandleWidget,InputField:InputField,NumericField:NumericField,AttachmentImage:AttachmentImage,LabelSelection:LabelSelection,StateSelectionWidget:StateSelectionWidget,ListStateSelectionWidget:ListStateSelectionWidget,FavoriteWidget:FavoriteWidget,PriorityWidget:PriorityWidget,StatInfo:StatInfo,UrlWidget:UrlWidget,ButtonCopyClipboard:ButtonCopyClipboard,TextCopyClipboard:TextCopyClipboard,CharCopyClipboard:CharCopyClipboard,URLCopyClipboard:URLCopyClipboard,JournalDashboardGraph:JournalDashboardGraph,AceEditor:AceEditor,FieldColor:FieldColor,FieldColorPicker:FieldColorPicker,};});;

/* /web/static/src/legacy/js/fields/basic_fields_owl.js */
odoo.define('web.basic_fields_owl',function(require){"use strict";const AbstractField=require('web.AbstractFieldOwl');const CustomCheckbox=require('web.CustomCheckbox');const{_lt}=require('web.translation');const{onPatched}=owl;class FieldBadge extends AbstractField{_getClassFromDecoration(decoration){return`text-bg-${decoration.split('-')[1]}`;}}
FieldBadge.description=_lt("Badge");FieldBadge.supportedFieldTypes=['selection','many2one','char'];FieldBadge.template='web.FieldBadge';class FieldBoolean extends AbstractField{setup(){super.setup();onPatched(()=>{if(this.props.event&&this.props.event.target===this){this.activate();}});}
get focusableElement(){return this.mode==='readonly'?null:this.el.querySelector('input');}
get isSet(){return true;}
activate(options){const activated=super.activate(options);if(activated&&options&&options.event&&options.event.target.closest('.form-check')){this._setValue(!this.value);}
return activated;}
setIdForLabel(id){super.setIdForLabel(id);this.el.querySelector('label').setAttribute('for',id);}
_quickEdit(extraInfo){super._quickEdit(...arguments);this._setValue(extraInfo.value===undefined?!this.value:extraInfo.value);}
_getQuickEditExtraInfo(){return{value:!this.value,};}
_onChange(ev){this._setValue(ev.target.checked);}
_onKeydown(ev){switch(ev.which){case $.ui.keyCode.ENTER:ev.preventDefault();this._setValue(!this.value);return;case $.ui.keyCode.UP:case $.ui.keyCode.RIGHT:case $.ui.keyCode.DOWN:case $.ui.keyCode.LEFT:ev.preventDefault();}
super._onKeydown(ev);}}
FieldBoolean.components={CustomCheckbox};FieldBoolean.description=_lt("Checkbox");FieldBoolean.supportedFieldTypes=['boolean'];FieldBoolean.template='web.LegacyFieldBoolean';FieldBoolean.isQuickEditable=true;return{FieldBadge,FieldBoolean,};});;

/* /web/static/src/legacy/js/fields/field_registry.js */
odoo.define('web.field_registry',function(require){"use strict";const Registry=require('web.Registry');const{Component}=owl;return new Registry(null,(value)=>!(value.prototype instanceof Component));});odoo.define('web._field_registry',function(require){"use strict";var AbstractField=require('web.AbstractField');var basic_fields=require('web.basic_fields');var relational_fields=require('web.relational_fields');var registry=require('web.field_registry');var special_fields=require('web.special_fields');registry.add('abstract',AbstractField).add('input',basic_fields.InputField).add('integer',basic_fields.FieldInteger).add('boolean',basic_fields.FieldBoolean).add('date',basic_fields.FieldDate).add('datetime',basic_fields.FieldDateTime).add('daterange',basic_fields.FieldDateRange).add('remaining_days',basic_fields.RemainingDays).add('domain',basic_fields.FieldDomain).add('text',basic_fields.FieldText).add('list.text',basic_fields.ListFieldText).add('html',basic_fields.FieldText).add('float',basic_fields.FieldFloat).add('char',basic_fields.FieldChar).add('handle',basic_fields.HandleWidget).add('email',basic_fields.FieldEmail).add('phone',basic_fields.FieldPhone).add('url',basic_fields.UrlWidget).add('CopyClipboardButton',basic_fields.ButtonCopyClipboard).add('CopyClipboardText',basic_fields.TextCopyClipboard).add('CopyClipboardChar',basic_fields.CharCopyClipboard).add('CopyClipboardURL',basic_fields.URLCopyClipboard).add('image',basic_fields.FieldBinaryImage).add('image_url',basic_fields.CharImageUrl).add('kanban.image',basic_fields.KanbanFieldBinaryImage).add('kanban.image_url',basic_fields.KanbanCharImageUrl).add('binary',basic_fields.FieldBinaryFile).add('pdf_viewer',basic_fields.FieldPdfViewer).add('monetary',basic_fields.FieldMonetary).add('percentage',basic_fields.FieldPercentage).add('priority',basic_fields.PriorityWidget).add('attachment_image',basic_fields.AttachmentImage).add('label_selection',basic_fields.LabelSelection).add('state_selection',basic_fields.StateSelectionWidget).add('list.state_selection',basic_fields.ListStateSelectionWidget).add('boolean_favorite',basic_fields.FavoriteWidget).add('boolean_toggle',basic_fields.BooleanToggle).add('statinfo',basic_fields.StatInfo).add('percentpie',basic_fields.FieldPercentPie).add('float_time',basic_fields.FieldFloatTime).add('float_factor',basic_fields.FieldFloatFactor).add('float_toggle',basic_fields.FieldFloatToggle).add('progressbar',basic_fields.FieldProgressBar).add('dashboard_graph',basic_fields.JournalDashboardGraph).add('ace',basic_fields.AceEditor).add('color',basic_fields.FieldColor).add('many2one_reference',basic_fields.FieldInteger).add('color_picker',basic_fields.FieldColorPicker);registry.add('selection',relational_fields.FieldSelection).add('radio',relational_fields.FieldRadio).add('selection_badge',relational_fields.FieldSelectionBadge).add('many2one',relational_fields.FieldMany2One).add('many2one_barcode',relational_fields.Many2oneBarcode).add('list.many2one',relational_fields.ListFieldMany2One).add('kanban.many2one',relational_fields.KanbanFieldMany2One).add('many2one_avatar',relational_fields.Many2OneAvatar).add('many2many',relational_fields.FieldMany2Many).add('many2many_binary',relational_fields.FieldMany2ManyBinaryMultiFiles).add('many2many_tags',relational_fields.FieldMany2ManyTags).add('many2many_tags_avatar',relational_fields.FieldMany2ManyTagsAvatar).add('kanban.many2many_tags_avatar',relational_fields.KanbanMany2ManyTagsAvatar).add('list.many2many_tags_avatar',relational_fields.ListMany2ManyTagsAvatar).add('form.many2many_tags',relational_fields.FormFieldMany2ManyTags).add('kanban.many2many_tags',relational_fields.KanbanFieldMany2ManyTags).add('many2many_checkboxes',relational_fields.FieldMany2ManyCheckBoxes).add('one2many',relational_fields.FieldOne2Many).add('statusbar',relational_fields.FieldStatus).add('reference',relational_fields.FieldReference).add('font',relational_fields.FieldSelectionFont);registry.add('timezone_mismatch',special_fields.FieldTimezoneMismatch).add('iframe_wrapper',special_fields.IframeWrapper)});;

/* /web/static/src/legacy/js/fields/field_registry_owl.js */
odoo.define('web.field_registry_owl',function(require){"use strict";const Registry=require('web.Registry');const{Component}=owl;return new Registry(null,(value)=>value.prototype instanceof Component);});odoo.define('web._field_registry_owl',function(require){"use strict";const basicFields=require('web.basic_fields_owl');const registry=require('web.field_registry_owl');registry.add('badge',basicFields.FieldBadge);});;

/* /web/static/src/legacy/js/fields/field_utils.js */
odoo.define('web.field_utils',function(require){"use strict";var core=require('web.core');var dom=require('web.dom');var session=require('web.session');var time=require('web.time');var utils=require('web.utils');var _t=core._t;const NBSP="\u00a0";function formatBinary(value,field,options){if(!value){return'';}
return utils.binaryToBinsize(value);}
function formatBoolean(value,field,options){if(options&&options.forceString){return value?_t('True'):_t('False');}
return dom.renderCheckbox({prop:{checked:value,disabled:true,},});}
function formatChar(value,field,options){value=typeof value==='string'?value:'';if(options&&options.isPassword){return _.str.repeat('*',value?value.length:0);}
if(options&&options.escape){value=_.escape(value);}
return value;}
function formatDate(value,field,options){if(value===false||isNaN(value)){return"";}
if(field&&field.type==='datetime'){if(!options||!('timezone'in options)||options.timezone){value=value.clone().add(session.getTZOffset(value),'minutes');}}
var date_format=time.getLangDateFormat();return value.format(date_format);}
function formatDateTime(value,field,options){if(value===false){return"";}
if(!options||!('timezone'in options)||options.timezone){value=value.clone().add(session.getTZOffset(value),'minutes');}
return value.format(time.getLangDatetimeFormat());}
function formatFloat(value,field,options){options=options||{};if(value===false){return"";}
if(options.humanReadable&&options.humanReadable(value)){return utils.human_number(value,options.decimals,options.minDigits,options.formatterCallback);}
var l10n=core._t.database.parameters;var precision;if(options.digits){precision=options.digits[1];}else if(field&&field.digits){precision=field.digits[1];}else{precision=2;}
var formatted=_.str.sprintf('%.'+precision+'f',value||0).split('.');formatted[0]=utils.insert_thousand_seps(formatted[0]);return formatted.join(l10n.decimal_point);}
function formatFloatFactor(value,field,options){var factor=options.factor||1;return formatFloat(value*factor,field,options);}
function formatFloatTime(value,field,options){options=options||{};var pattern=options.noLeadingZeroHour?'%1d:%02d':'%02d:%02d';if(value<0){value=Math.abs(value);pattern='-'+pattern;}
var hour=Math.floor(value);var min=Math.round((value%1)*60);if(min===60){min=0;hour=hour+1;}
return _.str.sprintf(pattern,hour,min);}
function formatInteger(value,field,options){options=options||{};if(options.isPassword){return _.str.repeat('*',String(value).length);}
if(!value&&value!==0){return"";}
if(options.humanReadable&&options.humanReadable(value)){return utils.human_number(value,options.decimals,options.minDigits,options.formatterCallback);}
return utils.insert_thousand_seps(_.str.sprintf('%d',value));}
function formatMany2one(value,field,options){if(!value){value='';}else if(_.isArray(value)){value=value[1];}else{while(value.data){value=value.data.display_name||'';}}
if(options&&options.escape){value=_.escape(value);}
return value;}
function formatX2Many(value){if(value.data.length===0){return _t('No records');}else if(value.data.length===1){return _t('1 record');}else{return value.data.length+_t(' records');}}
function formatMonetary(value,field,options){if(value===false){return"";}
options=Object.assign({forceString:false},options);var currency=options.currency;if(!currency){var currency_id=options.currency_id;if(!currency_id&&options.data){var currency_field=options.currency_field||field.currency_field||'currency_id';currency_id=options.data[currency_field]&&options.data[currency_field].res_id;}
currency=session.get_currency(currency_id);}
var digits=(currency&&currency.digits)||options.digits;if(options.field_digits===true){digits=field.digits||digits;}
var formatted_value=formatFloat(value,field,_.extend({},options,{digits:digits}));if(!currency||options.noSymbol){return formatted_value;}
const val=currency.position==='after'?[formatted_value,currency.symbol]:[currency.symbol,formatted_value];if(options.forceString){return val.join(' ');}
return utils.Markup(val.map((v)=>_.escape(v)).join(NBSP));}
function formatPercentage(value,field,options){options=options||{};let result=formatFloat(value*100,field,options)||'0';if(!options.humanReadable||!options.humanReadable(value*100)){result=parseFloat(result).toString().replace('.',_t.database.parameters.decimal_point);}
return result+(options.noSymbol?'':'%');}
function formatSelection(value,field,options){var val=_.find(field.selection,function(option){return option[0]===value;});if(!val){return'';}
value=val[1];if(options&&options.escape){value=_.escape(value);}
return value;}
function formatJson(value,field,options){if(!value){return'';}
return JSON.stringify(value);}
function parseSmartDateInput(value){const units={d:'days',m:'months',w:'weeks',y:'years',};const re=new RegExp(`^([+-])(\\d+)([${Object.keys(units).join('')}]?)$`);const match=re.exec(value);if(match){let date=moment();const offset=parseInt(match[2],10);const unit=units[match[3]||'d'];if(match[1]==='+'){date.add(offset,unit);}else{date.subtract(offset,unit);}
return date;}
return false;}
function parseDate(value,field,options){if(!value){return false;}
var datePattern=time.getLangDateFormat();var datePatternWoZero=time.getLangDateFormatWoZero();var date;const smartDate=parseSmartDateInput(value);if(smartDate){date=smartDate;}else{if(options&&options.isUTC){value=value.padStart(10,"0");date=moment.utc(value);}else{date=moment.utc(value,[datePattern,datePatternWoZero,moment.ISO_8601]);}}
if(date.isValid()){if(date.year()===0){date.year(moment.utc().year());}
if(date.year()>=1000){date.toJSON=function(){return this.clone().locale('en').format('YYYY-MM-DD');};return date;}}
throw new Error(_.str.sprintf(core._t("'%s' is not a correct date"),value));}
function parseDateTime(value,field,options){if(!value){return false;}
const datePattern=time.getLangDateFormat();const timePattern=time.getLangTimeFormat();const datePatternWoZero=time.getLangDateFormatWoZero();const timePatternWoZero=time.getLangTimeFormatWoZero();var pattern1=datePattern+' '+timePattern;var pattern2=datePatternWoZero+' '+timePatternWoZero;var datetime;const smartDate=parseSmartDateInput(value);if(smartDate){datetime=smartDate;}else{if(options&&options.isUTC){value=value.padStart(19,"0");datetime=moment.utc(value.replace(' ','T')+'Z');}else{datetime=moment.utc(value,[pattern1,pattern2,moment.ISO_8601]);if(options&&options.timezone){datetime.add(-session.getTZOffset(datetime),'minutes');}}}
if(datetime.isValid()){if(datetime.year()===0){datetime.year(moment.utc().year());}
if(datetime.year()>=1000){datetime.toJSON=function(){return this.clone().locale('en').format('YYYY-MM-DD HH:mm:ss');};return datetime;}}
throw new Error(_.str.sprintf(core._t("'%s' is not a correct datetime"),value));}
function parseNumber(value){if(core._t.database.parameters.thousands_sep){var escapedSep=_.str.escapeRegExp(core._t.database.parameters.thousands_sep);value=value.replace(new RegExp(escapedSep,'g'),'');}
if(core._t.database.parameters.decimal_point){value=value.replace(core._t.database.parameters.decimal_point,'.');}
return Number(value);}
function parseFloat(value){var parsed=parseNumber(value);if(isNaN(parsed)){throw new Error(_.str.sprintf(core._t("'%s' is not a correct float"),value));}
return parsed;}
function parseMonetary(value,field,options){if(!value.includes(NBSP)&&!value.includes('&nbsp;')){return parseFloat(value);}
options=options||{};var currency=options.currency;if(!currency){var currency_id=options.currency_id;if(!currency_id&&options.data){var currency_field=options.currency_field||field.currency_field||'currency_id';currency_id=options.data[currency_field]&&options.data[currency_field].res_id;}
currency=session.get_currency(currency_id);}
if(!currency){return parseFloat(value);}
if(!value.includes(currency.symbol)){throw new Error(_.str.sprintf(core._t("'%s' is not a correct monetary field"),value));}
if(currency.position==='before'){return parseFloat(value.replace(`${ currency.symbol }${ NBSP }`,'').replace(`${ currency.symbol }&nbsp;`,''));}else{return parseFloat(value.replace(`${ NBSP }${ currency.symbol }`,'').replace(`&nbsp;${ currency.symbol }`,''));}}
function parseFloatFactor(value,field,options){var parsed=parseFloat(value);var factor=options.factor||1.0;return parsed/factor;}
function parseFloatTime(value){var factor=1;if(value[0]==='-'){value=value.slice(1);factor=-1;}
var float_time_pair=value.split(":");if(float_time_pair.length!==2)
return factor*parseFloat(value);var hours=parseInteger(float_time_pair[0]);var minutes=parseInteger(float_time_pair[1]);return factor*(hours+(minutes/60));}
function parsePercentage(value){return parseFloat(value)/100;}
function parseInteger(value){var parsed=parseNumber(value);if(isNaN(parsed)||parsed%1||parsed<-2147483648||parsed>2147483647){throw new Error(_.str.sprintf(core._t("'%s' is not a correct integer"),value));}
return parsed;}
function parseMany2one(value){if(_.isArray(value)){return{id:value[0],display_name:value[1],};}
if(_.isNumber(value)||_.isString(value)){return{id:parseInt(value,10),};}
return value;}
return{format:{binary:formatBinary,boolean:formatBoolean,char:formatChar,date:formatDate,datetime:formatDateTime,float:formatFloat,float_factor:formatFloatFactor,float_time:formatFloatTime,html:_.identity,integer:formatInteger,many2many:formatX2Many,many2one:formatMany2one,many2one_reference:formatInteger,monetary:formatMonetary,one2many:formatX2Many,percentage:formatPercentage,reference:formatMany2one,selection:formatSelection,text:formatChar,json:formatJson,},parse:{binary:_.identity,boolean:_.identity,char:_.identity,date:parseDate,datetime:parseDateTime,float:parseFloat,float_factor:parseFloatFactor,float_time:parseFloatTime,html:_.identity,integer:parseInteger,many2many:_.identity,many2one:parseMany2one,many2one_reference:parseInteger,monetary:parseMonetary,one2many:_.identity,percentage:parsePercentage,reference:parseMany2one,selection:_.identity,text:_.identity,json:_.identity,},};});;

/* /web/static/src/legacy/js/fields/field_wrapper.js */
odoo.define('web.FieldWrapper',function(require){"use strict";const{ComponentWrapper}=require('web.OwlCompatibility');const{templates}=require("@web/core/assets");const field_utils=require('web.field_utils');const{App,reactive}=owl;class FieldWrapper extends ComponentWrapper{constructor(){super(...arguments);this._data={};const options=this.props.options||{};const record=this.props.record;this._data.name=this.props.fieldName;this._data.record=record;this._data.field=record.fields[this._data.name];this._data.viewType=options.viewType||'default';const fieldsInfo=record.fieldsInfo[this._data.viewType];this._data.attrs=options.attrs||(fieldsInfo&&fieldsInfo[this._data.name])||{};this._data.additionalContext=options.additionalContext||{};this._data.value=record.data[this._data.name];this._data.recordData=record.data;this._data.string=this._data.attrs.string||this._data.field.string||this._data.name;this._data.nodeOptions=this._data.attrs.options||{};this._data.dataPointID=record.id;this._data.res_id=record.res_id;this._data.model=record.model;this._data.mode=options.mode||"readonly";this._data.formatType=this._data.attrs.widget in field_utils.format?this._data.attrs.widget:this._data.field.type;this._data.formatOptions={};this._data.parseOptions={};if(this._data.attrs.decorations){this._data.resetOnAnyFieldChange=true;}
for(let key in this._data){Object.defineProperty(this,key,{get:()=>{if(this.el){if(key==='dataPointID'){return this.componentRef.comp.dataPointId;}else if(key==='res_id'){return this.componentRef.comp.resId;}}
return(this.el?this.componentRef.comp:this._data)[key];},});}}
on_attach_callback(){super.on_attach_callback();this.componentRef.comp.__node=this.__node;}
get fieldDependencies(){return this.Component.fieldDependencies;}
get specialData(){return this.Component.specialData;}
get supportedFieldTypes(){return this.Component.supportedFieldTypes;}
get description(){return this.Component.description;}
get noLabel(){return this.Component.noLabel;}
get isQuickEditable(){return this.Component.isQuickEditable;}
activate(){return this.componentRef.comp.activate(...arguments);}
commitChanges(){return this.componentRef.comp.commitChanges(...arguments);}
quickEdit(){return this.componentRef.comp.quickEdit(...arguments);}
getFocusableElement(){return $(this.componentRef.comp.focusableElement);}
isEmpty(){return this.componentRef.comp.isEmpty;}
isFocusable(){return this.componentRef.comp.isFocusable;}
isSet(){if(this.componentRef.comp){return this.componentRef.comp.isSet;}
const app=new App(null,{templates,env:this.env,dev:this.env.isDebug(),translateFn:owl.Component.env._t,translatableAttributes:["data-tooltip"],});const node=app.makeNode(this.Component,this.props);const isSet=node.component.isSet;app.destroy();return isSet;}
isValid(){if(this.componentRef.comp){return this.componentRef.comp.isValid;}
const app=new App(null,{templates,env:this.env,dev:this.env.isDebug(),translateFn:owl.Component.env._t,translatableAttributes:["data-tooltip"],});const node=app.makeNode(this.Component,this.props);const isValid=node.component.isValid;app.destroy();return isValid;}
removeInvalidClass(){return this.componentRef.comp.removeInvalidClass(...arguments);}
reset(record,event){return this.update({record,event});}
setIDForLabel(){return this.componentRef.comp.setIdForLabel(...arguments);}
setInvalidClass(){return this.componentRef.comp.setInvalidClass(...arguments);}
updateModifiersValue(modifiers){if(this.props.options.attrs){this.props.options.attrs.modifiersValue=modifiers||{};}else{const viewType=this.props.options.viewType||'default';const fieldsInfo=this.props.record.fieldsInfo[viewType];fieldsInfo[this.props.fieldName].modifiersValue=modifiers||{};}
this.componentRef.comp.props=reactive(this.props);}}
return FieldWrapper;});;

/* /web/static/src/legacy/js/fields/relational_fields.js */
odoo.define('web.relational_fields',function(require){"use strict";var AbstractField=require('web.AbstractField');var concurrency=require('web.concurrency');const ControlPanelX2Many=require('web.ControlPanelX2Many');var core=require('web.core');var data=require('web.data');var Dialog=require('web.Dialog');var dialogs=require('web.view_dialogs');var dom=require('web.dom');const Domain=require('web.Domain');var KanbanRecord=require('web.KanbanRecord');var KanbanRenderer=require('web.KanbanRenderer');var ListRenderer=require('web.ListRenderer');const{ComponentWrapper,WidgetAdapterMixin}=require('web.OwlCompatibility');const{sprintf,toBoolElse}=require("web.utils");const{escape}=require("@web/core/utils/strings");var _t=core._t;var _lt=core._lt;var qweb=core.qweb;var M2ODialog=Dialog.extend({template:"M2ODialog",init:function(parent,name,value){this.name=name;this.value=value;this._super(parent,{title:_.str.sprintf(_t("New %s"),this.name),size:'medium',buttons:[{text:_t('Create'),classes:'btn-primary',close:true,click:function(){this.trigger_up('quick_create',{value:this.value});},},{text:_t('Discard'),close:true,}],});},close:function(isSet){this.isSet=isSet;this._super.apply(this,arguments);},destroy:function(){if(!this.isSet){this.trigger_up('closed_unset');}
this._super.apply(this,arguments);},});var FieldMany2One=AbstractField.extend({description:_lt("Many2one"),supportedFieldTypes:['many2one'],template:'FieldMany2One',custom_events:_.extend({},AbstractField.prototype.custom_events,{'closed_unset':'_onDialogClosedUnset','field_changed':'_onFieldChanged','quick_create':'_onQuickCreate',}),events:_.extend({},AbstractField.prototype.events,{'click input':'_onInputClick','click':'_onLinkClick','focusout input':'_onInputFocusout','keyup input':'_onInputKeyup','click .o_external_button':'_onExternalButtonClick',}),quickEditExclusion:['.o_form_uri',],AUTOCOMPLETE_DELAY:200,SEARCH_MORE_LIMIT:320,isQuickEditable:true,init:function(parent,name,record,options){options=options||{};this._super.apply(this,arguments);this.limit=7;this.orderer=new concurrency.DropMisordered();const canCreate='can_create'in this.attrs?JSON.parse(this.attrs.can_create):true;this.can_create=canCreate&&!this.nodeOptions.no_create&&!options.noCreate;this.can_write='can_write'in this.attrs?JSON.parse(this.attrs.can_write):true;this.nodeOptions=_.defaults(this.nodeOptions,{quick_create:true,});this.noOpen='noOpen'in options?options.noOpen:this.nodeOptions.no_open;this.m2o_value=this._formatValue(this.value);this.recordParams={fieldName:this.name,viewType:this.viewType};this.isDirty=false;this.lastChangeEvent=undefined;this._autocompleteSources=[];this._addAutocompleteSource(this._search,{placeholder:_t('Loading...'),order:1});this.suggestions=[];this.ignoreTabSelect=false;this.dp=new concurrency.DropPrevious();this.createDef=undefined;},start:function(){this.floating=false;this.$input=this.$('input');this.$external_button=this.$('.o_external_button');return this._super.apply(this,arguments);},destroy:function(){if(this._onScroll){window.removeEventListener('scroll',this._onScroll,true);}
this._super.apply(this,arguments);},commitChanges:function(){return Promise.resolve(this.createDef);},getFocusableElement:function(){return this.mode==='edit'&&this.$input||this.$el;},reinitialize:function(value){this.isDirty=false;this.floating=false;return this._setValue(value);},reset:function(record,event){this._reset(record,event);if(!event||event===this.lastChangeEvent){this.isDirty=false;}
if(this.isDirty){return Promise.resolve();}else{return this._render();}},_addAutocompleteSource:function(method,params){this._autocompleteSources.push({method:method,placeholder:(params.placeholder?_t(params.placeholder):_t('Loading...'))+'<i class="fa fa-spin fa-circle-o-notch float-end"></i>',validation:params.validation,loading:false,order:params.order||999});this._autocompleteSources=_.sortBy(this._autocompleteSources,'order');},_bindAutoComplete:function(){var self=this;if($.browser.chrome&&this.$input.attr('placeholder')){this.$input.attr('placeholder',function(index,val){return val.split('').join('\ufeff');});}
this.$input.autocomplete({source:function(req,resp){self.suggestions=[];_.each(self._autocompleteSources,function(source){source.results=[];const search=req.term.trim();if(!source.validation||source.validation.call(self,search)){source.loading=true;Promise.resolve(source.method.call(self,search)).then(function(results){source.results=results;source.loading=false;self.suggestions=self._concatenateAutocompleteResults();resp(self.suggestions);});}});},select:function(event,ui){if(!self.floating&&event.key==="Tab"&&self.ignoreTabSelect){return false;}
if(event.key==="Enter"){event.stopImmediatePropagation();event.preventDefault();}
var item=ui.item;self.floating=false;if(item.id){self.reinitialize({id:item.id,display_name:item.name});}else if(item.action){item.action();}
return false;},focus:function(event){event.preventDefault();if(event.key==="ArrowUp"||event.key==="ArrowDown"){self.ignoreTabSelect=false;}},open:function(event){self._onScroll=function(ev){if(ev.target!==self.$input.get(0)&&self.$input.hasClass('ui-autocomplete-input')){if(ev.target.id===self.$input.autocomplete('widget').get(0).id){ev.stopPropagation();return;}
self.$input.autocomplete('close');}};window.addEventListener('scroll',self._onScroll,true);},close:function(event){self.ignoreTabSelect=false;if(event.which===$.ui.keyCode.ESCAPE){event.stopPropagation();}
if(self._onScroll){window.removeEventListener('scroll',self._onScroll,true);}},autoFocus:true,html:true,minLength:0,delay:this.AUTOCOMPLETE_DELAY,classes:{"ui-autocomplete":"dropdown-menu",},create:function(){$(this).data('ui-autocomplete')._renderMenu=function(ulWrapper,entries){var render=this;$.each(entries,function(index,entry){render._renderItemData(ulWrapper,entry);});$(ulWrapper).find("li > a").addClass("dropdown-item");}},});this.$input.autocomplete("option","position",{my:"left top",at:"left bottom"});this.autocomplete_bound=true;},_concatenateAutocompleteResults:function(){var results=[];_.each(this._autocompleteSources,function(source){if(source.results&&source.results.length){results=results.concat(source.results);}else if(source.loading){results.push({label:source.placeholder});}});return results;},_createContext:function(name){var tmp={};var field=this.nodeOptions.create_name_field;if(field===undefined){field="name";}
if(field!==false&&name&&this.nodeOptions.quick_create!==false){tmp["default_"+field]=name;}
return tmp;},_quickEdit:function(){this._super(...arguments);this._toggleAutoComplete();},_getSearchBlacklist:function(){return[];},_getDisplayName:function(value){return value.split('\n')[0];},_getSearchCreatePopupOptions:function(view,ids,context,dynamicFilters){var self=this;return{res_model:this.field.relation,domain:this.record.getDomain({fieldName:this.name}),context:_.extend({},this.record.getContext(this.recordParams),context||{}),_createContext:this._createContext.bind(this),dynamicFilters:dynamicFilters||[],title:_.str.sprintf((view==='search'?_t("Search: %s"):_t("Create: %s")),this.string),initial_ids:ids,initial_view:view,disable_multiple_selection:true,no_create:!self.can_create,kanban_view_ref:this.attrs.kanban_view_ref,on_selected:function(records){self.reinitialize(records[0]);},on_closed:function(){self.activate();},};},_manageSearchMore:function(values,search_val,domain,context){var self=this;values=values.slice(0,this.limit);values.push({label:_t("Search More..."),action:function(){var prom;if(search_val!==''){prom=self._rpc({model:self.field.relation,method:'name_search',kwargs:{name:search_val,args:domain,operator:"ilike",limit:self.SEARCH_MORE_LIMIT,context:context,},});}
Promise.resolve(prom).then(function(results){var dynamicFilters;if(results){var ids=_.map(results,function(x){return x[0];});dynamicFilters=[{description:_.str.sprintf(_t('Quick search: %s'),search_val),domain:[['id','in',ids]],}];}
self._searchCreatePopup("search",false,{},dynamicFilters);});},classname:'o_m2o_dropdown_option',});return values;},_toggleAutoComplete:function(){if(this.$input.autocomplete("widget").is(":visible")){this.$input.autocomplete("close");}else if(this.floating){this.$input.autocomplete("search");}else{this.$input.autocomplete("search",'');}},_onFieldChanged:function(event){this.lastChangeEvent=event;},_quickCreate:function(name){var self=this;var createDone;var def=new Promise(function(resolve,reject){self.createDef=new Promise(function(innerResolve){createDone=function(){innerResolve();resolve();self.createDef=undefined;};});var slowCreate=function(){var dialog=self._searchCreatePopup("form",false,self._createContext(name));dialog.on('closed',self,createDone);};if(self.nodeOptions.quick_create){const prom=self.reinitialize({id:false,display_name:name});prom.guardedCatch(reason=>{reason.event.preventDefault();slowCreate();});self.dp.add(prom).then(createDone).guardedCatch(reject);}else{slowCreate();}});return def;},_renderEdit:function(){var value=this.m2o_value;this.$('.o_field_many2one_extra').html(this._renderValueLines(false));if(this.nodeOptions.always_reload){value=this._getDisplayName(value);}
this.$input.val(value);if(!this.autocomplete_bound){this._bindAutoComplete();}
this._updateExternalButton();},_renderValueLines:function(needFirstLine){const escapedValue=_.escape((this.m2o_value||"").trim());const lines=escapedValue.split('\n');if(!needFirstLine){lines.shift();}
return lines.map((line)=>`<span>${line}</span>`).join('<br/>');},_renderReadonly:function(){this.$el.html(this._renderValueLines(true));if(!this.noOpen&&this.value){this.$el.attr('href',_.str.sprintf('#id=%s&model=%s',this.value.res_id,this.field.relation));this.$el.addClass('o_form_uri');}},_reset:function(){this._super.apply(this,arguments);this.floating=false;this.m2o_value=this._formatValue(this.value);},_search:async function(searchValue=""){const value=searchValue.trim();const domain=this.record.getDomain(this.recordParams);const context=Object.assign(this.record.getContext(this.recordParams),this.additionalContext);const blackListedIds=this._getSearchBlacklist();if(blackListedIds.length){domain.push(['id','not in',blackListedIds]);}
if(this.lastNameSearch){this.lastNameSearch.catch((reason)=>{reason.event.preventDefault();})
this.lastNameSearch.abort(false)}
this.lastNameSearch=this._rpc({model:this.field.relation,method:"name_search",kwargs:{name:value,args:domain,operator:"ilike",limit:this.limit+1,context,}});const results=await this.orderer.add(this.lastNameSearch);let values=results.map((result)=>{const[id,fullName]=result;const displayName=this._getDisplayName(fullName).trim();result[1]=displayName;return{id,label:escape(displayName)||data.noDisplayContent,value:displayName,name:displayName,};});if(this.limit<values.length){values=this._manageSearchMore(values,value,domain,context);}
const canQuickCreate=this.can_create&&!this.nodeOptions.no_quick_create;const canCreateEdit=this.can_create&&!this.nodeOptions.no_create_edit;if(value.length){const nameExists=results.some((result)=>result[1]===value);if(canQuickCreate&&!nameExists){values.push({label:sprintf(_t(`Create "<strong>%s</strong>"`),escape(value)),action:()=>this._quickCreate(value),classname:'o_m2o_dropdown_option'});}
if(canCreateEdit){const valueContext=this._createContext(value);values.push({label:_t("Create and Edit..."),action:()=>{this.el.querySelector(':scope input').value="";return this._searchCreatePopup('form',false,valueContext);},classname:'o_m2o_dropdown_option',});}
if(!values.length){values.push({label:_t("No records"),classname:'o_m2o_no_result',});}}else if(!this.value&&(canQuickCreate||canCreateEdit)){values.push({label:_t("Start typing..."),classname:'o_m2o_start_typing',});}
return values;},_searchCreatePopup:function(view,ids,context,dynamicFilters){var options=this._getSearchCreatePopupOptions(view,ids,context,dynamicFilters);return new dialogs.SelectCreateDialog(this,_.extend({},this.nodeOptions,options)).open();},_updateExternalButton:function(){var has_external_button=!this.noOpen&&!this.floating&&this.isSet();this.$external_button.toggle(has_external_button);this.$el.toggleClass('o_with_button',has_external_button);},_onLinkClick:function(event){var self=this;if(this.mode==='readonly'){event.preventDefault();if(!this.noOpen){event.stopPropagation();this._rpc({model:this.field.relation,method:'get_formview_action',args:[[this.value.res_id]],context:this.record.getContext(this.recordParams),}).then(function(action){self.trigger_up('do_action',{action:action});});}}},_onDialogClosedUnset:function(){this.isDirty=false;this.floating=false;this._render();},_onExternalButtonClick:function(){if(!this.value){this.activate();return;}
var self=this;var context=this.record.getContext(this.recordParams);this._rpc({model:this.field.relation,method:'get_formview_id',args:[[this.value.res_id]],context:context,}).then(function(view_id){new dialogs.FormViewDialog(self,{res_model:self.field.relation,res_id:self.value.res_id,context:context,title:_t("Open: ")+self.string,view_id:view_id,readonly:!self.can_write,on_saved:function(record,changed){if(changed){const _setValue=self._setValue.bind(self,self.value.data,{forceChange:true,});self.trigger_up('reload',{db_id:self.value.id,onSuccess:_setValue,onFailure:_setValue,});}},}).open();});},_onInputClick:function(){if(this.autocomplete_bound&&!this.$input.autocomplete("widget").is(":visible")){this.ignoreTabSelect=true;}
this._toggleAutoComplete();},_onInputFocusout:function(){if(!this.floating||this.$input.val()===""){return;}
const firstValue=this.suggestions.find(s=>s.id);if(firstValue){this.reinitialize({id:firstValue.id,display_name:firstValue.name});}else if(this.can_create){new M2ODialog(this,this.string,this.$input.val()).open();}else{this.$input.val("");}},_onInputKeyup:function(ev){const $autocomplete=this.$input.autocomplete("widget");if(ev.which===$.ui.keyCode.TAB&&$autocomplete.is(":visible")&&!$autocomplete.find('.ui-menu-item .ui-state-active').length){this.$input.autocomplete("close");}
if(ev.which===$.ui.keyCode.ENTER||ev.which===$.ui.keyCode.TAB){return;}
this.isDirty=true;if(this.$input.val()===""){if(ev.key==="Backspace"||ev.key==="Delete"){this.ignoreTabSelect=true;}
this.reinitialize(false);}else if(this._getDisplayName(this.m2o_value)!==this.$input.val()){this.floating=true;this._updateExternalButton();}},_onQuickCreate:function(event){this._quickCreate(event.data.value);},});var Many2oneBarcode=FieldMany2One.extend({});var ListFieldMany2One=FieldMany2One.extend({events:_.extend({},FieldMany2One.prototype.events,{'focusin input':'_onInputFocusin',}),init:function(){this._super.apply(this,arguments);this.mustSetValue=false;this.m2oDialogFocused=false;},activate:function(){if(this.mode==='readonly'){return false;}
return this._super.apply(this,arguments);},reinitialize:function(){this.mustSetValue=false;return this._super.apply(this,arguments);},_renderReadonly:function(){this.$el.text(this.m2o_value);},_searchCreatePopup:function(){this.m2oDialogFocused=true;return this._super.apply(this,arguments);},_onInputFocusin:function(){this.m2oDialogFocused=false;},_onInputFocusout:function(){if(this.can_create&&this.floating){var attachedEvents=['click','mousedown'];var stopNextClick=(function(ev){ev.stopPropagation();attachedEvents.forEach(function(eventName){window.removeEventListener(eventName,stopNextClick,true);});}).bind(this);attachedEvents.forEach(function(eventName){window.addEventListener(eventName,stopNextClick,true);});}
this._super.apply(this,arguments);if(!this.m2oDialogFocused&&this.$input.val()===""&&this.mustSetValue){this.reinitialize(false);}},_onInputKeyup:function(){if(this.$input.val()!==""){this._super.apply(this,arguments);}else{this.mustSetValue=true;}},});var KanbanFieldMany2One=AbstractField.extend({tagName:'span',init:function(){this._super.apply(this,arguments);this.m2o_value=this._formatValue(this.value);},_render:function(){this.$el.text(this.m2o_value);},});const Many2OneAvatar=FieldMany2One.extend({_template:'web.Many2OneAvatar',init(){this._super.apply(this,arguments);if(this.mode==='readonly'){this.template=null;this.tagName='div';this.noOpen=true;}},start(){this.el.classList.add('o_field_many2one_avatar');return this._super(...arguments);},_render(){const m2oAvatar=qweb.render(this._template,{url:`/web/image/${this.field.relation}/${this.value.res_id}/avatar_128`,value:this.m2o_value,widget:this,});if(this.mode==='edit'){this._super(...arguments);if(this.el.querySelector('.o_m2o_avatar')){this.el.querySelector('.o_m2o_avatar').remove();}
dom.prepend(this.$('.o_field_many2one_selection'),m2oAvatar);}
if(this.mode==='readonly'){this.$el.empty();dom.append(this.$el,m2oAvatar);}},});var FieldX2Many=AbstractField.extend(WidgetAdapterMixin,{tagName:'div',custom_events:_.extend({},AbstractField.prototype.custom_events,{add_record:'_onAddRecord',discard_changes:'_onDiscardChanges',edit_line:'_onEditLine',field_changed:'_onFieldChanged',open_record:'_onOpenRecord',kanban_record_delete:'_onRemoveRecord',list_record_remove:'_onRemoveRecord',resequence_records:'_onResequenceRecords',save_line:'_onSaveLine',toggle_column_order:'_onToggleColumnOrder',activate_next_widget:'_onActiveNextWidget',navigation_move:'_onNavigationMove',save_optional_fields:'_onSaveOrLoadOptionalFields',load_optional_fields:'_onSaveOrLoadOptionalFields',}),resetOnAnyFieldChange:true,useSubview:true,isQuickEditable:true,quickEditExclusion:['.o_x2m_control_panel','thead','.o_widget',],init:function(parent,name,record,options){this._super.apply(this,arguments);this.createText=this.attrs['add-label']||_t('Add');this.operations=[];this.isReadonly=this.mode==='readonly';this.view=this.attrs.views[this.attrs.mode];this.isMany2Many=this.field.type==='many2many'||this.attrs.widget==='many2many';this.activeActions={};this.recordParams={fieldName:this.name,viewType:this.viewType};this.pagingState={currentMinimum:this.value.offset+1,limit:this.value.limit,size:this.value.count,validate:()=>{return this.view.arch.tag==='tree'?this.renderer.unselectRow():Promise.resolve();},withAccessKey:false,onPagerChanged:this._onPagerChanged.bind(this),};var arch=this.view&&this.view.arch;if(arch){this.activeActions.create=arch.attrs.create?!!JSON.parse(arch.attrs.create):true;this.activeActions.delete=arch.attrs.delete?!!JSON.parse(arch.attrs.delete):true;this.editable=arch.attrs.editable;this._canQuickEdit=arch.tag==='tree';}else{this._canQuickEdit=false;}
this._computeAvailableActions(record);if(this.attrs.columnInvisibleFields){this._processColumnInvisibleFields();}},start:async function(){const _super=this._super.bind(this);if(this.view){this._renderButtons();this._controlPanelWrapper=new ComponentWrapper(this,this._getControlPanelComponent(),this._getControlPanelContext(),);await this._controlPanelWrapper.mount(this.el,{position:'first-child'});}
return _super(...arguments);},destroy:function(){WidgetAdapterMixin.destroy.call(this);this._super();},on_attach_callback:function(){this.isInDOM=true;WidgetAdapterMixin.on_attach_callback.call(this);if(this.renderer){this.renderer.on_attach_callback();}},on_detach_callback:function(){this.isInDOM=false;WidgetAdapterMixin.on_detach_callback.call(this);if(this.renderer){this.renderer.on_detach_callback();}},commitChanges:function(){var self=this;var inEditionRecordID=this.renderer&&this.renderer.viewType==="list"&&this.renderer.getEditableRecordID();if(inEditionRecordID){return this.renderer.commitChanges(inEditionRecordID).then(function(){return self._saveLine(inEditionRecordID);});}
return this._super.apply(this,arguments);},isSet:function(){return true;},reset:function(record,ev,fieldChanged){const oldCanCreate=this.canCreate;const oldCanDelete=this.canDelete;const oldCanLink=this.canLink;const oldCanUnlink=this.canUnlink;this._computeAvailableActions(record);const actionsChanged=this.canCreate!==oldCanCreate||this.canDelete!==oldCanDelete||this.canLink!==oldCanLink||this.canUnlink!==oldCanUnlink;if(!fieldChanged&&!actionsChanged){var newEval=this._evalColumnInvisibleFields();if(_.isEqual(this.currentColInvisibleFields,newEval)){this._reset(record,ev);return Promise.resolve();}}else if(ev&&ev.target===this&&ev.data.changes&&this.view.arch.tag==='tree'){var command=ev.data.changes[this.name];if(command&&command.operation==='UPDATE'&&command.data){var state=record.data[this.name];var fieldNames=state.getFieldNames({viewType:'list'});this._reset(record,ev);return this.renderer.confirmUpdate(state,command.id,fieldNames,ev.initialEvent);}}
return this._super.apply(this,arguments);},getFocusableElement:function(){return(this.mode==='edit'&&this.$input)||this.$el;},activate:function(options){if(!this.activeActions.create||this.isReadonly||!this.$el.is(":visible")){return false;}
if(this.view.type==='kanban'){this.$buttons.find(".o-kanban-button-new").focus();}
if(this.view.arch.tag==='tree'){if(options&&options.noAutomaticCreate){this.renderer.$('.o_field_x2many_list_row_add a:first').focus();}else{this.renderer.$('.o_field_x2many_list_row_add a:first').click();}}
return true;},_computeAvailableActions:function(record){const evalContext=record.evalContext;this.canCreate='create'in this.nodeOptions?new Domain(this.nodeOptions.create,evalContext).compute(evalContext):true;this.canDelete='delete'in this.nodeOptions?new Domain(this.nodeOptions.delete,evalContext).compute(evalContext):true;this.canLink='link'in this.nodeOptions?new Domain(this.nodeOptions.link,evalContext).compute(evalContext):true;this.canUnlink='unlink'in this.nodeOptions?new Domain(this.nodeOptions.unlink,evalContext).compute(evalContext):true;},_quickEdit:function(extraInfo){if(extraInfo.type==='remove'){this._removeRecord(extraInfo.recordId);}else if(extraInfo.type==='edit'){const parts=[];if(extraInfo.row){parts.push(`.o_data_row[data-id="${extraInfo.row}"]`);}
if(extraInfo.subFieldName){parts.push(`[name="${extraInfo.subFieldName}"]`);}
if(parts.length){const el=this.el.querySelector(parts.join(' '));if(el){el.click();}}}},_evalColumnInvisibleFields:function(){var self=this;return _.mapObject(this.columnInvisibleFields,function(domains){return self.record.evalModifiers({column_invisible:domains,}).column_invisible;});},_getButtonsRenderingContext(){return{btnClass:'btn-secondary',create_text:this.createText,};},_getQuickEditExtraInfo:function(ev){const row=ev.target.closest('.o_data_row');const field=ev.target.closest('.o_data_row .o_field_widget')||ev.target.closest('.o_field_cell');return{type:'edit',row:row&&row.dataset.id,subFieldName:row&&field&&field.getAttribute('name'),};},_getRenderer:function(){if(this.view.arch.tag==='tree'){return ListRenderer;}
if(this.view.arch.tag==='kanban'){return KanbanRenderer;}},_getControlPanelComponent:function(){return ControlPanelX2Many;},_getControlPanelContext:function(){return{cp_content:{$buttons:this.$buttons},pager:this.pagingState,};},_hasCreateLine:function(){return!this.hasReadonlyModifier&&((!this.isMany2Many&&this.activeActions.create&&this.canCreate)||(this.isMany2Many&&this.canLink));},_hasTrashIcon:function(){return!this.hasReadonlyModifier&&((!this.isMany2Many&&this.activeActions.delete&&this.canDelete)||(this.isMany2Many&&this.canUnlink));},_removeRecord:function(recordId){this._setValue({operation:this.isMany2Many?'FORGET':'DELETE',ids:[recordId],});},_render:function(){var self=this;if(!this.view){return this._super();}
if(this.renderer){this.currentColInvisibleFields=this._evalColumnInvisibleFields();return this.renderer.updateState(this.value,{addCreateLine:this._hasCreateLine(),addTrashIcon:this._hasTrashIcon(),columnInvisibleFields:this.currentColInvisibleFields,keepWidths:true,}).then(()=>{return this._updateControlPanel({size:this.value.count});});}
var arch=this.view.arch;var viewType;var rendererParams={arch:arch,};if(arch.tag==='tree'){viewType='list';this.currentColInvisibleFields=this._evalColumnInvisibleFields();_.extend(rendererParams,{editable:this.mode==='edit'&&arch.attrs.editable,addCreateLine:this._hasCreateLine(),addTrashIcon:this._hasTrashIcon(),isMany2Many:this.isMany2Many,no_open:((this.isReadonly&&!this.hasReadonlyModifier)&&this._canQuickEdit)||toBoolElse(arch.attrs.no_open||'',false),columnInvisibleFields:this.currentColInvisibleFields,});}
if(arch.tag==='kanban'){viewType='kanban';var record_options={editable:false,deletable:false,read_only_mode:this.isReadonly,};if(('action'in arch.attrs)&&('type'in arch.attrs)){record_options.openAction={action:arch.attrs.action,type:arch.attrs.type};}
_.extend(rendererParams,{record_options:record_options,readOnlyMode:this.isReadonly,});}
_.extend(rendererParams,{viewType:viewType,});var Renderer=this._getRenderer();this.renderer=new Renderer(this,this.value,rendererParams);this.$el.addClass('o_field_x2many o_field_x2many_'+viewType);if(this.renderer){return this.renderer.appendTo(document.createDocumentFragment()).then(function(){dom.append(self.$el,self.renderer.$el,{in_DOM:self.isInDOM,callbacks:[{widget:self.renderer}],});});}else{return this._super();}},_renderButtons:function(){if(!this.isReadonly&&this.view.arch.tag==='kanban'){const renderingContext=this._getButtonsRenderingContext();this.$buttons=$(qweb.render('KanbanView.buttons',renderingContext));this.$buttons.on('click','button.o-kanban-button-new',this._onAddRecord.bind(this));}},_saveLine:function(recordID){var self=this;return new Promise(function(resolve,reject){var fieldNames=self.renderer.canBeSaved(recordID);if(fieldNames.length){self.trigger_up('discard_changes',{recordID:recordID,onSuccess:resolve,onFailure:reject,});}else{self.renderer.setRowMode(recordID,'readonly').then(resolve);}}).then(async function(){self._updateControlPanel({size:self.value.count});var newEval=self._evalColumnInvisibleFields();if(!_.isEqual(self.currentColInvisibleFields,newEval)){self.currentColInvisibleFields=newEval;self.renderer.updateState(self.value,{columnInvisibleFields:self.currentColInvisibleFields,});}});},_updateControlPanel:function(pagingState){if(this._controlPanelWrapper){this._renderButtons();const pagerProps=Object.assign(this.pagingState,pagingState,{limit:Math.max(this.value.limit,this.value.data.length),});const newProps={cp_content:{$buttons:this.$buttons},pager:pagerProps,};return this._controlPanelWrapper.update(newProps);}},_processColumnInvisibleFields:function(){var columnInvisibleFields={};_.each(this.attrs.columnInvisibleFields,function(domains,fieldName){if(_.isArray(domains)){columnInvisibleFields[fieldName]=_.map(domains,function(domain){if(_.isArray(domain)){return[domain[0].split('.')[1]].concat(domain.slice(1));}
return domain;});}});this.columnInvisibleFields=columnInvisibleFields;},_onAddRecord:function(){},_onRemoveRecord:function(ev){ev.stopPropagation();if(this._canQuickEdit&&this.isReadonly){this.trigger_up('quick_edit',{fieldName:this.name,target:this.el,extraInfo:{type:'remove',recordId:ev.data.id,},});}else{this._removeRecord(ev.data.id);}},_onDiscardChanges:function(ev){if(ev.target!==this){ev.stopPropagation();this.trigger_up('discard_changes',_.extend({},ev.data,{fieldName:this.name}));}},_onEditLine:function(ev){ev.stopPropagation();this.trigger_up('edited_list',{id:this.value.id});this.renderer.setRowMode(ev.data.recordId,'edit').then(ev.data.onSuccess);},_onFieldChanged:function(ev){if(ev.target===this){ev.initialEvent=this.lastInitialEvent;return;}
ev.stopPropagation();var changes=ev.data.changes;this.lastInitialEvent=undefined;if(Object.keys(changes).length){this.lastInitialEvent=ev;this._setValue({operation:'UPDATE',id:ev.data.dataPointID,data:changes,}).then(function(){if(ev.data.onSuccess){ev.data.onSuccess();}}).guardedCatch(function(reason){if(ev.data.onFailure){ev.data.onFailure(reason);}});}},_onNavigationMove:function(ev){if(this.view.arch.tag==='tree'){var $curControl=this.renderer.$('.o_field_x2many_list_row_add a:focus');if($curControl.length){var $nextControl;if(ev.data.direction==='right'){$nextControl=$curControl.next('a');}else if(ev.data.direction==='left'){$nextControl=$curControl.prev('a');}
if($nextControl&&$nextControl.length){ev.stopPropagation();$nextControl.focus();return;}}}
this._super.apply(this,arguments);},_onOpenRecord:function(){},_onPagerChanged:function({currentMinimum,limit}){this._updateControlPanel({currentMinimum,limit});this.trigger_up('load',{id:this.value.id,limit,offset:currentMinimum-1,on_success:value=>{this.value=value;this.pagingState.limit=value.limit;this.pagingState.size=value.count;this._render();},});},_onSaveLine:function(ev){var self=this;ev.stopPropagation();this.renderer.commitChanges(ev.data.recordID).then(function(){self.trigger_up('mutexify',{action:function(){return self._saveLine(ev.data.recordID).then(ev.data.onSuccess).guardedCatch(ev.data.onFailure);},});});},_onSaveOrLoadOptionalFields:function(ev){ev.data.keyParts.relationalField=this.name;ev.data.keyParts.subViewId=this.view.view_id;ev.data.keyParts.subViewType=this.view.type;},_onResequenceRecords:function(ev){ev.stopPropagation();var self=this;if(this.view.arch.tag==='tree'){this.trigger_up('edited_list',{id:this.value.id});}
var handleField=ev.data.handleField;var offset=ev.data.offset;var recordIds=ev.data.recordIds.slice();var recordId=recordIds.pop();var proms=recordIds.map(function(recordId,index){var data={};data[handleField]=offset+index;return self._setValue({operation:'UPDATE',id:recordId,data:data,},{notifyChange:false,});});Promise.all(proms).then(function(){function always(){if(self.view.arch.tag==='tree'){self.trigger_up('toggle_column_order',{id:self.value.id,name:handleField,});}}
var data={};data[handleField]=offset+recordIds.length;self._setValue({operation:'UPDATE',id:recordId,data:data,}).then(always).guardedCatch(always);});},_onToggleColumnOrder:function(ev){ev.data.field=this.name;},_onActiveNextWidget:function(e){e.stopPropagation();this.renderer.unselectRow();this.trigger_up('navigation_move',{direction:e.data.direction||'next',});},});var One2ManyKanbanRecord=KanbanRecord.extend({_postProcessObjectButtons:function(){var self=this;if(!this.state.res_id){this.$('.oe_kanban_action[data-type=object]').each(function(index,button){var $button=$(button);if($button.attr('warn')){$button.on('click',function(e){e.stopPropagation();self.displayNotification({message:_t('Please click on the "save" button first'),type:'danger'});});}else{$button.attr('disabled','disabled');}});}},_render:function(){var self=this;return this._super.apply(this,arguments).then(function(){self._postProcessObjectButtons();});},});var One2ManyKanbanRenderer=KanbanRenderer.extend({config:_.extend({},KanbanRenderer.prototype.config,{KanbanRecord:One2ManyKanbanRecord,}),});var FieldOne2Many=FieldX2Many.extend({description:_lt("One2many"),className:'o_field_one2many',supportedFieldTypes:['one2many'],init:function(){this._super.apply(this,arguments);this.creatingRecord=false;},reset:function(record,ev){var self=this;return this._super.apply(this,arguments).then(()=>{if(ev&&ev.target===self&&ev.data.changes&&self.view.arch.tag==='tree'){if(ev.data.changes[self.name]&&ev.data.changes[self.name].operation==='CREATE'){var index=0;if(self.editable!=='top'){index=self.value.data.length-1;}
var newID=self.value.data[index].id;return self.renderer.editRecord(newID);}}});},_addCreateRecordRow(data){const self=this;if(this.editable||data.forceEditable){if(!this.activeActions.create){if(data.onFail){data.onFail();}}else if(!this.creatingRecord){this.creatingRecord=true;this.trigger_up('edited_list',{id:this.value.id});this._setValue({operation:'CREATE',position:this.editable||data.forceEditable,context:data.context,},{allowWarning:data.allowWarning}).then(function(){self.creatingRecord=false;}).then(function(){if(data.onSuccess){data.onSuccess();}}).guardedCatch(function(){self.creatingRecord=false;});}}else{this._openFormDialog({context:data.context&&data.context[0],disable_multiple_selection:data.disable_multiple_selection,on_saved:function(record){self._setValue({operation:'ADD',id:record.id});},});}},_quickEdit:function(extraInfo){if(extraInfo.type==='add'){this._addCreateRecordRow(extraInfo.data);}else{this._super(...arguments);}},_getButtonsRenderingContext(){const renderingContext=this._super(...arguments);renderingContext.noCreate=!this.canCreate;return renderingContext;},_getRenderer:function(){if(this.view.arch.tag==='kanban'){return One2ManyKanbanRenderer;}
return this._super.apply(this,arguments);},_renderButtons:function(){if(this.activeActions.create){return this._super(...arguments);}},_openFormDialog:function(params){var context=this.record.getContext(_.extend({},this.recordParams,{additionalContext:params.context}));if(this.nodeOptions.no_open){return;}
this.trigger_up('open_one2many_record',_.extend(params,{domain:this.record.getDomain(this.recordParams),context:context,field:this.field,fields_view:this.attrs.views&&this.attrs.views.form,parentID:this.value.id,viewInfo:this.view,deletable:this.activeActions.delete&&params.deletable&&this.canDelete,editable:!this.hasReadonlyModifier,disable_multiple_selection:params.disable_multiple_selection,}));},_onAddRecord:function(ev){const data=ev.data||{};ev.stopPropagation();if(this._canQuickEdit&&this.isReadonly){this.trigger_up('quick_edit',{fieldName:this.name,target:this.el,extraInfo:{type:'add',data},});}else{this._addCreateRecordRow(data);}},_onOpenRecord:function(ev){var self=this;ev.stopPropagation();var id=ev.data.id;var onSaved=function(record){if(_.some(self.value.data,{id:record.id})){self._setValue({operation:'UPDATE',id:record.id});}else{self._setValue({operation:'ADD',id:record.id});}};this._openFormDialog({id:id,on_saved:onSaved,on_remove:function(){self._setValue({operation:'DELETE',ids:[id]});},deletable:this.activeActions.delete&&this.view.arch.tag!=='tree'&&this.canDelete,readonly:this.mode==='readonly',});},});var FieldMany2Many=FieldX2Many.extend({description:_lt("Many2many"),className:'o_field_many2many',supportedFieldTypes:['many2many'],onAddRecordOpenDialog:function(){var self=this;var domain=this.record.getDomain({fieldName:this.name});new dialogs.SelectCreateDialog(this,{res_model:this.field.relation,domain:domain.concat(["!",["id","in",this.value.res_ids]]),context:this.record.getContext(this.recordParams),title:_t("Add: ")+this.string,no_create:this.nodeOptions.no_create||!this.activeActions.create||!this.canCreate,fields_view:this.attrs.views.form,kanban_view_ref:this.attrs.kanban_view_ref,on_selected:function(records){var resIDs=_.pluck(records,'id');var newIDs=_.difference(resIDs,self.value.res_ids);if(newIDs.length){var values=_.map(newIDs,function(id){return{id:id};});self._setValue({operation:'ADD_M2M',ids:values,});}}}).open();},_getButtonsRenderingContext(){const renderingContext=this._super(...arguments);renderingContext.noCreate=!this.canLink;return renderingContext;},_quickEdit:function(extraInfo){if(extraInfo.type==='add'){this.onAddRecordOpenDialog();}else{this._super(...arguments);}},_onAddRecord:function(ev){ev.stopPropagation();if(this._canQuickEdit&&this.isReadonly){this.trigger_up('quick_edit',{fieldName:this.name,target:this.el,extraInfo:{type:'add'},});}else{this.onAddRecordOpenDialog();}},_onOpenRecord:function(ev){var self=this;_.extend(ev.data,{context:this.record.getContext(this.recordParams),domain:this.record.getDomain(this.recordParams),fields_view:this.attrs.views&&this.attrs.views.form,on_saved:function(){self._setValue({operation:'TRIGGER_ONCHANGE'},{forceChange:true}).then(function(){self.trigger_up('reload',{db_id:ev.data.id});});},on_remove:function(){self._setValue({operation:'FORGET',ids:[ev.data.id]});},readonly:this.mode==='readonly',deletable:this.activeActions.delete&&this.view.arch.tag!=='tree'&&this.canDelete,string:this.string,});},});var FieldMany2ManyBinaryMultiFiles=AbstractField.extend({template:"FieldBinaryFileUploader",template_files:"FieldBinaryFileUploader.files",supportedFieldTypes:['many2many'],fieldsToFetch:{name:{type:'char'},mimetype:{type:'char'},},events:{'click .o_attach':'_onAttach','click .o_attachment_delete':'_onDelete','change .o_input_file':'_onFileChanged',},init:function(){this._super.apply(this,arguments);if(this.field.type!=='many2many'||this.field.relation!=='ir.attachment'){var msg=_t("The type of the field '%s' must be a many2many field with a relation to 'ir.attachment' model.");throw _.str.sprintf(msg,this.field.string);}
this.uploadedFiles={};this.uploadingFiles=[];this.fileupload_id=_.uniqueId('oe_fileupload_temp');this.accepted_file_extensions=(this.nodeOptions&&this.nodeOptions.accepted_file_extensions)||this.accepted_file_extensions||'*';$(window).on(this.fileupload_id,this._onFileLoaded.bind(this));this.metadata={};},destroy:function(){this._super();$(window).off(this.fileupload_id);},_getFileUrl:function(attachment){return'/web/content/'+attachment.id+'?download=true';},_generatedMetadata:function(){var self=this;_.each(this.value.data,function(record){self.metadata[record.id]={allowUnlink:self.uploadedFiles[record.data.id]||false,url:self._getFileUrl(record.data),};});},_render:function(){this._generatedMetadata();this.$('.oe_placeholder_files, .o_attachments').replaceWith($(qweb.render(this.template_files,{widget:this,})));this.$('.oe_fileupload').show();this.$('.o_image[data-mimetype^="image"]').each(function(){var $img=$(this);if(/gif|jpe|jpg|png/.test($img.data('mimetype'))&&$img.data('src')){$img.css('background-image',"url('"+$img.data('src')+"')");}});},_onAttach:function(){this.$('.o_input_file').click();},_onDelete:function(ev){ev.preventDefault();ev.stopPropagation();var fileID=$(ev.currentTarget).data('id');var record=_.findWhere(this.value.data,{res_id:fileID});if(record){this._setValue({operation:'FORGET',ids:[record.id],});var metadata=this.metadata[record.id];if(!metadata||metadata.allowUnlink){this._rpc({model:'ir.attachment',method:'unlink',args:[record.res_id],});}}},_onFileChanged:function(ev){var self=this;ev.stopPropagation();var files=ev.target.files;var attachment_ids=this.value.res_ids;if(files.length===0)
return;_.each(files,function(file){var record=_.find(self.value.data,function(attachment){return attachment.data.name===file.name;});if(record){var metadata=self.metadata[record.id];if(!metadata||metadata.allowUnlink){attachment_ids=_.without(attachment_ids,record.res_id);self._rpc({model:'ir.attachment',method:'unlink',args:[record.res_id],});}}
self.uploadingFiles.push(file);});this._setValue({operation:'REPLACE_WITH',ids:attachment_ids,});this.$('form.o_form_binary_form').submit();this.$('.oe_fileupload').hide();ev.target.value="";},_onFileLoaded:function(){var self=this;var files=Array.prototype.slice.call(arguments,1);this.uploadingFiles=[];var attachment_ids=this.value.res_ids;_.each(files,function(file){if(file.error){self.displayNotification({title:_t('Uploading Error'),message:file.error,type:'danger'});}else{attachment_ids.push(file.id);self.uploadedFiles[file.id]=true;}});this._setValue({operation:'REPLACE_WITH',ids:attachment_ids,});},});var FieldMany2ManyTags=AbstractField.extend({description:_lt("Tags"),tag_template:"FieldMany2ManyTag",className:"o_field_many2manytags",supportedFieldTypes:['many2many'],custom_events:_.extend({},AbstractField.prototype.custom_events,{field_changed:'_onFieldChanged',}),events:_.extend({},AbstractField.prototype.events,{'click .o_delete':'_onDeleteTag',}),fieldsToFetch:{display_name:{type:'char'},},limit:1000,init:function(){this._super.apply(this,arguments);if(this.mode==='edit'){this.className+=' o_input';}
this.colorField=this.nodeOptions.color_field;this.hasDropdown=false;this._computeAvailableActions(this.record);this.resetOnAnyFieldChange=this.resetOnAnyFieldChange||'create'in this.nodeOptions;},activate:function(){return this.many2one?this.many2one.activate():false;},getFocusableElement:function(){return this.many2one?this.many2one.getFocusableElement():$();},isSet:function(){return!!this.value&&this.value.count;},reset:function(record,event){var self=this;this._computeAvailableActions(record);return this._super.apply(this,arguments).then(function(){if(event&&event.target===self){self.activate();}});},_addTag:function(data){if(!_.contains(this.value.res_ids,data.id)){return this._setValue({operation:'ADD_M2M',ids:data});}
return Promise.resolve();},_computeAvailableActions:function(record){const evalContext=record.evalContext;this.canCreate='create'in this.nodeOptions?new Domain(this.nodeOptions.create,evalContext).compute(evalContext):true;},_getRenderTagsContext:function(){var elements=this.value?_.pluck(this.value.data,'data'):[];return{colorField:this.colorField,elements:elements,hasDropdown:this.hasDropdown,readonly:this.mode==="readonly",};},_removeTag:function(id){var record=_.findWhere(this.value.data,{res_id:id});this._setValue({operation:'FORGET',ids:[record.id],});},_renderEdit:function(){var self=this;this._renderTags();if(this.many2one){this.many2one.destroy();}
this.many2one=new FieldMany2One(this,this.name,this.record,{mode:'edit',noOpen:true,noCreate:!this.canCreate,viewType:this.viewType,attrs:this.attrs,});this.many2one.value=false;this.many2one.m2o_value='';this.many2one._getSearchBlacklist=function(){return self.value.res_ids;};var _getSearchCreatePopupOptions=this.many2one._getSearchCreatePopupOptions;this.many2one._getSearchCreatePopupOptions=function(view,ids,context,dynamicFilters){var options=_getSearchCreatePopupOptions.apply(this,arguments);var domain=this.record.getDomain({fieldName:this.name});var m2mRecords=[];return _.extend({},options,{domain:domain.concat(["!",["id","in",self.value.res_ids]]),disable_multiple_selection:false,on_selected:function(records){m2mRecords.push(...records);},on_closed:function(){self.many2one.reinitialize(m2mRecords);},});};return this.many2one.appendTo(this.$el);},_renderReadonly:function(){this._renderTags();},_renderTags:function(){this.$el.html(qweb.render(this.tag_template,this._getRenderTagsContext()));},_onDeleteTag:function(event){event.preventDefault();event.stopPropagation();this._removeTag($(event.target).parent().data('id'));},_onFieldChanged:function(ev){if(ev.target!==this.many2one){return;}
ev.stopPropagation();var newValue=ev.data.changes[this.name];if(newValue){this._addTag(newValue).then(ev.data.onSuccess||function(){}).guardedCatch(ev.data.onFailure||function(){});this.many2one.reinitialize(false);}},_onKeydown:function(ev){if(ev.which===$.ui.keyCode.BACKSPACE&&this.$('input').val()===""){var $badges=this.$('.badge');if($badges.length){this._removeTag($badges.last().data('id'));return;}}
this._super.apply(this,arguments);},_onQuickCreate:function(event){this._quickCreate(event.data.value);},});var FieldMany2ManyTagsAvatar=FieldMany2ManyTags.extend({tag_template:'FieldMany2ManyTagAvatar',className:'o_field_many2manytags avatar',_getRenderTagsContext:function(){var result=this._super.apply(this,arguments);result.avatarModel=this.nodeOptions.avatarModel||this.field.relation;result.avatarField=this.nodeOptions.avatarField||'avatar_128';return result;},});const M2MAvatarMixinEvents={...AbstractField.prototype.events};delete M2MAvatarMixinEvents.click;const M2MAvatarMixin={visibleAvatarCount:3,events:M2MAvatarMixinEvents,_bindPopover(ev){this.$('.o_m2m_avatar_empty').popover({container:this.$el,trigger:'hover',html:true,placement:'auto',content:()=>{const elements=this.value?_.pluck(this.value.data,'data'):[];return qweb.render('Many2ManyTagAvatarPopover',{elements:elements.slice(this.visibleAvatarCount-1),});},});},_getRenderTagsContext(){const result=this._super(...arguments);result['widget']=this;return result;},_renderReadonly(){this.$el.addClass('o_field_many2manytags_multi');return this._super(...arguments);},_renderTags(){this._super(...arguments);this._bindPopover();},}
const KanbanMany2ManyTagsAvatar=FieldMany2ManyTagsAvatar.extend(M2MAvatarMixin,{tag_template:'KanbanMany2ManyTagAvatar',});const ListMany2ManyTagsAvatar=FieldMany2ManyTagsAvatar.extend(M2MAvatarMixin,{tag_template:'ListMany2ManyTagAvatar',visibleAvatarCount:5,});var FormFieldMany2ManyTags=FieldMany2ManyTags.extend({events:_.extend({},FieldMany2ManyTags.prototype.events,{'click .dropdown-toggle':'_onOpenColorPicker','mousedown .o_colorpicker a':'_onUpdateColor','mousedown .o_colorpicker .o_hide_in_kanban':'_onUpdateColor',}),isQuickEditable:true,quickEditExclusion:['.dropdown-toggle'],init:function(){this._super.apply(this,arguments);this.hasDropdown=!!this.colorField;this._canQuickEdit=!this.nodeOptions.no_edit_color;},_quickEdit:function(){this._super(...arguments);this.many2one.$input.click();},_onOpenColorPicker:function(ev){ev.preventDefault();if(this.nodeOptions.no_edit_color){ev.stopPropagation();return;}
var tagID=$(ev.currentTarget).parent().data('id');var tagColor=$(ev.currentTarget).parent().data('color');var tag=_.findWhere(this.value.data,{res_id:tagID});if(tag&&this.colorField in tag.data){if(ev.currentTarget.dataset.bsToggle!=='dropdown'){this.$color_picker=$(qweb.render('FieldMany2ManyTag.colorpicker',{'widget':this,'tag_id':tagID,}));$(ev.currentTarget).after(this.$color_picker);ev.currentTarget.setAttribute('data-bs-toggle','dropdown');const dropdownToggle=new Dropdown(ev.currentTarget);dropdownToggle.show();}
this.$color_picker.attr("tabindex",1).focus();if(!tagColor){this.$('.form-check input').prop('checked',true);}}},_onUpdateColor:function(ev){ev.preventDefault();var $target=$(ev.currentTarget);var color=$target.data('color');var id=$target.data('id');var $tag=this.$(".badge[data-id='"+id+"']");var currentColor=$tag.data('color');var changes={};if($target.is('.o_hide_in_kanban')){var $checkbox=$('.o_hide_in_kanban .form-check input');$checkbox.prop('checked',!$checkbox.prop('checked'));this.prevColors=this.prevColors?this.prevColors:{};if($checkbox.is(':checked')){this.prevColors[id]=currentColor;}else{color=this.prevColors[id]?this.prevColors[id]:1;}}else if($target.is('[class^="o_tag_color"]')){if(color===currentColor){return;}}
changes[this.colorField]=color;this.trigger_up('field_changed',{dataPointID:_.findWhere(this.value.data,{res_id:id}).id,changes:changes,force_save:true,});},});var KanbanFieldMany2ManyTags=FieldMany2ManyTags.extend({events:_.omit(AbstractField.prototype.events,'click'),_render:function(){var self=this;if(this.$el){this.$el.empty().addClass('o_field_many2manytags o_kanban_tags');}
_.each(this.value.data,function(m2m){if(self.colorField in m2m.data&&!m2m.data[self.colorField]){return;}
$('<span>',{class:'o_tag o_tag_color_'+(m2m.data[self.colorField]||0),text:m2m.data.display_name,}).prepend('<span>').appendTo(self.$el);});},});var FieldMany2ManyCheckBoxes=AbstractField.extend({description:_lt("Checkboxes"),template:'FieldMany2ManyCheckBoxes',events:_.extend({},AbstractField.prototype.events,{change:'_onChange',}),specialData:"_fetchSpecialRelation",supportedFieldTypes:['many2many'],isQuickEditable:true,limit:100000,init:function(){this._super.apply(this,arguments);this.m2mValues=this.record.specialData[this.name];},getFocusableElement:function(){return this.$el;},isSet:function(){return true;},_getQuickEditExtraInfo(e){const ids=new Set(this.value.res_ids);let input=$(e.target);if(e.target.matches('label')){input=this.$(`input#${e.target.getAttribute('for')}`);}
const id=input.data('record-id');if(ids.has(id)){ids.delete(id);}else{ids.add(id);}
return{ids:Array.from(ids),};},_quickEdit(extraInfo){if(extraInfo.hasOwnProperty('ids')){this._setValue({operation:'REPLACE_WITH',ids:extraInfo.ids,});}},_render:function(){var self=this;this.m2mValues=this.record.specialData[this.name];this.$el.html(qweb.render(this.template,{widget:this}));_.each(this.value.res_ids,function(id){self.$('input[data-record-id="'+id+'"]').prop('checked',true);});this.$("input").prop("disabled",this.hasReadonlyModifier);},_onChange:function(){if(this.mode!=='readonly'){var ids=_.map(this.$('input:checked'),function(input){return $(input).data("record-id");});const displayedIds=this.m2mValues.map(v=>v[0]);const idsInRelation=this.value.res_ids;ids=ids.concat(idsInRelation.filter(a=>!displayedIds.includes(a)));this._setValue({operation:'REPLACE_WITH',ids:ids,});}},});var FieldStatus=AbstractField.extend({className:'o_statusbar_status',events:{'click button:not(.dropdown-toggle)':'_onClickStage',},specialData:"_fetchSpecialStatus",supportedFieldTypes:['selection','many2one'],init:function(){this._super.apply(this,arguments);this._setState();this._onClickStage=_.debounce(this._onClickStage,300,true);try{this.isClickable=!!JSON.parse(this.attrs.clickable);}catch(_){this.isClickable=!!this.nodeOptions.clickable;}},isEmpty:function(){return false;},on_attach_callback(){if(this.isClickable&&this.viewType==='form'){const provide=()=>{return this.status_information.map((value)=>({name:value['display_name'],action:()=>{this._setValue(value['id']);}}));};const statusLabel=sprintf(_t(`Move to %s...`),escape(this.string));const getCommandDefinition=(env)=>({name:statusLabel,options:{activeElement:env.services.ui.getActiveElementOf(this.el),category:"smart_action",hotkey:"alt+shift+x",},action(){return{placeholder:statusLabel,providers:[{provide}],}},});core.bus.trigger("set_legacy_command","web.FieldStatus.moveToStage",getCommandDefinition);}},on_detach_callback(){core.bus.trigger("remove_legacy_command","web.FieldStatus.moveToStage");},_reset:function(){this._super.apply(this,arguments);this._setState();},_setState:function(){var self=this;if(this.field.type==='many2one'){this.status_information=_.map(this.record.specialData[this.name],function(info){return _.extend({selected:info.id===self.value.res_id,},info);});}else{var selection=this.field.selection;if(this.attrs.statusbar_visible){var restriction=this.attrs.statusbar_visible.split(",");selection=_.filter(selection,function(val){return _.contains(restriction,val[0])||val[0]===self.value;});}
this.status_information=_.map(selection,function(val){return{id:val[0],display_name:val[1],selected:val[0]===self.value,fold:false};});}},_render:function(){var selections=_.partition(this.status_information,function(info){return(info.selected||!info.fold);});this.$el.html(qweb.render("FieldStatus.content",{selection_unfolded:selections[0],selection_folded:selections[1],clickable:this.isClickable,}));},_onClickStage:function(e){this._setValue($(e.currentTarget).data("value"));},});var FieldSelection=AbstractField.extend({description:_lt("Selection"),template:'web.Legacy.FieldSelection',specialData:"_fetchSpecialRelation",supportedFieldTypes:['selection'],events:_.extend({},AbstractField.prototype.events,{'change':'_onChange',}),isQuickEditable:true,init:function(){this._super.apply(this,arguments);this._setValues();},getFocusableElement:function(){return this.$el&&this.$el.is('select')?this.$el:$();},isSet:function(){return this.value!==false;},updateModifiersValue:function(){this._super.apply(this,arguments);if(!this.attrs.modifiersValue.invisible&&this.mode!=='readonly'){this._setValues();this._render();}},_renderEdit:function(){this.$el.empty();var required=this.attrs.modifiersValue&&this.attrs.modifiersValue.required;for(var i=0;i<this.values.length;i++){var disabled=required&&this.values[i][0]===false;this.$el.append($('<option/>',{value:JSON.stringify(this.values[i][0]),text:this.values[i][1],style:disabled?"display: none":"",}));}
this.$el.val(JSON.stringify(this._getRawValue()));},_renderReadonly:function(){this.$el.empty().text(this._formatValue(this.value));this.$el.attr('raw-value',this._getRawValue());},_getRawValue:function(){var raw_value=this.value;if(this.field.type==='many2one'&&raw_value){raw_value=raw_value.data.id;}
return raw_value;},_reset:function(){this._super.apply(this,arguments);this._setValues();},_setValues:function(){if(this.field.type==='many2one'){this.values=this.record.specialData[this.name];this.formatType='many2one';}else{this.values=_.reject(this.field.selection,function(v){return v[0]===false&&v[1]==='';});}
this.values=[[false,this.attrs.placeholder||'']].concat(this.values);},_onChange:function(){var res_id=JSON.parse(this.$el.val());if(this.field.type==='many2one'){var value=_.find(this.values,function(val){return val[0]===res_id;});this._setValue({id:res_id,display_name:value[1]});}else{this._setValue(res_id);}},});var FieldRadio=FieldSelection.extend({description:_lt("Radio"),template:null,className:'o_field_radio',tagName:'div',specialData:"_fetchSpecialMany2ones",supportedFieldTypes:['selection','many2one'],events:_.extend({},AbstractField.prototype.events,{'click input':'_onInputClick',}),isQuickEditable:true,init:function(){this._super.apply(this,arguments);this.className+=this.nodeOptions.horizontal?' o_horizontal':' o_vertical';this.unique_id=_.uniqueId("radio");this._setValues();},getFocusableElement:function(){var checked=this.$("[checked='true']");return checked.length?checked:this.$("[data-index='0']");},setIDForLabel:function(id){this.$el.attr('id',id);},_getQuickEditExtraInfo:function(ev){const $target=ev.target.nodeName==='INPUT'?$(ev.target):$(ev.target).siblings('input');const index=$target.data('index');const value=this.values[index];return{value};},_quickEdit:function(extraInfo){if(extraInfo.value){this._saveValue(extraInfo.value);}
return this._super.apply(this,arguments);},_render:function(){var self=this;var currentValue;if(this.field.type==='many2one'){currentValue=this.value&&this.value.data.id;}else{currentValue=this.value;}
this.$el.empty();this.$el.attr('role','radiogroup').attr('aria-label',this.string);_.each(this.values,function(value,index){self.$el.append(qweb.render('FieldRadio.button',{checked:value[0]===currentValue,id:self.unique_id+'_'+value[0],index:index,name:self.unique_id,value:value,disabled:self.hasReadonlyModifier&&self.mode!='edit',}));});},_reset:function(){this._super.apply(this,arguments);this._setValues();},_setValues:function(){if(this.field.type==='selection'){this.values=this.field.selection||[];}else if(this.field.type==='many2one'){this.values=_.map(this.record.specialData[this.name],function(val){return[val.id,val.display_name];});}},_saveValue:function(value){if(this.field.type==='many2one'){this._setValue({id:value[0],display_name:value[1]});}else{this._setValue(value[0]);}},_onInputClick:function(event){if(this.mode==='readonly'){this._onClick(...arguments);}else{const index=$(event.currentTarget).data('index');const value=this.values[index];this._saveValue(value);}},});var FieldSelectionBadge=FieldSelection.extend({description:_lt("Badges"),template:null,className:'o_field_selection_badge',tagName:'span',specialData:"_fetchSpecialMany2ones",events:_.extend({},AbstractField.prototype.events,{'click span.o_selection_badge':'_onBadgeClicked',}),_renderEdit:function(){this.currentValue=this.value;if(this.field.type==='many2one'){this.currentValue=this.value&&this.value.data.id;}
this.$el.empty();this.$el.html(qweb.render('FieldSelectionBadge',{'values':this.values,'current_value':this.currentValue}));},_setValues:function(){if(this.field.type==='selection'){this.values=this.field.selection||[];}else if(this.field.type==='many2one'){this.values=_.map(this.record.specialData[this.name],function(val){return[val.id,val.display_name];});}},_onBadgeClicked:function(event){var index=$(event.target).data('index');var value=this.values[index];if(value[0]!==this.currentValue){if(this.field.type==='many2one'){this._setValue({id:value[0],display_name:value[1]});}else{this._setValue(value[0]);}}else{this._setValue(false);}},});var FieldSelectionFont=FieldSelection.extend({_renderEdit:function(){this._super.apply(this,arguments);this.$('option').each(function(i,option){if(!option.label){$(option).remove();}
$(option).css('font-family',option.value);});this.$el.css('font-family',this.value);},});var FieldReference=FieldMany2One.extend({specialData:"_fetchSpecialReference",supportedFieldTypes:['reference'],template:'FieldReference',events:_.extend({},FieldMany2One.prototype.events,{'change select':'_onSelectionChange',}),init:function(){this._super.apply(this,arguments);this.field=_.extend({},this.field);this.resetOnAnyFieldChange=this.resetOnAnyFieldChange||this.nodeOptions.model_field;this._setState(false);},start:function(){this.modelName=this.field.relation;if(this.el.querySelector('select')){this.el.querySelector('select').value=this.modelName;}
return this._super.apply(this,arguments);},getFocusableElement:function(){if(this.mode==='edit'&&!this.field.relation){return this.$('select');}
return this._super.apply(this,arguments);},_formatValue:function(){var value;if(this.field.type==='char'){value=this.record.specialData[this.name];}else{value=this.value;}
return value&&value.data&&value.data.display_name||'';},_applyModelField:function(initRecord){let resourceRef=this.record.specialData[this.name];if(resourceRef){if(initRecord&&resourceRef.hasChanged&&resourceRef.modelName!==this.modelName){this.reinitialize(false);}
this.modelName=resourceRef.modelName;}},_renderEdit:function(){this._super.apply(this,arguments);if(this.modelName){this.$('.o_input_dropdown').show();if(!this.nodeOptions.model_field){if(this.nodeOptions.hide_model){this.$el.addClass('o_row');}
this.$el.find('.o_field_many2one_selection').addClass('o_row');}}else{this.$('.o_input_dropdown').hide();}},_reset:function(){this._super.apply(this,arguments);this._setState(true);if(this.el.querySelector('select')){this.el.querySelector('select').value=this.modelName;}},_setRelation:function(model){this.field.relation=model;},_setState:function(initRecord){if(this.field.type==='char'){this.value=this.record.specialData[this.name];}
if(this.nodeOptions.model_field){this._applyModelField(initRecord);}
if(this.value&&this.value.model){this.modelName=this.value.model;}
if(this.modelName){this._setRelation(this.modelName);}},_setValue:function(value,options){value=value||{};value.model=this.modelName;return this._super(value,options);},_onSelectionChange:function(){this.modelName=this.el.querySelector('select').value||'';this.reinitialize(false);this._setRelation(this.modelName);},});return{FieldMany2One:FieldMany2One,Many2oneBarcode:Many2oneBarcode,KanbanFieldMany2One:KanbanFieldMany2One,ListFieldMany2One:ListFieldMany2One,Many2OneAvatar:Many2OneAvatar,FieldX2Many:FieldX2Many,FieldOne2Many:FieldOne2Many,FieldMany2Many:FieldMany2Many,FieldMany2ManyBinaryMultiFiles:FieldMany2ManyBinaryMultiFiles,FieldMany2ManyCheckBoxes:FieldMany2ManyCheckBoxes,FieldMany2ManyTags:FieldMany2ManyTags,FieldMany2ManyTagsAvatar:FieldMany2ManyTagsAvatar,KanbanMany2ManyTagsAvatar:KanbanMany2ManyTagsAvatar,ListMany2ManyTagsAvatar:ListMany2ManyTagsAvatar,FormFieldMany2ManyTags:FormFieldMany2ManyTags,KanbanFieldMany2ManyTags:KanbanFieldMany2ManyTags,FieldRadio:FieldRadio,FieldSelectionBadge:FieldSelectionBadge,FieldSelection:FieldSelection,FieldStatus:FieldStatus,FieldSelectionFont:FieldSelectionFont,FieldReference:FieldReference,};});;

/* /web/static/src/legacy/js/fields/signature.js */
odoo.define('web.Signature',function(require){"use strict";var AbstractFieldBinary=require('web.basic_fields').AbstractFieldBinary;var core=require('web.core');var field_utils=require('web.field_utils');var registry=require('web.field_registry');var session=require('web.session');const SignatureDialog=require('web.signature_dialog');var utils=require('web.utils');var qweb=core.qweb;var _t=core._t;var _lt=core._lt;var FieldBinarySignature=AbstractFieldBinary.extend({description:_lt("Signature"),fieldDependencies:_.extend({},AbstractFieldBinary.prototype.fieldDependencies,{__last_update:{type:'datetime'},}),resetOnAnyFieldChange:true,custom_events:_.extend({},AbstractFieldBinary.prototype.custom_events,{upload_signature:'_onUploadSignature',}),events:_.extend({},AbstractFieldBinary.prototype.events,{'click .o_signature':'_onClickSignature',}),template:null,supportedFieldTypes:['binary'],file_type_magic_word:{'/':'jpg','R':'gif','i':'png','P':'svg+xml',},isSet:function(){return this.value;},_render:function(){var self=this;var displaySignatureRatio=3;var url;var $img;var width=this.nodeOptions.size?this.nodeOptions.size[0]:this.attrs.width;var height=this.nodeOptions.size?this.nodeOptions.size[1]:this.attrs.height;if(this.value){if(!utils.is_bin_size(this.value)){url='data:image/'+(this.file_type_magic_word[this.value[0]]||'png')+';base64,'+this.value;}else{url=session.url('/web/image',{model:this.model,id:JSON.stringify(this.res_id),field:this.nodeOptions.preview_image||this.name,unique:field_utils.format.datetime(this.recordData.__last_update).replace(/[^0-9]/g,''),});}
$img=$(qweb.render("FieldBinarySignature-img",{widget:this,url:url}));}else{$img=$('<div class="o_signature o_signature_empty"><svg></svg><p>'+_t('SIGNATURE')+'</p></div>');if(width&&height){width=Math.min(width,displaySignatureRatio*height);height=width/displaySignatureRatio;}else if(width){height=width/displaySignatureRatio;}else if(height){width=height*displaySignatureRatio;}}
if(width){$img.attr('width',width);$img.css('max-width',width+'px');}
if(height){$img.attr('height',height);$img.css('max-height',height+'px');}
this.$('> div').remove();this.$('> img').remove();this.$el.prepend($img);$img.on('error',function(){self._clearFile();$img.attr('src',self.placeholder);self.displayNotification({message:_t("Could not display the selected image"),type:'danger'});});},_onClickSignature:function(){var self=this;if(this.mode==='edit'){var nameAndSignatureOptions={mode:'draw',displaySignatureRatio:3,signatureType:'signature',noInputName:true,};if(this.nodeOptions.full_name){var signName;if(this.fields[this.nodeOptions.full_name].type==='many2one'){signName=this.recordData[this.nodeOptions.full_name]&&this.recordData[this.nodeOptions.full_name].data.display_name;}else{signName=this.recordData[this.nodeOptions.full_name];}
nameAndSignatureOptions.defaultName=(signName==='')?undefined:signName;}
nameAndSignatureOptions.defaultFont=this.nodeOptions.default_font||'';this.signDialog=new SignatureDialog(self,{nameAndSignatureOptions:nameAndSignatureOptions});this.signDialog.open();}},_onUploadSignature:function(ev){var signatureImage=ev.data.signatureImage;if(signatureImage!==this.signDialog.emptySignature){var data=signatureImage[1];var type=signatureImage[0].split('/')[1];this.on_file_uploaded(data.length,ev.data.name,type,data);}
this.signDialog.close();}});registry.add('signature',FieldBinarySignature);});;

/* /web/static/src/legacy/js/fields/special_fields.js */
odoo.define('web.special_fields',function(require){"use strict";var core=require('web.core');var field_utils=require('web.field_utils');var relational_fields=require('web.relational_fields');var AbstractField=require('web.AbstractField');var FieldSelection=relational_fields.FieldSelection;var _t=core._t;var _lt=core._lt;var FieldTimezoneMismatch=FieldSelection.extend({start:function(){var interval=navigator.platform.toUpperCase().indexOf('MAC')>=0?60000:1000;this._datetime=setInterval(this._renderDateTimeTimezone.bind(this),interval);return this._super.apply(this,arguments);},destroy:function(){clearInterval(this._datetime);return this._super();},_render:function(){this._super.apply(this,arguments);this._renderTimezoneMismatch();},_renderDateTimeTimezone:function(){if(!this.mismatch||!this.$option.html()){return;}
var offset=this.recordData.tz_offset.match(/([+-])([0-9]{2})([0-9]{2})/);offset=(offset[1]==='-'?-1:1)*(parseInt(offset[2])*60+parseInt(offset[3]));var datetime=field_utils.format.datetime(moment.utc().add(offset,'minutes'),this.field,{timezone:false});var content=this.$option.html().split(' ')[0];content+='    ('+datetime+')';this.$option.html(content);},_renderTimezoneMismatch:function(){this.$el.last().filter('.o_tz_warning').remove();this.$el=this.$el.first();var value=this.$el.val();var $span=$('<span class="fa fa-exclamation-triangle o_tz_warning"/>');if(this.$option&&this.$option.html()){this.$option.html(this.$option.html().split(' ')[0]);}
var userOffset=this.recordData.tz_offset;this.mismatch=false;if(userOffset&&value!==""&&value!=="false"){var offset=-(new Date().getTimezoneOffset());var browserOffset=(offset<0)?"-":"+";browserOffset+=_.str.sprintf("%02d",Math.abs(offset/60));browserOffset+=_.str.sprintf("%02d",Math.abs(offset%60));this.mismatch=(browserOffset!==userOffset);}
if(this.mismatch){$span.insertAfter(this.$el);if(this.nodeOptions.mismatch_title){$span.attr('title',this.nodeOptions.mismatch_title);}
else{$span.attr('title',_t("Timezone Mismatch : This timezone is different from that of your browser.\nPlease, set the same timezone as your browser's to avoid time discrepancies in your system."));}
this.$el=this.$el.add($span);this.$option=this.$('option').filter(function(){return $(this).attr('value')===value;});this._renderDateTimeTimezone();}else if(value=="false"){$span.insertAfter(this.$el);$span.attr('title',_t("Set a timezone on your user"));this.$el=this.$el.add($span);}},_renderEdit:function(){var $otherEl=this.$el.not('select');this.$el=this.$el.first();this._super.apply(this,arguments);$otherEl.insertAfter(this.$el);this.$el=this.$el.add($otherEl);},});const IframeWrapper=AbstractField.extend({description:_lt("Wrap raw html within an iframe"),supportedFieldTypes:['text','html'],template:"web.IframeWrapper",_render(){const spinner=this.el.querySelector('.o_iframe_wrapper_spinner');const iframe=this.el.querySelector('.o_preview_iframe');iframe.style.display='none';spinner.style.display='block';let resolver;$(iframe).data('ready',new Promise((resolve)=>{resolver=resolve;}));const onloadReplacement=setInterval(()=>{const iframeDoc=iframe.contentDocument;if(iframeDoc&&(iframeDoc.readyState==='complete'||iframeDoc.readyState==='interactive')){iframeDoc.open();iframeDoc.write(this.value);iframeDoc.close();iframe.style.display='block';spinner.style.display='none';resolver();clearInterval(onloadReplacement);}},100);}});return{FieldTimezoneMismatch:FieldTimezoneMismatch,IframeWrapper,};});;

/* /web/static/src/legacy/js/services/data_manager.js */
odoo.define('web.DataManager',function(require){"use strict";var config=require('web.config');var core=require('web.core');var rpc=require('web.rpc');var session=require('web.session');const{generateLegacyLoadViewsResult}=require("@web/legacy/legacy_load_views");return core.Class.extend({init:function(){this._init_cache();core.bus.on('clear_cache',this,this.invalidate.bind(this));},_init_cache:function(){this._cache={actions:{},filters:{},views:{},};},invalidate:function(dataManager){if(dataManager===this){return;}
session.invalidateCacheKey('load_menus');this._init_cache();},load_action:function(action_id,additional_context){var self=this;var key=this._gen_key(action_id,additional_context||{});if(config.isDebug('assets')||!this._cache.actions[key]){this._cache.actions[key]=rpc.query({route:"/web/action/load",params:{action_id:action_id,additional_context:additional_context,},}).then(function(action){self._cache.actions[key]=action.no_cache?null:self._cache.actions[key];return action;}).guardedCatch(()=>this._invalidate('actions',key));}
return this._cache.actions[key].then(function(action){return $.extend(true,{},action);});},load_views:async function({model,context,views_descr},options={}){const viewsKey=this._gen_key(model,views_descr,options,context);const filtersKey=this._gen_key(model,options.action_id);const withFilters=Boolean(options.load_filters);const shouldLoadViews=config.isDebug('assets')||!this._cache.views[viewsKey];const shouldLoadFilters=config.isDebug('assets')||(withFilters&&!this._cache.filters[filtersKey]);if(shouldLoadViews){options.load_filters=shouldLoadFilters;if(config.device.isMobile){options.mobile=config.device.isMobile;}
this._cache.views[viewsKey]=rpc.query({args:[],kwargs:{context,options,views:views_descr},model,method:'get_views',}).then(result=>{const{models,views}=result;result=generateLegacyLoadViewsResult(model,views,models);for(const[,viewType]of views_descr){const fvg=result.fields_views[viewType];fvg.viewFields=fvg.fields;fvg.fields=result.fields;}
if(shouldLoadFilters){this._cache.filters[filtersKey]=Promise.resolve(result.filters);}
return result.fields_views;}).guardedCatch(()=>this._invalidate('views',viewsKey));}
const result=await this._cache.views[viewsKey];if(withFilters&&result.search){if(shouldLoadFilters){await this.load_filters({actionId:options.action_id,context,forceReload:false,modelName:model,});}
result.search.favoriteFilters=await this._cache.filters[filtersKey];}
return result;},load_filters:function(params){const key=this._gen_key(params.modelName,params.actionId);const forceReload=params.forceReload!==false&&config.isDebug('assets');if(forceReload||!this._cache.filters[key]){this._cache.filters[key]=rpc.query({args:[params.modelName,params.actionId],kwargs:{context:params.context||{},},model:'ir.filters',method:'get_filters',}).guardedCatch(()=>this._invalidate('filters',key));}
return this._cache.filters[key];},create_filter:function(filter){return rpc.query({args:[filter],model:'ir.filters',method:'create_or_replace',}).then(filterId=>{const filtersKey=this._gen_key(filter.model_id,filter.action_id);this._invalidate('filters',filtersKey);return filterId;});},delete_filter:function(filterId){return rpc.query({args:[filterId],model:'ir.filters',method:'unlink',}).then(()=>this._invalidate('filters'));},_gen_key:function(){return _.map(Array.prototype.slice.call(arguments),function(arg){if(!arg){return false;}
return _.isObject(arg)?JSON.stringify(arg):arg;}).join(',');},_invalidate(section,key){core.bus.trigger("clear_cache",this);if(key){delete this._cache[section][key];}else{this._cache[section]={};}},});});odoo.define('web.data_manager',function(require){"use strict";var DataManager=require('web.DataManager');var data_manager=new DataManager();return data_manager;});;

/* /web/static/src/legacy/js/services/session.js */
odoo.define('web.session',function(require){"use strict";var Session=require('web.Session');var session=new Session(undefined,undefined,{use_cors:false});session.is_bound=session.session_bind();return session;});;

/* /web/static/src/legacy/js/tools/tools.js */
odoo.define('web.tools',function(require){"use strict";function deprecated(fn,message){return function(){console.warn(message||(fn.name+' is deprecated.'));return fn.apply(this,arguments);};}
return{deprecated:deprecated,};});;

/* /web/static/src/legacy/js/views/abstract_controller.js */
odoo.define('@web/legacy/js/views/abstract_controller',async function(require){'use strict';let __exports={};const ActionMixin=require('web.ActionMixin');const{loadCSS,loadJS}=require("@web/core/assets");const concurrency=require('web.concurrency');const{ComponentWrapper}=require('web.OwlCompatibility');const mvc=require('web.mvc');const session=require('web.session');var AbstractController=mvc.Controller.extend(ActionMixin,{custom_events:_.extend({},ActionMixin.custom_events,{navigation_move:'_onNavigationMove',open_record:'_onOpenRecord',switch_view:'_onSwitchView',}),events:{'click a[type="action"]':'_onActionClicked',},init:function(parent,model,renderer,params){this._super.apply(this,arguments);this._title=params.displayName;this.modelName=params.modelName;this.activeActions=params.activeActions;this.controllerID=params.controllerID;this.initialState=params.initialState;this.bannerRoute=params.bannerRoute;this.actionViews=params.actionViews;this.viewType=params.viewType;this.dp=new concurrency.DropPrevious();this.withControlPanel=params.withControlPanel;this.withSearchPanel=params.withSearchPanel;if(params.searchModel){this.searchModel=params.searchModel;}
if(this.withControlPanel){const{Component,props}=params.controlPanel;this.ControlPanel=Component;this.controlPanelProps=props;}
if(this.withSearchPanel){const{Component,props}=params.searchPanel;this.SearchPanel=Component;this.searchPanelProps=props;}},start:async function(){this.$el.addClass('o_view_controller');this.renderButtons();const promises=[this._super(...arguments)];if(this.withControlPanel){this._updateControlPanelProps(this.initialState);this._controlPanelWrapper=new ComponentWrapper(this,this.ControlPanel,this.controlPanelProps);this._controlPanelWrapper.env.bus.on('focus-view',this,()=>this._giveFocus());promises.push(this._controlPanelWrapper.mount(this.el,{position:'first-child'}));}
if(this.withSearchPanel){this._searchPanelWrapper=new ComponentWrapper(this,this.SearchPanel,this.searchPanelProps);const content=this.el.querySelector(':scope .o_content');content.classList.add('o_controller_with_searchpanel');promises.push(this._searchPanelWrapper.mount(content,{position:'first-child'}));}
await Promise.all(promises);await this._update(this.initialState,{shouldUpdateSearchComponents:false});this.updateButtons();this.el.classList.toggle('o_legacy_view_sample_data',this.model.isInSampleMode());},destroy:function(){if(this.$buttons){this.$buttons.off();}
ActionMixin.destroy.call(this);this._super.apply(this,arguments);},on_attach_callback:function(){ActionMixin.on_attach_callback.call(this);this.searchModel.on('search',this,this._onSearch);if(this.withControlPanel){this.searchModel.on('get-controller-query-params',this,this._onGetOwnedQueryParams);}
if(!(this.renderer instanceof ComponentWrapper)){this.renderer.on_attach_callback();}},on_detach_callback:function(){ActionMixin.on_detach_callback.call(this);this.searchModel.off('search',this);if(this.withControlPanel){this.searchModel.off('get-controller-query-params',this);}
if(!(this.renderer instanceof ComponentWrapper)){this.renderer.on_detach_callback();}},discardChanges:function(recordID,options){return Promise.resolve();},exportState(){const exported={searchModel:this.searchModel.exportState(),};if(this.withSearchPanel){const searchPanel=this._searchPanelWrapper.componentRef.comp;exported.searchPanel=searchPanel.exportState();}
return exported;},importState(state){this.searchModel.importState(state.searchModel);if(this.withSearchPanel){const searchPanel=this._searchPanelWrapper.componentRef.comp;searchPanel.importState(state.searchPanel);}},is_action_enabled:function(action){return this.activeActions[action];},reload:async function(params={}){if(params.controllerState){this.importState(params.controllerState);Object.assign(params,this.searchModel.get('query'));}
return this.update(params,{});},async update(params,options={}){const shouldReload='reload'in options?options.reload:true;if(shouldReload){this.handle=await this.dp.add(this.model.reload(this.handle,params));}
const localState=this.renderer.getLocalState();const state=this.model.get(this.handle,{withSampleData:true});const promises=[this._updateRendererState(state,params).then(()=>{this.renderer.setLocalState(localState);}),this._update(this.model.get(this.handle),params)];await this.dp.add(Promise.all(promises));this.updateButtons();this.el.classList.toggle('o_legacy_view_sample_data',this.model.isInSampleMode());},_getPagingInfo:function(state){return null;},_getActionMenuItems:function(state){return null;},_giveFocus(){if(!this.model.isInSampleMode()){this.renderer.giveFocus();}},_hideBanner:function(){if(this._$banner.length){const $bannerElement=this._$banner.filter('.o_onboarding_container.collapse.show');if($bannerElement.length){Collapse.getOrCreateInstance($bannerElement[0]).toggle();}}},_pushState:function(){this.trigger_up('push_state',{controllerID:this.controllerID,state:this.getState(),});},async _removeSampleData(callback){this.model.leaveSampleMode();if(callback){await callback();}
this.el.classList.remove('o_legacy_view_sample_data');},_renderBanner:async function(){if(this.bannerRoute!==undefined){const response=await this._rpc({route:this.bannerRoute,params:{context:session.user_context},});if(!response.html){this.$el.removeClass('o_has_banner');return Promise.resolve();}
this.$el.addClass('o_has_banner');var $banner=$(response.html);if(this._$banner&&this._$banner.remove){this._$banner.remove();}
var defs=[];$('link[rel="stylesheet"]',$banner).each(function(i,link){defs.push(loadCSS(link.href));link.remove();});$('script[type="text/javascript"]',$banner).each(function(i,js){defs.push(loadJS(js.src));js.remove();});await Promise.all(defs);$banner.insertBefore(this.$('> .o_content'));this._$banner=$banner;}},_startRenderer:function(){if(this.renderer instanceof ComponentWrapper){return this.renderer.mount(this.$('.o_content')[0]);}
return this.renderer.appendTo(this.$('.o_content'));},async _update(state,params){if(!this.$buttons){this.renderButtons();}
const promises=[this._renderBanner()];if(params.shouldUpdateSearchComponents!==false){if(this.withControlPanel){this._updateControlPanelProps(state);if(params.breadcrumbs){this.controlPanelProps.breadcrumbs=params.breadcrumbs;}
promises.push(this.updateControlPanel());}
if(this.withSearchPanel){this._updateSearchPanel();}}
this._pushState();await Promise.all(promises);},_updateControlPanelProps(state){if(!this.controlPanelProps.cp_content){this.controlPanelProps.cp_content={};}
if(this.$buttons){this.controlPanelProps.cp_content.$buttons=this.$buttons;}
Object.assign(this.controlPanelProps,{actionMenus:this._getActionMenuItems(state),pager:this._getPagingInfo(state),title:this.getTitle(),});},_updatePaging:async function(state,newProps){const pagingInfo=this._getPagingInfo(state);if(pagingInfo){Object.assign(pagingInfo,newProps);return this.updateControlPanel({pager:pagingInfo});}},_updateRendererState(state,params={}){if(this.renderer instanceof ComponentWrapper){return this.renderer.update(state);}
return this.renderer.updateState(state,params);},async _updateSearchPanel(newProps){Object.assign(this.searchPanelProps,newProps);await this._searchPanelWrapper.update(this.searchPanelProps);},_onActionClicked:function(ev){ev.preventDefault();var $target=$(ev.currentTarget);var self=this;var data=$target.data();if(data.method!==undefined&&data.model!==undefined){var options={};if(data.reloadOnClose){options.on_close=function(){self.trigger_up('reload');};}
this.dp.add(this._rpc({model:data.model,method:data.method,context:session.user_context,})).then(function(action){if(action!==undefined){self.do_action(action,options);}});}else if($target.attr('name')){this.do_action($target.attr('name'),data.context&&{additional_context:data.context});}else{this.do_action({name:$target.attr('title')||_.str.strip($target.text()),type:'ir.actions.act_window',res_model:data.model||this.modelName,res_id:data.resId,target:'current',views:data.views||(data.resId?[[false,'form']]:[[false,'list'],[false,'form']]),domain:data.domain||[],},{additional_context:_.extend({},data.context)});}
if(data.oHideBanner){self._hideBanner();}},_onNavigationMove:function(ev){switch(ev.data.direction){case'up':ev.stopPropagation();this.searchModel.trigger('focus-control-panel');break;case'down':ev.stopPropagation();this._giveFocus();break;}},_onOpenRecord:function(ev){ev.stopPropagation();var record=this.model.get(ev.data.id,{raw:true});this.trigger_up('switch_view',{view_type:'form',res_id:record.res_id,mode:ev.data.mode||'readonly',model:this.modelName,});},_onSearch:function(searchQuery){this.reload(_.extend({offset:0,groupsOffset:0},searchQuery));},_onSwitchView:function(ev){ev.data.controllerID=this.controllerID;},});__exports[Symbol.for("default")]=AbstractController;return __exports;});odoo.define(`web.AbstractController`,async function(require){return require('@web/legacy/js/views/abstract_controller')[Symbol.for("default")];});;

/* /web/static/src/legacy/js/views/abstract_model.js */
odoo.define('@web/legacy/js/views/abstract_model',async function(require){'use strict';let __exports={};const fieldUtils=require('web.field_utils');const mvc=require('web.mvc');const SampleServer=require('web.SampleServer');var AbstractModel=mvc.Model.extend({init(parent,params={}){this._super(...arguments);this.useSampleModel=params.useSampleModel||false;if(params.isSampleModel){this.isSampleModel=true;this.sampleServer=new SampleServer(params.modelName,params.fields);}else if(this.useSampleModel){const sampleModelParams=Object.assign({},params,{isSampleModel:true,SampleModel:null,useSampleModel:false,});this.sampleModel=new params.SampleModel(this,sampleModelParams);this._isInSampleMode=false;}},get(_,options){let state;if(options&&options.withSampleData&&this._isInSampleMode){state=this.sampleModel.__get(...arguments);}else{state=this.__get(...arguments);}
return state;},isInSampleMode(){return!!this._isInSampleMode;},leaveSampleMode(){if(this.useSampleModel){this.useSampleModel=false;this._isInSampleMode=false;this.sampleModel.destroy();}},async load(params){this.loadParams=params;const handle=await this.__load(...arguments);await this._callSampleModel('__load',handle,...arguments);return handle;},async reload(_,params){const handle=await this.__reload(...arguments);if(this._isInSampleMode){if(!this._haveParamsChanged(params)){await this._callSampleModel('__reload',handle,...arguments);}else{this.leaveSampleMode();}}
return handle;},async _callSampleModel(method,handle,...args){if(this.useSampleModel&&this._isEmpty(handle)){try{if(method==='__load'){await this.sampleModel.__load(...args);}else if(method==='__reload'){await this.sampleModel.__reload(...args);}
this._isInSampleMode=true;}catch(error){if(error instanceof SampleServer.UnimplementedRouteError){this.leaveSampleMode();}else{throw error;}}}else{this.leaveSampleMode();}},__get(){return{};},_isEmpty(){return false;},async __load(){return Promise.resolve();},_parseServerValue:function(field,value){if(field.type==='date'||field.type==='datetime'){value=fieldUtils.parse[field.type](value,field,{isUTC:true});}else if(field.type==='selection'&&value===false){var hasKey0=_.find(field.selection,function(option){return option[0]===0;});value=hasKey0?0:value;}
return value;},async __reload(){return Promise.resolve();},_haveParamsChanged(params={}){for(const key of['context','domain','timeRanges']){if(key in params){const diff=JSON.stringify(params[key])!==JSON.stringify(this.loadParams[key]);if(diff){return true;}}}
if(this.useSampleModel&&'groupBy'in params){return JSON.stringify(params.groupBy)!==JSON.stringify(this.loadParams.groupedBy);}},async _rpc(){if(this.isSampleModel){return this.sampleServer.mockRpc(...arguments);}
return this._super(...arguments);},});__exports[Symbol.for("default")]=AbstractModel;return __exports;});odoo.define(`web.AbstractModel`,async function(require){return require('@web/legacy/js/views/abstract_model')[Symbol.for("default")];});;

/* /web/static/src/legacy/js/views/abstract_renderer.js */
odoo.define('@web/legacy/js/views/abstract_renderer',async function(require){'use strict';let __exports={};const{renderToString}=require('@web/core/utils/render');const mvc=require('web.mvc');const FOCUSABLE_ELEMENTS=['a','button','input','select','textarea','[tabindex="0"]'].map((sel)=>`:scope ${sel}`).join(', ');__exports[Symbol.for("default")]=mvc.Renderer.extend({sampleDataTargets:[],init:function(parent,state,params){this._super.apply(this,arguments);this.arch=params.arch;this.noContentHelp=params.noContentHelp;this.withSearchPanel=params.withSearchPanel;},async start(){this.$el.addClass(this.arch.attrs.class);if(this.withSearchPanel){this.$el.addClass('o_renderer_with_searchpanel');}
await Promise.all([this._render(),this._super()]);},on_attach_callback:function(){},on_detach_callback:function(){},getLocalState:function(){},giveFocus:function(){},resetLocalState(){},setLocalState:function(localState){},async updateState(state,params){this._setState(state);if(!params.noRender){await this._render();}},async _render(){await this._renderView();this._suppressFocusableElements();},_renderNoContentHelper:function(context){let templateName;if(!context&&this.noContentHelp){templateName="web.ActionHelper";context={noContentHelp:this.noContentHelp};}else{templateName="web.NoContentHelper";}
const innerHTML=renderToString(templateName,context);const template=Object.assign(document.createElement("template"),{innerHTML});this.el.append(template.content.firstChild);},async _renderView(){},_setState(state=false){if(state!==false){this.state=state;}},_suppressFocusableElements(){if(!this.state.isSample||this.isEmbedded){return;}
const rootEls=[];for(const selector of this.sampleDataTargets){rootEls.push(...this.el.querySelectorAll(`:scope ${selector}`));}
const focusableEls=new Set(rootEls);for(const rootEl of rootEls){rootEl.classList.add('o_sample_data_disabled');for(const focusableEl of rootEl.querySelectorAll(FOCUSABLE_ELEMENTS)){focusableEls.add(focusableEl);}}
for(const focusableEl of focusableEls){focusableEl.setAttribute('tabindex',-1);if(focusableEl.classList.contains('dropdown-item')){focusableEl.classList.add('disabled');}}},});return __exports;});odoo.define(`web.AbstractRenderer`,async function(require){return require('@web/legacy/js/views/abstract_renderer')[Symbol.for("default")];});;

/* /web/static/src/legacy/js/views/abstract_renderer_owl.js */
odoo.define('@web/legacy/js/views/abstract_renderer_owl',async function(require){'use strict';let __exports={};const{LegacyComponent}=require("@web/legacy/legacy_component");const{onMounted,onPatched}=require("@odoo/owl");const FOCUSABLE_ELEMENTS=['a','button','input','select','textarea','[tabindex="0"]'].map((sel)=>`:scope ${sel}`).join(', ');class AbstractRenderer extends LegacyComponent{setup(){this.sampleDataTargets=[];onMounted(()=>{this._suppressFocusableElements();});onPatched(()=>{this._suppressFocusableElements();});}
_suppressFocusableElements(){if(!this.props.isSample||this.props.isEmbedded){const disabledEls=this.el.querySelectorAll(`.o_sample_data_disabled`);disabledEls.forEach(el=>el.classList.remove('o_sample_data_disabled'));return;}
const rootEls=[];for(const selector of this.sampleDataTargets){rootEls.push(...this.el.querySelectorAll(`:scope ${selector}`));}
const focusableEls=new Set(rootEls);for(const rootEl of rootEls){rootEl.classList.add('o_sample_data_disabled');for(const focusableEl of rootEl.querySelectorAll(FOCUSABLE_ELEMENTS)){focusableEls.add(focusableEl);}}
for(const focusableEl of focusableEls){focusableEl.setAttribute('tabindex',-1);if(focusableEl.classList.contains('dropdown-item')){focusableEl.classList.add('disabled');}}}}
__exports[Symbol.for("default")]=AbstractRenderer;return __exports;});odoo.define(`web.AbstractRendererOwl`,async function(require){return require('@web/legacy/js/views/abstract_renderer_owl')[Symbol.for("default")];});;

/* /web/static/src/legacy/js/views/abstract_view.js */
odoo.define('@web/legacy/js/views/abstract_view',async function(require){'use strict';let __exports={};const ActionModel=require("web.ActionModel");const AbstractModel=require("@web/legacy/js/views/abstract_model")[Symbol.for("default")];const AbstractRenderer=require("@web/legacy/js/views/abstract_renderer")[Symbol.for("default")];const AbstractController=require("@web/legacy/js/views/abstract_controller")[Symbol.for("default")];const ControlPanel=require('web.ControlPanel');const SearchPanel=require("web.searchPanel");const mvc=require('web.mvc');const viewUtils=require('web.viewUtils');const{Component}=require("@odoo/owl");var Factory=mvc.Factory;var AbstractView=Factory.extend({display_name:'',mobile_friendly:false,icon:'fa-question',multi_record:true,viewType:undefined,withSearchBar:true,searchMenuTypes:['filter','groupBy','favorite'],withControlPanel:true,withSearchPanel:true,config:_.extend({},Factory.prototype.config,{Model:AbstractModel,Renderer:AbstractRenderer,Controller:AbstractController,ControlPanel,SearchPanel,}),init:function(viewInfo,params){this._super.apply(this,arguments);var action=params.action||{};params=_.defaults(params,this._extractParamsFromAction(action));if(typeof viewInfo.arch==='string'){this.fieldsView=this._processFieldsView(viewInfo);}else{this.fieldsView=viewInfo;}
this.arch=this.fieldsView.arch;this.fields=this.fieldsView.viewFields;this.userContext=params.userContext||{};var isEmbedded=params.isEmbedded||false;this.rendererParams={arch:this.arch,isEmbedded:isEmbedded,noContentHelp:params.noContentHelp,};this.controllerParams={actionViews:params.actionViews,activeActions:{edit:typeof params.editable==='boolean'?params.editable:this.arch.attrs.edit?!!JSON.parse(this.arch.attrs.edit):true,create:this.arch.attrs.create?!!JSON.parse(this.arch.attrs.create):true,delete:this.arch.attrs.delete?!!JSON.parse(this.arch.attrs.delete):true,duplicate:this.arch.attrs.duplicate?!!JSON.parse(this.arch.attrs.duplicate):true,},bannerRoute:this.arch.attrs.banner_route,controllerID:params.controllerID,displayName:params.displayName,isEmbedded:isEmbedded,modelName:params.modelName,viewType:this.viewType,};var controllerState=params.controllerState||{};var currentId=controllerState.currentId||params.currentId;this.loadParams={context:params.context,count:params.count||((this.controllerParams.ids!==undefined)&&this.controllerParams.ids.length)||0,domain:params.domain,modelName:params.modelName,res_id:currentId,res_ids:controllerState.resIds||params.ids||(currentId?[currentId]:undefined),};const useSampleModel='useSampleModel'in params?params.useSampleModel:!!(this.arch.attrs.sample&&JSON.parse(this.arch.attrs.sample));this.modelParams={fields:this.fields,modelName:params.modelName,useSampleModel,};if(useSampleModel){this.modelParams.SampleModel=this.config.Model;}
var defaultOrder=this.arch.attrs.default_order;if(defaultOrder){this.loadParams.orderedBy=_.map(defaultOrder.split(','),function(order){order=order.trim().split(' ');return{name:order[0],asc:order[1]!=='desc'};});}
if(params.searchQuery){this._updateMVCParams(params.searchQuery);}
this.withControlPanel=this.withControlPanel&&params.withControlPanel;this.withSearchPanel=this.withSearchPanel&&this.multi_record&&params.withSearchPanel&&!('search_panel'in params.context&&!params.search_panel);const searchModelParams=Object.assign({},params,{action});if(this.withControlPanel||this.withSearchPanel){const{arch,fields,favoriteFilters}=params.controlPanelFieldsView||{};const archInfo=ActionModel.extractArchInfo({search:arch},this.viewType);const controlPanelInfo=archInfo[this.config.ControlPanel.modelExtension];const searchPanelInfo=archInfo[this.config.SearchPanel.modelExtension];this.withSearchPanel=this.withSearchPanel&&Boolean(searchPanelInfo);Object.assign(searchModelParams,{fields,favoriteFilters,controlPanelInfo,searchPanelInfo,});}
const searchModel=this._createSearchModel(searchModelParams);this.controllerParams.searchModel=searchModel;if(this.controllerParams.controlPanel){this.controllerParams.controlPanel.props.searchModel=searchModel;}
if(this.controllerParams.searchPanel){this.controllerParams.searchPanel.props.searchModel=searchModel;}},_createSearchModel:function(params,extraExtensions){const{fields,favoriteFilters,controlPanelInfo,searchPanelInfo}=params;const extensions=Object.assign({},extraExtensions);const importedState=params.controllerState||{};if(this.withControlPanel){const ControlPanelComponent=this.config.ControlPanel;if(this.withSearchBar){extensions[ControlPanelComponent.modelExtension]={actionId:params.action.id,activateDefaultFavorite:params.activateDefaultFavorite,archNodes:controlPanelInfo.children,dynamicFilters:params.dynamicFilters,favoriteFilters,withSearchBar:params.withSearchBar,};}
this.controllerParams.withControlPanel=true;const controlPanelProps={action:params.action,breadcrumbs:params.breadcrumbs,fields,searchMenuTypes:params.searchMenuTypes,view:this.fieldsView,views:params.action.views&&params.action.views.filter(v=>v.multiRecord===this.multi_record),withBreadcrumbs:params.withBreadcrumbs,withSearchBar:params.withSearchBar,};this.controllerParams.controlPanel={Component:ControlPanelComponent,props:controlPanelProps,};}
if(this.withSearchPanel){const SearchPanelComponent=this.config.SearchPanel;extensions[SearchPanelComponent.modelExtension]={archNodes:searchPanelInfo.children,};this.controllerParams.withSearchPanel=true;this.rendererParams.withSearchPanel=true;const searchPanelProps={importedState:importedState.searchPanel,};if(searchPanelInfo.attrs.class){searchPanelProps.className=searchPanelInfo.attrs.class;}
this.controllerParams.searchPanel={Component:SearchPanelComponent,props:searchPanelProps,};}
const searchModel=new ActionModel(extensions,{env:Component.env,modelName:params.modelName,context:Object.assign({},this.loadParams.context),domain:this.loadParams.domain||[],importedState:importedState.searchModel,searchMenuTypes:params.searchMenuTypes,searchQuery:params.searchQuery,fields,});return searchModel;},getController:async function(){const _super=this._super.bind(this);const{searchModel}=this.controllerParams;await searchModel.load();this._updateMVCParams(searchModel.get("query"));const modelParent=this.model&&this.model.getParent();const[controller]=await Promise.all([_super(...arguments),searchModel.isReady(),]);if(modelParent){this.model.setParent(modelParent);}
return controller;},getModel:function(){if(!this.model){this.model=this._super.apply(this,arguments);}
return this.model;},setController:function(Controller){this.Controller=Controller;},_extractParamsFromAction:function(action){action=action||{};var context=action.context||{};var inline=action.target==='inline';const params={actionId:action.id||false,actionViews:action.views||[],activateDefaultFavorite:!context.active_id&&!context.active_ids,context:action.context||{},controlPanelFieldsView:action.controlPanelFieldsView,currentId:action.res_id?action.res_id:undefined,displayName:action.display_name||action.name,domain:action.domain||[],limit:action.limit,modelName:action.res_model,noContentHelp:action.help,searchMenuTypes:inline?[]:this.searchMenuTypes,withBreadcrumbs:'no_breadcrumbs'in context?!context.no_breadcrumbs:true,withControlPanel:this.withControlPanel,withSearchBar:inline?false:this.withSearchBar,withSearchPanel:this.withSearchPanel,};if('useSampleModel'in action){params.useSampleModel=action.useSampleModel;}
return params;},_processFieldsView:function(fieldsView){var fv=_.extend({},fieldsView);fv.arch=viewUtils.parseArch(fv.arch);fv.viewFields=_.defaults({},fv.viewFields,fv.fields);return fv;},_updateMVCParams:function(searchQuery){this.loadParams=_.extend(this.loadParams,{context:searchQuery.context,domain:searchQuery.domain,groupedBy:searchQuery.groupBy,});this.loadParams.orderedBy=Array.isArray(searchQuery.orderedBy)&&searchQuery.orderedBy.length?searchQuery.orderedBy:this.loadParams.orderedBy;if(searchQuery.timeRanges){this.loadParams.timeRanges=searchQuery.timeRanges;this.rendererParams.timeRanges=searchQuery.timeRanges;}},});__exports[Symbol.for("default")]=AbstractView;return __exports;});odoo.define(`web.AbstractView`,async function(require){return require('@web/legacy/js/views/abstract_view')[Symbol.for("default")];});;

/* /web/static/src/legacy/js/views/action_model.js */
odoo.define('@web/legacy/js/views/action_model',async function(require){'use strict';let __exports={};const Domain=require("web.Domain");const{FACET_ICONS}=require("web.searchUtils");const{Model}=require("web.Model");const{parseArch}=require("web.viewUtils");const pyUtils=require("web.py_utils");const Registry=require("web.Registry");const isNotNull=(value)=>value!==null&&value!==undefined;const isObject=(obj)=>typeof obj==="object"&&obj!==null;class ActionModelExtension extends Model.Extension{async callLoad(){this.loadPromise=super.callLoad(...arguments);await this.loadPromise;}
async isReady(){await this.loadPromise;}
static extractArchInfo(){return null;}}
class ActionModel extends Model{get(property){switch(property){case"query":return this.config.searchQuery||this._getQuery();case"facets":return this._getFacets();}
return super.get(...arguments);}
async isReady(){await this._awaitExtensions();}
async _awaitExtensions(){await Promise.all(this.extensions.flat().map((extension)=>extension.isReady()));}
__get(excluded,property){const results=super.__get(...arguments);switch(property){case"domain":return[this.config.domain,...results];case"context":return[this.config.context,...results];}
return results;}
_getFacets(){const types=this.config.searchMenuTypes||[];const isValidType=(type)=>(!['groupBy','comparison'].includes(type)||types.includes(type));const facets=[];for(const extension of this.extensions.flat()){for(const facet of extension.get("facets")||[]){if(!isValidType(facet.type)){continue;}
facet.separator=facet.type==='groupBy'?">":this.env._t("or");if(facet.type in FACET_ICONS){facet.icon=FACET_ICONS[facet.type];}
facets.push(facet);}}
return facets;}
_getQuery(){const evalContext=this.env.session.user_context;const contexts=this.__get(null,"context");const domains=this.__get(null,"domain");const query={context:pyUtils.eval("contexts",contexts,evalContext),domain:Domain.prototype.normalizeArray(pyUtils.eval("domains",domains,evalContext)),orderedBy:this.get("orderedBy")||[],};const searchMenuTypes=this.config.searchMenuTypes||[];if(searchMenuTypes.includes("groupBy")){query.groupBy=this.get("groupBy")||[];}else{query.groupBy=[];}
if(searchMenuTypes.includes("comparison")){query.timeRanges=this.get("timeRanges")||{};}
return query;}
async _loadExtensions({isInitialLoad}){await super._loadExtensions(...arguments);if(!isInitialLoad){this.trigger("search",this.get("query"));await this._awaitExtensions();}}
static extractArchInfo(archs,viewType=null){const parsedArchs={};if(!archs.search){archs.search="<search/>";}
for(const key in archs){const{attrs,children}=parseArch(archs[key]);const objectChildren=children.filter(isObject);parsedArchs[key]={attrs,children:objectChildren,};}
const archInfo={};for(const key of this.registry.keys()){const extension=this.registry.get(key);const result=extension.extractArchInfo(parsedArchs,viewType);if(isNotNull(result)){archInfo[key]=result;}}
return archInfo;}}
ActionModel.Extension=ActionModelExtension;ActionModel.registry=new Registry(null,(value)=>value.prototype instanceof ActionModel.Extension);__exports[Symbol.for("default")]=ActionModel;return __exports;});odoo.define(`web.ActionModel`,async function(require){return require('@web/legacy/js/views/action_model')[Symbol.for("default")];});;

/* /web/static/src/legacy/js/views/basic/basic_controller.js */
odoo.define('web.BasicController',function(require){"use strict";var AbstractController=require('web.AbstractController');var core=require('web.core');var Dialog=require('web.Dialog');var FieldManagerMixin=require('web.FieldManagerMixin');var{Markup}=require('web.utils');var TranslationDialog=require('web.TranslationDialog');var _t=core._t;var BasicController=AbstractController.extend(FieldManagerMixin,{events:Object.assign({},AbstractController.prototype.events,{'click .o_content':'_onContentClicked',}),custom_events:_.extend({},AbstractController.prototype.custom_events,FieldManagerMixin.custom_events,{discard_changes:'_onDiscardChanges',reload:'_onReload',resequence_records:'_onResequenceRecords',set_dirty:'_onSetDirty',load_optional_fields:'_onLoadOptionalFields',save_optional_fields:'_onSaveOptionalFields',translate:'_onTranslate',}),init:function(parent,model,renderer,params){this._super.apply(this,arguments);this.archiveEnabled=params.archiveEnabled;this.confirmOnDelete=params.confirmOnDelete;this.hasButtons=params.hasButtons;FieldManagerMixin.init.call(this,this.model);this.mode=params.mode||'readonly';this.savingDef=Promise.resolve();this.viewId=params.viewId;this.pendingChanges=[];},start:async function(){this.$el.toggleClass('o_cannot_create',!this.activeActions.create);await this._super(...arguments);},destroy:function(){this._super(...arguments);if(this._boundOnBeforeUnload){window.removeEventListener("beforeunload",this._boundOnBeforeUnload);}},on_attach_callback:function(){this._super(...arguments);this._boundOnBeforeUnload=this._onBeforeUnload.bind(this);window.addEventListener("beforeunload",this._boundOnBeforeUnload);},on_detach_callback:function(){this._super(...arguments);if(this._boundOnBeforeUnload){window.removeEventListener("beforeunload",this._boundOnBeforeUnload);}
this.renderer.resetLocalState();},canBeRemoved:function(){return this.saveChanges(this.handle);},canBeDiscarded:function(recordID){return Promise.resolve(true);},canBeSaved:function(recordID){var fieldNames=this.renderer.canBeSaved(recordID||this.handle);if(fieldNames.length){this._notifyInvalidFields(fieldNames);return false;}
return true;},discardChanges:function(recordID,options){return Promise.all([this.mutex.getUnlockedDef(),this.savingDef]).then(this._discardChanges.bind(this,recordID||this.handle,options));},getSelectedIds:function(){return[];},isDirty:function(recordID){return this.model.isDirty(recordID||this.handle);},saveChanges:async function(recordId){await Promise.all([this.mutex.getUnlockedDef(),this.savingDef]);recordId=recordId||this.handle;if(this.isDirty(recordId)){await this.saveRecord(recordId,{stayInEdit:true,reload:false,});}},saveRecord:function(recordID,options){var self=this;var unlockedMutex=this.mutex.getUnlockedDef().then(function(){return self.renderer.commitChanges(recordID||self.handle);}).then(function(){return self.mutex.exec(self._saveRecord.bind(self,recordID,options));});this.savingDef=new Promise(function(resolve){unlockedMutex.then(resolve).guardedCatch(resolve);});return unlockedMutex;},update:async function(params,options){this.mode=params.mode||this.mode;return this._super(params,options);},reload:function(params){if(params&&params.controllerState){if(params.controllerState.currentId){params.currentId=params.controllerState.currentId;}
params.ids=params.controllerState.resIds;}
return this._super.apply(this,arguments);},_abandonRecord:function(recordID){recordID=recordID||this.handle;if(recordID===this.handle){this.trigger_up('history_back');}else{this.model.removeLine(recordID);}},_applyChanges:function(dataPointID,changes,event){this.pendingChanges.push({dataPointID,changes,event});var _super=FieldManagerMixin._applyChanges.bind(this);return this.mutex.exec(()=>{this.pendingChanges.shift();return _super(dataPointID,changes,event);});},_archive:async function(ids,archive){if(ids.length===0){return Promise.resolve();}
if(archive){await this.model.actionArchive(ids,this.handle);}else{await this.model.actionUnarchive(ids,this.handle);}
return this.update({},{reload:false});},_callButtonAction:function(attrs,record){record=record||this.model.get(this.handle);const actionData=Object.assign({},attrs,{context:record.getContext({additionalContext:attrs.context||{}})});const recordData={context:record.getContext(),currentID:record.data.id,model:record.model,resIDs:record.res_ids,};return this._executeButtonAction(actionData,recordData);},_confirmChange:function(id,fields,e){if(e.name==='discard_changes'&&e.target.reset){return e.target.reset(this.model.get(e.target.dataPointID),e,true);}
var state=this.model.get(this.handle);return this.renderer.confirmChange(state,id,fields,e);},_confirmSaveNewRecord:function(){var self=this;var def=new Promise(function(resolve,reject){var message=_t("You need to save this new record before editing the translation. Do you want to proceed?");var dialog=Dialog.confirm(self,message,{title:_t("Warning"),confirm_callback:resolve.bind(self,true),cancel_callback:reject,});dialog.on('closed',self,reject);});return def;},_deleteRecords:function(ids){var self=this;function doIt(){return self.model.deleteRecords(ids,self.modelName).then(self._onDeletedRecords.bind(self,ids));}
if(this.confirmOnDelete){const message=ids.length>1?_t("Are you sure you want to delete these records?"):_t("Are you sure you want to delete this record?");let dialog;const confirmCallback=()=>{doIt().guardedCatch(()=>dialog.destroy());};dialog=Dialog.confirm(this,message,{confirm_callback:confirmCallback});}else{doIt();}},_disableButtons:function(){if(this.$buttons){this.$buttons.find('button').attr('disabled',true);}},_discardChanges:function(recordID,options){var self=this;recordID=recordID||this.handle;options=options||{};return this.canBeDiscarded(recordID).then(function(needDiscard){if(options.readonlyIfRealDiscard&&!needDiscard){return;}
self.model.discardChanges(recordID);if(options.noAbandon){return;}
if(self.model.canBeAbandoned(recordID)){self._abandonRecord(recordID);return;}
return self._confirmSave(recordID);});},_enableButtons:function(){if(this.$buttons){this.$buttons.find('button').removeAttr('disabled');}},async _executeButtonAction(actionData,recordData){const prom=new Promise((resolve,reject)=>{this.trigger_up('execute_action',{action_data:actionData,env:recordData,on_closed:()=>this.isDestroyed()?Promise.resolve():this.reload(),on_success:resolve,on_fail:()=>this.update({},{reload:false}).then(reject).guardedCatch(reject)});});return this.alive(prom);},exportState:function(){var state=this._super.apply(this,arguments);var env=this.model.get(this.handle,{env:true});return _.extend(state,{currentId:env.currentId,resIds:env.ids,});},_getOptionalFieldsLocalStorageKey:function(keyParts){keyParts.model=this.modelName;keyParts.viewType=this.viewType;keyParts.viewId=this.viewId;var parts=['model','viewType','viewId','relationalField','subViewType','subViewId',];var viewIdentifier=parts.reduce(function(identifier,partName){if(partName in keyParts){return identifier+','+keyParts[partName];}
return identifier;},'optional_fields');viewIdentifier=keyParts.fields.sort(this._nameSortComparer).reduce(function(identifier,field){return identifier+','+field.name;},viewIdentifier);return viewIdentifier;},_getPagingInfo:function(state){const isGrouped=state.groupedBy&&state.groupedBy.length;return{currentMinimum:(isGrouped?state.groupsOffset:state.offset)+1,limit:isGrouped?state.groupsLimit:state.limit,size:isGrouped?state.groupsCount:state.count,onPagerChanged:this._onPagerChanged.bind(this),};},_getActionMenuItems:function(state){return{activeIds:this.getSelectedIds(),context:state.getContext(),};},_nameSortComparer:function(left,right){return left.name<right.name?-1:1;},_notifyInvalidFields:function(invalidFields){var record=this.model.get(this.handle,{raw:true});var fields=record.fields;var warnings=invalidFields.map(function(fieldName){var fieldStr=fields[fieldName].string;return _.str.sprintf('<li>%s</li>',_.escape(fieldStr));});warnings.unshift('<ul>');warnings.push('</ul>');this.displayNotification({title:_t("Invalid fields:"),message:Markup(warnings.join('')),type:'danger',});},_onDeletedRecords:function(ids){this.update({});},_saveRecord:function(recordID,options){recordID=recordID||this.handle;options=_.defaults(options||{},{stayInEdit:false,reload:true,savePoint:false,});if(this.canBeSaved(recordID)){var self=this;var saveDef=this.model.save(recordID,{reload:options.reload,savePoint:options.savePoint,viewType:options.viewType,});if(!options.stayInEdit){saveDef=saveDef.then(function(fieldNames){var def=fieldNames.length?self._confirmSave(recordID):self._setMode('readonly',recordID);return def.then(function(){return fieldNames;});});}
return saveDef;}else{return Promise.reject("SaveRecord: this.canBeSave is false");}},_setMode:function(mode,recordID){if((recordID||this.handle)===this.handle){return this.update({mode:mode},{reload:false}).then(function(){core.bus.trigger('DOM_updated');});}
return Promise.resolve();},_shouldBounceOnClick:function(){return false;},_updateControlPanel:function(newProps={}){const state=this.model.get(this.handle);const props=Object.assign(newProps,{actionMenus:this._getActionMenuItems(state),pager:this._getPagingInfo(state),title:this.getTitle(),});return this.updateControlPanel(props);},_urgentSave(recordID){this.model.executeDirectly(()=>{this.renderer.commitChanges(recordID);for(const key in this.pendingChanges){const{changes,dataPointID,event}=this.pendingChanges[key];const options={context:event.data.context,viewType:event.data.viewType,notifyChange:false,};this.model.notifyChanges(dataPointID,changes,options);this._confirmChange(dataPointID,Object.keys(changes),event);}
if(this.isDirty()){this._saveRecord(recordID,{reload:false,stayInEdit:true});}});},_onContentClicked(ev){if(this.$buttons&&this._shouldBounceOnClick(ev.target)){this.$buttons.find('.btn-primary:visible:first').odooBounce();}},_onDiscardChanges:function(ev){var self=this;ev.stopPropagation();var recordID=ev.data.recordID;this._discardChanges(recordID).then(function(){self._confirmChange(recordID,[ev.data.fieldName],ev).then(ev.data.onSuccess).guardedCatch(ev.data.onSuccess);}).guardedCatch(ev.data.onFailure);},_onFieldChanged:function(ev){if(this.mode==='readonly'&&!('force_save'in ev.data)){ev.data.force_save=true;}
FieldManagerMixin._onFieldChanged.apply(this,arguments);},_onPagerChanged:async function({currentMinimum,limit}){const state=this.model.get(this.handle,{raw:true});const reloadParams=state.groupedBy&&state.groupedBy.length?{groupsLimit:limit,groupsOffset:currentMinimum-1,}:{limit,offset:currentMinimum-1,};await this.reload(reloadParams);if(state.limit===limit){this.trigger_up('scrollTo',{top:0});}},_onBeforeUnload:function(){},_onReload:function(ev){ev.stopPropagation();var data=ev&&ev.data||{};var handle=data.db_id;var prom;if(handle){prom=this.model.reload(handle).then(this._confirmSave.bind(this,handle));}else{prom=this.reload({fieldNames:data.fieldNames,keepChanges:data.keepChanges||false,});}
prom.then(ev.data.onSuccess).guardedCatch(ev.data.onFailure);},_onResequenceRecords:function(ev){ev.stopPropagation();this.trigger_up('mutexify',{action:async()=>{let state=this.model.get(this.handle);const resIDs=ev.data.recordIds.map(recordID=>state.data.find(d=>d.id===recordID).res_id);const options={offset:ev.data.offset,field:ev.data.handleField,};await this.model.resequence(this.modelName,resIDs,this.handle,options);this._updateControlPanel();state=this.model.get(this.handle);return this._updateRendererState(state,{noRender:true});},});},_onLoadOptionalFields:function(ev){var res=this.call('local_storage','getItem',this._getOptionalFieldsLocalStorageKey(ev.data.keyParts));ev.data.callback(res);},_onSaveOptionalFields:function(ev){this.call('local_storage','setItem',this._getOptionalFieldsLocalStorageKey(ev.data.keyParts),ev.data.optionalColumnsEnabled);},_onSetDirty:function(ev){ev.stopPropagation();this.model.setDirty(ev.data.dataPointID);},_onTranslate:async function(ev){ev.stopPropagation();if(this.model.isNew(ev.data.id)){await this._confirmSaveNewRecord();var updatedFields=await this.saveRecord(ev.data.id,{stayInEdit:true});await this._confirmChange(ev.data.id,updatedFields,ev);}
var record=this.model.get(ev.data.id,{raw:true});var res_id=record.res_id||record.res_ids[0];this.translationDialog=new TranslationDialog(this,{fieldName:ev.data.fieldName,resId:res_id,userLanguageValue:ev.target.value||'',dataPointModel:record.model,dataPointID:record.id,isComingFromTranslationAlert:ev.data.isComingFromTranslationAlert,context:record.getContext(),});return this.translationDialog.open();},});return BasicController;});;

/* /web/static/src/legacy/js/views/basic/basic_model.js */
odoo.define('web.BasicModel',function(require){"use strict";var AbstractModel=require('web.AbstractModel');var concurrency=require('web.concurrency');var Context=require('web.Context');var core=require('web.core');var Domain=require('web.Domain');const pyUtils=require('web.py_utils');var session=require('web.session');var utils=require('web.utils');var viewUtils=require('web.viewUtils');var localStorage=require('web.local_storage');var _t=core._t;const AGGREGATABLE_TYPES=['float','integer','monetary'];var x2ManyCommands={CREATE:0,create:function(virtualID,values){delete values.id;return[x2ManyCommands.CREATE,virtualID||false,values];},UPDATE:1,update:function(id,values){delete values.id;return[x2ManyCommands.UPDATE,id,values];},DELETE:2,delete:function(id){return[x2ManyCommands.DELETE,id,false];},FORGET:3,forget:function(id){return[x2ManyCommands.FORGET,id,false];},LINK_TO:4,link_to:function(id){return[x2ManyCommands.LINK_TO,id,false];},DELETE_ALL:5,delete_all:function(){return[5,false,false];},REPLACE_WITH:6,replace_with:function(ids){return[6,false,ids];}};var BasicModel=AbstractModel.extend({OPEN_GROUP_LIMIT:10,noCacheModels:['ir.actions.act_window','ir.filters','ir.ui.view','res.currency',],init:function(){this.mutex=new concurrency.Mutex();this.bypassMutex=false;this.batchedRPCsRequests=[];this.localData=Object.create(null);this.__id=0;this._super.apply(this,arguments);},addDefaultRecord:function(listID,options){var self=this;var list=this.localData[listID];var context=_.extend({},this._getDefaultContext(list),this._getContext(list));var position=(options&&options.position)||'top';var params={context:context,fields:list.fields,fieldsInfo:list.fieldsInfo,parentID:list.id,position:position,viewType:list.viewType,};return this._makeDefaultRecord(list.model,params).then(function(id){list.count++;if(position==='top'){list.data.unshift(id);}else{list.data.push(id);}
var record=self.localData[id];list._cache[record.res_id]=id;return id;});},addFieldsInfo:async function(dataPointID,viewInfo){var dataPoint=this.localData[dataPointID];dataPoint.fields=_.extend({},dataPoint.fields,viewInfo.fields);dataPoint.fieldsInfo=dataPoint.fieldsInfo||{};const mainFieldInfo=dataPoint.fieldsInfo[dataPoint[viewInfo.viewType]];dataPoint.fieldsInfo[viewInfo.viewType]=_.defaults({},viewInfo.fieldInfo,mainFieldInfo);if(dataPoint.type==='record'){await this.applyRawChanges(dataPointID,viewInfo.viewType);}
const proms=[];const fieldInfo=dataPoint.fieldsInfo[viewInfo.viewType];if(dataPoint.type==='list'){Object.values(dataPoint._cache).forEach(subDataPointID=>{proms.push(this.addFieldsInfo(subDataPointID,{fields:dataPoint.fields,fieldInfo:dataPoint.fieldsInfo[viewInfo.viewType],viewType:viewInfo.viewType,}));});}else{const values=_.extend({},dataPoint.data,dataPoint._changes);Object.keys(fieldInfo).forEach(fieldName=>{const fieldType=dataPoint.fields[fieldName].type;if(fieldType==='one2many'||fieldType==='many2many'){const mode=fieldInfo[fieldName].mode;const views=fieldInfo[fieldName].views;const x2mDataPointID=values[fieldName];if(views[mode]&&x2mDataPointID){proms.push(this.addFieldsInfo(x2mDataPointID,{fields:views[mode].fields,fieldInfo:views[mode].fieldsInfo[mode],viewType:mode,}));}}});}
return Promise.all(proms);},applyRawChanges:function(recordID,viewType){var record=this.localData[recordID];return this._applyOnChange(record._rawChanges,record,{viewType}).then(function(){return record.id;});},canBeAbandoned:function(id){if(this.localData[id]._noAbandon){return false;}
var record=this.localData[id];var parent=this.localData[record.parentID];if(parent){var entry=_.findWhere(parent._savePoint,{operation:'ADD',id:id});if(entry){if(!entry.isNew){return false;}
var lastEntry=_.last(parent._savePoint);if(lastEntry.operation==='UPDATE'&&lastEntry.id===id){return false;}}}
return this.isNew(id);},deleteRecords:function(recordIds,modelName){var self=this;var records=_.map(recordIds,function(id){return self.localData[id];});var context=_.extend(records[0].getContext(),session.user_context);return this._rpc({model:modelName,method:'unlink',args:[_.pluck(records,'res_id')],context:context,}).then(function(){_.each(records,function(record){self.discardChanges(record.id);var parent=record.parentID&&self.localData[record.parentID];if(parent&&parent.type==='list'){parent.data=_.without(parent.data,record.id);delete self.localData[record.id];if(!parent.data.length&&parent.offset>0){parent.offset=Math.max(parent.offset-parent.limit,0);}}else{record.res_ids.splice(record.offset,1);record.offset=Math.min(record.offset,record.res_ids.length-1);record.res_id=record.res_ids[record.offset];record.count--;}});self._invalidateCache(records[0]);});},discardChanges:function(id,options){options=options||{};var element=this.localData[id];var isNew=this.isNew(id);var rollback='rollback'in options?options.rollback:isNew;var initialOffset=element.offset;element._domains={};this._visitChildren(element,function(elem){if(rollback&&elem._savePoint){if(elem._savePoint instanceof Array){elem._changes=elem._savePoint.slice(0);}else{elem._changes=_.extend({},elem._savePoint);}
elem._isDirty=!isNew;}else{elem._changes=null;elem._isDirty=false;}
elem.offset=0;if(elem.tempLimitIncrement){elem.limit-=elem.tempLimitIncrement;delete elem.tempLimitIncrement;}
elem.specialData=Object.assign({},elem._specialDataSavepoint);});element.offset=initialOffset;},duplicateRecord:function(recordID){var self=this;var record=this.localData[recordID];var context=this._getContext(record);return this._rpc({model:record.model,method:'copy',args:[record.data.id],context:context,}).then(function(res_id){var index=record.res_ids.indexOf(record.res_id);record.res_ids.splice(index+1,0,res_id);return self.load({fieldsInfo:record.fieldsInfo,fields:record.fields,modelName:record.model,res_id:res_id,res_ids:record.res_ids.slice(0),viewType:record.viewType,context:context,});});},executeDirectly(callback){this.bypassMutex=true;callback();this.bypassMutex=false;},freezeOrder:function(listID){var list=this.localData[listID];if(list.type==='record'){return;}
list=this._applyX2ManyOperations(list);this._sortList(list);this.localData[listID].orderedResIDs=list.res_ids;},__get:function(id,options){var self=this;options=options||{};if(!(id in this.localData)){return null;}
var element=this.localData[id];if(options.env){var env={ids:element.res_ids?element.res_ids.slice(0):[],};if(element.type==='record'){env.currentId=this.isNew(element.id)?undefined:element.res_id;}
return env;}
if(element.type==='record'){var data=Object.assign({},element.data,element._changes);var relDataPoint;for(var fieldName in data){var field=element.fields[fieldName];if(data[fieldName]===null){data[fieldName]=false;}
if(!field){continue;}
if(field.type==='many2one'){if(options.raw){relDataPoint=this.localData[data[fieldName]];data[fieldName]=relDataPoint?relDataPoint.res_id:false;}else{data[fieldName]=this.__get(data[fieldName])||false;}}else if(field.type==='reference'){if(options.raw){relDataPoint=this.localData[data[fieldName]];data[fieldName]=relDataPoint?relDataPoint.model+','+relDataPoint.res_id:false;}else{data[fieldName]=this.__get(data[fieldName])||false;}}else if(field.type==='one2many'||field.type==='many2many'){if(options.raw){if(typeof data[fieldName]==='string'){relDataPoint=this.localData[data[fieldName]];relDataPoint=this._applyX2ManyOperations(relDataPoint);data[fieldName]=relDataPoint.res_ids;}else{data[fieldName]=data[fieldName]||[];}}else{data[fieldName]=this.__get(data[fieldName])||[];}}}
var record={context:Object.assign({},element.context),count:element.count,data:data,domain:element.domain.slice(0),evalModifiers:element.evalModifiers,fields:element.fields,fieldsInfo:element.fieldsInfo,getContext:element.getContext,getDomain:element.getDomain,getFieldNames:element.getFieldNames,id:element.id,isDirty:element.isDirty,isNew:element.isNew,limit:element.limit,model:element.model,offset:element.offset,ref:element.ref,res_ids:element.res_ids.slice(0),specialData:Object.assign({},element.specialData),type:'record',viewType:element.viewType,};if(!this.isNew(element.id)){record.res_id=element.res_id;}
var evalContext;Object.defineProperty(record,'evalContext',{get:function(){evalContext=evalContext||self._getEvalContext(element);return evalContext;},});return record;}
element=this._applyX2ManyOperations(element);this._sortList(element);if(!element.orderedResIDs&&element._changes){_.each(element._changes,function(change){if(change.operation==='ADD'&&change.isNew){element.data=_.without(element.data,change.id);if(change.position==='top'){element.data.unshift(change.id);}else{element.data.push(change.id);}}});}
var list={aggregateValues:_.extend({},element.aggregateValues),context:_.extend({},element.context),count:element.count,data:_.map(element.data,function(elemID){return self.__get(elemID,options);}),domain:element.domain.slice(0),fields:element.fields,getContext:element.getContext,getDomain:element.getDomain,getFieldNames:element.getFieldNames,groupedBy:element.groupedBy,groupsCount:element.groupsCount,groupsLimit:element.groupsLimit,groupsOffset:element.groupsOffset,id:element.id,isDirty:element.isDirty,isM2MGrouped:element.isM2MGrouped,isNew:element.isNew,isOpen:element.isOpen,isSample:this.isSampleModel,limit:element.limit,model:element.model,offset:element.offset,orderedBy:element.orderedBy,res_id:element.res_id,res_ids:element.res_ids.slice(0),type:'list',value:element.value,range:element.range,viewType:element.viewType,};if(element.fieldsInfo){list.fieldsInfo=element.fieldsInfo;}
return list;},generateDefaultValues(recordID,options={}){const record=this.localData[recordID];const viewType=options.viewType||record.viewType;const fieldNames=options.fieldNames||Object.keys(record.fieldsInfo[viewType]);const numericFields=['float','integer','monetary'];const proms=[];record._changes=record._changes||{};fieldNames.forEach(fieldName=>{record.data[fieldName]=null;if(!(fieldName in record._changes)){const field=record.fields[fieldName];if(numericFields.includes(field.type)){record._changes[fieldName]=0;}else if(field.type==='one2many'||field.type==='many2many'){proms.push(this._processX2ManyCommands(record,fieldName,[],options));}else{record._changes[fieldName]=null;}}});return Promise.all(proms);},getName:function(id){var record=this.localData[id];var returnValue='';if(record._changes&&'display_name'in record._changes){returnValue=record._changes.display_name;}
else if('display_name'in record.data){returnValue=record.data.display_name;}
return returnValue||_t("New");},isDirty:function(id){var isDirty=false;this._visitChildren(this.localData[id],function(r){if(r._isDirty){isDirty=true;}});return isDirty;},_isEmpty(dataPointID){const dataPoint=this.localData[dataPointID];if(dataPoint.type==='list'){const hasRecords=dataPoint.count===0;if(dataPoint.groupedBy.length){return dataPoint.data.length>0&&hasRecords;}else{return hasRecords;}}
return false;},isNew:function(id){var data=this.localData[id];if(data.type!=="record"){return false;}
var res_id=data.res_id;if(typeof res_id==='number'){return false;}else if(typeof res_id==='string'&&/^[0-9]+-/.test(res_id)){return false;}
return true;},__load:async function(params){await this._super(...arguments);params.type=params.type||(params.res_id!==undefined?'record':'list');params.viewType=params.viewType||'default';if(!params.fieldsInfo){var fieldsInfo={};for(var fieldName in params.fieldNames){fieldsInfo[params.fieldNames[fieldName]]={};}
params.fieldsInfo={};params.fieldsInfo[params.viewType]=fieldsInfo;}
if(params.type==='record'&&params.res_id===undefined){params.allowWarning=true;return this._makeDefaultRecord(params.modelName,params);}
var dataPoint=this._makeDataPoint(params);return this._load(dataPoint).then(function(){return dataPoint.id;});},localIdsToResIds:function(localIds){return localIds.map(localId=>this.localData[localId].res_id);},makeRecord:function(model,fields,fieldInfo){var self=this;var defs=[];var record_fields={};_.each(fields,function(field){record_fields[field.name]=_.pick(field,'type','relation','domain','selection');});fieldInfo=fieldInfo||{};var fieldsInfo={};fieldsInfo.default={};_.each(fields,function(field){fieldsInfo.default[field.name]=fieldInfo[field.name]||{};});var record=this._makeDataPoint({modelName:model,fields:record_fields,fieldsInfo:fieldsInfo,viewType:'default',});_.each(fields,function(field){var dataPoint;record.data[field.name]=null;if(field.type==='many2one'){if(field.value){var id=_.isArray(field.value)?field.value[0]:field.value;var display_name=_.isArray(field.value)?field.value[1]:undefined;dataPoint=self._makeDataPoint({modelName:field.relation,data:{id:id,display_name:display_name,},parentID:record.id,});record.data[field.name]=dataPoint.id;if(display_name===undefined){defs.push(self._fetchNameGet(dataPoint));}}}else if(field.type==='reference'&&field.value){const ref=field.value.split(',');dataPoint=self._makeDataPoint({context:record.context,data:{id:parseInt(ref[1],10)},modelName:ref[0],parentID:record.id,});defs.push(self._fetchNameGet(dataPoint));record.data[field.name]=dataPoint.id;}else if(field.type==='one2many'||field.type==='many2many'){var relatedFieldsInfo={};relatedFieldsInfo.default={};_.each(field.fields,function(field){relatedFieldsInfo.default[field.name]={};});var dpParams={fieldsInfo:relatedFieldsInfo,modelName:field.relation,parentID:record.id,static:true,type:'list',viewType:'default',};var needLoad=false;if(field.value&&field.value.length){if(_.isObject(field.value[0])){dpParams.res_ids=_.pluck(field.value,'id');dataPoint=self._makeDataPoint(dpParams);_.each(field.value,function(data){var recordDP=self._makeDataPoint({data:data,modelName:field.relation,parentID:dataPoint.id,type:'record',});dataPoint.data.push(recordDP.id);dataPoint._cache[recordDP.res_id]=recordDP.id;});}else{dpParams.res_ids=field.value;dataPoint=self._makeDataPoint(dpParams);needLoad=true;}}else{dpParams.res_ids=[];dataPoint=self._makeDataPoint(dpParams);}
if(needLoad){defs.push(self._load(dataPoint));}
record.data[field.name]=dataPoint.id;}else if(field.value){record.data[field.name]=field.value;}});return Promise.all(defs).then(function(){return record.id;});},notifyChanges:function(record_id,changes,options){const notifyChanges=()=>this._applyChange(record_id,changes,options);if(this.bypassMutex){return notifyChanges();}
return this.mutex.exec(notifyChanges);},__reload:async function(id,options){await this._super(...arguments);return this.mutex.exec(this._reload.bind(this,id,options));},removeLine:function(elementID){var record=this.localData[elementID];var parent=this.localData[record.parentID];if(parent.static){parent._changes=_.filter(parent._changes,function(change){if(change.id===elementID&&change.operation==='ADD'&&parent.tempLimitIncrement){parent.tempLimitIncrement--;parent.limit--;}
return change.id!==elementID;});}else{parent.data=_.without(parent.data,elementID);parent.count--;}},resequence:function(modelName,resIDs,parentID,options){options=options||{};if((resIDs.length<=1)){return Promise.resolve(parentID);}
var self=this;var data=this.localData[parentID];var params={model:modelName,ids:resIDs,context:data.getContext(),};if(options.offset){params.offset=options.offset;}
if(options.field){params.field=options.field;}
return this._rpc({route:'/web/dataset/resequence',params:params,}).then(function(wasResequenced){if(!wasResequenced){return Promise.resolve();}
var field=params.field?params.field:'sequence';return self._rpc({model:modelName,method:'read',args:[resIDs,[field]],context:data.getContext(),}).then(function(records){if(data.data.length){var dataType=self.localData[data.data[0]].type;if(dataType==='record'){_.each(data.data,function(dataPoint){var recordData=self.localData[dataPoint].data;var inRecords=_.findWhere(records,{id:recordData.id});if(inRecords){recordData[field]=inRecords[field];}});data.data=_.sortBy(data.data,function(d){return self.localData[d].data[field];});}
if(dataType==='list'){data.data=_.sortBy(data.data,function(d){return _.indexOf(resIDs,self.localData[d].res_id)});}}
data.res_ids=[];_.each(data.data,function(d){var dataPoint=self.localData[d];if(dataPoint.type==='record'){data.res_ids.push(dataPoint.res_id);}else{data.res_ids=data.res_ids.concat(dataPoint.res_ids);}});self._updateParentResIDs(data);return parentID;})});},save:function(recordID,options){var self=this;function _save(){options=options||{};var record=self.localData[recordID];if(options.savePoint){self._visitChildren(record,function(rec){var newValue=rec._changes||rec.data;if(newValue instanceof Array){rec._savePoint=newValue.slice(0);}else{rec._savePoint=_.extend({},newValue);}});for(let fieldName in(record._changes||{})){record._editionViewType[fieldName]=options.viewType;}}
var shouldReload='reload'in options?options.reload:true;var method=self.isNew(recordID)?'create':'write';if(record._changes){delete record._changes.id;}
var changes=self._generateChanges(record,{viewType:options.viewType,changesOnly:method!=='create'});delete changes.id;if(method==='create'){var fieldNames=record.getFieldNames();_.each(fieldNames,function(name){if(changes[name]===null){delete changes[name];}});}
var prom=new Promise(function(resolve,reject){var changedFields=Object.keys(changes);if(options.savePoint){resolve(changedFields);return;}
if(method==='create'||changedFields.length){if(record.saveInProgress){return;}
record.saveInProgress=true;var args=method==='write'?[[record.data.id],changes]:[changes];self._rpc({model:record.model,method:method,args:args,context:record.getContext(),}).then(function(id){if(method==='create'){record.res_id=id;record.data.id=id;record.offset=record.res_ids.length;record.res_ids.push(id);record.count++;}
var _changes=record._changes;record._changes={};var data=Object.assign({},record.data,record._changes);for(var fieldName in record.fields){var type=record.fields[fieldName].type;if(type==='many2many'||type==='one2many'){if(data[fieldName]){self.localData[data[fieldName]]._changes=[];}}}
self._invalidateCache(record);self.unfreezeOrder(record.id);record.saveInProgress=false;if(shouldReload){self._fetchRecord(record).then(function(){resolve(changedFields);});}else{_.extend(record.data,_changes);record._changes={};for(const fieldName in record.fields){if(['many2many','one2many'].includes(record.fields[fieldName].type)&&record.data[fieldName]){self.localData[record.data[fieldName]]._changes=[];}}
resolve(changedFields);}}).guardedCatch((...args)=>{record.saveInProgress=false;reject(...args)});}else{resolve(changedFields);}});prom.then(function(){self._updateDuplicateRecords(record.id,(id)=>{Object.assign(self.localData[id].data,record.data);});record._isDirty=false;});return prom;}
if(this.bypassMutex){return _save();}else{return this.mutex.exec(_save);}},setDirty:function(id){this.localData[id]._isDirty=true;},setSort:function(list_id,fieldName){var list=this.localData[list_id];if(list.type==='record'){return;}else if(list._changes){_.each(list._changes,function(change){delete change.isNew;});}
if(list.orderedBy.length===0){list.orderedBy.push({name:fieldName,asc:true});}else if(list.orderedBy[0].name===fieldName){if(!list.orderedResIDs){list.orderedBy[0].asc=!list.orderedBy[0].asc;}}else{var orderedBy=_.reject(list.orderedBy,function(o){return o.name===fieldName;});list.orderedBy=[{name:fieldName,asc:true}].concat(orderedBy);}
list.orderedResIDs=null;if(list.static){return this._fetchUngroupedList(list);}
return Promise.resolve();},getActiveField:function(record){const fields=Object.keys(record.fields);const has_active=fields.includes('active');if(has_active){return'active';}
const has_x_active=fields.includes('x_active');return has_x_active?'x_active':undefined},toggleActive:function(recordIDs,parentID){var self=this;var parent=this.localData[parentID];var resIDs=_.map(recordIDs,function(recordID){return self.localData[recordID].res_id;});return this._rpc({model:parent.model,method:'toggle_active',args:[resIDs],}).then(function(action){self._invalidateCache(parent);if(!_.isEmpty(action)){return self.do_action(action,{on_close:function(){return self.trigger_up('reload');}});}else{return self.reload(parentID);}});},actionArchive:function(resIDs,parentID){var self=this;var parent=this.localData[parentID];return this._rpc({model:parent.model,method:'action_archive',args:[resIDs],}).then(function(action){self._invalidateCache(parent);if(!_.isEmpty(action)){return new Promise(function(resolve,reject){self.do_action(action,{on_close:function(result){return self.trigger_up('reload',{onSuccess:resolve,});}});});}else{return self.reload(parentID);}}).then(function(datapoint){if(parent&&parent.type==='list'&&!parent.data.length&&parent.offset>0){parent.offset=Math.max(parent.offset-parent.limit,0);return self.reload(parentID);}
return datapoint;});},actionUnarchive:function(resIDs,parentID){var self=this;var parent=this.localData[parentID];return this._rpc({model:parent.model,method:'action_unarchive',args:[resIDs],}).then(function(action){self._invalidateCache(parent);if(!_.isEmpty(action)){return new Promise(function(resolve,reject){self.do_action(action,{on_close:function(){return self.trigger_up('reload',{onSuccess:resolve,});}});});}else{return self.reload(parentID);}}).then(function(datapoint){if(parent&&parent.type==='list'&&!parent.data.length&&parent.offset>0){parent.offset=Math.max(parent.offset-parent.limit,0);return self.reload(parentID);}
return datapoint;});},toggleGroup:function(groupId){var self=this;var group=this.localData[groupId];if(group.isOpen){group.isOpen=false;group.data=[];group.res_ids=[];group.offset=0;this._updateParentResIDs(group);return Promise.resolve(groupId);}
if(!group.isOpen){group.isOpen=true;var def;if(group.count>0){def=this._load(group).then(function(){self._updateParentResIDs(group);});}
return Promise.resolve(def).then(function(){return groupId;});}},unfreezeOrder:function(elementID){var list=this.localData[elementID];if(list.type==='record'){var data=_.extend({},list.data,list._changes);for(var fieldName in data){var field=list.fields[fieldName];if(!field||!data[fieldName]){continue;}
if(field.type==='one2many'||field.type==='many2many'){var recordlist=this.localData[data[fieldName]];recordlist.orderedResIDs=null;for(var index in recordlist.data){this.unfreezeOrder(recordlist.data[index]);}}}
return;}
list.orderedResIDs=null;this._sortList(list);},_addX2ManyDefaultRecord:function(list,options){var self=this;var position=options&&options.position||'top';var params={fields:list.fields,fieldsInfo:list.fieldsInfo,parentID:list.id,position:position,viewType:options.viewType||list.viewType,allowWarning:options&&options.allowWarning};var additionalContexts=options&&options.context;var makeDefaultRecords=[];if(additionalContexts){_.each(additionalContexts,function(context){params.context=self._getContext(list,{additionalContext:context,full:true,sanitize_default_values:true});makeDefaultRecords.push(self._makeDefaultRecord(list.model,params));});}else{params.context=self._getContext(list,{sanitize_default_values:true});makeDefaultRecords.push(self._makeDefaultRecord(list.model,params));}
return Promise.all(makeDefaultRecords).then(function(resultIds){var ids=[];_.each(resultIds,function(id){ids.push(id);list._changes.push({operation:'ADD',id:id,position:position,isNew:true});var record=self.localData[id];list._cache[record.res_id]=id;if(list.orderedResIDs){var index=list.offset+(position!=='top'?list.limit:0);list.orderedResIDs.splice(index,0,record.res_id);self.localData[list.id].orderedResIDs=list.orderedResIDs;}});return ids;});},_applyChange:function(recordID,changes,options){var self=this;var record=this.localData[recordID];var field;var defs=[];options=options||{};record._changes=record._changes||{};if(!options.doNotSetDirty){record._isDirty=true;}
var initialData={};this._visitChildren(record,function(elem){initialData[elem.id]=$.extend(true,{},_.pick(elem,'data','_changes'));});for(var fieldName in changes){field=record.fields[fieldName];if(field&&(field.type==='one2many'||field.type==='many2many')){defs.push(this._applyX2ManyChange(record,fieldName,changes[fieldName],options));}else if(field&&(field.type==='many2one'||field.type==='reference')){defs.push(this._applyX2OneChange(record,fieldName,changes[fieldName],options));}else{record._changes[fieldName]=changes[fieldName];}}
if(options.notifyChange===false){return Promise.all(defs).then(function(){return Promise.resolve(_.keys(changes));});}
return Promise.all(defs).then(function(){var onChangeFields=[];for(var fieldName in changes){field=record.fields[fieldName];if(field&&field.onChange){var isX2Many=field.type==='one2many'||field.type==='many2many';if(!isX2Many||(self._isX2ManyValid(record._changes[fieldName]||record.data[fieldName]))){onChangeFields.push(fieldName);}}}
return new Promise(function(resolve,reject){if(onChangeFields.length){self._performOnChange(record,onChangeFields,{viewType:options.viewType}).then(function(result){delete record._warning;resolve(_.keys(changes).concat(Object.keys(result&&result.value||{})));}).guardedCatch(function(){self._visitChildren(record,function(elem){_.extend(elem,initialData[elem.id]);});reject();});}else{resolve(_.keys(changes));}}).then(function(fieldNames){return self._fetchSpecialData(record).then(function(fieldNames2){return _.union(fieldNames,fieldNames2);});});});},_applyX2OneChange:async function(record,fieldName,data,options){options=options||{};var self=this;if(!data||(!data.id&&!data.display_name)){record._changes[fieldName]=false;return Promise.resolve();}
const field=record.fields[fieldName];const coModel=field.type==='reference'?data.model:field.relation;const allowedTypes=['many2one','reference'];if(allowedTypes.includes(field.type)&&!data.id&&data.display_name){const result=await this._rpc({model:coModel,method:'name_create',args:[data.display_name],context:this._getContext(record,{fieldName:fieldName,viewType:options.viewType}),});if(!result){record._changes[fieldName]=false;return Promise.resolve();}
data={id:result[0],display_name:result[1]};}
var relatedID;if(record._changes&&fieldName in record._changes){relatedID=record._changes[fieldName];}else{relatedID=record.data[fieldName];}
var relatedRecord=this.localData[relatedID];if(relatedRecord&&(data.id===this.localData[relatedID].res_id)){return Promise.resolve();}
var rel_data=_.pick(data,'id','display_name');const viewType=options.viewType||record.viewType;const fieldInfo=record.fieldsInfo[viewType][fieldName]||{};const fieldOptions=fieldInfo.options||{};var def;if(rel_data.display_name===undefined||fieldOptions.always_reload){def=this._rpc({model:coModel,method:'name_get',args:[data.id],context:this._getContext(record,{fieldName,viewType}),}).then(function(result){rel_data.display_name=result[0][1];});}
return Promise.resolve(def).then(function(){var rec=self._makeDataPoint({context:record.context,data:rel_data,fields:{},fieldsInfo:{},modelName:coModel,parentID:record.id,});record._changes[fieldName]=rec.id;});},_applyOnChange:function(values,record,options={}){var self=this;var defs=[];var rec;const viewType=options.viewType||record.viewType;record._changes=record._changes||{};for(let name in(values||{})){const val=values[name];var field=record.fields[name];if(!field){record._rawChanges[name]=val;continue;}
if(record._rawChanges[name]){delete record._rawChanges[name];}
var oldValue=name in record._changes?record._changes[name]:record.data[name];var id;if(field.type==='many2one'){id=false;if(val){var data=_.isArray(val)?{id:val[0],display_name:val[1]}:{id:val};if(!oldValue||(self.localData[oldValue].res_id!==data.id)){rec=self._makeDataPoint({context:record.context,data:data,modelName:field.relation,parentID:record.id,});id=rec.id;record._changes[name]=id;}}else if(oldValue!==false){record._changes[name]=false;}}else if(field.type==='reference'){id=false;if(val){var ref=val.split(',');var modelName=ref[0];var resID=parseInt(ref[1]);if(!oldValue||self.localData[oldValue].res_id!==resID||self.localData[oldValue].model!==modelName){rec=self._makeDataPoint({context:record.context,data:{id:parseInt(ref[1])},modelName:modelName,parentID:record.id,});defs.push(self._fetchNameGet(rec));id=rec.id;record._changes[name]=id;}}else{record._changes[name]=id;}}else if(field.type==='one2many'||field.type==='many2many'){var listId=record._changes[name]||record.data[name];var list;if(listId){list=self.localData[listId];}else{var fieldInfo=record.fieldsInfo[viewType][name];if(!fieldInfo){continue;}
var view=fieldInfo.views&&fieldInfo.views[fieldInfo.mode];list=self._makeDataPoint({fields:view?view.fields:fieldInfo.relatedFields,fieldsInfo:view?view.fieldsInfo:fieldInfo.fieldsInfo,limit:fieldInfo.limit,modelName:field.relation,parentID:record.id,static:true,type:'list',viewType:view?view.type:fieldInfo.viewType,});}
record._changes[name]=list.id;list._changes=list._changes||[];var oldChanges=list._changes;_.each(val,function(command){var rec,recID;if(command[0]===0||command[0]===1){if(command[0]===0&&command[1]){var previousChange=_.find(oldChanges,function(operation){var child=self.localData[operation.id];return child&&(child.ref===command[1]);});recID=previousChange&&previousChange.id;rec=self.localData[recID];}
if(command[0]===1&&command[1]){rec=self.localData[list._cache[command[1]]];}
if(!rec){var params={context:list.context,fields:list.fields,fieldsInfo:list.fieldsInfo,modelName:list.model,parentID:list.id,viewType:list.viewType,ref:command[1],};if(command[0]===1){params.res_id=command[1];}
rec=self._makeDataPoint(params);list._cache[rec.res_id]=rec.id;if(options.firstOnChange){rec.getFieldNames().forEach(fieldName=>{if(!(fieldName in rec.data)){rec.data[fieldName]=null;}});}}
rec._noAbandon=!list._savePoint;list._changes.push({operation:'ADD',id:rec.id});if(command[0]===1){list._changes.push({operation:'UPDATE',id:rec.id});}
defs.push(self._applyOnChange(command[2],rec,{firstOnChange:options.firstOnChange,}));}else if(command[0]===4){linkRecord(list,command[1]);}else if(command[0]===5){list._changes=[{operation:'REMOVE_ALL'}];}else if(command[0]===6){list._changes=[{operation:'REMOVE_ALL'}];_.each(command[2],function(resID){linkRecord(list,resID);});}});var def=self._readUngroupedList(list).then(function(list){var x2ManysDef=self._fetchX2ManysBatched(list);var referencesDef=self._fetchReferencesBatched(list);return Promise.all([x2ManysDef,referencesDef]);});defs.push(def);}else{var newValue=self._parseServerValue(field,val);if(newValue!==oldValue){record._changes[name]=newValue;}}}
return Promise.all(defs);function linkRecord(list,resID){rec=self.localData[list._cache[resID]];if(rec){self.discardChanges(rec.id);}
list._changes.push({operation:'ADD',id:rec?rec.id:null,resID:resID,});}},_applyX2ManyChange:async function(record,fieldName,command,options){if(command.operation==='TRIGGER_ONCHANGE'){return Promise.resolve();}
var self=this;var localID=(record._changes&&record._changes[fieldName])||record.data[fieldName];var list=this.localData[localID];var field=record.fields[fieldName];var viewType=(options&&options.viewType)||record.viewType;var fieldInfo=record.fieldsInfo[viewType][fieldName];var view=fieldInfo.views&&fieldInfo.views[fieldInfo.mode];var def,rec;var defs=[];list._changes=list._changes||[];switch(command.operation){case'ADD':var newRecord=this.localData[command.id];_.defaults(list.fields,newRecord.fields);_.defaults(list.fieldsInfo,newRecord.fieldsInfo);newRecord.fields=list.fields;newRecord.fieldsInfo=list.fieldsInfo;newRecord.viewType=list.viewType;list._cache[newRecord.res_id]=newRecord.id;list._changes.push(command);break;case'ADD_M2M':list._forceM2MLink=true;var data=_.isArray(command.ids)?command.ids:[command.ids];for(const r of data){if(!r.id&&r.display_name){const prom=this._rpc({model:field.relation,method:'name_create',args:[r.display_name],context:this._getContext(record,{fieldName:fieldName,viewType:options.viewType}),}).then(result=>{r.id=result[0];r.display_name=result[1];});defs.push(prom);}}
await Promise.all(defs);if(data.length+list.res_ids.length>list.limit){list.limit=data.length+list.res_ids.length;}
var list_records={};_.each(data,function(d){rec=self._makeDataPoint({context:record.context,modelName:field.relation,fields:view?view.fields:fieldInfo.relatedFields,fieldsInfo:view?view.fieldsInfo:fieldInfo.fieldsInfo,res_id:d.id,data:d,viewType:view?view.type:fieldInfo.viewType,parentID:list.id,});list_records[d.id]=rec;list._cache[rec.res_id]=rec.id;list._changes.push({operation:'ADD',id:rec.id});});var fieldNames=list.getFieldNames();if(fieldNames.length){def=this._rpc({model:list.model,method:'read',args:[_.pluck(data,'id'),fieldNames],context:_.extend({},record.context,field.context,list.getContext()),}).then(function(records){_.each(records,function(record){list_records[record.id].data=record;self._parseServerData(fieldNames,list,record);});return Promise.all([self._fetchX2ManysBatched(list),self._fetchReferencesBatched(list)]);});defs.push(def);}
break;case'CREATE':var createOptions=_.extend({context:command.context,position:command.position},options||{});createOptions.viewType=fieldInfo.mode;def=this._addX2ManyDefaultRecord(list,createOptions).then(function(ids){_.each(ids,function(id){if(command.position==='bottom'&&list.orderedResIDs&&list.orderedResIDs.length>=list.limit){list.tempLimitIncrement=(list.tempLimitIncrement||0)+1;list.limit+=1;}
if(command.data){return self._applyChange(id,command.data);}});});defs.push(def);break;case'UPDATE':list._changes.push({operation:'UPDATE',id:command.id});if(command.data){defs.push(this._applyChange(command.id,command.data,{viewType:view&&view.type,}));}
break;case'FORGET':list._forceM2MUnlink=true;case'DELETE':var idsToRemove=command.ids;list._changes=_.reject(list._changes,function(change,index){var idInCommands=_.contains(command.ids,change.id);if(idInCommands&&change.operation==='ADD'){idsToRemove=_.without(idsToRemove,change.id);}
return idInCommands;});_.each(idsToRemove,function(id){var operation=list._forceM2MUnlink?'FORGET':'DELETE';list._changes.push({operation:operation,id:id});});break;case'DELETE_ALL':list._changes=_.reject(list._changes,function(change){return change.operation==='ADD';});return this._applyX2ManyChange(record,fieldName,{operation:'DELETE',ids:list.res_ids},options);case'REPLACE_WITH':list._changes=[];var newIds=_.difference(command.ids,list.res_ids);var removedIds=_.difference(list.res_ids,command.ids);var addDef,removedDef,values;if(newIds.length){values=_.map(newIds,function(id){return{id:id};});addDef=this._applyX2ManyChange(record,fieldName,{operation:'ADD_M2M',ids:values},options);}
if(removedIds.length){var listData=_.map(list.data,function(localId){return self.localData[localId];});removedDef=this._applyX2ManyChange(record,fieldName,{operation:'DELETE',ids:_.map(removedIds,function(resID){if(resID in list._cache){return list._cache[resID];}
return _.findWhere(listData,{res_id:resID}).id;}),},options);}
return Promise.all([addDef,removedDef]);case'MULTI':_.each(command.commands,function(innerCommand){defs.push(self._applyX2ManyChange(record,fieldName,innerCommand,options));});break;}
return Promise.all(defs).then(function(){return self._readUngroupedList(list).then(function(){return self._fetchX2ManysBatched(list);});});},_applyX2ManyOperations:function(list,options){if(!list.static){return list;}
var self=this;list=Object.assign({},list);list.res_ids=list.res_ids.slice(0);var changes=list._changes||[];if(options){var to=options.to===0?0:(options.to||changes.length);changes=changes.slice(options.from||0,to);}
_.each(changes,function(change){var relRecord;if(change.id){relRecord=self.localData[change.id];}
switch(change.operation){case'ADD':list.count++;var resID=relRecord?relRecord.res_id:change.resID;if(change.position==='top'&&(options?options.position!=='bottom':true)){list.res_ids.unshift(resID);}else{list.res_ids.push(resID);}
break;case'FORGET':case'DELETE':list.count--;var deletedResID=relRecord?relRecord.res_id:change.id;list.res_ids=_.without(list.res_ids,deletedResID);break;case'REMOVE_ALL':list.count=0;list.res_ids=[];break;case'UPDATE':break;}});this._setDataInRange(list);return list;},_buildOnchangeSpecs:function(record,viewType){let hasOnchange=false;const onchangeSpec={};var fieldsInfo=record.fieldsInfo[viewType||record.viewType];generateSpecs(fieldsInfo,record.fields);function generateSpecs(fieldsInfo,fields,prefix){prefix=prefix||'';_.each(Object.keys(fieldsInfo),function(name){var field=fields[name];var fieldInfo=fieldsInfo[name];var key=prefix+name;onchangeSpec[key]=(field.onChange)||"";if(field.onChange){hasOnchange=true;}
if(field.type==='one2many'||field.type==='many2many'){_.each(fieldInfo.views,function(view){generateSpecs(view.fieldsInfo[view.type],view.fields,key+'.');});}});}
return{hasOnchange,onchangeSpec};},async _callSampleModel(){await this._super(...arguments);if(this._isInSampleMode){this.__id=this.sampleModel.__id;}},_computeOverrideDefaultFields:function(listID,position){var list=this.localData[listID];var handleField;if(!list){return{};}
position=position||'bottom';if(!list.fieldsInfo){return{};}
for(var field in list.fieldsInfo.list){if(list.fieldsInfo.list[field].widget==='handle'){handleField=field;break;}}
if(!handleField){return{};}
var isOrderedByHandle=list.orderedBy&&list.orderedBy.length&&list.orderedBy[0].asc===true&&list.orderedBy[0].name===handleField;if(!isOrderedByHandle){return{};}
var computedList=this.get(list.id,{raw:true});if(!computedList||!computedList.data||!computedList.data.length){return{};}
var index=Math.min(computedList.data.length-1,position!=='top'?list.limit-1:0);var handleFieldValue=computedList.data[index].data[handleField];if(position==='top'){handleFieldValue--;}else if(list.count<=list.offset+list.limit-(list.tempLimitIncrement||0)){handleFieldValue++;}
return{field:handleField,value:handleFieldValue,};},_evalModifiers:function(element,modifiers){let evalContext=null;const evaluated={};for(const k of['invisible','column_invisible','readonly','required']){const mod=modifiers[k];if(mod===undefined||mod===false||mod===true){if(k in modifiers){evaluated[k]=!!mod;}
continue;}
try{evalContext=evalContext||this._getEvalContext(element);evaluated[k]=new Domain(mod,evalContext).compute(evalContext);}catch(e){throw new Error(_.str.sprintf('for modifier "%s": %s',k,e.message));}}
return evaluated;},_fetchModelFieldReference:async function(record,fieldName,fieldInfo){const modelField=fieldInfo.options.model_field;const value=record._changes&&record._changes[modelField]||record.data[modelField];if(value){if(record.fields[modelField].type!=="many2one"||record.fields[modelField].relation!=='ir.model'){throw new Error(`The model_field of the reference field
                                 ${fieldName} must be a many2one('ir.model').`);}
const modelId=this.localData[value].res_id;const resourceRef=record.specialData[fieldName];if(resourceRef&&modelId===resourceRef.modelId){resourceRef.hasChanged=false;return Promise.resolve(resourceRef);}else{const result=await this._rpc({model:'ir.model',method:'read',args:[modelId,['id','model']],});if(!record._changes&&record.data[fieldName]&&result[0].model!==this.localData[record.data[fieldName]].model){const modelFieldName=record.fields[modelField].string;const referenceFieldName=record.fields[fieldName].string;this.displayNotification({title:_.str.sprintf(_t(`'%s' is unsynchronized with '%s'.`),referenceFieldName,modelFieldName,),message:_.str.sprintf(_t(`If you change %s or %s, the synchronization will be reapplied and the data will be modified.`),modelFieldName,referenceFieldName,),sticky:true,type:'danger',});return false;}
return{modelName:result[0].model,modelId:result[0].id,hasChanged:true,};}}},_fetchNameGet:function(dataPoint){return this._rpc({model:dataPoint.model,method:'name_get',args:[dataPoint.res_id],context:dataPoint.getContext(),}).then(function(result){dataPoint.data.display_name=result[0][1];});},_fetchNameGets:function(list,fieldName){var self=this;var model=list.fields[fieldName].relation;var records=[];var ids=[];list=this._applyX2ManyOperations(list);_.each(list.data,function(localId){var record=self.localData[localId];var data=record._changes||record.data;var many2oneId=data[fieldName];if(!many2oneId){return;}
var many2oneRecord=self.localData[many2oneId];records.push(many2oneRecord);ids.push(many2oneRecord.res_id);model=many2oneRecord.model;});if(!ids.length){return Promise.resolve();}
return this._rpc({model:model,method:'name_get',args:[_.uniq(ids)],context:list.context,}).then(function(name_gets){_.each(records,function(record){var nameGet=_.find(name_gets,function(nameGet){return nameGet[0]===record.data.id;});record.data.display_name=nameGet[1];});});},_fetchRecord:function(record,options){var self=this;options=options||{};var fieldNames=options.fieldNames||record.getFieldNames(options);fieldNames=_.uniq(fieldNames.concat(['display_name']));return this._rpc({model:record.model,method:'read',args:[[record.res_id],fieldNames],context:_.extend({bin_size:true},record.getContext()),}).then(function(result){if(result.length===0){return Promise.reject();}
result=result[0];record.data=_.extend({},record.data,result);}).then(function(){self._parseServerData(fieldNames,record,record.data);}).then(function(){return Promise.all([self._fetchX2Manys(record,options),self._fetchReferences(record,options)]).then(function(){return self._postprocess(record,options);});});},_fetchReference:function(record,fieldName){var self=this;var def;var value=record._changes&&record._changes[fieldName]||record.data[fieldName];var model=value&&value.split(',')[0];var resID=value&&parseInt(value.split(',')[1]);if(model&&model!=='False'&&resID){def=self._rpc({model:model,method:'name_get',args:[resID],context:record.getContext({fieldName:fieldName}),}).then(function(result){return self._makeDataPoint({data:{id:result[0][0],display_name:result[0][1],},modelName:model,parentID:record.id,});});}
return Promise.resolve(def);},_fetchReferenceData:function(datapoints,model,fieldName){var self=this;var ids=_.map(Object.keys(datapoints),function(id){return parseInt(id);});var parent=datapoints[ids[0]][0];var def=self._rpc({model:model,method:'name_get',args:[ids],context:self.localData[parent].getContext({fieldName:fieldName}),}).then(function(result){_.each(result,function(el){var parentIDs=datapoints[el[0]];_.each(parentIDs,function(parentID){var parent=self.localData[parentID];var referenceDp=self._makeDataPoint({data:{id:el[0],display_name:el[1],},modelName:model,parentID:parent.id,});parent.data[fieldName]=referenceDp.id;});});});return def;},_fetchReferences:function(record,options){var self=this;var defs=[];var fieldNames=options&&options.fieldNames||record.getFieldNames();_.each(fieldNames,function(fieldName){var field=record.fields[fieldName];if(field.type==='reference'){var def=self._fetchReference(record,fieldName).then(function(dataPoint){if(dataPoint){record.data[fieldName]=dataPoint.id;}});defs.push(def);}});return Promise.all(defs);},_fetchReferenceBatched:function(list,fieldName){var self=this;list=this._applyX2ManyOperations(list);this._sortList(list);var toFetch=this._getDataToFetchByModel(list,fieldName);var defs=[];_.each(toFetch,function(datapoints,model){defs.push(self._fetchReferenceData(datapoints,model,fieldName));});return Promise.all(defs);},_fetchReferencesBatched:function(list){var defs=[];var fieldNames=list.getFieldNames();for(var i=0;i<fieldNames.length;i++){var field=list.fields[fieldNames[i]];if(field.type==='reference'){defs.push(this._fetchReferenceBatched(list,fieldNames[i]));}}
return Promise.all(defs);},_fetchReferenceSingleBatch:function(list,fieldName){var self=this;var toFetch={};_.each(list.data,function(groupIndex){var group=self.localData[groupIndex];self._getDataToFetchByModel(group,fieldName,toFetch);});var defs=[];_.each(toFetch,function(datapoints,model){defs.push(self._fetchReferenceData(datapoints,model,fieldName));});return Promise.all(defs);},_fetchReferencesSingleBatch:function(list){var defs=[];var fieldNames=list.getFieldNames();for(var fIndex in fieldNames){var field=list.fields[fieldNames[fIndex]];if(field.type==='reference'){defs.push(this._fetchReferenceSingleBatch(list,fieldNames[fIndex]));}}
return Promise.all(defs);},_fetchRelatedData:function(list,toFetch,fieldName){var self=this;var ids=_.keys(toFetch);for(var i=0;i<ids.length;i++){ids[i]=Number(ids[i]);}
var fieldInfo=list.fieldsInfo[list.viewType][fieldName];if(!ids.length||fieldInfo.__no_fetch){return Promise.resolve();}
var def;var fieldNames=_.keys(fieldInfo.relatedFields);if(fieldNames.length){var field=list.fields[fieldName];def=this._rpc({model:field.relation,method:'read',args:[ids,fieldNames],context:list.getContext()||{},});}else{def=Promise.resolve(_.map(ids,function(id){return{id:id};}));}
return def.then(function(result){var records=_.uniq(_.flatten(_.values(toFetch)));self._updateRecordsData(records,fieldName,result);});},_fetchSpecialData:function(record,options){var self=this;var specialFieldNames=[];var fieldNames=(options&&options.fieldNames)||record.getFieldNames();return Promise.all(_.map(fieldNames,function(name){var viewType=(options&&options.viewType)||record.viewType;var fieldInfo=record.fieldsInfo[viewType][name]||{};let specialData;if("specialData"in fieldInfo){specialData=fieldInfo.specialData;}else if(fieldInfo.Widget){specialData=fieldInfo.Widget.prototype.specialData;}
if(specialData){return self[specialData](record,name,fieldInfo).then(function(data){if(data===undefined){return;}
record.specialData[name]=data;specialFieldNames.push(name);});}})).then(function(){return specialFieldNames;});},_fetchSpecialMany2ones:function(record,fieldName,fieldInfo,fieldsToRead){var field=record.fields[fieldName];if(field.type!=="many2one"){return Promise.resolve();}
var context=record.getContext({fieldName:fieldName});var domain=record.getDomain({fieldName:fieldName});if(domain.length){var localID=(record._changes&&fieldName in record._changes)?record._changes[fieldName]:record.data[fieldName];if(localID){var element=this.localData[localID];domain=["|",["id","=",element.data.id]].concat(domain);}}
var hasChanged=this._saveSpecialDataCache(record,fieldName,{context:context,domain:domain,});if(!hasChanged){return Promise.resolve();}
return this._rpc({model:field.relation,method:'search_read',fields:["display_name"].concat(fieldsToRead||[]),context:context,domain:domain,});},_fetchSpecialRelation:function(record,fieldName){var field=record.fields[fieldName];if(!_.contains(["many2one","many2many","one2many"],field.type)){return Promise.resolve();}
var context=record.getContext({fieldName:fieldName});var domain=record.getDomain({fieldName:fieldName});var hasChanged=this._saveSpecialDataCache(record,fieldName,{context:context,domain:domain,});if(!hasChanged){return Promise.resolve();}
return this._rpc({model:field.relation,method:'name_search',args:["",domain],context:context});},_fetchSpecialReference:function(record,fieldName,fieldInfo){var field=record.fields[fieldName];if(field.type==='char'){return Promise.resolve(this._fetchReference(record,fieldName));}else if(fieldInfo.options.model_field){return this._fetchModelFieldReference(record,fieldName,fieldInfo);}
return Promise.resolve();},_fetchSpecialStatus:function(record,fieldName,fieldInfo){var foldField=fieldInfo.options.fold_field;var fieldsToRead=foldField?[foldField]:[];return this._fetchSpecialMany2ones(record,fieldName,fieldInfo,fieldsToRead).then(function(m2os){_.each(m2os,function(m2o){m2o.fold=foldField?m2o[foldField]:false;});return m2os;});},_fetchUngroupedList:function(list,options){options=_.defaults(options||{},{enableRelationalFetch:true});var self=this;var def;if(list.static){def=this._readUngroupedList(list).then(function(){if(list.parentID&&self.isNew(list.parentID)){var many2ones=self._getMany2OneFieldNames(list);var defs=_.map(many2ones,function(name){return self._fetchNameGets(list,name);});return Promise.all(defs);}});}else{def=this._searchReadUngroupedList(list);}
return def.then(function(){if(options.enableRelationalFetch){return Promise.all([self._fetchX2ManysBatched(list),self._fetchReferencesBatched(list)]);}}).then(function(){return list;});},_fetchX2ManyBatched:function(list,fieldName){list=this._applyX2ManyOperations(list);this._sortList(list);var toFetch=this._getDataToFetch(list,fieldName);return this._fetchRelatedData(list,toFetch,fieldName);},_fetchX2Manys:function(record,options){var self=this;var defs=[];options=options||{};var fieldNames=options.fieldNames||record.getFieldNames(options);var viewType=options.viewType||record.viewType;_.each(fieldNames,function(fieldName){var field=record.fields[fieldName];if(field.type==='one2many'||field.type==='many2many'){var fieldInfo=record.fieldsInfo[viewType][fieldName];var rawContext=fieldInfo&&fieldInfo.context;var view=fieldInfo.views&&fieldInfo.views[fieldInfo.mode];var fieldsInfo=view?view.fieldsInfo:(fieldInfo.fieldsInfo||{});var ids=record.data[fieldName]||[];const recordContext={...record.context};for(const key in recordContext){if(key.startsWith("default_")||key.endsWith("_view_ref")){delete recordContext[key];}}
var list=self._makeDataPoint({count:ids.length,context:Object.assign({},recordContext,field.context),fieldsInfo:fieldsInfo,fields:view?view.fields:fieldInfo.relatedFields,limit:fieldInfo.limit,modelName:field.relation,res_ids:ids,static:true,type:'list',orderedBy:fieldInfo.orderedBy,parentID:record.id,rawContext:rawContext,relationField:field.relation_field,viewType:view?view.type:fieldInfo.viewType,});record.data[fieldName]=list.id;if(!fieldInfo.__no_fetch){var def=self._readUngroupedList(list).then(function(){return Promise.all([self._fetchX2ManysBatched(list),self._fetchReferencesBatched(list)]);});defs.push(def);}}});return Promise.all(defs);},_fetchX2ManysBatched:function(list){var defs=[];var fieldNames=list.getFieldNames();for(var i=0;i<fieldNames.length;i++){var field=list.fields[fieldNames[i]];if(field.type==='many2many'||field.type==='one2many'){defs.push(this._fetchX2ManyBatched(list,fieldNames[i]));}}
return Promise.all(defs);},_fetchX2ManySingleBatch:function(list,fieldName){var self=this;var toFetch={};_.each(list.data,function(groupIndex){var group=self.localData[groupIndex];var nextDataToFetch=self._getDataToFetch(group,fieldName);_.each(_.keys(nextDataToFetch),function(id){if(toFetch[id]){toFetch[id]=toFetch[id].concat(nextDataToFetch[id]);}else{toFetch[id]=nextDataToFetch[id];}});});return self._fetchRelatedData(list,toFetch,fieldName);},_fetchX2ManysSingleBatch:function(list){var defs=[];var fieldNames=list.getFieldNames();for(var i=0;i<fieldNames.length;i++){var field=list.fields[fieldNames[i]];if(field.type==='many2many'||field.type==='one2many'){defs.push(this._fetchX2ManySingleBatch(list,fieldNames[i]));}}
return Promise.all(defs);},_generateChanges:function(record,options){options=options||{};var viewType=options.viewType||record.viewType;var changes;const changesOnly='changesOnly'in options?!!options.changesOnly:true;if(!changesOnly){changes=_.extend({},record.data,record._changes);}else{changes=_.extend({},record._changes);}
var withReadonly=options.withReadonly||false;var commands=this._generateX2ManyCommands(record,{changesOnly:changesOnly,withReadonly:withReadonly,});for(var fieldName in record.fields){if(!withReadonly&&fieldName in changes||fieldName in commands){var editionViewType=record._editionViewType[fieldName]||viewType;if(this._isFieldProtected(record,fieldName,editionViewType)){delete changes[fieldName];continue;}}
var type=record.fields[fieldName].type;var value;if(type==='one2many'||type==='many2many'){if(!changesOnly||(commands[fieldName]&&commands[fieldName].length)){changes[fieldName]=commands[fieldName];}else{delete changes[fieldName];}}else if(type==='many2one'&&fieldName in changes){value=changes[fieldName];changes[fieldName]=value?this.localData[value].res_id:false;}else if(type==='reference'&&fieldName in changes){value=changes[fieldName];changes[fieldName]=value?this.localData[value].model+','+this.localData[value].res_id:false;}else if(type==='char'&&changes[fieldName]===''){changes[fieldName]=false;}else if(changes[fieldName]===null){changes[fieldName]=false;}}
return changes;},_generateOnChangeData:function(record,options){options=_.extend({},options||{},{withReadonly:true});var data={};if(!options.firstOnChange){var commands=this._generateX2ManyCommands(record,options);data=_.extend(this.get(record.id,{raw:true}).data,commands);var hasDisplayName=_.some(record.fieldsInfo,function(fieldsInfo){return'display_name'in fieldsInfo;});if(!hasDisplayName){delete data.display_name;}}
if(record.parentID){var parent=this.localData[record.parentID];if(parent.parentID&&parent.relationField){var parentRecord=this.localData[parent.parentID];data[parent.relationField]=this._generateOnChangeData(parentRecord);}}
return data;},_generateX2ManyCommands:function(record,options){var self=this;options=options||{};const changesOnly=options.changesOnly;var fields=record.fields;if(options.fieldNames){fields=_.pick(fields,options.fieldNames);}
var commands={};var data=_.extend({},record.data,record._changes);var type;for(var fieldName in fields){type=fields[fieldName].type;if(type==='many2many'||type==='one2many'){if(!data[fieldName]){continue;}
commands[fieldName]=[];var list=this.localData[data[fieldName]];if(options.changesOnly&&(!list._changes||!list._changes.length)){continue;}
var oldResIDs=list.res_ids.slice(0);var relRecordAdded=[];var relRecordUpdated=[];_.each(list._changes,function(change){if(change.operation==='ADD'&&change.id){relRecordAdded.push(self.localData[change.id]);}else if(change.operation==='UPDATE'&&!self.isNew(change.id)){relRecordUpdated.push(self.localData[change.id]);}});list=this._applyX2ManyOperations(list);this._sortList(list);if(type==='many2many'||list._forceM2MLink){var relRecordCreated=_.filter(relRecordAdded,function(rec){return typeof rec.res_id==='string';});var realIDs=_.difference(list.res_ids,_.pluck(relRecordCreated,'res_id'));commands[fieldName].push(x2ManyCommands.replace_with(realIDs));_.each(relRecordCreated,function(relRecord){var changes=self._generateChanges(relRecord,options);commands[fieldName].push(x2ManyCommands.create(relRecord.ref,changes));});_.each(relRecordUpdated,function(relRecord){var changes=self._generateChanges(relRecord,options);if(!_.isEmpty(changes)){var command=x2ManyCommands.update(relRecord.res_id,changes);commands[fieldName].push(command);}});}else if(type==='one2many'){var removedIds=_.difference(oldResIDs,list.res_ids);var addedIds=_.difference(list.res_ids,oldResIDs);var keptIds=_.intersection(oldResIDs,list.res_ids);var didChange=false;var changes,command,relRecord;for(var i=0;i<list.res_ids.length;i++){if(_.contains(keptIds,list.res_ids[i])){relRecord=_.findWhere(relRecordUpdated,{res_id:list.res_ids[i]});changes=relRecord?this._generateChanges(relRecord,options):{};if(!_.isEmpty(changes)){command=x2ManyCommands.update(relRecord.res_id,changes);didChange=true;}else{command=x2ManyCommands.link_to(list.res_ids[i]);}
commands[fieldName].push(command);}else if(_.contains(addedIds,list.res_ids[i])){relRecord=_.findWhere(relRecordAdded,{res_id:list.res_ids[i]});if(!relRecord){commands[fieldName].push(x2ManyCommands.link_to(list.res_ids[i]));continue;}
changes=this._generateChanges(relRecord,options);if(!this.isNew(relRecord.id)){commands[fieldName].push(x2ManyCommands.link_to(relRecord.res_id));if(changesOnly?Object.keys(changes).length:this.isDirty(relRecord.id)){delete changes.id;commands[fieldName].push(x2ManyCommands.update(relRecord.res_id,changes));}}else{const rawChangesEntries=Object.entries(relRecord._rawChanges);for(const[fieldName,value]of rawChangesEntries){const isMany2OneValue=Array.isArray(value)&&value.length===2&&Number.isInteger(value[0])&&typeof value[1]==='string';changes[fieldName]=isMany2OneValue?value[0]:value;}
commands[fieldName].push(x2ManyCommands.create(relRecord.ref,changes));}}}
if(options.changesOnly&&!didChange&&addedIds.length===0&&removedIds.length===0){commands[fieldName]=[];}
for(i=0;i<removedIds.length;i++){if(list._forceM2MUnlink){commands[fieldName].push(x2ManyCommands.forget(removedIds[i]));}else{commands[fieldName].push(x2ManyCommands.delete(removedIds[i]));}}}}}
return commands;},_getContext:function(element,options){options=options||{};var context=new Context(session.user_context);if(options.full||!(options.fieldName||options.additionalContext)){var context_to_add=options.sanitize_default_values?_.omit(element.context,function(val,key){return _.str.startsWith(key,'default_');}):element.context;context.add(context_to_add);}
if(options.fieldName){var viewType=options.viewType||element.viewType;var fieldInfo=element.fieldsInfo[viewType][options.fieldName];if(fieldInfo&&fieldInfo.context){if(fieldInfo.context!=="{}"){context.add(fieldInfo.context);}}else{var fieldParams=element.fields[options.fieldName];if(fieldParams.context){context.add(fieldParams.context);}}}
if(element.rawContext){var rawContext=new Context(element.rawContext);var evalContext=this._getEvalContext(this.localData[element.parentID]);evalContext.id=evalContext.id||false;rawContext.set_eval_context(evalContext);context.add(rawContext);}
if(options.additionalContext){context.add(options.additionalContext);}
if(context.__contexts.length>1){context.set_eval_context(this._getEvalContext(element));return context.eval();}else{return Object.assign({},session.user_context);}},_getDataToFetch:function(list,fieldName){var self=this;var field=list.fields[fieldName];var fieldInfo=list.fieldsInfo[list.viewType][fieldName];var view=fieldInfo.views&&fieldInfo.views[fieldInfo.mode];var fieldsInfo=view?view.fieldsInfo:fieldInfo.fieldsInfo;var fields=view?view.fields:fieldInfo.relatedFields;var viewType=view?view.type:fieldInfo.viewType;var toFetch={};let dataPointIds=list.data;for(let i=0;i<list.groupedBy.length;i++){dataPointIds=dataPointIds.reduce((acc,groupId)=>acc.concat(this.localData[groupId].data),[]);}
dataPointIds.forEach(function(dataPoint){var record=self.localData[dataPoint];if(typeof record.data[fieldName]==='string'){return;}
_.each(record.data[fieldName],function(id){toFetch[id]=toFetch[id]||[];toFetch[id].push(record);});var m2mList=self._makeDataPoint({fieldsInfo:fieldsInfo,fields:fields,modelName:field.relation,parentID:record.id,res_ids:record.data[fieldName],static:true,type:'list',viewType:viewType,});record.data[fieldName]=m2mList.id;});return toFetch;},_getDataToFetchByModel:function(list,fieldName,toFetchAcc){var self=this;var toFetch=toFetchAcc||{};_.each(list.data,function(dataPoint){var record=self.localData[dataPoint];var value=record.data[fieldName];if(value&&!self.localData[value]){var model=value.split(',')[0];var resID=value.split(',')[1];if(!(model in toFetch)){toFetch[model]={};}
if(toFetch[model][resID]){toFetch[model][resID].push(dataPoint);}else{toFetch[model][resID]=[dataPoint];}}});return toFetch;},_getDefaultContext:function(dataPoint){var defaultContext={};while(dataPoint.parentID){var parent=this.localData[dataPoint.parentID];var groupByField=parent.groupedBy[0].split(':')[0];var value=viewUtils.getGroupValue(dataPoint,parent.groupedBy[0]);if(value){defaultContext['default_'+groupByField]=value;}
dataPoint=parent;}
return defaultContext;},_getDomain:function(element,options){if(options&&options.fieldName){if(element._domains[options.fieldName]){return Domain.prototype.stringToArray(element._domains[options.fieldName],this._getEvalContext(element,true));}
var viewType=options.viewType||element.viewType;var fieldInfo=element.fieldsInfo[viewType][options.fieldName];if(fieldInfo&&fieldInfo.domain){return Domain.prototype.stringToArray(fieldInfo.domain,this._getEvalContext(element,true));}
var fieldParams=element.fields[options.fieldName];if(fieldParams.domain){return Domain.prototype.stringToArray(fieldParams.domain,this._getEvalContext(element,true));}
return[];}
return Domain.prototype.stringToArray(element.domain,this._getEvalContext(element,true));},_getEvalContext:function(element,forDomain){var evalContext=element.type==='record'?this._getRecordEvalContext(element,forDomain):{};if(element.parentID){var parent=this.localData[element.parentID];if(parent.type==='list'&&parent.parentID){parent=this.localData[parent.parentID];}
if(parent.type==='record'){evalContext.parent=this._getRecordEvalContext(parent,forDomain);}}
let current_company_id;if(session.user_context.allowed_company_ids){current_company_id=session.user_context.allowed_company_ids[0];}else{current_company_id=session.user_companies?session.user_companies.current_company:false;}
return Object.assign({active_id:evalContext.id||false,active_ids:evalContext.id?[evalContext.id]:[],active_model:element.model,current_company_id,id:evalContext.id||false,},pyUtils.context(),session.user_context,element.context,evalContext,);},_getLazyEvalContext:function(element,forDomain){var evalContext=element.type==='record'?this._getLazyRecordEvalContext(element,forDomain):{};if(element.parentID){var parent=this.localData[element.parentID];if(parent.type==='list'&&parent.parentID){parent=this.localData[parent.parentID];}
if(parent.type==='record'){evalContext.parent=this._getLazyRecordEvalContext(parent,forDomain);}}
let current_company_id;if(session.user_context.allowed_company_ids){current_company_id=session.user_context.allowed_company_ids[0];}else{current_company_id=session.user_companies?session.user_companies.current_company:false;}
let fallbackContext=Object.assign({active_id:evalContext.id||false,active_ids:evalContext.id?[evalContext.id]:[],active_model:element.model,current_company_id,id:evalContext.id||false,},pyUtils.context(),session.user_context,element.context,);return new Proxy({},{has(target,key){return key in target||key in evalContext||key in fallbackContext;},get(target,key){switch(true){case key in target:return target[key];case key in evalContext:return evalContext[key];default:return fallbackContext[key];;}},ownKeys(target){return[...new Set([...Reflect.ownKeys(target),...Object.keys(fallbackContext),...Object.keys(evalContext)])];},getOwnPropertyDescriptor(target,prop){return Reflect.getOwnPropertyDescriptor(target,prop)||{writable:true,configurable:true,enumerable:true};},});},_getFieldNames:function(element,options){var fieldsInfo=element.fieldsInfo;var viewType=options&&options.viewType||element.viewType;return Object.keys(fieldsInfo&&fieldsInfo[viewType]||{});},_getGroupedListPropsToKeep(list,options){const{isOpen,offset,id}=list;let propsToKeep={isOpen,offset,id};if(options.onlyGroup||isOpen&&options.hasSubgroups){propsToKeep.data=list.data;if(options.onlyGroup){propsToKeep.res_ids=list.res_ids;propsToKeep.count=list.count;}}
return propsToKeep;},_getMany2OneFieldNames:function(datapoint){var many2ones=[];_.each(datapoint.fields,function(field,name){if(field.type==='many2one'){many2ones.push(name);}});return many2ones;},_getRecordEvalContext:function(record,forDomain){var self=this;var relDataPoint;var context=_.extend({},record.data,record._changes);function _generateX2ManyCommands(fieldName){var commands=self._generateX2ManyCommands(record,{fieldNames:[fieldName]});return commands[fieldName];}
for(var fieldName in context){var field=record.fields[fieldName];if(context[fieldName]===null){context[fieldName]=false;}
if(!field||field.name==='id'){continue;}
if(field.type==='date'||field.type==='datetime'){if(context[fieldName]){context[fieldName]=JSON.parse(JSON.stringify(context[fieldName]));}
continue;}
if(field.type==='many2one'){relDataPoint=this.localData[context[fieldName]];context[fieldName]=relDataPoint?relDataPoint.res_id:false;continue;}
if(field.type==='one2many'||field.type==='many2many'){var ids;if(!context[fieldName]||_.isArray(context[fieldName])){ids=context[fieldName]?context[fieldName].slice(0):[];}else{relDataPoint=this._applyX2ManyOperations(this.localData[context[fieldName]]);ids=relDataPoint.res_ids.slice(0);}
if(!forDomain){ids.toJSON=_generateX2ManyCommands.bind(null,fieldName);}else if(field.type==='one2many'){ids=_.filter(ids,function(id){return typeof id!=='string';});}
context[fieldName]=ids;}}
return context;},_getLazyRecordEvalContext:function(record,forDomain){let self=this;let relDataPoint;function _generateX2ManyCommands(fieldName){var commands=self._generateX2ManyCommands(record,{fieldNames:[fieldName]});return commands[fieldName];}
return new Proxy({},{has(target,key){return key in target||key in record.fields;},ownKeys(target){return[...new Set([...Reflect.ownKeys(target),...Object.keys(record.fields)])];},getOwnPropertyDescriptor(target,prop){return Reflect.getOwnPropertyDescriptor(target,prop)||{writable:true,configurable:true,enumerable:true};},get(target,fieldName){if(fieldName in target){return target[fieldName];}
const fieldValue=record._changes&&fieldName in record._changes?record._changes[fieldName]:record.data[fieldName];const field=record.fields[fieldName];if(fieldValue===null){return false;}
if(fieldName==="id"&&!fieldValue){return false;}
if(field.type==='date'||field.type==='datetime'){if(fieldValue){return JSON.parse(JSON.stringify(fieldValue));}}
if(field.type==='many2one'){relDataPoint=self.localData[fieldValue];return relDataPoint?relDataPoint.res_id:false;}
if(field.type==='one2many'||field.type==='many2many'){let ids;if(!fieldValue||_.isArray(fieldValue)){ids=fieldValue?fieldValue.slice(0):[];}else{relDataPoint=self._applyX2ManyOperations(self.localData[fieldValue]);ids=relDataPoint.res_ids.slice(0);}
if(!forDomain){ids.toJSON=_generateX2ManyCommands.bind(null,fieldName);}else if(field.type==='one2many'){ids=_.filter(ids,function(id){return typeof id!=='string';});}
return ids;}
if(field.type==="properties"&&_.isArray(fieldValue)){return fieldValue.filter(definition=>!definition.definition_deleted);}
return fieldValue;}});},_getUngroupedListDomain(list){return list.domain||[];},_invalidateCache:function(dataPoint){while(dataPoint.parentID){dataPoint=this.localData[dataPoint.parentID];}
if(dataPoint.model==='res.currency'){session.reloadCurrencies();}
if(dataPoint.model==='res.company'&&!localStorage.getItem('running_tour')){this.do_action('reload_context');}
if(_.contains(this.noCacheModels,dataPoint.model)){core.bus.trigger('clear_cache');}},_isFieldProtected:function(record,fieldName,viewType){viewType=viewType||record.viewType;var fieldInfo=viewType&&record.fieldsInfo&&record.fieldsInfo[viewType][fieldName];if(fieldInfo){var rawModifiers=fieldInfo.modifiers||{};var modifiers=this._evalModifiers(record,_.pick(rawModifiers,'readonly'));return modifiers.readonly&&!fieldInfo.force_save;}else{return false;}},_isFieldSet:function(value,fieldType){switch(fieldType){case'boolean':return true;case'one2many':case'many2many':return value.length>0;default:return value!==false;}},_isX2ManyValid:function(id){var self=this;var isValid=true;var element=this.localData[id];_.each(element._changes,function(command){if(command.operation==='DELETE'||command.operation==='FORGET'||(command.operation==='ADD'&&!command.isNew)||command.operation==='REMOVE_ALL'){return;}
var recordData=self.get(command.id,{raw:true}).data;var record=self.localData[command.id];_.each(element.getFieldNames(),function(fieldName){var field=element.fields[fieldName];var fieldInfo=element.fieldsInfo[element.viewType][fieldName];var rawModifiers=fieldInfo.modifiers||{};var modifiers=self._evalModifiers(record,_.pick(rawModifiers,'required'));if(modifiers.required&&!self._isFieldSet(recordData[fieldName],field.type)){isValid=false;}});});return isValid;},_load:function(dataPoint,options){if(options&&options.onlyGroups&&!(dataPoint.type==='list'&&dataPoint.groupedBy.length)){return Promise.resolve(dataPoint);}
if(dataPoint.type==='record'){return this._fetchRecord(dataPoint,options);}
if(dataPoint.type==='list'&&dataPoint.groupedBy.length){return this._readGroup(dataPoint,options);}
if(dataPoint.type==='list'&&!dataPoint.groupedBy.length){return this._fetchUngroupedList(dataPoint,options);}},_makeDataPoint:function(params){var type=params.type||('domain'in params&&'list')||'record';var res_id,value;var res_ids=params.res_ids||[];var data=params.data||(type==='record'?{}:[]);var context=params.context;var fields=_.extend({display_name:{type:'char'},id:{type:'integer'},},params.fields);const groupedBy=params.groupedBy||[];let isM2MGrouped=false;if(type==='record'){res_id=params.res_id||(params.data&&params.data.id);if(res_id){data.id=res_id;}else{res_id=_.uniqueId('virtual_');}
context=_.omit(context,['orderedBy','group_by']);}else{var isValueArray=params.value instanceof Array;res_id=isValueArray?params.value[0]:undefined;value=isValueArray?params.value[1]:params.value;isM2MGrouped=groupedBy.some((group)=>{const[fieldName]=group.split(':');return fields[fieldName].type==="many2many";});}
var dataPoint={_cache:type==='list'?{}:undefined,_changes:null,_domains:{},_rawChanges:{},aggregateValues:params.aggregateValues||{},context:context,count:params.count||res_ids.length,data:data,domain:params.domain||[],fields:fields,fieldsInfo:params.fieldsInfo,groupedBy,groupsCount:0,groupsLimit:type==='list'&&params.groupsLimit||null,groupsOffset:0,id:`${params.modelName}_${++this.__id}`,isM2MGrouped,isOpen:params.isOpen,limit:type==='record'?1:(params.limit||Number.MAX_SAFE_INTEGER),loadMoreOffset:0,model:params.modelName,offset:params.offset||(type==='record'?_.indexOf(res_ids,res_id):0),openGroupByDefault:params.openGroupByDefault,orderedBy:params.orderedBy||[],orderedResIDs:params.orderedResIDs,parentID:params.parentID,rawContext:params.rawContext,ref:params.ref||res_id,relationField:params.relationField,res_id:res_id,res_ids:res_ids,specialData:{},_specialDataCache:{},static:params.static||false,type:type,value:value,range:params.range,viewType:params.viewType,};dataPoint._editionViewType={};dataPoint.evalModifiers=this._evalModifiers.bind(this,dataPoint);dataPoint.getContext=this._getContext.bind(this,dataPoint);dataPoint.getDomain=this._getDomain.bind(this,dataPoint);dataPoint.getFieldNames=this._getFieldNames.bind(this,dataPoint);dataPoint.isDirty=this.isDirty.bind(this,dataPoint.id);dataPoint.isNew=this.isNew.bind(this,dataPoint.id);this.localData[dataPoint.id]=dataPoint;return dataPoint;},async _makeDefaultRecord(modelName,params){var targetView=params.viewType;var fields=params.fields;var fieldsInfo=params.fieldsInfo;var fieldNames=Object.keys(fieldsInfo[targetView]);var parentRecord=params.parentID&&this.localData[params.parentID].type==='list'?this.localData[params.parentID]:null;if(parentRecord&&parentRecord.viewType in parentRecord.fieldsInfo){var originView=parentRecord.viewType;fieldNames=_.union(fieldNames,Object.keys(parentRecord.fieldsInfo[originView]));fieldsInfo[targetView]=_.defaults({},fieldsInfo[targetView],parentRecord.fieldsInfo[originView]);fields=_.defaults({},fields,parentRecord.fields);}
var record=this._makeDataPoint({modelName:modelName,fields:fields,fieldsInfo:fieldsInfo,context:params.context,parentID:params.parentID,res_ids:params.res_ids,viewType:targetView,});await this.generateDefaultValues(record.id,{},{fieldNames});try{await this._performOnChange(record,[],{firstOnChange:true});}finally{if(record._warning&&params.allowWarning){delete record._warning;}}
if(record._warning){return Promise.reject();}
var overrideDefaultFields=this._computeOverrideDefaultFields(params.parentID,params.position);if(overrideDefaultFields.field){record._changes[overrideDefaultFields.field]=overrideDefaultFields.value;}
await this._postprocess(record);this.save(record.id,{savePoint:true});return record.id;},_parseServerData:function(fieldNames,element,data){var self=this;_.each(fieldNames,function(fieldName){var field=element.fields[fieldName];var val=data[fieldName];if(field.type==='many2one'){if(val!==false){var r=self._makeDataPoint({modelName:field.relation,fields:{display_name:{type:'char'},id:{type:'integer'},},data:{display_name:val[1],id:val[0],},parentID:element.id,});data[fieldName]=r.id;}else{data[fieldName]=false;}}else{data[fieldName]=self._parseServerValue(field,val);}});},async _performOnChange(record,fields,options={}){const firstOnChange=options.firstOnChange;let{hasOnchange,onchangeSpec}=this._buildOnchangeSpecs(record,options.viewType);if(!firstOnChange&&!hasOnchange){return;}
var idList=record.data.id?[record.data.id]:[];const ctxOptions={full:true,};if(fields.length===1){fields=fields[0];ctxOptions.fieldName=fields;}
var context=this._getContext(record,ctxOptions);var currentData=this._generateOnChangeData(record,{changesOnly:false,firstOnChange,});const result=await this._rpc({model:record.model,method:'onchange',args:[idList,currentData,fields,onchangeSpec],context:context,});if(!record._changes){return;}
if(result.warning){this.trigger_up('warning',result.warning);record._warning=true;}
if(result.domain){record._domains=Object.assign(record._domains,result.domain);}
await this._applyOnChange(result.value,record,{firstOnChange});return result;},_performRPC:function(params){var self=this;var request=_.extend({},params);var prom=new Promise(function(resolve,reject){request.resolve=resolve;request.reject=reject;});this.batchedRPCsRequests.push(request);Promise.resolve().then(function(){if(!self.batchedRPCsRequests.length){return;}
var batchedRPCsRequests=self.batchedRPCsRequests;self.batchedRPCsRequests=[];var batches={};var key;for(var i=0;i<batchedRPCsRequests.length;i++){var request=batchedRPCsRequests[i];key=request.model+','+JSON.stringify(request.context);if(!batches[key]){batches[key]=_.extend({},request,{requests:[request]});}else{batches[key].ids=_.uniq(batches[key].ids.concat(request.ids));batches[key].fieldNames=_.uniq(batches[key].fieldNames.concat(request.fieldNames));batches[key].requests.push(request);}}
function onSuccess(batch,results){for(var i=0;i<batch.requests.length;i++){var request=batch.requests[i];var fieldNames=request.fieldNames.concat(['id']);var filteredResults=results.filter(function(record){return request.ids.indexOf(record.id)>=0;}).map(function(record){return _.pick(record,fieldNames);});request.resolve(filteredResults);}}
function onFailure(batch,error){for(var i=0;i<batch.requests.length;i++){var request=batch.requests[i];request.reject(error);}}
for(key in batches){var batch=batches[key];self._rpc({model:batch.model,method:'read',args:[batch.ids,batch.fieldNames],context:batch.context,}).then(onSuccess.bind(null,batch)).guardedCatch(onFailure.bind(null,batch));}});return prom;},_postprocess:function(record,options){var self=this;var viewType=options&&options.viewType||record.viewType;var defs=[];_.each(record.getFieldNames(options),function(name){var field=record.fields[name];var fieldInfo=record.fieldsInfo[viewType][name]||{};var options=fieldInfo.options||{};if(options.always_reload){if(record.fields[name].type==='many2one'){const _changes=record._changes||{};const relRecordId=_changes[name]||record.data[name];if(!relRecordId){return;}
var relRecord=self.localData[relRecordId];defs.push(self._rpc({model:field.relation,method:'name_get',args:[relRecord.data.id],context:self._getContext(record,{fieldName:name,viewType:viewType}),}).then(function(result){relRecord.data.display_name=result[0][1];}));}}});defs.push(this._fetchSpecialData(record,options));return Promise.all(defs).then(function(){record._specialDataSavepoint=Object.assign({},record.specialData);return record;});},_processX2ManyCommands:function(record,fieldName,commands,options){var self=this;options=options||{};var defs=[];var field=record.fields[fieldName];var fieldInfo=record.fieldsInfo[options.viewType||record.viewType][fieldName]||{};var view=fieldInfo.views&&fieldInfo.views[fieldInfo.mode];var fieldsInfo=view?view.fieldsInfo:fieldInfo.fieldsInfo;var fields=view?view.fields:fieldInfo.relatedFields;var viewType=view?view.type:fieldInfo.viewType;const recordContext={...record.context};for(const key in recordContext){if(key.startsWith("default_")||key.endsWith("_view_ref")){delete recordContext[key];}}
var x2manyList=self._makeDataPoint({context:recordContext,fieldsInfo:fieldsInfo,fields:fields,limit:fieldInfo.limit,modelName:field.relation,parentID:record.id,rawContext:fieldInfo&&fieldInfo.context,relationField:field.relation_field,res_ids:[],static:true,type:'list',viewType:viewType,});record._changes[fieldName]=x2manyList.id;x2manyList._changes=[];var many2ones={};var r;commands=commands||[];var isCommandList=commands.length&&_.isArray(commands[0]);if(!isCommandList){commands=[[6,false,commands]];}
_.each(commands,function(value){if(value[0]===0){r=self._makeDataPoint({modelName:x2manyList.model,context:x2manyList.context,fieldsInfo:fieldsInfo,fields:fields,parentID:x2manyList.id,viewType:viewType,});r._noAbandon=true;x2manyList._changes.push({operation:'ADD',id:r.id});x2manyList._cache[r.res_id]=r.id;_.each(r.getFieldNames(),function(fieldName){r.data[fieldName]=null;});r._changes=_.defaults(value[2],r.data);for(var fieldName in r._changes){if(!r._changes[fieldName]){continue;}
var isFieldInView=fieldName in r.fields;if(isFieldInView){var field=r.fields[fieldName];var fieldType=field.type;var rec;if(fieldType==='many2one'){rec=self._makeDataPoint({context:r.context,modelName:field.relation,data:{id:r._changes[fieldName]},parentID:r.id,});r._changes[fieldName]=rec.id;many2ones[fieldName]=true;}else if(fieldType==='reference'){var reference=r._changes[fieldName].split(',');rec=self._makeDataPoint({context:r.context,modelName:reference[0],data:{id:parseInt(reference[1])},parentID:r.id,});r._changes[fieldName]=rec.id;many2ones[fieldName]=true;}else if(_.contains(['one2many','many2many'],fieldType)){var x2mCommands=value[2][fieldName];defs.push(self._processX2ManyCommands(r,fieldName,x2mCommands));}else{r._changes[fieldName]=self._parseServerValue(field,r._changes[fieldName]);}}}}
if(value[0]===6){_.each(value[2],function(res_id){x2manyList._changes.push({operation:'ADD',resID:res_id});});var def=self._readUngroupedList(x2manyList).then(function(){return Promise.all([self._fetchX2ManysBatched(x2manyList),self._fetchReferencesBatched(x2manyList)]);});defs.push(def);}});_.each(_.keys(many2ones),function(name){defs.push(self._fetchNameGets(x2manyList,name));});return Promise.all(defs);},_readMissingFields:function(list,resIDs,fieldNames){var self=this;var missingIDs=[];for(var i=0,len=resIDs.length;i<len;i++){var resId=resIDs[i];var dataPointID=list._cache[resId];if(!dataPointID){missingIDs.push(resId);continue;}
var record=self.localData[dataPointID];var data=_.extend({},record.data,record._changes);if(_.difference(fieldNames,_.keys(data)).length){missingIDs.push(resId);}}
var def;if(missingIDs.length&&fieldNames.length){def=self._performRPC({context:list.getContext(),fieldNames:fieldNames,ids:missingIDs,method:'read',model:list.model,});}else{def=Promise.resolve(_.map(missingIDs,function(id){return{id:id};}));}
return def.then(function(records){_.each(resIDs,function(id){var dataPoint;var data=_.findWhere(records,{id:id});if(id in list._cache){dataPoint=self.localData[list._cache[id]];if(data){self._parseServerData(fieldNames,dataPoint,data);_.extend(dataPoint.data,data);}}else{dataPoint=self._makeDataPoint({context:list.getContext(),data:data,fieldsInfo:list.fieldsInfo,fields:list.fields,modelName:list.model,parentID:list.id,viewType:list.viewType,});self._parseServerData(fieldNames,dataPoint,dataPoint.data);list._cache[id]=dataPoint.id;}
_.each(list._changes,function(change){if(change.operation==='ADD'&&!change.id&&change.resID===id){change.id=dataPoint.id;}});});return list;});},_readGroup:function(list,options){var self=this;options=options||{};var groupByField=list.groupedBy[0];var rawGroupBy=groupByField.split(':')[0];var fields=_.uniq(list.getFieldNames().concat(rawGroupBy));var orderedBy=_.filter(list.orderedBy,function(order){return order.name===rawGroupBy||list.fields[order.name].group_operator!==undefined;});var openGroupsLimit=list.groupsLimit||self.OPEN_GROUP_LIMIT;var expand=list.openGroupByDefault&&options.fetchRecordsWithGroups;return this._rpc({model:list.model,method:'web_read_group',fields:fields,domain:list.domain,context:list.context,groupBy:list.groupedBy,limit:list.groupsLimit,offset:list.groupsOffset,orderBy:orderedBy,lazy:true,expand:expand,expand_limit:expand?list.limit:null,expand_orderby:expand?list.orderedBy:null,}).then(function(result){var groups=result.groups;list.groupsCount=result.length;var previousGroups=_.map(list.data,function(groupID){return self.localData[groupID];});list.data=[];list.count=0;var defs=[];var openGroupCount=0;_.each(groups,function(group){var aggregateValues={};_.each(group,function(value,key){if(_.contains(fields,key)&&key!==groupByField&&AGGREGATABLE_TYPES.includes(list.fields[key].type)){aggregateValues[key]=value;}});var value=group[groupByField];if(list.fields[rawGroupBy].type==="selection"){var choice=_.find(list.fields[rawGroupBy].selection,function(c){return c[0]===value;});value=choice?choice[1]:false;}
var newGroup=self._makeDataPoint({modelName:list.model,count:group[rawGroupBy+'_count'],domain:group.__domain,context:list.context,fields:list.fields,fieldsInfo:list.fieldsInfo,value:value,range:group.__range,aggregateValues:aggregateValues,groupedBy:list.groupedBy.slice(1),orderedBy:list.orderedBy,orderedResIDs:list.orderedResIDs,limit:list.limit,openGroupByDefault:list.openGroupByDefault,parentID:list.id,type:'list',viewType:list.viewType,});var oldGroup=_.find(previousGroups,function(g){return g.res_id===newGroup.res_id&&g.value===newGroup.value;});if(oldGroup){delete self.localData[newGroup.id];const oldPropsToKeep=self._getGroupedListPropsToKeep(oldGroup,{onlyGroup:options.onlyGroups,hasSubgroups:newGroup.groupedBy.length});Object.assign(newGroup,oldPropsToKeep);newGroup.limit=oldGroup.limit+oldGroup.loadMoreOffset;self.localData[newGroup.id]=newGroup;}else if(!newGroup.openGroupByDefault||openGroupCount>=openGroupsLimit){newGroup.isOpen=false;}else if('__fold'in group){newGroup.isOpen=!group.__fold;}else{newGroup.isOpen=!self.localData[newGroup.parentID].parentID;}
list.data.push(newGroup.id);list.count+=newGroup.count;if(newGroup.isOpen&&newGroup.count>0){openGroupCount++;if(group.__data){newGroup.__data=group.__data;}
options=_.defaults({enableRelationalFetch:false},options);defs.push(self._load(newGroup,options));}});if(options.keepEmptyGroups){var emptyGroupsIDs=_.difference(_.pluck(previousGroups,'id'),list.data);_.each(emptyGroupsIDs,function(groupID){list.data.push(groupID);var emptyGroup=self.localData[groupID];emptyGroup.aggregateValues={};});}
return Promise.all(defs).then(function(groups){if(!options.onlyGroups){list.res_ids=_.flatten(_.map(groups,function(group){return group?group.res_ids:[];}));}
return list;}).then(function(){return Promise.all([self._fetchX2ManysSingleBatch(list),self._fetchReferencesSingleBatch(list)]).then(function(){return list;});});});},_readUngroupedList:function(list){var self=this;var def=Promise.resolve();list=this._applyX2ManyOperations(list);if(list.res_ids.length>list.limit&&list.orderedBy.length){if(!list.orderedResIDs){var fieldNames=_.pluck(list.orderedBy,'name');def=this._readMissingFields(list,_.filter(list.res_ids,_.isNumber),fieldNames);}
def.then(function(){self._sortList(list);});}
return def.then(function(){var resIDs=[];var currentResIDs=list.res_ids;if(list.orderedResIDs){currentResIDs=list.orderedResIDs.filter(function(resID){return list.res_ids.indexOf(resID)>=0;});}
var currentCount=currentResIDs.length;var upperBound=list.limit?Math.min(list.offset+list.limit,currentCount):currentCount;var fieldNames=list.getFieldNames();for(var i=list.offset;i<upperBound;i++){var resId=currentResIDs[i];if(_.isNumber(resId)){resIDs.push(resId);}}
return self._readMissingFields(list,resIDs,fieldNames).then(function(){if(list.res_ids.length<=list.limit){self._sortList(list);}else{self._setDataInRange(list);}
return list;});});},_reload:function(id,options){options=options||{};var element=this.localData[id];if(element.type==='record'){if(!options.currentId&&(('currentId'in options)||this.isNew(id))){var params={context:element.context,fieldsInfo:element.fieldsInfo,fields:element.fields,viewType:element.viewType,allowWarning:true,};return this._makeDefaultRecord(element.model,params);}
if(!options.keepChanges){this.discardChanges(id,{rollback:false});}}else if(element._changes){delete element.tempLimitIncrement;_.each(element._changes,function(change){delete change.isNew;});}
if(options.context!==undefined){element.context=options.context;}
if(options.orderedBy!==undefined){element.orderedBy=(options.orderedBy.length&&options.orderedBy)||element.orderedBy;}
if(options.domain!==undefined){element.domain=options.domain;}
if(options.groupBy!==undefined){element.groupedBy=options.groupBy;element.isM2MGrouped=element.groupedBy.some((group)=>{const[fieldName]=group.split(':');return element.fields[fieldName].type==="many2many";});}
if(options.limit!==undefined){element.limit=options.limit;}
if(options.offset!==undefined){this._setOffset(element.id,options.offset);}
if(options.groupsLimit!==undefined){element.groupsLimit=options.groupsLimit;}
if(options.groupsOffset!==undefined){element.groupsOffset=options.groupsOffset;}
if(options.loadMoreOffset!==undefined){element.loadMoreOffset=options.loadMoreOffset;}else{element.loadMoreOffset=0;}
if(options.currentId!==undefined){element.res_id=options.currentId;}
if(options.ids!==undefined){element.res_ids=options.ids;element.count=element.res_ids.length;}
if(element.type==='record'){element.offset=_.indexOf(element.res_ids,element.res_id);}
var loadOptions=_.pick(options,'fieldNames','viewType');return this._load(element,loadOptions).then(function(result){return result.id;});},async _rpc(params){const result=await this._super(...arguments);if(this.sampleModel&&params.method==='web_read_group'&&result.length){const sampleServer=this.sampleModel.sampleServer;sampleServer.setExistingGroups(result.groups);}
return result;},_saveSpecialDataCache:function(record,fieldName,value){if(_.isEqual(record._specialDataCache[fieldName],value)){return false;}
record._specialDataCache[fieldName]=value;return true;},_searchReadUngroupedList:function(list){var self=this;var fieldNames=list.getFieldNames();var prom;if(list.__data){const fieldNameSet=new Set(fieldNames);fieldNameSet.add("id");list.__data.records.forEach(record=>Object.keys(record).filter(fieldName=>!fieldNameSet.has(fieldName)).forEach(fieldName=>delete record[fieldName]));prom=Promise.resolve(list.__data);}else{prom=this._rpc({route:'/web/dataset/search_read',model:list.model,fields:fieldNames,context:_.extend({},list.getContext(),{bin_size:true}),domain:this._getUngroupedListDomain(list),limit:list.limit,offset:list.loadMoreOffset+list.offset,orderBy:list.orderedBy,});}
return prom.then(function(result){delete list.__data;list.count=result.length;var ids=_.pluck(result.records,'id');var data=_.map(result.records,function(record){var dataPoint=self._makeDataPoint({context:list.context,data:record,fields:list.fields,fieldsInfo:list.fieldsInfo,modelName:list.model,parentID:list.id,viewType:list.viewType,});self._parseServerData(fieldNames,dataPoint,dataPoint.data);return dataPoint.id;});if(list.loadMoreOffset){list.data=list.data.concat(data);list.res_ids=list.res_ids.concat(ids);}else{list.data=data;list.res_ids=ids;}
self._updateParentResIDs(list);return list;});},_setDataInRange:function(list){var idsInRange;if(list.limit){idsInRange=list.res_ids.slice(list.offset,list.offset+list.limit);}else{idsInRange=list.res_ids;}
list.data=[];_.each(idsInRange,function(id){if(list._cache[id]){list.data.push(list._cache[id]);}});if(list.limit){for(var i=list.offset+list.limit;i<list.res_ids.length;i++){var id=list.res_ids[i];var dataPointID=list._cache[id];if(_.findWhere(list._changes,{isNew:true,id:dataPointID})){list.data.push(dataPointID);}else{break;}}}},_setOffset:function(elementId,offset){var element=this.localData[elementId];element.offset=offset;if(element.type==='record'&&element.res_ids.length){element.res_id=element.res_ids[offset];}},_sortList:function(list){if(!list.static){return;}
var self=this;if(list.orderedResIDs){var orderedResIDs={};for(var k=0;k<list.orderedResIDs.length;k++){orderedResIDs[list.orderedResIDs[k]]=k;}
utils.stableSort(list.res_ids,function compareResIdIndexes(resId1,resId2){if(!(resId1 in orderedResIDs)&&!(resId2 in orderedResIDs)){return 0;}
if(!(resId1 in orderedResIDs)){return Infinity;}
if(!(resId2 in orderedResIDs)){return-Infinity;}
return orderedResIDs[resId1]-orderedResIDs[resId2];});}else if(list.orderedBy.length){var compareRecords=function(resId1,resId2,level){if(!level){level=0;}
if(list.orderedBy.length<level+1){return 0;}
var order=list.orderedBy[level];var record1ID=list._cache[resId1];var record2ID=list._cache[resId2];if(!record1ID&&!record2ID){return 0;}
if(!record1ID){return Infinity;}
if(!record2ID){return-Infinity;}
var r1=self.localData[record1ID];var r2=self.localData[record2ID];var data1=_.extend({},r1.data,r1._changes);var data2=_.extend({},r2.data,r2._changes);var orderData1=data1[order.name];var orderData2=data2[order.name];if(list.fields[order.name].type==='many2one'){orderData1=orderData1?self.localData[orderData1].data.display_name:"";orderData2=orderData2?self.localData[orderData2].data.display_name:"";}
if(orderData1<orderData2){return order.asc?-1:1;}
if(orderData1>orderData2){return order.asc?1:-1;}
return compareRecords(resId1,resId2,level+1);};utils.stableSort(list.res_ids,compareRecords);}
this._setDataInRange(list);},_updateParentResIDs:function(element){var self=this;if(element.parentID){var parent=this.localData[element.parentID];parent.res_ids=_.flatten(_.map(parent.data,function(dataPointID){return self.localData[dataPointID].res_ids;}));this._updateParentResIDs(parent);}},_updateRecordsData:function(records,fieldName,values){if(!records.length||!values){return;}
var self=this;var field=records[0].fields[fieldName];var fieldInfo=records[0].fieldsInfo[records[0].viewType][fieldName];var view=fieldInfo.views&&fieldInfo.views[fieldInfo.mode];var fieldsInfo=view?view.fieldsInfo:fieldInfo.fieldsInfo;var fields=view?view.fields:fieldInfo.relatedFields;var viewType=view?view.type:fieldInfo.viewType;var id2Values=new Map(values.map((value)=>[value.id,value]))
_.each(records,function(record){var x2mList=self.localData[record.data[fieldName]];x2mList.data=[];_.each(x2mList.res_ids,function(res_id){var dataPoint=self._makeDataPoint({modelName:field.relation,data:id2Values.get(res_id),fields:fields,fieldsInfo:fieldsInfo,parentID:x2mList.id,viewType:viewType,});x2mList.data.push(dataPoint.id);x2mList._cache[res_id]=dataPoint.id;});});},_updateDuplicateRecords(recordID,updateFn){const{res_id}=this.localData[recordID];const getTopmostID=()=>{let element=this.localData[recordID];while(element.parentID&&this.localData[element.parentID].type==="list"){element=this.localData[element.parentID];}
return element.type==="list"&&element.isM2MGrouped?element.id:false;};const topmostID=getTopmostID();if(!topmostID){return;}
const topmostList=this.get(topmostID);utils.traverse_records(topmostList,(r)=>{if(r.res_id===res_id&&r.id!==recordID){updateFn(r.id);}});},_visitChildren:function(element,fn){var self=this;fn(element);if(element.type==='record'){for(var fieldName in element.data){var field=element.fields[fieldName];if(!field){continue;}
if(_.contains(['one2many','many2one','many2many'],field.type)){var hasChange=element._changes&&fieldName in element._changes;var value=hasChange?element._changes[fieldName]:element.data[fieldName];var relationalElement=this.localData[value];if(relationalElement){self._visitChildren(relationalElement,fn);}}}}
if(element.type==='list'){element=this._applyX2ManyOperations(element);_.each(element.data,function(elemId){var elem=self.localData[elemId];self._visitChildren(elem,fn);});}},});return BasicModel;});;

/* /web/static/src/legacy/js/views/basic/basic_renderer.js */
odoo.define('web.BasicRenderer',function(require){"use strict";var AbstractRenderer=require('web.AbstractRenderer');var config=require('web.config');var core=require('web.core');var dom=require('web.dom');const session=require('web.session');const utils=require('web.utils');const widgetRegistry=require('web.widget_registry');const widgetRegistryOwl=require("web.widgetRegistry");const{WidgetAdapterMixin}=require('web.OwlCompatibility');const FieldWrapper=require('web.FieldWrapper');const WidgetWrapper=require("web.WidgetWrapper");const{Component}=require("@odoo/owl");var qweb=core.qweb;const _t=core._t;const{status}=require("@odoo/owl");var BasicRenderer=AbstractRenderer.extend(WidgetAdapterMixin,{custom_events:{navigation_move:'_onNavigationMove',},init:function(parent,state,params){this._super.apply(this,arguments);this.activeActions=params.activeActions;this.viewType=params.viewType;this.mode=params.mode||'readonly';this.widgets=[];this.handleField=null;this.viewEditable=params.viewEditable;this.jQueryNodesWithTooltip=[];},destroy:function(){for(const $node of this.jQueryNodesWithTooltip){$node.tooltip("dispose");}
this._super.apply(this,arguments);WidgetAdapterMixin.destroy.call(this);},on_attach_callback:function(){this._isInDom=true;for(const handle in this.allFieldWidgets){this.allFieldWidgets[handle].forEach(widget=>{if(!utils.isComponent(widget.constructor)&&widget.on_attach_callback){widget.on_attach_callback();}});}
this.widgets.forEach(widget=>{if(widget.on_attach_callback){widget.on_attach_callback();}});WidgetAdapterMixin.on_attach_callback.call(this);},on_detach_callback:function(){this._isInDom=false;for(const handle in this.allFieldWidgets){this.allFieldWidgets[handle].forEach(widget=>{if(!utils.isComponent(widget.constructor)&&widget.on_detach_callback){widget.on_detach_callback();}});}
this.widgets.forEach(widget=>{if(widget.on_detach_callback){widget.on_detach_callback();}});WidgetAdapterMixin.on_detach_callback.call(this);},canBeSaved:function(recordID){var self=this;var invalidFields=[];_.each(this.allFieldWidgets[recordID],function(widget){var canBeSaved=self._canWidgetBeSaved(widget);if(!canBeSaved){invalidFields.push(widget.name);}
if(widget.el){widget.$el.toggleClass('o_field_invalid',!canBeSaved);widget.$el.attr('aria-invalid',!canBeSaved);}});return invalidFields;},commitChanges:function(recordID){var defs=_.map(this.allFieldWidgets[recordID],function(widget){return widget.commitChanges();});return Promise.all(defs);},confirmChange:async function(state,id,fields,ev){var self=this;this._setState(state);var record=this._getRecord(id);if(!record){return this._render().then(_.constant([]));}
_.invoke(this.widgets,'updateState',state);const fieldWidgets=(this.allFieldWidgets[id]||[]).slice();let defs=fieldWidgets.map(async(widget)=>{var fieldChanged=_.contains(fields,widget.name);if(fieldChanged||widget.resetOnAnyFieldChange){return widget.reset(record,ev,fieldChanged);}});await this._updateAllModifiers(record);defs=defs.filter((def,index)=>{if(fieldWidgets[index]instanceof FieldWrapper){return status(fieldWidgets[index])!=="destroyed";}else{return!fieldWidgets[index].isDestroyed();}});return Promise.all(defs).then(function(){return _.filter(self.allFieldWidgets[id],function(widget){var fieldChanged=_.contains(fields,widget.name);return fieldChanged||widget.resetOnAnyFieldChange;});});},focusField:function(id,fieldName,offset){this.editRecord(id);if(typeof offset==="number"){var field=_.findWhere(this.allFieldWidgets[id],{name:fieldName});dom.setSelectionRange(field.getFocusableElement().get(0),{start:offset,end:offset});}},_activateFieldWidget:function(record,currentIndex,options){options=options||{};_.defaults(options,{inc:1,wrap:false});currentIndex=Math.max(0,currentIndex);var recordWidgets=this.allFieldWidgets[record.id]||[];for(var i=0;i<recordWidgets.length;i++){var activated=recordWidgets[currentIndex].activate({event:options.event,noAutomaticCreate:options.noAutomaticCreate||false});if(activated){return currentIndex;}
currentIndex+=options.inc;if(currentIndex>=recordWidgets.length){if(options.wrap){currentIndex-=recordWidgets.length;}else{return-1;}}else if(currentIndex<0){if(options.wrap){currentIndex+=recordWidgets.length;}else{return-1;}}}
return-1;},_activateNextFieldWidget:function(record,currentIndex,options){currentIndex=(currentIndex+1)%(this.allFieldWidgets[record.id]||[]).length;return this._activateFieldWidget(record,currentIndex,_.extend({inc:1},options));},_activatePreviousFieldWidget:function(record,currentIndex){currentIndex=currentIndex?(currentIndex-1):((this.allFieldWidgets[record.id]||[]).length-1);return this._activateFieldWidget(record,currentIndex,{inc:-1});},_addFieldTooltip:function(widget,$node){$node=$node.length?$node:widget.$el;$node.tooltip(this._getTooltipOptions(widget));this.jQueryNodesWithTooltip.push($node);},_applyModifiers:function(modifiersData,record,element){var self=this;var modifiers=modifiersData.evaluatedModifiers[record.id]||{};if(element){_apply(element);}else{_.each(_.clone(modifiersData.elementsByRecord[record.id]),_apply);}
function _apply(element){if('readonly'in modifiers&&element.widget){var mode=modifiers.readonly?'readonly':modifiersData.baseModeByRecord[record.id];if(mode!==element.widget.mode){self._rerenderFieldWidget(element.widget,record,{keepBaseMode:true,mode:mode,});return;}}
element.$el.toggleClass("o_invisible_modifier",!!modifiers.invisible);element.$el.toggleClass("o_readonly_modifier",!!modifiers.readonly);element.$el.toggleClass("o_required_modifier",!!modifiers.required);if(element.widget&&element.widget.updateModifiersValue){element.widget.updateModifiersValue(modifiers);}
if(element.callback){element.callback(element,modifiers,record);}}},_canWidgetBeSaved:function(widget){var modifiers=this._getEvaluatedModifiers(widget.__node,widget.record);return widget.isValid()&&(widget.isSet()||!modifiers.required);},_destroyFieldWidget:function(recordID,widget){var recordWidgets=this.allFieldWidgets[recordID];var index=recordWidgets.indexOf(widget);if(index>=0){recordWidgets.splice(index,1);}
this._unregisterModifiersElement(widget.__node,recordID,widget);widget.destroy();return index;},_getEvaluatedModifiers:function(node,record){var element=this._getModifiersData(node);if(!element){return{};}
return element.evaluatedModifiers[record.id]||{};},_getModifiersData:function(node){return _.findWhere(this.allModifiersData,{node:node});},_getRecord:function(recordId){return null;},_getTooltipOptions:function(widget){return{template:'<div class="tooltip tooltip-field-info" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',title:function(){let help=widget.attrs.help||widget.field.help||'';if(session.display_switch_company_menu&&widget.field.company_dependent){help+=(help?'\n\n':'')+_t('Values set here are company-specific.');}
const debug=config.isDebug();if(help||debug){return qweb.render('WidgetLabel.tooltip',{debug,help,widget});}}};},_handleAttributes:function($el,node){if($el.is('button')){return;}
if(node.attrs.class){$el.addClass(node.attrs.class);}
if(node.attrs.style){$el.attr('style',node.attrs.style);}
if(node.attrs.placeholder){$el.attr('placeholder',node.attrs.placeholder);}},_hasContent:function(){return this.state.count!==0&&(!('isSample'in this.state)||!this.state.isSample);},_moveRecord:function(recordId,toIndex){var self=this;var records=this.state.data;var record=_.findWhere(records,{id:recordId});var fromIndex=records.indexOf(record);var lowerIndex=Math.min(fromIndex,toIndex);var upperIndex=Math.max(fromIndex,toIndex)+1;var order=_.findWhere(this.state.orderedBy,{name:this.handleField});var asc=!order||order.asc;var reorderAll=false;var sequence=(asc?-1:1)*Infinity;_.each(records,function(record,index){if(((index<lowerIndex||index>=upperIndex)&&((asc&&sequence>=record.data[self.handleField])||(!asc&&sequence<=record.data[self.handleField])))||(index>=lowerIndex&&index<upperIndex&&sequence===record.data[self.handleField])){reorderAll=true;}
sequence=record.data[self.handleField];});if(reorderAll){records=_.without(records,record);records.splice(toIndex,0,record);}else{records=records.slice(lowerIndex,upperIndex);records=_.without(records,record);if(fromIndex>toIndex){records.unshift(record);}else{records.push(record);}}
var sequences=_.pluck(_.pluck(records,'data'),this.handleField);var recordIds=_.pluck(records,'id');if(!asc){recordIds.reverse();}
this.trigger_up('resequence_records',{handleField:this.handleField,offset:_.min(sequences),recordIds:recordIds,});},_postProcessField:function(widget,node){this._handleAttributes(widget.$el,node);},_registerModifiers:function(node,record,element,options){options=options||{};var modifiersData=this._getModifiersData(node);if(!modifiersData){var modifiers=node.attrs.modifiers||{};modifiersData={node:node,modifiers:modifiers,evaluatedModifiers:{},elementsByRecord:{},baseModeByRecord:{},};if(!_.isEmpty(modifiers)){this.allModifiersData.push(modifiersData);}}
if(!modifiersData.baseModeByRecord[record.id]||!options.keepBaseMode){modifiersData.baseModeByRecord[record.id]=options.mode||this.mode;}
if(!modifiersData.evaluatedModifiers[record.id]){try{modifiersData.evaluatedModifiers[record.id]=record.evalModifiers(modifiersData.modifiers);}catch(e){throw new Error(_.str.sprintf("While parsing modifiers for %s%s: %s",node.tag,node.tag==='field'?' '+node.attrs.name:'',e.message));}}
if(element){var newElement={};if(element instanceof jQuery){newElement.$el=element;}else{newElement.widget=element;newElement.$el=element.$el;}
if(options&&options.callback){newElement.callback=options.callback;}
if(!modifiersData.elementsByRecord[record.id]){modifiersData.elementsByRecord[record.id]=[];}
modifiersData.elementsByRecord[record.id].push(newElement);this._applyModifiers(modifiersData,record,newElement);}
return modifiersData.evaluatedModifiers[record.id];},async _render(){const oldAllFieldWidgets=this.allFieldWidgets;this.allFieldWidgets={};this.allModifiersData=[];const oldWidgets=this.widgets;this.widgets=[];await this._super(...arguments);for(const id in oldAllFieldWidgets){for(const widget of oldAllFieldWidgets[id]){widget.destroy();}}
for(const widget of oldWidgets){widget.destroy();}
if(this._isInDom){for(const handle in this.allFieldWidgets){this.allFieldWidgets[handle].forEach(widget=>{if(!utils.isComponent(widget.constructor)&&widget.on_attach_callback){widget.on_attach_callback();}});}
this.widgets.forEach(widget=>{if(widget.on_attach_callback){widget.on_attach_callback();}});WidgetAdapterMixin.on_attach_callback.call(this);}},_renderFieldWidget:function(node,record,options){options=options||{};var fieldName=node.attrs.name;var mode=options.mode||this.mode;var modifiers=this._registerModifiers(node,record,null,options);var Widget=record.fieldsInfo[this.viewType][fieldName].Widget;const legacy=!(Widget.prototype instanceof Component);const widgetOptions={hasReadonlyModifier:modifiers.readonly||this.viewEditable===false,mode:modifiers.readonly?'readonly':mode,viewType:this.viewType,};let widget;if(legacy){widget=new Widget(this,fieldName,record,widgetOptions);}else{widget=new FieldWrapper(this,Widget,{fieldName,record,options:widgetOptions,});}
if(this.allFieldWidgets[record.id]===undefined){this.allFieldWidgets[record.id]=[];}
this.allFieldWidgets[record.id].push(widget);widget.__node=node;var $el=$('<div>');let def;if(legacy){def=widget._widgetRenderAndInsert(function(){});}else{def=widget.mount(document.createDocumentFragment());}
this.defs.push(def);var self=this;def.then(function(){if(!widget.$el){return;}
widget.$el.addClass($el.attr('class'));$el.replaceWith(widget.$el);self._registerModifiers(node,record,widget,{callback:function(element,modifiers,record){element.$el.toggleClass('o_field_empty',!!(record.data.id&&(modifiers.readonly||mode==='readonly')&&element.widget.isEmpty()));},keepBaseMode:!!options.keepBaseMode,mode:mode,});self._postProcessField(widget,node);});return $el;},_renderWidget:function(record,node){const name=node.attrs.name;const Widget=widgetRegistryOwl.get(name)||widgetRegistry.get(name);const legacy=!(Widget.prototype instanceof Component);let widget;if(legacy){widget=new Widget(this,record,node,{mode:this.mode});}else{widget=new WidgetWrapper(this,Widget,{record,node,options:{mode:this.mode},});}
this.widgets.push(widget);let def;if(legacy){def=widget._widgetRenderAndInsert(function(){});}else{def=widget.mount(document.createDocumentFragment());}
this.defs.push(def);var $el=$('<div>');var self=this;def.then(function(){self._handleAttributes(widget.$el,node);self._registerModifiers(node,record,widget);widget.$el.addClass('o_widget');$el.replaceWith(widget.$el);});return $el;},_rerenderFieldWidget:function(widget,record,options){var $el=this._renderFieldWidget(widget.__node,record,options);const recordWidgets=this.allFieldWidgets[record.id];const newWidget=recordWidgets[recordWidgets.length-1];const def=this.defs[this.defs.length-1];const $div=$('<div>');$div.append($el);def.then(()=>{widget.$el.replaceWith($div.children());recordWidgets.splice(recordWidgets.indexOf(newWidget),1);var oldIndex=this._destroyFieldWidget(record.id,widget);recordWidgets.splice(oldIndex,0,newWidget);if(this._isInDom&&newWidget.on_attach_callback){newWidget.on_attach_callback();}});},_unregisterModifiersElement:function(node,recordID,element){var modifiersData=this._getModifiersData(node);if(modifiersData){var elements=modifiersData.elementsByRecord[recordID];var index=_.findIndex(elements,function(oldElement){return oldElement.widget===element||oldElement.$el[0]===element[0];});if(index>=0){elements.splice(index,1);}}},_updateAllModifiers:function(record){var self=this;var defs=[];this.defs=defs;_.each(this.allModifiersData,function(modifiersData){if(record.id in modifiersData.evaluatedModifiers){modifiersData.evaluatedModifiers[record.id]=record.evalModifiers(modifiersData.modifiers);self._applyModifiers(modifiersData,record);}});delete this.defs;return Promise.all(defs);},_onNavigationMove:function(ev){},});return BasicRenderer;});;

/* /web/static/src/legacy/js/views/basic/basic_view.js */
odoo.define('web.BasicView',function(require){"use strict";var AbstractView=require('web.AbstractView');var BasicController=require('web.BasicController');var BasicModel=require('web.BasicModel');var config=require('web.config');var fieldRegistry=require('web.field_registry');var fieldRegistryOwl=require('web.field_registry_owl');var pyUtils=require('web.py_utils');var utils=require('web.utils');const widgetRegistry=require('web.widget_registry');const widgetRegistryOwl=require('web.widgetRegistry');const{Component}=require("@odoo/owl");var BasicView=AbstractView.extend({config:_.extend({},AbstractView.prototype.config,{Model:BasicModel,Controller:BasicController,}),viewType:undefined,init:function(viewInfo,params){this._super.apply(this,arguments);this.fieldsInfo={};this.fieldsInfo[this.viewType]=this.fieldsView.fieldsInfo[this.viewType];this.rendererParams.viewType=this.viewType;this.rendererParams.viewEditable=this.controllerParams.activeActions.edit;this.controllerParams.confirmOnDelete=true;this.controllerParams.archiveEnabled='active'in this.fields?!this.fields.active.readonly:'x_active'in this.fields?!this.fields.x_active.readonly:false;this.controllerParams.hasButtons='action_buttons'in params?params.action_buttons:true;this.controllerParams.viewId=viewInfo.view_id;this.loadParams.fieldsInfo=this.fieldsInfo;this.loadParams.fields=this.fields;this.loadParams.limit=parseInt(this.arch.attrs.limit,10)||params.limit;this.loadParams.parentID=params.parentID;this.loadParams.viewType=this.viewType;this.recordID=params.recordID;this.model=params.model;},_getFieldWidgetClass:function(viewType,field,attrs){var FieldWidget;if(attrs.widget==="boolean"||(!attrs.widget&&field.type==="boolean")){FieldWidget=fieldRegistry.getAny([viewType+".boolean","boolean"]);}else if(attrs.widget){FieldWidget=fieldRegistry.getAny([viewType+"."+attrs.widget,attrs.widget])||fieldRegistryOwl.getAny([viewType+"."+attrs.widget,attrs.widget]);if(!FieldWidget){console.warn("Missing widget: ",attrs.widget," for field",attrs.name,"of type",field.type);}}else if(viewType==='kanban'&&field.type==='many2many'){FieldWidget=fieldRegistry.get('kanban.many2many_tags');}
return FieldWidget||fieldRegistryOwl.getAny([viewType+"."+field.type,field.type,"abstract"])||fieldRegistry.getAny([viewType+"."+field.type,field.type,"abstract"]);},_loadData:async function(model){if(this.recordID){await model.addFieldsInfo(this.recordID,{fields:this.fields,fieldInfo:this.fieldsInfo[this.viewType],viewType:this.viewType,});var record=model.get(this.recordID);var viewType=this.viewType;var viewFields=Object.keys(record.fieldsInfo[viewType]);var fieldNames=_.difference(viewFields,Object.keys(record.data));var fieldsInfo=record.fieldsInfo[viewType];_.each(viewFields,(name)=>{if(!_.contains(fieldNames,name)){var fieldType=record.fields[name].type;var fieldInfo=fieldsInfo[name];if(fieldInfo.Widget){var requiresSpecialData=fieldInfo.Widget.prototype.specialData;if(requiresSpecialData&&!(name in record.specialData)){fieldNames.push(name);return;}}
if((fieldType==='one2many'||fieldType==='many2many')){if(!('fieldsInfo'in record.data[name])){fieldNames.push(name);}else{var x2mFieldInfo=record.fieldsInfo[this.viewType][name];var viewType=x2mFieldInfo.viewType||x2mFieldInfo.mode;var knownFields=Object.keys(record.data[name].fieldsInfo[record.data[name].viewType]||{});var newFields=Object.keys(record.data[name].fieldsInfo[viewType]||{});if(_.difference(newFields,knownFields).length){fieldNames.push(name);}
if(record.data[name].viewType==='default'){var fieldViews=fieldInfo.views||fieldInfo.fieldsInfo||{};var defaultFieldInfo=record.data[name].fieldsInfo.default;_.each(fieldViews,function(fieldView){_.each(fieldView.fieldsInfo,function(x2mFieldInfo){_.defaults(x2mFieldInfo,defaultFieldInfo);});});}}}
if(fieldType==='many2one'){if(JSON.stringify(record.data[name].context)!==JSON.stringify(fieldInfo.context)){fieldNames.push(name);}}}});var def;if(fieldNames.length){if(model.isNew(record.id)){def=model.generateDefaultValues(record.id,{fieldNames:fieldNames,viewType:viewType,});}else{def=model.reload(record.id,{fieldNames:fieldNames,keepChanges:true,viewType:viewType,});}}
return Promise.resolve(def).then(function(){const handle=record.id;return{state:model.get(handle),handle};});}
return this._super.apply(this,arguments);},_processArch:function(arch,fv){var self=this;utils.traverse(arch,function(node){return self._processNode(node,fv);});},_processField:function(viewType,field,attrs){var self=this;attrs.Widget=this._getFieldWidgetClass(viewType,field,attrs);_.each(attrs,function(value,key){if(key.startsWith('decoration-')){attrs.decorations=attrs.decorations||[];attrs.decorations.push({name:key,expression:pyUtils._getPyJSAST(value),});}});if(!_.isObject(attrs.options)){attrs.options=attrs.options?pyUtils.py_eval(attrs.options):{};}
if(attrs.on_change&&attrs.on_change!=="0"&&!field.onChange){field.onChange="1";}
if(attrs.modifiers.invisible===true||attrs.modifiers.column_invisible===true){attrs.__no_fetch=true;}
if(!_.isEmpty(field.views)){attrs.views={};_.each(field.views,function(innerFieldsView,viewType){viewType=viewType==='tree'?'list':viewType;attrs.views[viewType]=self._processFieldsView(innerFieldsView,viewType);});}
attrs.views=attrs.views||{};attrs.mode=attrs.mode==='tree'?'list':attrs.mode;if(!attrs.views.list&&attrs.views.tree){attrs.views.list=attrs.views.tree;}
if(field.type==='one2many'||field.type==='many2many'){if(attrs.Widget.prototype.useSubview){var mode=attrs.mode;if(!mode){if(attrs.views.list&&!attrs.views.kanban){mode='list';}else if(!attrs.views.list&&attrs.views.kanban){mode='kanban';}else{mode='list,kanban';}}
if(mode.indexOf(',')!==-1){mode=config.device.isMobile?'kanban':'list';}
attrs.mode=mode;if(mode in attrs.views){var view=attrs.views[mode];this._processSubViewAttrs(view,attrs);}}
if(attrs.Widget.prototype.fieldsToFetch){attrs.viewType='default';attrs.relatedFields=_.extend({},attrs.Widget.prototype.fieldsToFetch);attrs.fieldsInfo={default:_.mapObject(attrs.Widget.prototype.fieldsToFetch,function(){return{};}),};if(attrs.options.color_field){attrs.relatedFields[attrs.options.color_field]={type:'integer'};attrs.fieldsInfo.default[attrs.options.color_field]={};}}}
if(attrs.Widget.prototype.fieldDependencies){attrs.fieldDependencies=attrs.Widget.prototype.fieldDependencies;}
return attrs;},_processFieldsView:function(fieldsView,viewType){var fv=this._super.apply(this,arguments);viewType=viewType||this.viewType;fv.type=viewType;fv.fieldsInfo=Object.create(null);fv.fieldsInfo[viewType]=Object.create(null);this._processArch(fv.arch,fv);return fv;},_processNode:function(node,fv){const viewType=fv.type;const fieldsInfo=fv.fieldsInfo[viewType];const fields=fv.viewFields;const _addFieldDependencies=(deps)=>{for(const dependencyName in deps){const dependencyDict={name:dependencyName,type:deps[dependencyName].type};if(!(dependencyName in fieldsInfo)){fieldsInfo[dependencyName]=_.extend({},dependencyDict,{options:deps[dependencyName].options||{},});}
if(!(dependencyName in fields)){fields[dependencyName]=dependencyDict;}
if(fv.fields&&!(dependencyName in fv.fields)){fv.fields[dependencyName]=dependencyDict;}}};if(typeof node==='string'){return false;}
if(!_.isObject(node.attrs.modifiers)){node.attrs.modifiers=node.attrs.modifiers?JSON.parse(node.attrs.modifiers):{};}
if(!_.isObject(node.attrs.options)&&node.tag==='button'){node.attrs.options=node.attrs.options?JSON.parse(node.attrs.options):{};}
if(node.tag==='field'){fieldsInfo[node.attrs.name]=this._processField(viewType,fields[node.attrs.name],node.attrs?_.clone(node.attrs):{});if(fieldsInfo[node.attrs.name].fieldDependencies){var deps=fieldsInfo[node.attrs.name].fieldDependencies;_addFieldDependencies(deps);}
return false;}
if(node.tag==='widget'){const Widget=widgetRegistryOwl.get(node.attrs.name)||widgetRegistry.get(node.attrs.name);const legacy=!(Widget.prototype instanceof Component);let deps;if(legacy&&Widget.prototype.fieldDependencies){deps=Widget.prototype.fieldDependencies;}else if(Widget.fieldDependencies){deps=Widget.fieldDependencies;}
if(deps){_addFieldDependencies(deps);}
return false;}
return node.tag!=='arch';},_processSubViewAttrs:function(view,attrs){var defaultOrder=view.arch.attrs.default_order;if(defaultOrder){attrs.orderedBy=_.map(defaultOrder.split(','),function(order){order=order.trim().split(' ');return{name:order[0],asc:order[1]!=='desc'};});}else{var handleField=_.find(view.arch.children,function(child){return child.attrs&&child.attrs.widget==='handle';});if(handleField){attrs.orderedBy=[{name:handleField.attrs.name,asc:true}];}}
attrs.columnInvisibleFields={};_.each(view.arch.children,function(child){if(child.attrs&&child.attrs.modifiers){attrs.columnInvisibleFields[child.attrs.name]=child.attrs.modifiers.column_invisible||false;}});},});return BasicView;});;

/* /web/static/src/legacy/js/views/basic/widget_registry.js */
odoo.define('web.widget_registry',function(require){"use strict";var Registry=require('web.Registry');const{Component}=owl;return new Registry(null,(value)=>!(value.prototype instanceof Component));});;

/* /web/static/src/legacy/js/views/basic/widget_registry_owl.js */
odoo.define("web.widgetRegistry",function(require){"use strict";const Registry=require("web.Registry");const{Component}=owl;return new Registry(null,(value)=>value.prototype instanceof Component);});;

/* /web/static/src/legacy/js/views/basic/widget_wrapper.js */
odoo.define('web.WidgetWrapper',function(require){"use strict";const{ComponentWrapper}=require('web.OwlCompatibility');class WidgetWrapper extends ComponentWrapper{updateState(state){return this.update(Object.assign({},this.props,{record:state}));}}
return WidgetWrapper;});;

/* /web/static/src/legacy/js/views/field_manager_mixin.js */
odoo.define('@web/legacy/js/views/field_manager_mixin',async function(require){'use strict';let __exports={};const BasicModel=require('web.BasicModel');const concurrency=require('web.concurrency');var FieldManagerMixin={custom_events:{field_changed:'_onFieldChanged',load:'_onLoad',mutexify:'_onMutexify',},init:function(model){this.model=model||new BasicModel(this);this.mutex=new concurrency.Mutex();},_applyChanges:function(dataPointID,changes,event){var self=this;var options=_.pick(event.data,'context','doNotSetDirty','notifyChange','viewType','allowWarning');return this.model.notifyChanges(dataPointID,changes,options).then(function(result){if(event.data.force_save){return self.model.save(dataPointID).then(function(){return self._confirmSave(dataPointID);}).guardedCatch(function(){return self._rejectSave(dataPointID);});}else if(options.notifyChange!==false){return self._confirmChange(dataPointID,result,event);}});},_confirmChange:function(id,fields,event){return Promise.resolve();},_confirmSave:function(id){return Promise.resolve();},_rejectSave:function(id){return Promise.resolve();},_onFieldChanged:function(event){event.stopPropagation();return this._applyChanges(event.data.dataPointID,event.data.changes,event).then(event.data.onSuccess||function(){}).guardedCatch(event.data.onFailure||function(){});},_onLoad:function(event){var self=this;event.stopPropagation();var data=event.data;if(!data.on_success){return;}
var params={};if('limit'in data){params.limit=data.limit;}
if('offset'in data){params.offset=data.offset;}
this.mutex.exec(function(){return self.model.reload(data.id,params).then(function(db_id){data.on_success(self.model.get(db_id));});});},_onMutexify:function(ev){ev.stopPropagation();this.mutex.exec(ev.data.action);},};__exports[Symbol.for("default")]=FieldManagerMixin;return __exports;});odoo.define(`web.FieldManagerMixin`,async function(require){return require('@web/legacy/js/views/field_manager_mixin')[Symbol.for("default")];});;

/* /web/static/src/legacy/js/views/form/form_controller.js */
odoo.define('web.FormController',function(require){"use strict";var BasicController=require('web.BasicController');var core=require('web.core');var Dialog=require('web.Dialog');var dialogs=require('web.view_dialogs');var _t=core._t;var qweb=core.qweb;var FormController=BasicController.extend({custom_events:_.extend({},BasicController.prototype.custom_events,{button_clicked:'_onButtonClicked',edited_list:'_onEditedList',open_one2many_record:'_onOpenOne2ManyRecord',open_record:'_onOpenRecord',toggle_column_order:'_onToggleColumnOrder',focus_control_button:'_onFocusControlButton',form_dialog_discarded:'_onFormDialogDiscarded',quick_edit:'_onQuickEdit',}),multiClickTime:350,init:function(parent,model,renderer,params){this._super.apply(this,arguments);this.actionButtons=params.actionButtons;this.disableAutofocus=params.disableAutofocus;this.footerToButtons=params.footerToButtons;this.defaultButtons=params.defaultButtons;this.hasActionMenus=params.hasActionMenus;this.toolbarActions=params.toolbarActions||{};this.quickEditTimeout=undefined;},on_attach_callback:function(){this._super.apply(this,arguments);this.autofocus();},willRestore:function(shouldReload){this.mode=this.model.isNew(this.handle)?'edit':'readonly';if(shouldReload){return this._setMode(this.mode);}},autofocus:function(){if(!this.disableAutofocus){var isControlActivted=this.renderer.autofocus();if(!isControlActivted){if(this.$buttons&&this.mode==='readonly'){return this.$buttons.find('.o_form_button_edit').focus();}}}},canBeDiscarded:function(recordId){if(recordId!==this.handle&&this.isDirty(recordId)){return Promise.reject();}else{return Promise.resolve(true);}},createRecord:async function(parentID,additionalContext){const record=this.model.get(this.handle,{raw:true});const handle=await this.model.load({context:record.getContext({additionalContext:additionalContext}),fields:record.fields,fieldsInfo:record.fieldsInfo,modelName:this.modelName,parentID:parentID,res_ids:record.res_ids,type:'record',viewType:'form',});this.handle=handle;this._updateControlPanel();return this._setMode('edit');},getSelectedIds:function(){var env=this.model.get(this.handle,{env:true});return env.currentId?[env.currentId]:[];},getTitle:function(){return this.model.getName(this.handle);},getState:function(){const state=this._super.apply(this,arguments);const env=this.model.get(this.handle,{env:true});state.id=env.currentId;return state;},renderButtons:function($node){var $footer=this.footerToButtons?this.renderer.$el&&this.renderer.$('footer'):null;var mustRenderFooterButtons=$footer&&$footer.length;if((this.defaultButtons&&!this.$buttons)||mustRenderFooterButtons){this.$buttons=$('<div/>');if(mustRenderFooterButtons){this.$buttons.append($footer);}else{this.$buttons.append(qweb.render("FormView.buttons",{widget:this}));this.$buttons.on('click','.o_form_button_edit',this._onEdit.bind(this));this.$buttons.on('click','.o_form_button_create',this._onCreate.bind(this));this.$buttons.on('click','.o_form_button_save',this._onSave.bind(this));this.$buttons.on('click','.o_form_button_cancel',this._onDiscard.bind(this));this._assignSaveCancelKeyboardBehavior(this.$buttons.find('.o_form_buttons_edit'));this.$buttons.find('.o_form_buttons_edit').tooltip({delay:{show:200,hide:0},title:function(){return qweb.render('SaveCancelButton.tooltip');},trigger:'manual',});}}
if(this.$buttons&&$node){this.$buttons.appendTo($node);}},_getPagingInfo:function(){if(this.model.isNew(this.handle)){return null;}
return Object.assign(this._super(...arguments),{validate:this.saveChanges.bind(this),});},_getActionMenuItems:function(state){if(!this.hasActionMenus||this.mode==='edit'){return null;}
const props=this._super(...arguments);const activeField=this.model.getActiveField(state);const otherActionItems=[];if(this.archiveEnabled&&activeField in state.data){if(state.data[activeField]){otherActionItems.push({description:_t("Archive"),callback:()=>{Dialog.confirm(this,_t("Are you sure that you want to archive this record?"),{confirm_callback:()=>this._toggleArchiveState(true),});},});}else{otherActionItems.push({description:_t("Unarchive"),callback:()=>this._toggleArchiveState(false),});}}
if(this.activeActions.create&&this.activeActions.duplicate){otherActionItems.push({description:_t("Duplicate"),callback:()=>this._onDuplicateRecord(this),});}
if(this.activeActions.delete){otherActionItems.push({description:_t("Delete"),callback:()=>this._onDeleteRecord(this),});}
return Object.assign(props,{items:Object.assign(this.toolbarActions,{other:otherActionItems}),});},saveRecord:async function(){const changedFields=await this._super(...arguments);this._updateControlPanel();if(_t.database.multi_lang&&changedFields.length){var fields=this.renderer.state.fields;var data=this.renderer.state.data;var alertFields={};for(var k=0;k<changedFields.length;k++){var field=fields[changedFields[k]];var fieldData=data[changedFields[k]];if(field.translate&&fieldData&&fieldData!=='<p><br></p>'){alertFields[changedFields[k]]=field;}}
if(!_.isEmpty(alertFields)){this.renderer.updateAlertFields(alertFields);}}
return changedFields;},update:async function(params,options){if('currentId'in params&&!params.currentId){this.mode='edit';}
params=_.extend({viewType:'form',mode:this.mode},params);await this._super(params,options);this.autofocus();},updateButtons:function(){if(!this.$buttons){return;}
if(this.footerToButtons){var $footer=this.renderer.$el&&this.renderer.$('footer');if($footer&&$footer.length){this.$buttons.empty().append($footer);}}
var edit_mode=(this.mode==='edit');this.$buttons.find('.o_form_buttons_edit').toggleClass('o_hidden',!edit_mode);this.$buttons.find('.o_form_buttons_view').toggleClass('o_hidden',edit_mode);},_applyChanges:async function(){const result=await this._super.apply(this,arguments);core.bus.trigger('DOM_updated');return result;},_assignSaveCancelKeyboardBehavior:function($saveCancelButtonContainer){var self=this;$saveCancelButtonContainer.children().on('keydown',function(e){switch(e.which){case $.ui.keyCode.ENTER:e.preventDefault();self.saveRecord();break;case $.ui.keyCode.ESCAPE:e.preventDefault();self._discardChanges();break;case $.ui.keyCode.TAB:if(!e.shiftKey&&e.target.classList.contains('btn-primary')){$saveCancelButtonContainer.tooltip('show');e.preventDefault();}
break;}});},_confirmSave:function(id){if(id===this.handle){if(this.mode==='readonly'){return this.reload();}else{return this._setMode('readonly');}}else{var record=this.model.get(this.handle);var containsChangedRecord=function(value){return _.isObject(value)&&(value.id===id||_.find(value.data,containsChangedRecord));};var changedFields=_.findKey(record.data,containsChangedRecord);return this.renderer.confirmChange(record,record.id,[changedFields]);}},_disableButtons:function(){this._super.apply(this,arguments);this.renderer.disableButtons();},_enableButtons:function(){this._super.apply(this,arguments);this.renderer.enableButtons();},_onDeletedRecords:function(){var state=this.model.get(this.handle,{raw:true});if(!state.res_ids.length){this.trigger_up('history_back');}else{this._super.apply(this,arguments);}},_rejectSave:function(){if(this.mode==='readonly'){return this.reload();}
return this._super.apply(this,arguments);},_setEditMode:function(){this._disableButtons();return this.mutex.getUnlockedDef().then(this._setMode.bind(this,'edit')).then(this._enableButtons.bind(this)).guardedCatch(this._enableButtons.bind(this));},_setMode:function(mode,recordID){if((recordID||this.handle)===this.handle){this.model.unfreezeOrder(this.handle);}
if(this.mode!==mode){this.renderer.resetLastActivatedField();}
return this._super.apply(this,arguments);},_shouldBounceOnClick(element){return this.mode==='readonly'&&!!element.closest('.oe_title, .o_inner_group')&&this.quickEditTimeout===undefined;},_onBeforeUnload:function(){this._urgentSave(this.handle);},_onButtonClicked:function(ev){ev.stopPropagation();var self=this;var def;this._disableButtons();function saveAndExecuteAction(){return self.saveRecord(self.handle,{stayInEdit:true,}).then(function(){var record=self.model.get(ev.data.record.id);return self._callButtonAction(attrs,record);});}
var attrs=ev.data.attrs;if(attrs.confirm){def=new Promise(function(resolve,reject){Dialog.confirm(self,attrs.confirm,{confirm_callback:saveAndExecuteAction,}).on("closed",null,resolve);});}else if(attrs.special==='cancel'){def=this._callButtonAction(attrs,ev.data.record);}else if(!attrs.special||attrs.special==='save'){def=saveAndExecuteAction();}else{console.warn('Unhandled button event',ev);return;}
def.then(function(){self._enableButtons();if(attrs.close){self.trigger_up('close_dialog');}}).guardedCatch(this._enableButtons.bind(this));},_onCreate:function(){this.createRecord();},_onDeleteRecord:function(){this._deleteRecords([this.handle]);},_onDiscard:function(){this._disableButtons();this._discardChanges().then(this._enableButtons.bind(this)).guardedCatch(this._enableButtons.bind(this));},_onDuplicateRecord:async function(){const handle=await this.model.duplicateRecord(this.handle);this.handle=handle;this._updateControlPanel();this._setMode('edit');},_onEdit:function(){this._setEditMode();},_onEditedList:function(ev){ev.stopPropagation();if(ev.data.id){this.model.save(ev.data.id,{savePoint:true});}
this.model.freezeOrder(ev.data.id);},_onFocusControlButton:function(e){if(this.$buttons){e.stopPropagation();this.$buttons.find('.btn-primary:visible:first()').focus();}},_onFormDialogDiscarded:function(ev){ev.stopPropagation();var isFocused=this.renderer.focusLastActivatedWidget();if(ev.data.callback){ev.data.callback(_.str.toBool(isFocused));}},_onOpenOne2ManyRecord:async function(ev){ev.stopPropagation();var data=ev.data;var record;if(data.id){record=this.model.get(data.id,{raw:true});}
await this.model.mutex.getUnlockedDef();new dialogs.FormViewDialog(this,{context:data.context,domain:data.domain,fields_view:data.fields_view,model:this.model,on_saved:data.on_saved,on_remove:data.on_remove,parentID:data.parentID,readonly:data.readonly,editable:data.editable,deletable:record?data.deletable:false,disable_multiple_selection:data.disable_multiple_selection,recordID:record&&record.id,res_id:record&&record.res_id,res_model:data.field.relation,shouldSaveLocally:true,title:(record?_t("Open: "):_t("Create "))+(ev.target.string||data.field.string),}).open();},_onOpenRecord:function(ev){ev.stopPropagation();var self=this;var record=this.model.get(ev.data.id,{raw:true});new dialogs.FormViewDialog(self,{context:ev.data.context,fields_view:ev.data.fields_view,on_saved:ev.data.on_saved,on_remove:ev.data.on_remove,readonly:ev.data.readonly,deletable:ev.data.deletable,editable:ev.data.editable,res_id:record.res_id,res_model:record.model,title:_t("Open: ")+ev.data.string,}).open();},_onQuickEdit:function(ev){ev.stopPropagation();clearTimeout(this.quickEditTimeout);if(this.activeActions.edit&&!window.getSelection().toString()){const quickEdit=async()=>{if(!this.isDestroyed()){await this._setEditMode();this.renderer.quickEdit(ev.data);}
this.quickEditTimeout=undefined;};if(this.multiClickTime>0){this.quickEditTimeout=setTimeout(quickEdit,this.multiClickTime);}else{quickEdit();}}},_onSave:function(ev){ev.stopPropagation();this._disableButtons();this.saveRecord().then(this._enableButtons.bind(this)).guardedCatch(this._enableButtons.bind(this));},_onToggleColumnOrder:function(ev){ev.stopPropagation();var self=this;this.model.setSort(ev.data.id,ev.data.name).then(function(){var field=ev.data.field;var state=self.model.get(self.handle);self.renderer.confirmChange(state,state.id,[field]);});},_toggleArchiveState:function(archive){const resIds=this.model.localIdsToResIds([this.handle]);this._archive(resIds,archive);},});return FormController;});;

/* /web/static/src/legacy/js/views/form/form_renderer.js */
odoo.define('web.FormRenderer',function(require){"use strict";var BasicRenderer=require('web.BasicRenderer');var config=require('web.config');var core=require('web.core');var dom=require('web.dom');var viewUtils=require('web.viewUtils');var _t=core._t;var qweb=core.qweb;const scrollUtils=require("@web/core/utils/scrolling");const symbol=Symbol('form');var FormRenderer=BasicRenderer.extend({className:"o_legacy_form_view",events:_.extend({},BasicRenderer.prototype.events,{'click .o_notification_box .oe_field_translate':'_onTranslate','click .o_notification_box .btn-close':'_onTranslateNotificationClose','shown.bs.tab a[data-bs-toggle="tab"]':'_onNotebookTabChanged','click .o_form_label':'_onFieldLabelClicked',}),custom_events:_.extend({},BasicRenderer.prototype.custom_events,{'navigation_move':'_onNavigationMove','activate_next_widget':'_onActivateNextWidget','quick_edit':'_onQuickEdit',}),INNER_GROUP_COL:2,OUTER_GROUP_COL:2,quickEditExclusion:['.o_legacy_list_view tbody','.oe_button_box','.oe_subtotal_footer',],init:function(parent,state,params){this._super.apply(this,arguments);this.fieldIdsToNames=params.fieldIdsToNames;this.idsForLabels={};this.lastActivatedFieldIndex=-1;this.alertFields={};this.labelsToPostProcess=[];this.renderInvisible=false;this.manuallyDisabledButtons=new Set();},start:function(){this._applyFormSizeClass();return this._super.apply(this,arguments);},on_attach_callback:function(){this._super.apply(this,arguments);core.bus.on("SCROLLER:ANCHOR_LINK_CLICKED",this,this._onAnchorLinkClicked);},on_detach_callback:function(){this._super.apply(this,arguments);core.bus.off("SCROLLER:ANCHOR_LINK_CLICKED",this,this._onAnchorLinkClicked);},autofocus:function(){if(this.mode==='readonly'){var firstPrimaryFormButton=this.$el.find('button.btn-primary:enabled:visible:first()');if(firstPrimaryFormButton.length>0){return firstPrimaryFormButton.focus();}else{return;}}
var focusWidget=this.defaultFocusField;if(!focusWidget||!focusWidget.isFocusable()){var widgets=this.allFieldWidgets[this.state.id];for(var i=0;i<(widgets?widgets.length:0);i++){var widget=widgets[i];if(widget.isFocusable()){focusWidget=widget;break;}}}
if(focusWidget){return focusWidget.activate({noselect:true,noAutomaticCreate:true});}},canBeSaved:function(){var fieldNames=this._super.apply(this,arguments);var $labels=this.$('label');$labels.removeClass('o_field_invalid');const allWidgets=this.allFieldWidgets[this.state.id]||[];const widgets=allWidgets.filter(w=>fieldNames.includes(w.name));for(const widget of widgets){const idForLabel=this.idsForLabels[widget[symbol]];if(idForLabel){$labels.filter('[for='+idForLabel+']').addClass('o_field_invalid');}}
return fieldNames;},updateAlertFields:function(alertFields){if(this.state.res_id){this.alertFields[this.state.res_id]=_.extend(this.alertFields[this.state.res_id]||{},alertFields);this.displayTranslationAlert();}},displayTranslationAlert:function(){this.$('.o_notification_box').remove();if(this.alertFields[this.state.res_id]){var $notification=$(qweb.render('notification-box',{type:'info'})).append(qweb.render('translation-alert',{fields:this.alertFields[this.state.res_id],lang:_t.database.parameters.name}));if(this.$('.o_form_statusbar').length){this.$('.o_form_statusbar').after($notification);}else if(this.$('.o_form_sheet_bg').length){this.$('.o_form_sheet_bg').prepend($notification);}else{this.$el.prepend($notification);}}},confirmChange:function(){var self=this;return this._super.apply(this,arguments).then(function(resetWidgets){_.each(resetWidgets,function(widget){self._setIDForLabel(widget,self.idsForLabels[widget[symbol]]);});if(self.$('.o_field_invalid').length){self.canBeSaved(self.state.id);}
self._postProcessLabels();return resetWidgets;});},disableButtons:function(){const allButtons=this.$el[0].querySelectorAll('.o_statusbar_buttons button, .oe_button_box button');for(const button of allButtons){if(!button.getAttribute("disabled")){this.manuallyDisabledButtons.add(button)
button.setAttribute("disabled",true)}}},enableButtons:function(){this.manuallyDisabledButtons.forEach((button)=>{button.removeAttribute("disabled");});this.manuallyDisabledButtons.clear();},focusLastActivatedWidget:function(){if(this.lastActivatedFieldIndex!==-1){return this._activateNextFieldWidget(this.state,this.lastActivatedFieldIndex-1,{noAutomaticCreate:true});}
return false;},getLocalState:function(){const state={};const sheetBg=this.el.querySelector('.o_form_sheet_bg');if(sheetBg){state.scrollValue=sheetBg.scrollTop;}
for(const notebook of this.el.querySelectorAll(':scope div.o_notebook')){const name=notebook.dataset.name;const navs=notebook.querySelectorAll(':scope .o_notebook_headers .nav-item > .nav-link');state[name]=Math.max([...navs].findIndex(nav=>nav.classList.contains('active')),0);}
return state;},quickEdit:function(quickEditInfo){const{fieldName,extraInfo}=quickEditInfo;const fieldWidget=this.allFieldWidgets[this.state.id].find(field=>field.name===fieldName&&field.isFocusable());if(fieldWidget){fieldWidget.quickEdit(extraInfo);}},resetLastActivatedField:function(){this.lastActivatedFieldIndex=-1;},resetLocalState(){for(const notebook of this.el.querySelectorAll(':scope div.o_notebook')){[...notebook.querySelectorAll(':scope .o_notebook_headers .nav-item .nav-link')].map(nav=>nav.classList.remove('active'));[...notebook.querySelectorAll(':scope .tab-content > .tab-pane')].map(tab=>tab.classList.remove('active'));}},setLocalState:function(state){for(const notebook of this.el.querySelectorAll(':scope div.o_notebook')){if(notebook.closest(".o_field_widget")){continue;}
const name=notebook.dataset.name;if(name in state){const navs=notebook.querySelectorAll(':scope .o_notebook_headers .nav-item');const pages=notebook.querySelectorAll(':scope > .tab-content > .tab-pane');const validTabsAmount=pages.length;if(!validTabsAmount){continue;}
let activeIndex=state[name];if(navs[activeIndex].classList.contains('o_invisible_modifier')){activeIndex=[...navs].findIndex(nav=>!nav.classList.contains('o_invisible_modifier'));}
if(activeIndex<=0){continue;}
for(let i=0;i<validTabsAmount;i++){navs[i].querySelector('.nav-link').classList.toggle('active',activeIndex===i);pages[i].classList.toggle('active',activeIndex===i);}
core.bus.trigger('DOM_updated');}}
const sheetBg=this.el.querySelector('.o_form_sheet_bg');if(sheetBg){sheetBg.scrollTop=state.scrollValue;}},updateState:function(state,params){this._setState(state);this.mode=(params&&'mode'in params)?params.mode:this.mode;if(params.fieldNames){return this.confirmChange(this.state,this.state.id,params.fieldNames);}
return this._super.apply(this,arguments);},_activateFirstVisibleTab(tabs){const visibleTabs=tabs.filter((tab)=>!tab.$header.hasClass("o_invisible_modifier"));const autofocusTab=visibleTabs.findIndex((tab)=>tab.node.attrs.autofocus==="autofocus");const tabToFocus=visibleTabs[Math.max(0,autofocusTab)];if(tabToFocus){tabToFocus.$header.find('.nav-link').addClass('active');tabToFocus.$page.addClass('active');}},_activateNextFieldWidget:function(record,currentIndex){if((currentIndex+1)>=(this.allFieldWidgets[record.id]||[]).length){this.trigger_up('focus_control_button');this.lastActivatedFieldIndex=-1;}else{var activatedIndex=this._super.apply(this,arguments);if(activatedIndex===-1){this.trigger_up('focus_control_button');this.lastActivatedFieldIndex=-1;}
else{this.lastActivatedFieldIndex=activatedIndex;}}
return this.lastActivatedFieldIndex;},_addButtonTooltip:function(node,$button){var self=this;$button.tooltip({title:function(){return qweb.render('WidgetButton.tooltip',{debug:config.isDebug(),state:self.state,node:node,});},});},_addOnClickAction:function($el,node){if(node.attrs.special||node.attrs.confirm||node.attrs.type||$el.hasClass('oe_stat_button')){var self=this;$el.on("click",function(){self.trigger_up('button_clicked',{attrs:node.attrs,record:self.state,});});}},_applyFormSizeClass:function(){const formEl=this.$el[0];if(config.device.size_class<=config.device.SIZES.XS){formEl.classList.add('o_xxs_form_view');}else{formEl.classList.remove('o_xxs_form_view');}
if(config.device.size_class===config.device.SIZES.XXL){formEl.classList.add('o_xxl_form_view');}else{formEl.classList.remove('o_xxl_form_view');}},_getIDForLabel:function(uid){if(!this.idsForLabels[uid]){this.idsForLabels[uid]=_.uniqueId('o_field_input_');}
return this.idsForLabels[uid];},_getRecord:function(recordId){return this.state.id===recordId?this.state:null;},_postProcessField:function(widget,node){this._super.apply(this,arguments);widget[symbol]=node.attrs.id;this._setIDForLabel(widget,this._getIDForLabel(node.attrs.id));if(JSON.parse(node.attrs.default_focus||"0")){this.defaultFocusField=widget;}},_postProcessLabels(){this.labelsToPostProcess.forEach((label)=>{label.call();});this.labelsToPostProcess=[];},_renderButtonBox:function(node){var self=this;var $result=$('<'+node.tag+'>',{class:'o_not_full'});var nextDefIndex=this.defs.length;var buttons=_.map(node.children,function(child){if(child.tag==='button'){return self._renderStatButton(child);}else{return self._renderNode(child);}});var $tempWrapper=$('<div>');_.each(buttons,function($button){$button.appendTo($tempWrapper);});var defs=this.defs.slice(nextDefIndex);Promise.all(defs).then(function(){buttons=$tempWrapper.children();var buttons_partition=_.partition(buttons,function(button){return $(button).is('.o_invisible_modifier');});var invisible_buttons=buttons_partition[0];var visible_buttons=buttons_partition[1];var nb_buttons=self._renderButtonBoxNbButtons();var unfolded_buttons=visible_buttons.slice(0,nb_buttons).concat(invisible_buttons);var folded_buttons=visible_buttons.slice(nb_buttons);if(folded_buttons.length===1){unfolded_buttons=buttons;folded_buttons=[];}
var full=(visible_buttons.length>nb_buttons);$result.toggleClass('o_full',full).toggleClass('o_not_full',!full);_.each(unfolded_buttons,function(button){$(button).appendTo($result);});if(folded_buttons.length){$result.append(dom.renderButton({attrs:{'class':'oe_stat_button o_button_more dropdown-toggle','data-bs-toggle':'dropdown',},text:_t("More"),}));var $dropdown=$("<div>",{class:"dropdown-menu o_dropdown_more",role:"menu"});_.each(folded_buttons,function(button){$(button).addClass('dropdown-item').appendTo($dropdown);});$dropdown.appendTo($result);}});this._handleAttributes($result,node);this._registerModifiers(node,this.state,$result);return $result;},_renderButtonBoxNbButtons:function(){return[2,2,2,4][config.device.size_class]||7;},_renderFieldWidget(node){if(!this.renderInvisible&&node.attrs.modifiers.invisible===true){return $();}
return this._super(...arguments);},_renderGenericTag:function(node){var $result=$('<'+node.tag+'>',_.omit(node.attrs,'modifiers'));this._handleAttributes($result,node);this._registerModifiers(node,this.state,$result);$result.append(_.map(node.children,this._renderNode.bind(this)));return $result;},_renderHeaderButton:function(node){var $button=viewUtils.renderButtonFromNode(node);if($button.not('.btn-primary, .btn-secondary, .btn-link, .btn-success, .btn-info, .btn-warning, .btn-danger').length){$button.addClass('btn-secondary');}
this._addOnClickAction($button,node);this._handleAttributes($button,node);this._registerModifiers(node,this.state,$button);if(config.isDebug()||node.attrs.help){this._addButtonTooltip(node,$button);}
return $button;},_renderHeaderButtons:function(node){var self=this;var buttons=[];var children=[...node.children];while(children.length){var child=children.shift();if(child.tag==='button'){buttons.push(self._renderHeaderButton(child));}
if(child.tag==='widget'){buttons.push(self._renderTagWidget(child));}
if(child.children){children.push(...child.children);}}
return this._renderStatusbarButtons(buttons);},_renderInnerGroup:function(node){var self=this;var $result=$('<table/>',{class:'o_group o_inner_group'});var $tbody=$('<tbody />').appendTo($result);this._handleAttributes($result,node);this._registerModifiers(node,this.state,$result);var col=parseInt(node.attrs.col,10)||this.INNER_GROUP_COL;if(node.attrs.string){var $sep=$('<tr><td colspan="'+col+'" style="width: 100%;"><div class="o_horizontal_separator">'+node.attrs.string+'</div></td></tr>');$result.append($sep);}
var rows=[];var $currentRow=$('<tr/>');var currentColspan=0;node.children.forEach(function(child){if(child.tag==='newline'){rows.push($currentRow);$currentRow=$('<tr/>');currentColspan=0;return;}
var colspan=parseInt(child.attrs.colspan,10);var isLabeledField=(child.tag==='field'&&child.attrs.nolabel!=='1');if(!colspan){if(isLabeledField){colspan=2;}else{colspan=1;}}
var finalColspan=colspan-(isLabeledField?1:0);currentColspan+=colspan;if(currentColspan>col){rows.push($currentRow);$currentRow=$('<tr/>');currentColspan=colspan;}
var $tds;if(child.tag==='field'){$tds=self._renderInnerGroupField(child);}else if(child.tag==='label'){$tds=self._renderInnerGroupLabel(child);}else{var $td=$('<td/>');var $child=self._renderNode(child);if($child.hasClass('o_td_label')){$td.addClass('o_td_label');$child.removeClass('o_td_label');}
$tds=$td.append($child);}
if(finalColspan>1){$tds.last().attr('colspan',finalColspan);}
$currentRow.append($tds);});rows.push($currentRow);_.each(rows,function($tr){var nonLabelColSize=100/(col-$tr.children('.o_td_label').length);_.each($tr.children(':not(.o_td_label)'),function(el){var $el=$(el);$el.css('width',((parseInt($el.attr('colspan'),10)||1)*nonLabelColSize)+'%');});$tbody.append($tr);});return $result;},_renderInnerGroupField:function(node){var $el=this._renderFieldWidget(node,this.state);var $tds=$('<td/>').append($el);if(node.attrs.nolabel!=='1'){var $labelTd=this._renderInnerGroupLabel(node);$tds=$labelTd.add($tds);if(/\boe_edit_only\b/.test(node.attrs.class)){$tds.addClass('oe_edit_only');}
if(/\boe_read_only\b/.test(node.attrs.class)){$tds.addClass('oe_read_only');}}
return $tds;},_renderInnerGroupLabel:function(node){return $('<td/>',{class:'o_td_label'}).append(this._renderTagLabel(node));},_renderNode:function(node){var renderer=this['_renderTag'+_.str.capitalize(node.tag)];if(renderer){return renderer.call(this,node);}
if(node.tag==='div'&&node.attrs.name==='button_box'){return this._renderButtonBox(node);}
if(_.isString(node)){return node;}
return this._renderGenericTag(node);},_renderOuterGroup:function(node){var self=this;var $result=$('<div/>',{class:'o_group'});var nbCols=parseInt(node.attrs.col,10)||this.OUTER_GROUP_COL;var colSize=Math.max(1,Math.round(12/nbCols));if(node.attrs.string){var $sep=$('<div/>',{class:'o_horizontal_separator'}).text(node.attrs.string);$result.append($sep);}
$result.append(_.map(node.children,function(child){if(child.tag==='newline'){return $('<br/>');}
var $child=self._renderNode(child);$child.addClass('o_group_col_'+(colSize*(parseInt(child.attrs.colspan,10)||1)));return $child;}));this._handleAttributes($result,node);this._registerModifiers(node,this.state,$result);return $result;},_renderStatButton:function(node){var $button=viewUtils.renderButtonFromNode(node,{extraClass:'oe_stat_button',});const buttonDoesStartAnAction=node.attrs.type||node.attrs.name;if(!buttonDoesStartAnAction){$button[0].setAttribute("disabled",true);}
$button.append(_.map(node.children,this._renderNode.bind(this)));if(node.attrs.help){this._addButtonTooltip(node,$button);}
if(buttonDoesStartAnAction){this._addOnClickAction($button,node);}
this._handleAttributes($button,node);this._registerModifiers(node,this.state,$button);return $button;},_renderStatusbarButtons:function(buttons){var $statusbarButtons=$('<div>',{class:'o_statusbar_buttons'});buttons.forEach(button=>$statusbarButtons.append(button));return $statusbarButtons;},_renderTabHeader:function(page,page_id){var $a=$('<a>',{'data-bs-toggle':'tab',disable_anchor:'true',href:'#'+page_id,class:'nav-link',role:'tab',text:page.attrs.string,name:page.attrs.name,});return $('<li>',{class:'nav-item'}).append($a);},_renderTabPage:function(page,page_id){var $result=$('<div class="tab-pane" id="'+page_id+'">');$result.append(_.map(page.children,this._renderNode.bind(this)));return $result;},_renderTagButton:function(node){var $button=viewUtils.renderButtonFromNode(node);$button.append(_.map(node.children,this._renderNode.bind(this)));this._addOnClickAction($button,node);this._handleAttributes($button,node);this._registerModifiers(node,this.state,$button);if(config.isDebug()||node.attrs.help){this._addButtonTooltip(node,$button);}
return $button;},_renderTagField:function(node){return this._renderFieldWidget(node,this.state);},_renderTagForm:function(node){var $result=$('<div/>');if(node.attrs.class){$result.addClass(node.attrs.class);}
var allNodes=node.children.map(this._renderNode.bind(this));$result.append(allNodes);return $result;},_renderTagGroup:function(node){var isOuterGroup=_.some(node.children,function(child){return child.tag==='group';});if(!isOuterGroup){return this._renderInnerGroup(node);}
return this._renderOuterGroup(node);},_renderTagHeader:function(node){var self=this;var $statusbar=$('<div>',{class:'o_form_statusbar'});$statusbar.append(this._renderHeaderButtons(node));_.each(node.children,function(child){if(child.tag==='field'){var $el=self._renderFieldWidget(child,self.state);$statusbar.append($el);}});this._handleAttributes($statusbar,node);this._registerModifiers(node,this.state,$statusbar);return $statusbar;},_renderTagLabel:function(node){if(!this.renderInvisible&&node.tag==='field'&&node.attrs.modifiers.invisible===true){return $();}
var self=this;var text;let fieldName;if(node.tag==='label'){fieldName=this.fieldIdsToNames[node.attrs.for];}else{fieldName=node.attrs.name;}
if('string'in node.attrs){text=node.attrs.string;}else if(fieldName){text=this.state.fields[fieldName].string;}else{return this._renderGenericTag(node);}
var $result=$('<label>',{class:'o_form_label',for:this._getIDForLabel(node.tag==='label'?node.attrs.for:node.attrs.id),text:text,});if(node.tag==='label'){this._handleAttributes($result,node);}
var modifiersOptions;if(fieldName){modifiersOptions={callback:function(element,modifiers,record){var widgets=self.allFieldWidgets[record.id];var widget=_.findWhere(widgets,{name:fieldName});const fieldsInfo=record.fieldsInfo[self.viewType];if(!widget){if(fieldsInfo[fieldName]){self.labelsToPostProcess.push(element.callback.bind(self,element,modifiers,record));}
return;}
element.$el.toggleClass('o_form_label_empty',!!(record.data.id&&(modifiers.readonly||self.mode==='readonly')&&!widget.isSet()));},};}
this._registerModifiers(node,this.state,$result,modifiersOptions);return $result;},_renderTagNotebook:function(node){var self=this;var $headers=$('<ul class="nav nav-tabs">');var $pages=$('<div class="tab-content">');var renderedTabs=_.map(node.children,function(child,index){var pageID=_.uniqueId('notebook_page_');var $header=self._renderTabHeader(child,pageID);var $page=self._renderTabPage(child,pageID);self._handleAttributes($header,child);$headers.append($header);$pages.append($page);return{$header:$header,$page:$page,node:child,};});_.each(renderedTabs,function(tab){self._registerModifiers(tab.node,self.state,tab.$header,{callback:function(element,modifiers){var $link=element.$el.find('.nav-link');if(modifiers.invisible&&$link.hasClass('active')){$link.removeClass('active');tab.$page.removeClass('active');self.inactiveNotebooks.push(renderedTabs);}
if(!modifiers.invisible){var $visibleTabs=$headers.find('li:not(.o_invisible_modifier)');if($visibleTabs.length===1){self.inactiveNotebooks.push(renderedTabs);}}
$headers.toggleClass('o_invisible_modifier',!$headers.find('li:not(.o_invisible_modifier)').length);},});});this._activateFirstVisibleTab(renderedTabs);var $notebookHeaders=$('<div class="o_notebook_headers">').append($headers);var $notebook=$('<div class="o_notebook">').append($notebookHeaders,$pages);$notebook[0].dataset.name=node.attrs.name||'_default_';this._registerModifiers(node,this.state,$notebook);this._handleAttributes($notebook,node);return $notebook;},_renderTagSeparator:function(node){var $separator=$('<div/>').addClass('o_horizontal_separator').text(node.attrs.string);this._handleAttributes($separator,node);this._registerModifiers(node,this.state,$separator);return $separator;},_renderTagSheet:function(node){this.has_sheet=true;var $sheet=$('<div>',{class:'clearfix position-relative o_form_sheet'});$sheet.append(node.children.map(this._renderNode.bind(this)));return $sheet;},_renderTagWidget:function(node){return this._renderWidget(this.state,node);},_renderView:function(){var self=this;var defs=[];this.defs=defs;this.inactiveNotebooks=[];var $form=this._renderNode(this.arch).addClass(this.className);delete this.defs;return Promise.all(defs).then(()=>this.__renderView()).then(function(){self._postProcessLabels();self._updateView($form.contents());self.manuallyDisabledButtons.clear();if(self.state.res_id in self.alertFields){self.displayTranslationAlert();}}).then(function(){if(self.lastActivatedFieldIndex>=0){self._activateNextFieldWidget(self.state,self.lastActivatedFieldIndex);}}).guardedCatch(function(){$form.remove();});},async __renderView(){},async _updateAllModifiers(){await this._super(...arguments);for(const tabs of this.inactiveNotebooks){this._activateFirstVisibleTab(tabs);}
this.inactiveNotebooks=[];},_updateView:function($newContent){var self=this;this.$el.html($newContent);this.$el.toggleClass('o_form_nosheet',!this.has_sheet);if(this.has_sheet){this.$el.children().not('.o_FormRenderer_chatterContainer').wrapAll($('<div/>',{class:'o_form_sheet_bg','data-command-category':"app"}));}
this.$el.toggleClass('o_form_editable',this.mode==='edit');this.$el.toggleClass('o_form_readonly',this.mode==='readonly');_.each(this.allFieldWidgets[this.state.id],function(widget){const idForLabel=self.idsForLabels[widget[symbol]];var $label=idForLabel?self.$('.o_form_label[for='+idForLabel+']'):$();self._addFieldTooltip(widget,$label);if(widget.attrs.widget==='upgrade_boolean'){widget.renderWithLabel($label);}});},_setIDForLabel:function(widget,idForLabel){widget.setIDForLabel(idForLabel);},_onActivateNextWidget:function(ev){ev.stopPropagation();var index=this.allFieldWidgets[this.state.id].indexOf(ev.data.target);this._activateNextFieldWidget(this.state,index);},_onAnchorLinkClicked(ev){const anchor=ev.detail.element||null;if(!anchor){return;}
function _getNotebookParent(){const notebook=anchor.closest(".o_notebook");return notebook&&notebook.contains(anchor)?notebook:null;}
function _setNotebookPage(){const parentPane=anchor.closest(".tab-pane");if(notebook.contains(parentPane)&&!parentPane.classList.contains(".active")){const navLink=[...notebook.querySelectorAll(".nav-link")].filter((e)=>e.href.includes(parentPane.id));navLink[0].click();}}
const notebook=_getNotebookParent();if(notebook){_setNotebookPage();ev.preventDefault();ev.detail.originalEv.preventDefault();scrollUtils.scrollTo(ev.detail.element,{isAnchor:true});}},_onFieldLabelClicked:function(ev){const idForLabel=ev.currentTarget.getAttribute('for');const entry=Object.entries(this.idsForLabels).find(x=>x[1]===idForLabel);if(entry){this.trigger_up('quick_edit',{fieldName:this.fieldIdsToNames[entry[0]],target:ev.currentTarget,extraInfo:{},});}},_onNavigationMove:function(ev){ev.stopPropagation();if(ev.data.originalEvent&&['next','previous'].includes(ev.data.direction)){ev.data.originalEvent.preventDefault();ev.data.originalEvent.stopPropagation();}
if(["next","previous"].includes(ev.data.direction)){const fieldWidgets=this.allFieldWidgets[this.state.id];let target=ev.data.target||ev.target;let index;if(target.__owl__){index=fieldWidgets.findIndex((widget)=>{return widget.componentRef&&widget.componentRef.comp===target;});}else{index=fieldWidgets.indexOf(target);}
if(ev.data.direction==="next"){this._activateNextFieldWidget(this.state,index);}else if(ev.data.direction==="previous"){this._activatePreviousFieldWidget(this.state,index);}}},_onNotebookTabChanged:function(){core.bus.trigger('DOM_updated');},_onQuickEdit:function(ev){if(this.mode!=='readonly'||this.quickEditExclusion.some(x=>ev.data.target.closest(x))){ev.stopPropagation();}},_onTranslate:function(ev){ev.preventDefault();this.trigger_up('translate',{fieldName:ev.target.name,id:this.state.id,isComingFromTranslationAlert:true,});},_onTranslateNotificationClose:function(ev){const notificationElement=this.el.querySelector('.o_notification_box');Alert.getOrCreateInstance(notificationElement).close();delete this.alertFields[this.state.res_id];},});return FormRenderer;});;

/* /web/static/src/legacy/js/views/form/form_view.js */
odoo.define('web.FormView',function(require){"use strict";var BasicView=require('web.BasicView');var Context=require('web.Context');var core=require('web.core');var FormController=require('web.FormController');var FormRenderer=require('web.FormRenderer');const{generateID}=require('web.utils');var _lt=core._lt;var FormView=BasicView.extend({config:_.extend({},BasicView.prototype.config,{Renderer:FormRenderer,Controller:FormController,}),display_name:_lt('Form'),icon:'fa-edit',multi_record:false,withSearchBar:false,searchMenuTypes:[],viewType:'form',init:function(viewInfo,params){var hasActionMenus=params.hasActionMenus;this._super.apply(this,arguments);var mode=params.mode||(params.currentId?'readonly':'edit');this.loadParams.type='record';if(hasActionMenus===undefined){hasActionMenus=params.hasActionMenus;}
this.controllerParams.hasActionMenus=hasActionMenus;this.controllerParams.disableAutofocus=params.disable_autofocus||this.arch.attrs.disable_autofocus;this.controllerParams.toolbarActions=viewInfo.toolbar;this.controllerParams.footerToButtons=params.footerToButtons;var defaultButtons='default_buttons'in params?params.default_buttons:true;this.controllerParams.defaultButtons=defaultButtons;this.controllerParams.mode=mode;this.rendererParams.mode=mode;this.rendererParams.isFromFormViewDialog=params.isFromFormViewDialog;this.rendererParams.fieldIdsToNames=this.fieldsView.fieldIdsToNames;},getController:function(parent){return this._loadSubviews(parent).then(this._super.bind(this,parent));},_extractParamsFromAction:function(action){var params=this._super.apply(this,arguments);var inDialog=action.target==='new';var inline=action.target==='inline';var fullscreen=action.target==='fullscreen';params.withControlPanel=!(inDialog||inline);params.footerToButtons=inDialog;params.hasSearchView=inDialog?false:params.hasSearchView;params.hasActionMenus=!inDialog&&!inline;params.searchMenuTypes=inDialog?[]:params.searchMenuTypes;if(inDialog||inline||fullscreen){params.mode='edit';}else if(action.context&&action.context.form_view_initial_mode){params.mode=action.context.form_view_initial_mode;}
return params;},_loadSubviews:function(parent){var self=this;var defs=[];if(this.loadParams&&this.loadParams.fieldsInfo){var fields=this.loadParams.fields;_.each(this.loadParams.fieldsInfo.form,function(attrs,fieldName){var field=fields[fieldName];if(!field){return;}
if(field.type!=='one2many'&&field.type!=='many2many'){return;}
if(attrs.Widget.prototype.useSubview&&!attrs.__no_fetch&&!attrs.views[attrs.mode]){var context={};var regex=/'([a-z]*_view_ref)' *: *'(.*?)'/g;var matches;while(matches=regex.exec(attrs.context)){context[matches[1]]=matches[2];}
var refinedContext=_.pick(self.loadParams.context,function(value,key){return key.indexOf('_view_ref')===-1;});refinedContext.base_model_name=self.controllerParams.modelName;defs.push(parent.loadViews(field.relation,new Context(context,self.userContext,refinedContext).eval(),[[null,attrs.mode==='tree'?'list':attrs.mode]]).then(function(views){for(var viewName in views){attrs.views[viewName]=self._processFieldsView(views[viewName],viewName);attrs.views[viewName].fields=attrs.views[viewName].viewFields;self._processSubViewAttrs(attrs.views[viewName],attrs);}
self._setSubViewLimit(attrs);}));}else{self._setSubViewLimit(attrs);}});}
return Promise.all(defs);},_processArch(arch,fv){fv.fieldIdsToNames={};return this._super(...arguments);},_processNode(node,fv){if(node.tag==='field'){const name=node.attrs.name;let uid=node.attrs.id;if(!uid){uid=name in fv.fieldIdsToNames?`${name}__${generateID()}__`:name;node.attrs.id=uid;}
fv.fieldIdsToNames[uid]=name;}
return this._super(...arguments);},_setSubViewLimit:function(attrs){var view=attrs.views&&attrs.views[attrs.mode];var limit=view&&view.arch.attrs.limit&&parseInt(view.arch.attrs.limit,10);attrs.limit=limit||attrs.Widget.prototype.limit||40;},});return FormView;});;

/* /web/static/src/legacy/js/views/kanban/kanban_column.js */
odoo.define('web.KanbanColumn',function(require){"use strict";var core=require('web.core');var config=require('web.config');var session=require('web.session');var Dialog=require('web.Dialog');var KanbanRecord=require('web.KanbanRecord');var RecordQuickCreate=require('web.kanban_record_quick_create');var view_dialogs=require('web.view_dialogs');var viewUtils=require('web.viewUtils');var Widget=require('web.Widget');var KanbanColumnProgressBar=require('web.KanbanColumnProgressBar');var _t=core._t;var QWeb=core.qweb;var KanbanColumn=Widget.extend({template:'KanbanView.Group',custom_events:{cancel_quick_create:'_onCancelQuickCreate',quick_create_add_record:'_onQuickCreateAddRecord',tweak_column:'_onTweakColumn',tweak_column_records:'_onTweakColumnRecords',},events:{'click .o_column_edit':'_onEditColumn','click .o_column_delete':'_onDeleteColumn','click .o_kanban_quick_add':'_onAddQuickCreate','click .o_kanban_load_more':'_onLoadMore','click .o_kanban_toggle_fold':'_onToggleFold','click .o_column_archive_records':'_onArchiveRecords','click .o_column_unarchive_records':'_onUnarchiveRecords','click .o_kanban_config .dropdown-menu':'_onConfigDropdownClicked',},init:function(parent,data,options,recordOptions){this._super(parent);this.db_id=data.id;this.data_records=data.data;this.data=data;var value=data.value;this.id=data.res_id;this.folded=!data.isOpen;this.has_active_field='active'in data.fields;this.fields=data.fields;this.records=[];this.modelName=data.model;this.quick_create=options.quick_create;this.quickCreateView=options.quickCreateView;this.groupedBy=options.groupedBy;this.grouped_by_m2o=options.grouped_by_m2o;this.grouped_by_m2m=options.grouped_by_m2m;this.editable=options.editable;this.deletable=options.deletable;this.archivable=options.archivable;this.draggable=options.draggable;this.KanbanRecord=options.KanbanRecord||KanbanRecord;this.records_editable=options.records_editable;this.records_deletable=options.records_deletable;this.recordsDraggable=options.recordsDraggable;this.relation=options.relation;this.offset=0;this.loadMoreCount=data.loadMoreCount;this.loadMoreOffset=data.loadMoreOffset;this.isMobile=config.device.isMobile;if(options.hasProgressBar){this.barOptions={columnID:this.db_id,progressBarStates:options.progressBarStates,};}
this.record_options=_.clone(recordOptions);if(options.grouped_by_m2o||options.grouped_by_date||options.grouped_by_m2m){this.title=value?value:_t('None');}else if(this.groupedBy&&this.fields[this.groupedBy].type==='boolean'){this.title=value===undefined?_t('None'):(value?_t('Yes'):_t('No'));}else{this.title=value===undefined?_t('None'):value;}
if(options.group_by_tooltip){this.tooltipInfo=_.compact(_.map(options.group_by_tooltip,function(help,field){help=help?help+"</br>":'';return(data.tooltipData&&data.tooltipData[field]&&"<div>"+help+data.tooltipData[field]+"</div>")||'';}));this.tooltipInfo=this.tooltipInfo.join("<div class='dropdown-divider' role='separator' />");}},start:function(){var self=this;var defs=[this._super.apply(this,arguments)];this.$header=this.$('.o_kanban_header');for(var i=0;i<this.data_records.length;i++){defs.push(this._addRecord(this.data_records[i]));}
if(this.recordsDraggable&&!config.device.isMobile){this.$el.sortable({connectWith:'.o_kanban_group',containment:this.draggable?false:'parent',revert:0,delay:0,items:'> .o_kanban_record:not(.o_updating)',cursor:'move',over:function(){self.$el.addClass('o_kanban_hover');},out:function(){self.$el.removeClass('o_kanban_hover');},start:function(event,ui){ui.item.addClass('o_currently_dragged');},stop:function(event,ui){var item=ui.item;setTimeout(function(){item.removeClass('o_currently_dragged');});},update:function(event,ui){var record=ui.item.data('record');var index=self.records.indexOf(record);record.$el.removeAttr('style');if(index>=0){if($.contains(self.$el[0],record.$el[0])){self.trigger_up('kanban_column_resequence',{ids:self._getIDs()});}}else{ui.item.addClass('o_updating');self.trigger_up('kanban_column_add_record',{record:record,ids:self._getIDs()});}}});}
if(!config.device.isMobile){this.$el.click(function(event){if(self.folded){self._onToggleFold(event);}});}
if(this.barOptions){this.$el.addClass('o_kanban_has_progressbar');this.progressBar=this._getKanbanColumnProgressBar();defs.push(this.progressBar.appendTo(this.$header));}
var title=!config.device.isMobile&&this.folded?this.title+' ('+this.data.count+')':this.title;this.$header.find('.o_column_title').text(title);this.$el.toggleClass('o_column_folded',!config.device.isMobile&&this.folded);if(this.tooltipInfo){this.$header.find('.o_kanban_header_title').tooltip({}).attr('data-bs-original-title',this.tooltipInfo);}
if(!this.loadMoreCount){this.$('.o_kanban_load_more').remove();}else{this.$('.o_kanban_load_more').html(QWeb.render('KanbanView.LoadMore',{widget:this}));}
return Promise.all(defs);},on_attach_callback:function(){_.invoke(this.records,'on_attach_callback');if(this.quickCreateWidget){this.quickCreateWidget.on_attach_callback();}},addQuickCreate:async function(){if(this.folded){this.trigger_up('column_toggle_fold',{openQuickCreate:true,});return;}
if(this.quickCreateWidget){return Promise.reject();}
this.trigger_up('close_quick_create');var context=this.data.getContext();var groupByField=viewUtils.getGroupByField(this.groupedBy);context['default_'+groupByField]=viewUtils.getGroupValue(this.data,this.groupedBy);this.quickCreateWidget=new RecordQuickCreate(this,{context:context,formViewRef:this.quickCreateView,model:this.modelName,});await this.quickCreateWidget.appendTo(document.createDocumentFragment());this.trigger_up('start_quick_create');this.quickCreateWidget.$el.insertAfter(this.$header);this.quickCreateWidget.on_attach_callback();},cancelQuickCreate:function(){if(this.quickCreateWidget){this.quickCreateWidget.cancel();}},isEmpty:function(){return!this.records.length;},_addRecord:function(recordState,options){if(this.grouped_by_m2m){this.record_options.deletable=false;}
var record=new this.KanbanRecord(this,recordState,this.record_options);this.records.push(record);if(options&&options.position==='before'){return record.insertAfter(this.quickCreateWidget?this.quickCreateWidget.$el:this.$header);}else{var $load_more=this.$('.o_kanban_load_more');if($load_more.length){return record.insertBefore($load_more);}else{return record.appendTo(this.$el);}}},_cancelQuickCreate:function(){this.quickCreateWidget.destroy();this.quickCreateWidget=undefined;},_getIDs:function(){var ids=[];this.$('.o_kanban_record').each(function(index,r){ids.push($(r).data('record').id);});return ids;},_getKanbanColumnProgressBar:function(){return new KanbanColumnProgressBar(this,this.barOptions,this.data);},_onAddQuickCreate:function(){this.trigger_up('add_quick_create',{groupId:this.db_id});},_onCancelQuickCreate:function(){this._cancelQuickCreate();},_onConfigDropdownClicked(ev){ev.stopPropagation();},_onDeleteColumn:function(event){event.preventDefault();var buttons=[{text:_t("Ok"),classes:'btn-primary',close:true,click:this.trigger_up.bind(this,'kanban_column_delete'),},{text:_t("Cancel"),close:true}];new Dialog(this,{size:'medium',buttons:buttons,$content:$('<div>',{text:_t("Are you sure that you want to remove this column ?")}),}).open();},_onEditColumn:function(event){event.preventDefault();new view_dialogs.FormViewDialog(this,{res_model:this.relation,res_id:this.id,context:session.user_context,title:_t("Edit Column"),on_saved:this.trigger_up.bind(this,'reload'),}).open();},_onLoadMore:function(event){event.preventDefault();if(this.folded){this.trigger_up('column_toggle_fold');}else{this.trigger_up('kanban_load_column_records',{loadMoreOffset:this.loadMoreOffset});}},_onQuickCreateAddRecord:function(event){this.trigger_up('quick_create_record',event.data);},_onToggleFold:function(event){event.preventDefault();this.trigger_up('column_toggle_fold');},_onTweakColumn:function(ev){ev.data.callback(this.$el);},_onTweakColumnRecords:function(ev){_.each(this.records,function(record){ev.data.callback(record.$el,record.state.data);});},_onArchiveRecords:function(event){event.preventDefault();Dialog.confirm(this,_t("Are you sure that you want to archive all the records from this column?"),{confirm_callback:this.trigger_up.bind(this,'kanban_column_records_toggle_active',{archive:true,}),});},_onUnarchiveRecords:function(event){event.preventDefault();this.trigger_up('kanban_column_records_toggle_active',{archive:false,});}});return KanbanColumn;});;

/* /web/static/src/legacy/js/views/kanban/kanban_column_progressbar.js */
odoo.define('web.KanbanColumnProgressBar',function(require){'use strict';const core=require('web.core');var session=require('web.session');var utils=require('web.utils');var Widget=require('web.Widget');const _t=core._t;var KanbanColumnProgressBar=Widget.extend({template:'KanbanView.ColumnProgressBar',events:{'click .progress-bar':'_onProgressBarClick',},ANIMATE:true,init:function(parent,options,columnState){this._super.apply(this,arguments);this.columnID=options.columnID;this.columnState=columnState;this.activeFilter={};this.fieldName=columnState.progressBarValues.field;this.colors=_.extend({},columnState.progressBarValues.colors,{__false:'200',});this.sumField=columnState.progressBarValues.sum_field;this.sumFieldLabel=this.sumField?columnState.fields[this.sumField].string:false;var state=options.progressBarStates[this.columnID];if(state){this.groupCount=state.groupCount;this.subgroupCounts=state.subgroupCounts;this.totalCounterValue=state.totalCounterValue;this.activeFilter=columnState.activeFilter||state.activeFilter;}
var sumFieldInfo=this.sumField&&columnState.fieldsInfo.kanban[this.sumField];var currencyField=sumFieldInfo&&sumFieldInfo.options&&sumFieldInfo.options.currency_field;if(currencyField&&columnState.data.length){this.currency=session.currencies[columnState.data[0].data[currencyField].res_id];}},start:function(){var self=this;this.$bars={};_.each(this.colors,function(val,key){self.$bars[key]=self.$(`.progress-bar[data-filter=${key}]`);});this.$counter=this.$('.o_kanban_counter_side');this.$number=this.$counter.find('b');if(this.currency){var $currency=$('<span/>',{text:this.currency.symbol,});if(this.currency.position==='before'){$currency.prependTo(this.$counter);}else{$currency.appendTo(this.$counter);}}
return this._super.apply(this,arguments).then(function(){self.computeCounters();self._notifyState();self._render();});},computeCounters(){const subgroupCounts={};for(const key of Object.keys(this.colors)){const subgroupCount=this.columnState.progressBarValues.counts[key]||0;if(this.activeFilter.value===key&&subgroupCount===0){this.activeFilter={};}
subgroupCounts[key]=subgroupCount;}
this.groupCount=this.columnState.count;this.subgroupCounts=subgroupCounts;this.prevTotalCounterValue=this.totalCounterValue;this.totalCounterValue=this.sumField?(this.columnState.aggregateValues[this.sumField]||0):this.columnState.count;},_render:function(){var self=this;this.trigger_up('tweak_column',{callback:function($el){$el.removeClass('o_kanban_group_show');_.each(self.colors,function(val,key){$el.removeClass('o_kanban_group_show_'+val);});if(self.activeFilter.value){$el.addClass('o_kanban_group_show o_kanban_group_show_'+self.colors[self.activeFilter.value]);}},});this.trigger_up('tweak_column_records',{callback:function($el,recordData){var categoryValue=recordData[self.fieldName]?recordData[self.fieldName]:'__false';_.each(self.colors,function(val,key){$el.removeClass('oe_kanban_card_'+val);});if(self.colors[categoryValue]){$el.addClass('oe_kanban_card_'+self.colors[categoryValue]);}},});var barNumber=0;var barMinWidth=6;const selection=self.columnState.fields[self.fieldName].selection;_.each(self.colors,function(val,key){var $bar=self.$bars[key];var count=self.subgroupCounts&&self.subgroupCounts[key]||0;if(!$bar){return;}
let value;if(selection){const option=selection.find(option=>option[0]===key);value=option&&option[1]||_t('Other');}else{value=key;}
$bar.attr('data-bs-original-title',count+' '+value);$bar.tooltip({delay:0,trigger:'hover',});$bar.toggleClass('progress-bar-animated progress-bar-striped',key===self.activeFilter.value);$bar.removeClass('o_bar_has_records transition-off');window.getComputedStyle($bar[0]).getPropertyValue('width');if(count>0){$bar.addClass('o_bar_has_records');var maxWidth=100-barMinWidth*barNumber;self.$('.progress-bar.o_bar_has_records').css('max-width',maxWidth+'%');$bar.css('width',(count*100/self.groupCount)+'%');barNumber++;$bar.attr('aria-valuemin',0);$bar.attr('aria-valuemax',self.groupCount);$bar.attr('aria-valuenow',count);}else{$bar.css('width','');}});this.$('.progress-bar').css('min-width','');this.$('.progress-bar.o_bar_has_records').css('min-width',barMinWidth+'%');var start=this.prevTotalCounterValue;var end=this.totalCounterValue;if(this.activeFilter.value){if(this.sumField){end=0;_.each(self.columnState.data,function(record){var recordData=record.data;if(self.activeFilter.value===recordData[self.fieldName]||(self.activeFilter.value==='__false'&&!recordData[self.fieldName])){end+=parseFloat(recordData[self.sumField]);}});}else{end=this.subgroupCounts[this.activeFilter.value];}}
this.prevTotalCounterValue=end;var animationClass=start>999?'o_kanban_grow':'o_kanban_grow_huge';if(start!==undefined&&(end>start||this.activeFilter.value)&&this.ANIMATE){$({currentValue:start}).animate({currentValue:end},{duration:1000,start:function(){self.$counter.addClass(animationClass);},step:function(){self.$number.html(_getCounterHTML(this.currentValue));},complete:function(){self.$number.html(_getCounterHTML(this.currentValue));self.$counter.removeClass(animationClass);},});}else{this.$number.html(_getCounterHTML(end));}
function _getCounterHTML(value){return utils.human_number(value,0,3);}},_getNotifyStateValues:function(){return{groupCount:this.groupCount,subgroupCounts:this.subgroupCounts,totalCounterValue:this.totalCounterValue,activeFilter:this.activeFilter,};},_notifyState:function(){this.trigger_up('set_progress_bar_state',{columnID:this.columnID,values:this._getNotifyStateValues(),});},_toggleActiveFilter(value){const activeFilter=Object.assign({},this.activeFilter);if(activeFilter.value===value){activeFilter.domain=[];activeFilter.value=false;}else{const field=this.fieldName;if(value==='__false'){const values=Object.keys(this.colors).filter(el=>el!==value);activeFilter.domain=['!',[field,'in',values]];}else{activeFilter.domain=[[field,'=',value]];}
activeFilter.value=value;}
this.activeFilter=activeFilter;},_onProgressBarClick:function(ev){this.$clickedBar=$(ev.currentTarget);const filterValue=this.$clickedBar.data('filter');this._toggleActiveFilter(filterValue);this._notifyState();this.trigger_up('kanban_load_column_records',{activeFilter:this.activeFilter});},});return KanbanColumnProgressBar;});;

/* /web/static/src/legacy/js/views/kanban/kanban_column_quick_create.js */
odoo.define('web.kanban_column_quick_create',function(require){"use strict";var core=require('web.core');var config=require('web.config');var Dialog=require('web.Dialog');var Widget=require('web.Widget');var _t=core._t;var QWeb=core.qweb;var ColumnQuickCreate=Widget.extend({template:'KanbanView.ColumnQuickCreate',events:{'click .o_quick_create_folded':'_onUnfold','click .o_kanban_add':'_onAddClicked','click .o_kanban_examples':'_onShowExamples','keydown':'_onKeydown','keypress input':'_onKeypress','blur input':'_onInputBlur','focus input':'_onInputFocus',},init:function(parent,options){this._super.apply(this,arguments);this.applyExamplesText=options.applyExamplesText||_t("Use This For My Kanban");this.examples=options.examples;this.folded=true;this.isMobile=config.device.isMobile;this.isFirstColumn=options.isFirstColumn;this.groupByFieldString=options.groupByFieldString;},start:function(){this.$quickCreateFolded=this.$('.o_quick_create_folded');this.$quickCreateUnfolded=this.$('.o_quick_create_unfolded');this.$input=this.$('input');if(!this.isFirstColumn){core.bus.on('click',this,this._onWindowClicked);}
this._update();return this._super.apply(this,arguments);},on_attach_callback:function(){if(!this.folded){this.$input.focus();}},toggleFold:function(){this.folded=!this.folded;this._update();if(!this.folded){this.$input.focus();this.trigger_up('scrollTo',{selector:'.o_column_quick_create'});}},_add:function(){var value=this.$input.val().trim();if(!value.length){this._cancel();return;}
this.$input.val('');this.trigger_up('quick_create_add_column',{value:value});this.$input.focus();},_cancel:function(){if(!this.folded){this.$input.val('');this.folded=true;this._update();}},_update:function(){this.$quickCreateFolded.toggle(this.folded);this.$quickCreateUnfolded.toggle(!this.folded);this.trigger_up('quick_create_column_updated');},_onAddClicked:function(event){event.stopPropagation();this._add();},_onInputBlur:function(){this.$('.o_discard_msg').hide();},_onInputFocus:function(){this.$('.o_discard_msg').show();},_onKeydown:function(event){if(event.keyCode===$.ui.keyCode.ESCAPE){this._cancel();}},_onKeypress:function(event){if(event.keyCode===$.ui.keyCode.ENTER){this._add();}},_onShowExamples:function(){var self=this;var dialog=new Dialog(this,{$content:$(QWeb.render('KanbanView.ExamplesDialog',{examples:this.examples,})),buttons:[{classes:'btn-primary float-end',text:this.applyExamplesText,close:true,click:function(){const activeExample=self.examples[this.$('.nav-link.active').data("exampleIndex")];activeExample.columns.forEach(column=>{self.trigger_up('quick_create_add_column',{value:column.toString(),foldQuickCreate:true});});}},{classes:'btn-secondary float-end',close:true,text:_t('Close'),}],size:"large",fullscreen:config.device.isMobile,title:_t("Kanban Examples"),}).open();dialog.on('closed',this,function(){self.$input.focus();});},_onUnfold:function(){if(this.folded){this.toggleFold();}},_onWindowClicked:function(event){if(!document.contains(this.el)){return;}
if($(event.target).closest('.modal').length){return;}
if(this.el.contains(event.target)){return;}
this._cancel();},});return ColumnQuickCreate;});;

/* /web/static/src/legacy/js/views/kanban/kanban_controller.js */
odoo.define('web.KanbanController',function(require){"use strict";var BasicController=require('web.BasicController');var Context=require('web.Context');var config=require('web.config');var core=require('web.core');var Dialog=require('web.Dialog');var Domain=require('web.Domain');var view_dialogs=require('web.view_dialogs');var viewUtils=require('web.viewUtils');var _t=core._t;var qweb=core.qweb;var KanbanController=BasicController.extend({buttons_template:'KanbanView.buttons',custom_events:_.extend({},BasicController.prototype.custom_events,{add_quick_create:'_onAddQuickCreate',quick_create_add_column:'_onAddColumn',quick_create_record:'_onQuickCreateRecord',resequence_columns:'_onResequenceColumn',button_clicked:'_onButtonClicked',kanban_record_delete:'_onRecordDelete',kanban_record_update:'_onUpdateRecord',kanban_column_delete:'_onDeleteColumn',kanban_column_add_record:'_onAddRecordToColumn',kanban_column_resequence:'_onColumnResequence',kanban_load_column_records:'_onLoadColumnRecords',column_toggle_fold:'_onToggleColumn',kanban_column_records_toggle_active:'_onToggleActiveRecords',}),init:function(parent,model,renderer,params){this._super.apply(this,arguments);this.on_create=params.on_create;this.hasButtons=params.hasButtons;this.quickCreateEnabled=params.quickCreateEnabled;},async start(){await this._super(...arguments);const{groupedBy}=this.model.get(this.handle);this.el.classList.toggle("o_action_delegate_scroll",config.device.isMobile&&groupedBy.length);},renderButtons:function($node){if(!this.hasButtons||!this.is_action_enabled('create')){return;}
this.$buttons=$(qweb.render(this.buttons_template,{btnClass:'btn-primary',widget:this,}));this.$buttons.on('click','button.o-kanban-button-new',this._onButtonNew.bind(this));this.$buttons.on('keydown',this._onButtonsKeyDown.bind(this));if($node){this.$buttons.appendTo($node);}},async update(){await this._super(...arguments);const{groupedBy}=this.model.get(this.handle);this.el.classList.toggle("o_action_delegate_scroll",config.device.isMobile&&groupedBy.length);},updateButtons:function(){if(!this.$buttons){return;}
var state=this.model.get(this.handle,{raw:true});var createHidden=this.is_action_enabled('group_create')&&state.isGroupedByM2ONoColumn;this.$buttons.find('.o-kanban-button-new').toggleClass('o_hidden',createHidden);},_addQuickCreate(groupId){this._removeSampleData(async()=>{await this.update({shouldUpdateSearchComponents:false},{reload:false});return this.renderer.addQuickCreate(groupId);});},_confirmSave:function(id){var data=this.model.get(this.handle,{raw:true});var grouped=data.groupedBy.length;if(grouped){var columnState=this.model.getColumn(id);return this.renderer.updateColumn(columnState.id,columnState);}
return this.renderer.updateRecord(this.model.get(id));},_getPagingInfo:function(state){if(!(state.count&&!state.groupedBy.length)){return null;}
return this._super(...arguments);},_reloadAfterButtonClick:function(kanbanRecord,params){var self=this;var recordModel=this.model.localData[params.record.id];var group=this.model.localData[recordModel.parentID];var parent=this.model.localData[group.parentID];this.model.reload(params.record.id).then(function(db_id){var data=self.model.get(db_id);kanbanRecord.update(data);var domain=(parent?parent.domain:group.domain)||[];var domInData=_.every(domain,function(d){return d[0]in data.data;});var activeInDomain=_.pluck(domain,0).indexOf('active')!==-1;var activeInData='active'in data.data;if(domInData&&!activeInDomain&&activeInData){domain=domain.concat([['active','=',true]]);}else if(!domInData&&!activeInDomain&&activeInData){domain=[['active','=',true]];}
try{var visible=new Domain(domain).compute(data.evalContext);}catch(_e){return;}
if(!visible){kanbanRecord.destroy();}});},_resequenceColumns:function(ids){var state=this.model.get(this.handle,{raw:true});var model=state.fields[state.groupedBy[0]].relation;return this.model.resequence(model,ids,this.handle);},_resequenceRecords:function(column_id,ids){return this.model.resequence(this.modelName,ids,column_id);},_shouldBounceOnClick(element){const state=this.model.get(this.handle,{raw:true});if(!state.count||state.isSample){const classesList=['o_legacy_kanban_view','o_kanban_group','o_kanban_header','o_column_quick_create','o_view_nocontent_smiling_face',];return classesList.some(c=>element.classList.contains(c));}
return false;},_onAddColumn:function(ev){var self=this;this.mutex.exec(function(){return self.model.createGroup(ev.data.value,self.handle).then(function(){var state=self.model.get(self.handle,{raw:true});var ids=_.pluck(state.data,'res_id').filter(_.isNumber);return self._resequenceColumns(ids);}).then(function(){return self.update({},{reload:false});}).then(function(){let quickCreateFolded=self.renderer.quickCreate.folded;if(ev.data.foldQuickCreate?!quickCreateFolded:quickCreateFolded){self.renderer.quickCreateToggleFold();}
self.renderer.trigger_up("quick_create_column_created");});});},_onAddRecordToColumn:function(ev){var self=this;var record=ev.data.record;var column=ev.target;this.alive(this.model.moveRecord(record.db_id,column.db_id,this.handle)).then(function(column_db_ids){return self._resequenceRecords(column.db_id,ev.data.ids).then(function(){_.each(column_db_ids,function(db_id){var data=self.model.get(db_id);self.renderer.updateColumn(db_id,data);});});}).guardedCatch(this.reload.bind(this));},_onAddQuickCreate(ev){ev.stopPropagation();this._addQuickCreate(ev.data.groupId);},_onButtonClicked:function(ev){var self=this;ev.stopPropagation();var attrs=ev.data.attrs;var record=ev.data.record;var def=Promise.resolve();if(attrs.context){attrs.context=new Context(attrs.context).set_eval_context({active_id:record.res_id,active_ids:[record.res_id],active_model:record.model,});}
if(attrs.confirm){def=new Promise(function(resolve,reject){Dialog.confirm(this,attrs.confirm,{confirm_callback:resolve,cancel_callback:reject,}).on("closed",null,reject);});}
def.then(function(){self.trigger_up('execute_action',{action_data:attrs,env:{context:record.getContext(),currentID:record.res_id,model:record.model,resIDs:record.res_ids,},on_closed:self._reloadAfterButtonClick.bind(self,ev.target,ev.data),});});},_onButtonNew:function(){var state=this.model.get(this.handle,{raw:true});var quickCreateEnabled=this.quickCreateEnabled&&viewUtils.isQuickCreateEnabled(state);if(this.on_create==='quick_create'&&quickCreateEnabled&&state.data.length){this.mutex.getUnlockedDef().then(this._addQuickCreate.bind(this,null));}else if(this.on_create&&this.on_create!=='quick_create'){this.do_action(this.on_create,{on_close:this.reload.bind(this,{}),additional_context:state.context,});}else{this.trigger_up('switch_view',{view_type:'form',res_id:undefined});}},_onButtonsKeyDown:function(ev){switch(ev.keyCode){case $.ui.keyCode.DOWN:this._giveFocus();}},_onColumnResequence:function(ev){this._resequenceRecords(ev.target.db_id,ev.data.ids);},_onDeleteColumn:function(ev){var column=ev.target;var state=this.model.get(this.handle,{raw:true});var relatedModelName=state.fields[state.groupedBy[0]].relation;this.model.deleteRecords([column.db_id],relatedModelName).then(this.update.bind(this,{},{}));},async _onLoadColumnRecords(ev){const column=ev.target;const id=column.columnID||column.db_id;const options=ev.data;const dbID=await this.model.reload(id,options);const data=this.model.get(dbID);return this.renderer.updateColumn(dbID,data);},_onQuickCreateRecord:function(ev){var self=this;var values=ev.data.values;var column=ev.target;var onFailure=ev.data.onFailure||function(){};var update=function(db_id){var columnState=self.model.getColumn(db_id);var state=self.model.get(self.handle);return self.renderer.updateColumn(columnState.id,columnState,{openQuickCreate:true,state:state}).then(function(){if(ev.data.openRecord){self.trigger_up('open_record',{id:db_id,mode:'edit'});}});};this.model.createRecordInGroup(column.db_id,values).then(update).guardedCatch(function(reason){reason.event.preventDefault();var columnState=self.model.get(column.db_id,{raw:true});var context=columnState.getContext();var state=self.model.get(self.handle,{raw:true});var groupByField=viewUtils.getGroupByField(state.groupedBy[0]);context['default_'+groupByField]=viewUtils.getGroupValue(columnState,state.groupedBy[0]);new view_dialogs.FormViewDialog(self,{res_model:state.model,context:_.extend({default_name:values.name||values.display_name},context),title:_t("Create"),disable_multiple_selection:true,on_saved:function(record){self.model.addRecordToGroup(column.db_id,record.res_id).then(update);},}).open().opened(onFailure);});},_onRecordDelete:function(ev){this._deleteRecords([ev.data.id]);},_onResequenceColumn:function(ev){this._resequenceColumns(ev.data.ids);},_onToggleColumn:function(ev){var self=this;const columnID=ev.target.db_id||ev.data.db_id;this.model.toggleGroup(columnID).then(function(db_id){var data=self.model.get(db_id);var options={openQuickCreate:!!ev.data.openQuickCreate,};return self.renderer.updateColumn(db_id,data,options);}).then(function(){if(ev.data.onSuccess){ev.data.onSuccess();}});},_onUpdateRecord:function(ev){var onSuccess=ev.data.onSuccess;delete ev.data.onSuccess;var changes=_.clone(ev.data);ev.data.force_save=true;this._applyChanges(ev.target.db_id,changes,ev).then(onSuccess);},_onToggleActiveRecords:function(ev){var self=this;var archive=ev.data.archive;var column=ev.target;var recordIds=_.pluck(column.records,'id');if(recordIds.length){var prom=archive?this.model.actionArchive(recordIds,column.db_id):this.model.actionUnarchive(recordIds,column.db_id);prom.then(function(dbID){let data=self.model.get(dbID);if(data){self.model.reload(self.handle).then(function(){data=self.model.get(dbID);const state=self.model.get(self.handle);self.renderer.updateColumn(dbID,data,{state});});}});}},});return KanbanController;});;

/* /web/static/src/legacy/js/views/kanban/kanban_examples_registry.js */
odoo.define('web.kanban_examples_registry',function(require){"use strict";var Registry=require('web.Registry');return new Registry();});;

/* /web/static/src/legacy/js/views/kanban/kanban_model.js */
odoo.define('web.KanbanModel',function(require){"use strict";var BasicModel=require('web.BasicModel');var viewUtils=require('web.viewUtils');var KanbanModel=BasicModel.extend({addRecordToGroup:function(groupID,resId){var self=this;var group=this.localData[groupID];var new_record=this._makeDataPoint({res_id:resId,modelName:group.model,fields:group.fields,fieldsInfo:group.fieldsInfo,viewType:group.viewType,parentID:groupID,});var def=this._fetchRecord(new_record).then(function(result){group.data.unshift(new_record.id);group.res_ids.unshift(resId);group.count++;self.localData[group.parentID].count++;self._updateParentResIDs(group);return result.id;});return this._reloadProgressBarGroupFromRecord(new_record.id,def);},createGroup:function(name,parentID){var self=this;var parent=this.localData[parentID];var groupBy=parent.groupedBy[0];var groupByField=parent.fields[groupBy];if(!groupByField||groupByField.type!=='many2one'){return Promise.reject();}
return this._rpc({model:groupByField.relation,method:'name_create',args:[name],context:parent.context,}).then(function(result){const createGroupDataPoint=(model,parent)=>{const newGroup=model._makeDataPoint({modelName:parent.model,context:parent.context,domain:parent.domain.concat([[groupBy,"=",result[0]]]),fields:parent.fields,fieldsInfo:parent.fieldsInfo,isOpen:true,limit:parent.limit,parentID:parent.id,openGroupByDefault:true,orderedBy:parent.orderedBy,value:result,viewType:parent.viewType,});if(parent.progressBar){newGroup.progressBarValues=_.extend({counts:{},},parent.progressBar);}
return newGroup;};const newGroup=createGroupDataPoint(self,parent);parent.data.push(newGroup.id);if(self.isInSampleMode()){const sampleParent=self.sampleModel.localData[parentID];const newSampleGroup=createGroupDataPoint(self.sampleModel,sampleParent);sampleParent.data.push(newSampleGroup.id);}
return newGroup.id;});},createRecordInGroup:function(groupID,values){var self=this;var group=this.localData[groupID];var context=this._getContext(group);var parent=this.localData[group.parentID];var groupByField=viewUtils.getGroupByField(parent.groupedBy[0]);context['default_'+groupByField]=viewUtils.getGroupValue(group,parent.groupedBy[0]);var def;if(Object.keys(values).length===1&&'display_name'in values){def=this._rpc({model:parent.model,method:'name_create',args:[values.display_name],context:context,}).then(function(records){return records[0];});}else{def=this._rpc({model:parent.model,method:'create',args:[values],context:context,});}
return def.then(function(resID){return self.addRecordToGroup(group.id,resID);});},__get:function(){var result=this._super.apply(this,arguments);var dp=result&&this.localData[result.id];if(dp){if(dp.tooltipData){result.tooltipData=$.extend(true,{},dp.tooltipData);}
if(dp.fields[dp.groupedBy[0]]){var groupedByM2O=dp.fields[dp.groupedBy[0]].type==='many2one';result.isGroupedByM2ONoColumn=!dp.data.length&&groupedByM2O;}else{result.isGroupedByM2ONoColumn=false;}
result.activeFilter=dp.activeFilter;let loadMoreCount=result.count-result.data.length;let loadMoreOffset=result.data.length;if(dp.progressBarValues){result.progressBarValues=$.extend(true,{},dp.progressBarValues);if(dp.activeFilter&&dp.activeFilter.value){const barValues=dp.progressBarValues;const barField=barValues.field;const definedBarFieldValues=Object.keys(barValues.colors);const filterValue=dp.activeFilter.value;const filteredRecordsTotal=barValues.counts[filterValue];const filteredRecords=result.data.filter(element=>{const elementBarFieldValue=element.data[barField];return(filterValue===elementBarFieldValue)||(filterValue==='__false'&&!definedBarFieldValues.includes(elementBarFieldValue));});loadMoreCount=filteredRecordsTotal-filteredRecords.length;loadMoreOffset=filteredRecords.length;}}
result.loadMoreCount=loadMoreCount;result.loadMoreOffset=loadMoreOffset;}
return result;},getColumn:function(id){var element=this.localData[id];if(element){return this.get(element.parentID);}
return null;},__load:function(params){this.defaultGroupedBy=params.groupBy||[];params.groupedBy=(params.groupedBy&&params.groupedBy.length)?params.groupedBy:this.defaultGroupedBy;return this._super(params);},moveRecord:function(recordID,groupID,parentID){var self=this;var parent=this.localData[parentID];var new_group=this.localData[groupID];var changes={};var groupedFieldName=viewUtils.getGroupByField(parent.groupedBy[0]);var groupedField=parent.fields[groupedFieldName];if(['date','datetime'].includes(groupedField.type)){changes[groupedFieldName]=viewUtils.getGroupValue(new_group,parent.groupedBy[0]);}else if(groupedField.type==='many2one'){changes[groupedFieldName]={id:new_group.res_id,display_name:new_group.value,};}else if(groupedField.type==='selection'){var value=_.findWhere(groupedField.selection,{1:new_group.value});changes[groupedFieldName]=value&&value[0]||false;}else{changes[groupedFieldName]=new_group.value;}
var record=self.localData[recordID];var resID=record.res_id;var old_group;for(var i=0;i<parent.data.length;i++){old_group=self.localData[parent.data[i]];var index=_.indexOf(old_group.data,recordID);if(index>=0){old_group.data.splice(index,1);old_group.count--;if(!old_group.activeFilter||old_group.activeFilter.value===record.data[parent.progressBar.field]){old_group.domainCount--;}
old_group.res_ids=_.without(old_group.res_ids,resID);self._updateParentResIDs(old_group);break;}}
new_group.data.push(recordID);new_group.res_ids.push(resID);new_group.count++;return this.notifyChanges(recordID,changes).then(function(){return self.save(recordID);}).then(function(){record.parentID=new_group.id;return[old_group.id,new_group.id];});},reload:function(id,options){const element=this.localData[id];if(element.parentID){element.limit=this.loadParams.limit;}
if(options&&options.activeFilter){element.activeFilter=options.activeFilter||element.activeFilter;delete options.activeFilter;}
if(options&&options.groupBy&&!options.groupBy.length){options.groupBy=this.defaultGroupedBy;}
return this._super(id,options);},__reload:function(id,options){var def=this._super(id,options);if(options&&options.loadMoreOffset){return def;}
return this._reloadProgressBarGroupFromRecord(id,def);},save:function(recordID){var def=this._super.apply(this,arguments);return this._reloadProgressBarGroupFromRecord(recordID,def);},_getGroupedListPropsToKeep(list,options){const propsToKeep=this._super(...arguments);if(list.activeFilter){propsToKeep.activeFilter=list.activeFilter;}
return propsToKeep;},_getUngroupedListDomain(list){const domainExtension=(list.activeFilter&&list.activeFilter.domain)||[];return[...this._super(...arguments),...domainExtension];},_makeDataPoint:function(params){var dataPoint=this._super.apply(this,arguments);if(params.progressBar){dataPoint.progressBar=params.progressBar;}
dataPoint.domainCount=dataPoint.count;return dataPoint;},_load:function(dataPoint,options){if(dataPoint.groupedBy.length&&dataPoint.progressBar){return this._readProgressBarGroup(dataPoint,options);}
return this._super.apply(this,arguments);},_readGroup:function(list){var self=this;if(list.groupedBy.length>1){list.groupedBy=[list.groupedBy[0]];}
return this._super.apply(this,arguments).then(function(result){return self._readTooltipFields(list).then(_.constant(result));});},async _readProgressBarGroup(list,options){const groupsDef=this._readGroup(list,options);const progressBarDef=this._readProgressBar(list);const[,progressBar]=await Promise.all([groupsDef,progressBarDef]);const groupProms=[];for(const groupId of list.data){const group=this.localData[groupId];if(group.activeFilter&&group.activeFilter.value&&!group.data.length){group.activeFilter={};groupProms.push(this._fetchUngroupedList(group));}}
await Promise.all(groupProms);for(const groupId of list.data){const group=this.localData[groupId];let value=group.value;if(value===true){value="True";}else if(value===false){value="False";}
const valuesCount=progressBar[value]||{};const valuesCountTotal=Object.keys(valuesCount).reduce((sum,key)=>{return sum+valuesCount[key];},0);const counts=Object.assign({__false:group.domainCount-valuesCountTotal},valuesCount);group.progressBarValues=Object.assign({counts,},list.progressBar);}
return list;},_readProgressBar:function(list){return this._rpc({model:list.model,method:'read_progress_bar',kwargs:{domain:list.domain,group_by:list.groupedBy[0],progress_bar:list.progressBar,context:list.context,},});},_readTooltipFields:function(list){var self=this;var groupedByField=list.fields[list.groupedBy[0].split(':')[0]];if(groupedByField.type!=='many2one'){return Promise.resolve();}
var groupIds=_.reduce(list.data,function(groupIds,id){var res_id=self.get(id,{raw:true}).res_id;if(res_id){groupIds.push(res_id);}
return groupIds;},[]);var tooltipFields=[];var groupedByFieldInfo=list.fieldsInfo.kanban[list.groupedBy[0]];if(groupedByFieldInfo&&groupedByFieldInfo.options){tooltipFields=Object.keys(groupedByFieldInfo.options.group_by_tooltip||{});}
if(groupIds.length&&tooltipFields.length){var fieldNames=_.union(['display_name'],tooltipFields);return this._rpc({model:groupedByField.relation,method:'read',args:[groupIds,fieldNames],context:list.context,}).then(function(result){_.each(list.data,function(id){var dp=self.localData[id];dp.tooltipData=_.findWhere(result,{id:dp.res_id});});});}
return Promise.resolve();},async _reloadProgressBarGroupFromRecord(recordID,def){let element=this.localData[recordID];if(element.type==='list'){if(!element.parentID){return def;}
if(element.activeFilter){return def;}}
while(element){if(element.progressBar){const data=await def;await this._load(element,{keepEmptyGroups:true,onlyGroups:true,});return data;}
element=this.localData[element.parentID];}
return def;},});return KanbanModel;});;

/* /web/static/src/legacy/js/views/kanban/kanban_record.js */
odoo.define('web.KanbanRecord',function(require){"use strict";var config=require('web.config');var core=require('web.core');var Domain=require('web.Domain');var Dialog=require('web.Dialog');var field_utils=require('web.field_utils');const FieldWrapper=require('web.FieldWrapper');var utils=require('web.utils');var Widget=require('web.Widget');const{WidgetAdapterMixin}=require('web.OwlCompatibility');var widgetRegistry=require('web.widget_registry');const widgetRegistryOwl=require('web.widgetRegistry');const WidgetWrapper=require("web.WidgetWrapper");var _t=core._t;var QWeb=core.qweb;var KANBAN_RECORD_COLORS=require('web.basic_fields').FieldColorPicker.prototype.RECORD_COLORS;var NB_KANBAN_RECORD_COLORS=KANBAN_RECORD_COLORS.length;const{Component}=require("@odoo/owl");const{DateTime}=luxon;const hackishLuxon={DateTime:{fromISO(text,opt){const res=DateTime.fromJSDate(text,"UTC");if(!res.isValid){throw new Error("Invalid Hackish luxon instance in legacy KanbanRecord")}
return res;},local:DateTime.local,}};var KanbanRecord=Widget.extend(WidgetAdapterMixin,{events:{'click .oe_kanban_action':'_onKanbanActionClicked','click .o_kanban_manage_toggle_button':'_onManageTogglerClicked',},init:function(parent,state,options){this._super(parent);this.fields=state.fields;this.fieldsInfo=state.fieldsInfo.kanban;this.modelName=state.model;this.options=options;this.editable=options.editable;this.deletable=options.deletable;this.read_only_mode=options.read_only_mode;this.selectionMode=options.selectionMode;this.qweb=options.qweb;this.subWidgets={};this._setState(state);this._onKanbanActionClicked=_.debounce(this._onKanbanActionClicked,300,true);},start:function(){return Promise.all([this._super.apply(this,arguments),this._render()]);},destroy:function(){this._super(...arguments);WidgetAdapterMixin.destroy.call(this);},on_attach_callback:function(){this.isInDOM=true;_.invoke(this.subWidgets,'on_attach_callback');WidgetAdapterMixin.on_attach_callback.call(this);},on_detach_callback:function(){this.isInDOM=false;_.invoke(this.subWidgets,'on_detach_callback');WidgetAdapterMixin.on_detach_callback.call(this);},isHtmlEmpty:function(htmlContent){let div=document.createElement('div');div.innerHTML=htmlContent||"";return div.innerText.trim()==="";},update:function(state){_.invoke(_.pluck(this.subWidgets,'$el'),'detach');this._setState(state);return this._render();},_attachTooltip:function(){var self=this;this.$('[tooltip]').each(function(){var $el=$(this);var tooltip=$el.attr('tooltip');if(tooltip){$el.tooltip({title:self.qweb.render(tooltip,self.qweb_context)});}});},_computeDomain:function(d){return new Domain(d).compute(this.state.evalContext);},_getColorClassname:function(variable){var color=this._getColorID(variable);return'oe_kanban_color_'+color;},_getColorID:function(variable){if(typeof variable==='number'){return Math.round(variable)%NB_KANBAN_RECORD_COLORS;}
if(typeof variable==='string'){var index=0;for(var i=0;i<variable.length;i++){index+=variable.charCodeAt(i);}
return index%NB_KANBAN_RECORD_COLORS;}
return 0;},_getColorname:function(variable){var colorID=this._getColorID(variable);return KANBAN_RECORD_COLORS[colorID];},file_type_magic_word:{'/':'jpg','R':'gif','i':'png','P':'svg+xml',},_getImageURL:function(model,field,id,placeholder){id=(_.isArray(id)?id[0]:id)||null;var isCurrentRecord=this.modelName===model&&(this.recordData.id===id||(!this.recordData.id&&!id));var url;if(isCurrentRecord&&this.record[field]&&this.record[field].raw_value&&!utils.is_bin_size(this.record[field].raw_value)){url='data:image/'+this.file_type_magic_word[this.record[field].raw_value[0]]+';base64,'+this.record[field].raw_value;}else if(placeholder&&(!model||!field||!id||(isCurrentRecord&&this.record[field]&&!this.record[field].raw_value))){url=placeholder;}else{var session=this.getSession();var params={model:model,field:field,id:id};if(isCurrentRecord){params.unique=this.record.__last_update&&this.record.__last_update.value.replace(/[^0-9]/g,'');}
url=session.url('/web/image',params);}
return url;},_openRecord:function(){if(this.options.openAction){const{action,type}=this.options.openAction;this.trigger_up("button_clicked",{record:this.state,attrs:{type,name:action}});return;}
var editMode=this.$el.hasClass('oe_kanban_global_click_edit');this.trigger_up('open_record',{id:this.db_id,mode:editMode?'edit':'readonly',});},_processFields:function(){var self=this;this.$("field").each(function(){var $field=$(this);var field_name=$field.attr("name");var field_widget=$field.attr("widget");if(field_widget||self.fields[field_name].type==='many2many'){var widget=self.subWidgets[field_name];if(!widget){var Widget=self.fieldsInfo[field_name].Widget;if(Widget){widget=self._processWidget($field,field_name,Widget);self.subWidgets[field_name]=widget;}else if(config.isDebug()){$field.replaceWith($('<span>',{text:_.str.sprintf(_t('[No widget %s]'),field_widget),}));}}else{widget.reset(self.state);$field.replaceWith(widget.$el);if(self.isInDOM&&widget.on_attach_callback){widget.on_attach_callback();}}}else{self._processField($field,field_name);}});},_processField:function($field,field_name){var field=this.fields[field_name];var value=this.recordData[field_name];var options={data:this.recordData,forceString:true};var formatted_value=field_utils.format[field.type](value,field,options);var $result=$('<span>',{text:formatted_value,});$field.replaceWith($result);this._setFieldDisplay($result,field_name);return $result;},_processWidget:function($field,field_name,Widget){var self=this;var attrs=Object.create(null);_.each(this.fieldsInfo[field_name],function(value,key){if(_.str.startsWith(key,'t-att-')){key=key.slice(6);value=$field.attr(key);}
attrs[key]=value;});var options=_.extend({},this.options,{attrs:attrs});let widget;let def;if(utils.isComponent(Widget)){widget=new FieldWrapper(this,Widget,{fieldName:field_name,record:this.state,options:options,});def=widget.mount(document.createDocumentFragment()).then(()=>{$field.replaceWith(widget.$el);});}else{widget=new Widget(this,field_name,this.state,options);def=widget.replace($field);}
this.defs.push(def);def.then(function(){self._setFieldDisplay(widget.$el,field_name);});return widget;},_processWidgets:function(){var self=this;this.$("widget").each(function(){var $field=$(this);const attrs={};for(const attr of $field[0].attributes){attrs[attr.name]=attr.value;}
const options=Object.assign({},self.options,{attrs});const name=$field.attr('name');const Widget=widgetRegistryOwl.get(name)||widgetRegistry.get(name);const legacy=!(Widget.prototype instanceof Component);let widget;if(legacy){widget=new Widget(self,self.state,options);}else{widget=new WidgetWrapper(this,Widget,{record:self.state,options});}
let def;if(legacy){def=widget._widgetRenderAndInsert(function(){});}else{def=widget.mount(document.createDocumentFragment());}
self.defs.push(def);def.then(function(){$field.replaceWith(widget.$el);widget.$el.addClass('o_widget');});});},_render:function(){this.defs=[];_.invoke(this.subWidgets,'on_detach_callback');this._replaceElement(this.qweb.render('kanban-box',this.qweb_context));if(this.el){const dropdownToggle=this.el.querySelector('.o_dropdown_kanban .dropdown-toggle');if(dropdownToggle){delete dropdownToggle.dataset['bsDisplay'];dropdownToggle.dataset['bsOffset']='0,-2';}
const dropdownMenu=this.el.querySelector('.o_dropdown_kanban .dropdown-menu');if(dropdownMenu){dropdownMenu.classList.add('dropdown-menu-end');}}
this.$el.addClass('o_kanban_record').attr("tabindex",0);this.$el.attr('role','article');this.$el.data('record',this);if(this.selectionMode||('openAction'in this.options)){this.$el.addClass('oe_kanban_global_click');}
if(this.$el.hasClass('oe_kanban_global_click')||this.$el.hasClass('oe_kanban_global_click_edit')){this.$el.on('click',this._onGlobalClick.bind(this));this.$el.on('keydown',this._onKeyDownCard.bind(this));}else{this.$el.on('keydown',this._onKeyDownOpenFirstLink.bind(this));}
this._processFields();this._processWidgets();this._setupColor();this._setupColorPicker();this._attachTooltip();this.$('span.o_tag').tooltip({delay:{'show':50}});return Promise.all(this.defs);},_setCoverImage:function(fieldName,autoOpen){var self=this;this._rpc({model:'ir.attachment',method:'search_read',domain:[['res_model','=',this.modelName],['res_id','=',this.id],['mimetype','ilike','image']],fields:['id','name'],}).then(function(attachmentIds){self.imageUploadID=_.uniqueId('o_cover_image_upload');self.accepted_file_extensions='image/*';self.attachment_count=attachmentIds.length;var coverId=self.record[fieldName]&&self.record[fieldName].raw_value;var $content=$(QWeb.render('KanbanView.SetCoverModal',{coverId:coverId,attachmentIds:attachmentIds,widget:self,}));var $imgs=$content.find('.o_kanban_cover_image');var dialog=new Dialog(self,{title:_t("Set a Cover Image"),$content:$content,buttons:[{text:_t("Select"),classes:attachmentIds.length?'btn-primary':'d-none',close:true,disabled:!coverId,click:function(){var $img=$imgs.filter('.o_selected').find('img');var data={};data[fieldName]={id:$img.data('id'),display_name:$img.data('name')};self.trigger_up('kanban_record_update',data);},},{text:_t('Upload and Set'),classes:attachmentIds.length?'':'btn-primary',close:false,click:function(){$content.find('input.o_input_file').click();},},{text:_t("Remove Cover Image"),classes:coverId?'':'d-none',close:true,click:function(){var data={};data[fieldName]=false;self.trigger_up('kanban_record_update',data);},},{text:_t("Discard"),close:true,}],});dialog.opened().then(function(){var $selectBtn=dialog.$footer.find('.btn-primary');if(autoOpen&&!self.attachment_count){$selectBtn.click();}
$content.on('click','.o_kanban_cover_image',function(ev){$imgs.not(ev.currentTarget).removeClass('o_selected');$selectBtn.prop('disabled',!$(ev.currentTarget).toggleClass('o_selected').hasClass('o_selected'));});$content.on('dblclick','.o_kanban_cover_image',function(ev){var $img=$(ev.currentTarget).find('img');var data={};data[fieldName]={id:$img.data('id'),display_name:$img.data('name')};self.trigger_up('kanban_record_update',data);dialog.close();});$content.on('change','input.o_input_file',function(){$content.find('form.o_form_binary_form').submit();});$(window).on(self.imageUploadID,function(){var images=Array.prototype.slice.call(arguments,1);var data={};data[fieldName]={id:images[0].id,display_name:images[0].filename};self.trigger_up('kanban_record_update',data);dialog.close();});});dialog.open();});},_setFieldDisplay:function($el,fieldName){if(this.fieldsInfo[fieldName].display==='right'){$el.addClass('float-end');}else if(this.fieldsInfo[fieldName].display==='full'){$el.addClass('o_text_block');}
if(this.fieldsInfo[fieldName].bold){$el.addClass('o_text_bold');}},_setState:function(recordState){this.state=recordState;this.id=recordState.res_id;this.db_id=recordState.id;this.recordData=recordState.data;this.record=this._transformRecord(recordState.data);this.qweb_context={context:this.state.getContext(),kanban_image:this._getImageURL.bind(this),kanban_color:this._getColorClassname.bind(this),kanban_getcolor:this._getColorID.bind(this),kanban_getcolorname:this._getColorname.bind(this),kanban_compute_domain:this._computeDomain.bind(this),selection_mode:this.selectionMode,read_only_mode:this.read_only_mode,record:this.record,user_context:this.getSession().user_context,widget:this,luxon:hackishLuxon,};},_setupColor:function(){var color_field=this.$el.attr('color');if(color_field&&color_field in this.fields){var colorHelp=_.str.sprintf(_t("Card color: %s"),this._getColorname(this.recordData[color_field]));var colorClass=this._getColorClassname(this.recordData[color_field]);this.$el.addClass(colorClass);this.$el.prepend('<span title="'+colorHelp+'" aria-label="'+colorHelp+'" role="img" class="oe_kanban_color_help"/>');}},_setupColorPicker:function(){var $colorpicker=this.$('ul.oe_kanban_colorpicker');if(!$colorpicker.length){return;}
$colorpicker.html(QWeb.render('web.Legacy.KanbanColorPicker',{colors:KANBAN_RECORD_COLORS}));$colorpicker.on('click','a',this._onColorChanged.bind(this));},_transformRecord:function(recordData){const new_record=Object.create(null);for(const name of this.state.getFieldNames()){const value=recordData[name];const r=new_record[name]=_.clone(this.fields[name]||{});const formatter=r.type?field_utils.format[r.type]:_.identity;r.raw_value=value;r.value=formatter(value,this.fields[name],recordData,this.state);switch(r.type){case'date':case'datetime':r.raw_value=value&&value.toDate();break;case'one2many':case'many2many':r.raw_value=value.count?value.res_ids:[];break;case'many2one':r.raw_value=value&&value.res_id||false;break;case'html':r.value=utils.Markup(value);break;}}
return new_record;},_updateRecord:function(data){this.trigger_up('kanban_record_update',data);},_onColorChanged:function(event){event.preventDefault();var data={};var color_field=$(event.delegateTarget).data('field')||'color';data[color_field]=$(event.currentTarget).data('color');this.trigger_up('kanban_record_update',data);},_onGlobalClick:function(event){if($(event.target).parents('.o_dropdown_kanban').length){return;}
if(this.$el.hasClass('o_currently_dragged')){return;}
var trigger=true;var elem=event.target;var ischild=true;var children=[];while(elem){var events=$._data(elem,'events');if(elem===event.currentTarget){ischild=false;}
var test_event=events&&events.click&&(events.click.length>1||events.click[0].namespace!=='bs.tooltip');var testLinkWithHref=elem.nodeName.toLowerCase()==='a'&&elem.href;if(ischild){children.push(elem);if(test_event||testLinkWithHref){trigger=false;}}
if(trigger&&test_event){_.each(events.click,function(click_event){if(click_event.selector){_.each(children,function(child){if($(child).is(click_event.selector)){trigger=false;}});}});}
elem=elem.parentElement;}
if(trigger){this._openRecord();}},_onKanbanActionClicked:function(event){event.preventDefault();var $action=$(event.currentTarget);var type=$action.data('type')||'button';switch(type){case'edit':this.trigger_up('open_record',{id:this.db_id,mode:'edit'});break;case'open':this.trigger_up('open_record',{id:this.db_id});break;case'delete':this.trigger_up('kanban_record_delete',{id:this.db_id,record:this});break;case'action':case'object':var attrs=$action.data();attrs.confirm=$action.attr('confirm');this.trigger_up('button_clicked',{attrs:attrs,record:this.state,});break;case'set_cover':var fieldName=$action.data('field');var autoOpen=$action.data('auto-open');if(this.fields[fieldName].type==='many2one'&&this.fields[fieldName].relation==='ir.attachment'&&this.fieldsInfo[fieldName].widget==='attachment_image'){this._setCoverImage(fieldName,autoOpen);}else{var warning=_.str.sprintf(_t('Could not set the cover image: incorrect field ("%s") is provided in the view.'),fieldName);this.displayNotification({title:warning,type:'danger'});}
break;default:this.displayNotification({message:_t("Kanban: no action for type: ")+type,type:'danger'});}},_onKeyDownCard:function(event){switch(event.keyCode){case $.ui.keyCode.ENTER:if($(event.target).hasClass('oe_kanban_global_click')){event.preventDefault();this._onGlobalClick(event);break;}}},_onKeyDownOpenFirstLink:function(event){switch(event.keyCode){case $.ui.keyCode.ENTER:event.preventDefault();$(event.target).find('a, button').first().click();break;}},_onManageTogglerClicked:function(event){event.preventDefault();this.$el.parent().find('.o_kanban_record').not(this.$el).removeClass('o_dropdown_open');this.$el.toggleClass('o_dropdown_open');var colorClass=this._getColorClassname(this.recordData.color||0);this.$('.o_kanban_manage_button_section').toggleClass(colorClass);},});return KanbanRecord;});;

/* /web/static/src/legacy/js/views/kanban/kanban_record_quick_create.js */
odoo.define('web.kanban_record_quick_create',function(require){"use strict";var core=require('web.core');var QuickCreateFormView=require('web.QuickCreateFormView');const session=require('web.session');var Widget=require('web.Widget');var RecordQuickCreate=Widget.extend({className:'o_kanban_quick_create',custom_events:{add:'_onAdd',cancel:'_onCancel',},events:{'click .o_kanban_add':'_onAddClicked','click .o_kanban_edit':'_onEditClicked','click .o_kanban_cancel':'_onCancelClicked','mousedown':'_onMouseDown',},mouseDownInside:false,init:function(parent,options){this._super.apply(this,arguments);this.context=options.context;this.formViewRef=options.formViewRef;this.model=options.model;this._disabled=false;},willStart:function(){var self=this;var superWillStart=this._super.apply(this,arguments);var viewsLoaded;if(this.formViewRef){var views=[[false,'form']];var context=_.extend({},this.context,{form_view_ref:this.formViewRef,});viewsLoaded=this.loadViews(this.model,context,views);}else{var fieldsView={};fieldsView.arch='<form>'+'<field name="display_name" placeholder="Title" modifiers=\'{"required": true}\'/>'+'</form>';var fields={display_name:{string:'Display name',type:'char'},};fieldsView.fields=fields;fieldsView.viewFields=fields;viewsLoaded=Promise.resolve({form:fieldsView});}
viewsLoaded=viewsLoaded.then(function(fieldsViews){var formView=new QuickCreateFormView(fieldsViews.form,{context:self.context,modelName:self.model,userContext:session.user_context,});return formView.getController(self).then(function(controller){self.controller=controller;return self.controller.appendTo(document.createDocumentFragment());});});return Promise.all([superWillStart,viewsLoaded]);},start:function(){this.$el.append(this.controller.$el);this.controller.renderButtons(this.$el);this.controller.autofocus();core.bus.on('click',this,this._onWindowClicked);return this._super.apply(this,arguments);},on_attach_callback:function(){if(this.controller){this.controller.autofocus();}},cancel:function(){var self=this;return this.controller.commitChanges().then(function(){if(!self.controller.isDirty()){self._cancel();}});},_add:function(options){var self=this;if(this._disabled){return;}
this._disableQuickCreate();this.controller.commitChanges().then(function(){var canBeSaved=self.controller.canBeSaved();if(canBeSaved){self.trigger_up('quick_create_add_record',{openRecord:options&&options.openRecord||false,values:self.controller.getChanges(),onFailure:self._enableQuickCreate.bind(self),});}else{self._enableQuickCreate();}}).guardedCatch(this._enableQuickCreate.bind(this));},_cancel:function(){this.trigger_up('cancel_quick_create');},_disableQuickCreate:function(){this._disabled=true;this.$el.addClass('o_disabled');this.$('input:not(:disabled)').addClass('o_temporarily_disabled').attr('disabled','disabled');},_enableQuickCreate:function(){this._disabled=false;this.$el.removeClass('o_disabled');this.$('input.o_temporarily_disabled').removeClass('o_temporarily_disabled').attr('disabled',false);},_onAdd:function(ev){ev.stopPropagation();this._add();},_onAddClicked:function(ev){ev.stopPropagation();this._add();},_onCancel:function(ev){ev.stopPropagation();this._cancel();},_onCancelClicked:function(ev){ev.stopPropagation();this._cancel();},_onEditClicked:function(ev){ev.stopPropagation();this._add({openRecord:true});},_onWindowClicked:function(ev){var mouseDownInside=this.mouseDownInside;this.mouseDownInside=false;if(!document.contains(this.el)){return;}
if($(ev.target).closest('.o-kanban-button-new, .o_kanban_quick_add').length){return;}
if($(ev.target).parents('.ui-autocomplete').length){return;}
if($(ev.target).closest('.modal').length){return;}
if($(document.body).hasClass('modal-open')){return;}
if(!document.contains(ev.target)){return;}
if(this.el.contains(ev.target)||this.el===ev.target||mouseDownInside){return;}
this.cancel();},_onMouseDown:function(ev){this.mouseDownInside=true;}});return RecordQuickCreate;});;

/* /web/static/src/legacy/js/views/kanban/kanban_renderer.js */
odoo.define('web.KanbanRenderer',function(require){"use strict";var BasicRenderer=require('web.BasicRenderer');var ColumnQuickCreate=require('web.kanban_column_quick_create');var config=require('web.config');var core=require('web.core');var KanbanColumn=require('web.KanbanColumn');var KanbanRecord=require('web.KanbanRecord');var QWeb=require('web.QWeb');var session=require('web.session');var utils=require('web.utils');var viewUtils=require('web.viewUtils');var qweb=core.qweb;var _t=core._t;function findInNode(node,predicate){if(predicate(node)){return node;}
if(!node.children){return undefined;}
for(var i=0;i<node.children.length;i++){if(findInNode(node.children[i],predicate)){return node.children[i];}}}
function qwebAddIf(node,condition){if(node.attrs[qweb.prefix+'-if']){condition=_.str.sprintf("(%s) and (%s)",node.attrs[qweb.prefix+'-if'],condition);}
node.attrs[qweb.prefix+'-if']=condition;}
function transformQwebTemplate(node,fields){if(node.tag&&node.attrs.modifiers){var modifiers=node.attrs.modifiers||{};if(modifiers.invisible){qwebAddIf(node,_.str.sprintf("!kanban_compute_domain(%s)",JSON.stringify(modifiers.invisible)));}}
switch(node.tag){case'button':case'a':var type=node.attrs.type||'';if(_.indexOf('action,object,edit,open,delete,url,set_cover'.split(','),type)!==-1){_.each(node.attrs,function(v,k){if(_.indexOf('icon,type,name,args,string,context,states,kanban_states'.split(','),k)!==-1){node.attrs['data-'+k]=v;delete(node.attrs[k]);}});if(node.attrs['data-string']){node.attrs.title=node.attrs['data-string'];}
if(node.tag==='a'&&node.attrs['data-type']!=="url"){node.attrs.href='#';}else{node.attrs.type='button';}
var action_classes=" oe_kanban_action oe_kanban_action_"+node.tag;if(node.attrs['t-attf-class']){node.attrs['t-attf-class']+=action_classes;}else if(node.attrs['t-att-class']){node.attrs['t-att-class']+=" + '"+action_classes+"'";}else{node.attrs['class']=(node.attrs['class']||'')+action_classes;}}
break;}
if(node.children){for(var i=0,ii=node.children.length;i<ii;i++){transformQwebTemplate(node.children[i],fields);}}}
var KanbanRenderer=BasicRenderer.extend({className:'o_legacy_kanban_view',config:{KanbanColumn:KanbanColumn,KanbanRecord:KanbanRecord,},custom_events:_.extend({},BasicRenderer.prototype.custom_events||{},{close_quick_create:'_onCloseQuickCreate',cancel_quick_create:'_onCancelQuickCreate',set_progress_bar_state:'_onSetProgressBarState',start_quick_create:'_onStartQuickCreate',quick_create_column_updated:'_onQuickCreateColumnUpdated',}),events:_.extend({},BasicRenderer.prototype.events||{},{'keydown .o_kanban_record':'_onRecordKeyDown'}),sampleDataTargets:['.o_legacy_kanban_counter','.o_kanban_record','.o_kanban_toggle_fold','.o_column_folded','.o_column_archive_records','.o_column_unarchive_records',],init:function(parent,state,params){this._super.apply(this,arguments);this.widgets=[];this.qweb=new QWeb(config.isDebug(),{_s:session.origin},false);var templates=findInNode(this.arch,function(n){return n.tag==='templates';});transformQwebTemplate(templates,state.fields);this.qweb.add_template(utils.json_node_to_xml(templates));this.examples=params.examples;this.recordOptions=_.extend({},params.record_options,{qweb:this.qweb,viewType:'kanban',});this.columnOptions=_.extend({KanbanRecord:this.config.KanbanRecord},params.column_options);if(this.columnOptions.hasProgressBar){this.columnOptions.progressBarStates={};}
this.quickCreateEnabled=params.quickCreateEnabled;if(!params.readOnlyMode){var handleField=_.findWhere(this.state.fieldsInfo.kanban,{widget:'handle'});this.handleField=handleField&&handleField.name;}
this._setState(state);},on_attach_callback:function(){this._super(...arguments);if(this.quickCreate){this.quickCreate.on_attach_callback();}},addQuickCreate:function(groupId){let kanbanColumn;if(groupId){kanbanColumn=this.widgets.find(column=>column.db_id===groupId);}
kanbanColumn=kanbanColumn||this.widgets[0];return kanbanColumn.addQuickCreate();},giveFocus:function(){this.$('.o_kanban_record:first').focus();},quickCreateToggleFold:function(){this.quickCreate.toggleFold();this._toggleNoContentHelper();},updateColumn:function(localID,columnState,options){var self=this;var KanbanColumn=this.config.KanbanColumn;var newColumn=new KanbanColumn(this,columnState,this.columnOptions,this.recordOptions);var index=_.findIndex(this.widgets,{db_id:localID});var column=this.widgets[index];this.widgets[index]=newColumn;if(options&&options.state){this._setState(options.state);}
return newColumn.appendTo(document.createDocumentFragment()).then(function(){var def;if(options&&options.openQuickCreate){def=newColumn.addQuickCreate();}
return Promise.resolve(def).then(function(){newColumn.$el.insertAfter(column.$el);self._toggleNoContentHelper();newColumn.on_attach_callback();column.destroy();});});},updateRecord:function(recordState){var isGrouped=!!this.state.groupedBy.length;var record;if(isGrouped){_.each(this.widgets,function(widget){record=record||_.findWhere(widget.records,{db_id:recordState.id,});});}else{record=_.findWhere(this.widgets,{db_id:recordState.id});}
if(record){return record.update(recordState);}
return Promise.resolve();},_focusOnNextCard:function(currentCardElement){var nextCard=currentCardElement.nextElementSibling;if(nextCard){nextCard.focus();}},_focusOnPreviousCard:function(currentCardElement){var previousCard=currentCardElement.previousElementSibling;if(previousCard&&previousCard.classList.contains("o_kanban_record")){previousCard.focus();return true;}},_getGhostColumns:function(){if(this.examples&&this.examples.ghostColumns){return this.examples.ghostColumns;}
return _.map(_.range(1,5),function(num){return _.str.sprintf(_t("Column %s"),num);});},_renderExampleBackground:function(fragment){var $background=$(qweb.render('KanbanView.ExamplesBackground',{ghostColumns:this._getGhostColumns()}));$background.appendTo(fragment);},_renderGhostDivs:function(fragment,nbDivs,options){var ghostDefs=[];for(var $ghost,i=0;i<nbDivs;i++){$ghost=$('<div>').addClass('o_kanban_record o_kanban_ghost');if(options&&options.inlineStyle){$ghost.attr('style',options.inlineStyle);}
var def=$ghost.appendTo(fragment);ghostDefs.push(def);}
return Promise.all(ghostDefs);},_renderGrouped:function(fragment){var self=this;var KanbanColumn=this.config.KanbanColumn;_.each(this.state.data,function(group){var column=new KanbanColumn(self,group,self.columnOptions,self.recordOptions);var def;if(!group.value){def=column.prependTo(fragment);self.widgets.unshift(column);}else{def=column.appendTo(fragment);self.widgets.push(column);}
self.defs.push(def);});if(this.$el.sortable('instance')!==undefined){this.$el.sortable('destroy');}
if(this.groupedByM2O){this.$el.sortable({axis:'x',items:'> .o_kanban_group',handle:'.o_column_title',cursor:'move',revert:150,delay:100,tolerance:'pointer',forcePlaceholderSize:true,stop:function(){var ids=[];self.$('.o_kanban_group').each(function(index,u){if(_.isNumber($(u).data('id'))){ids.push($(u).data('id'));}});self.trigger_up('resequence_columns',{ids:ids});},});if(this.createColumnEnabled){this.quickCreate=new ColumnQuickCreate(this,{applyExamplesText:this.examples&&this.examples.applyExamplesText,examples:this.examples&&this.examples.examples,isFirstColumn:!self.state.data.length,groupByFieldString:this.state.fields[this.state.groupedBy].string,});this.defs.push(this.quickCreate.appendTo(fragment).then(function(){if(!self.state.data.length){self.quickCreate.toggleFold();self._renderExampleBackground(fragment);}}));}}},_renderUngrouped:function(fragment){var self=this;var KanbanRecord=this.config.KanbanRecord;var kanbanRecord;_.each(this.state.data,function(record){kanbanRecord=new KanbanRecord(self,record,self.recordOptions);self.widgets.push(kanbanRecord);var def=kanbanRecord.appendTo(fragment);self.defs.push(def);});var orderedBy=this.state.orderedBy;var hasHandle=this.handleField&&(orderedBy.length===0||orderedBy[0].name===this.handleField);if(hasHandle){this.$el.sortable({items:'.o_kanban_record:not(.o_kanban_ghost)',cursor:'move',revert:0,delay:0,tolerance:'pointer',forcePlaceholderSize:true,stop:function(event,ui){self._moveRecord(ui.item.data('record').db_id,ui.item.index());},});}
var prom=Promise.all(self.defs).then(function(){var options={};if(kanbanRecord){options.inlineStyle=kanbanRecord.$el.attr('style');}
return self._renderGhostDivs(fragment,6,options);});this.defs.push(prom);},_renderView:function(){var self=this;var isGrouped=!!this.state.groupedBy.length;var fragment=document.createDocumentFragment();var defs=[];this.defs=defs;if(isGrouped){this._renderGrouped(fragment);}else{this._renderUngrouped(fragment);}
delete this.defs;return this._super.apply(this,arguments).then(function(){return Promise.all(defs).then(function(){self.$el.empty();self.$el.toggleClass('o_kanban_grouped',isGrouped);self.$el.toggleClass('o_kanban_ungrouped',!isGrouped);self.$el.append(fragment);self._toggleNoContentHelper();});});},_toggleNoContentHelper:function(remove){var displayNoContentHelper=!remove&&!this._hasContent()&&!!this.noContentHelp&&!(this.quickCreate&&!this.quickCreate.folded)&&!this.state.isGroupedByM2ONoColumn;var $noContentHelper=this.$('.o_view_nocontent');if(displayNoContentHelper&&!$noContentHelper.length){this._renderNoContentHelper();}
if(!displayNoContentHelper&&$noContentHelper.length){$noContentHelper.remove();}},_setState(){this._super(...arguments);const groupedBy=this.state.groupedBy[0];const groupByFieldName=viewUtils.getGroupByField(groupedBy);const field=this.state.fields[groupByFieldName]||{};const fieldInfo=this.state.fieldsInfo.kanban[groupByFieldName]||{};const group_by_tooltip=fieldInfo.options&&fieldInfo.options.group_by_tooltip;const grouped_by_date=["date","datetime"].includes(field.type);const grouped_by_m2m=field.type==="many2many";const grouped_by_m2o=field.type==="many2one";const readonly=!!field.readonly||!!fieldInfo.readonly;const relation=(grouped_by_m2o||grouped_by_m2m)&&field.relation;const quick_create=this.quickCreateEnabled&&viewUtils.isQuickCreateEnabled(this.state);const draggable=!readonly&&!grouped_by_m2m&&(!grouped_by_date||fieldInfo.allowGroupRangeValue);Object.assign(this.columnOptions,{draggable,groupedBy,grouped_by_date,grouped_by_m2o,grouped_by_m2m,group_by_tooltip,quick_create,relation,});this.createColumnEnabled=grouped_by_m2o&&this.columnOptions.group_creatable;this.groupedByM2O=grouped_by_m2o;},_focusOnCardInColumn:function(eventTarget,direction){var currentColumn=eventTarget.parentElement;var hasSelectedACard=false;var cannotSelectAColumn=false;while(!hasSelectedACard&&!cannotSelectAColumn){var candidateColumn=direction==='LEFT'?currentColumn.previousElementSibling:currentColumn.nextElementSibling;currentColumn=candidateColumn;if(candidateColumn){var allCardsOfCandidateColumn=candidateColumn.getElementsByClassName('o_kanban_record');if(allCardsOfCandidateColumn.length){allCardsOfCandidateColumn[0].focus();hasSelectedACard=true;}}
else{direction==='LEFT'?this._focusOnPreviousCard(eventTarget):this._focusOnNextCard(eventTarget);cannotSelectAColumn=true;}}},_onCancelQuickCreate:function(){this._toggleNoContentHelper();},_onCloseQuickCreate:function(){if(this.state.groupedBy.length){_.invoke(this.widgets,'cancelQuickCreate');}
this._toggleNoContentHelper();},_onQuickCreateColumnUpdated:function(ev){ev.stopPropagation();this._toggleNoContentHelper();this._updateExampleBackground();},_onRecordKeyDown:function(e){switch(e.which){case $.ui.keyCode.DOWN:this._focusOnNextCard(e.currentTarget);e.stopPropagation();e.preventDefault();break;case $.ui.keyCode.UP:const previousFocused=this._focusOnPreviousCard(e.currentTarget);if(!previousFocused){this.trigger_up('navigation_move',{direction:'up'});}
e.stopPropagation();e.preventDefault();break;case $.ui.keyCode.RIGHT:this._focusOnCardInColumn(e.currentTarget,'RIGHT');e.stopPropagation();e.preventDefault();break;case $.ui.keyCode.LEFT:this._focusOnCardInColumn(e.currentTarget,'LEFT');e.stopPropagation();e.preventDefault();break;}},_onSetProgressBarState:function(ev){if(!this.columnOptions.progressBarStates[ev.data.columnID]){this.columnOptions.progressBarStates[ev.data.columnID]={};}
_.extend(this.columnOptions.progressBarStates[ev.data.columnID],ev.data.values);},_onStartQuickCreate:function(){this._toggleNoContentHelper(true);},_updateExampleBackground:function(){var $elem=this.$('.o_kanban_example_background_container');if(!this.state.data.length&&!$elem.length){this._renderExampleBackground(this.$el);}else{$elem.remove();}},});return KanbanRenderer;});;

/* /web/static/src/legacy/js/views/kanban/kanban_view.js */
odoo.define('web.KanbanView',function(require){"use strict";var BasicView=require('web.BasicView');var core=require('web.core');var KanbanController=require('web.KanbanController');var kanbanExamplesRegistry=require('web.kanban_examples_registry');var KanbanModel=require('web.KanbanModel');var KanbanRenderer=require('web.KanbanRenderer');var utils=require('web.utils');var _lt=core._lt;var KanbanView=BasicView.extend({accesskey:"k",display_name:_lt("Kanban"),icon:'oi oi-view-kanban',mobile_friendly:true,config:_.extend({},BasicView.prototype.config,{Model:KanbanModel,Controller:KanbanController,Renderer:KanbanRenderer,}),jsLibs:[],viewType:'kanban',init:function(viewInfo,params){this._super.apply(this,arguments);this.loadParams.limit=this.loadParams.limit||40;this.loadParams.openGroupByDefault=true;this.loadParams.type='list';this.noDefaultGroupby=params.noDefaultGroupby;var progressBar;utils.traverse(this.arch,function(n){var isProgressBar=(n.tag==='progressbar');if(isProgressBar){progressBar=_.clone(n.attrs);progressBar.colors=JSON.parse(progressBar.colors);progressBar.sum_field=progressBar.sum_field||false;}
return!isProgressBar;});if(progressBar){this.loadParams.progressBar=progressBar;}
var activeActions=this.controllerParams.activeActions;var archAttrs=this.arch.attrs;activeActions=_.extend(activeActions,{group_create:this.arch.attrs.group_create?!!JSON.parse(archAttrs.group_create):true,group_edit:archAttrs.group_edit?!!JSON.parse(archAttrs.group_edit):true,group_delete:archAttrs.group_delete?!!JSON.parse(archAttrs.group_delete):true,});this.rendererParams.column_options={editable:activeActions.group_edit,deletable:activeActions.group_delete,archivable:archAttrs.archivable?!!JSON.parse(archAttrs.archivable):true,group_creatable:activeActions.group_create,quickCreateView:archAttrs.quick_create_view||null,recordsDraggable:archAttrs.records_draggable?!!JSON.parse(archAttrs.records_draggable):true,hasProgressBar:!!progressBar,};this.rendererParams.record_options={editable:activeActions.edit,deletable:activeActions.delete,read_only_mode:params.readOnlyMode,selectionMode:params.selectionMode,};if(('action'in archAttrs)&&('type'in archAttrs)){this.rendererParams.record_options.openAction={action:archAttrs.action,type:archAttrs.type};}
this.rendererParams.quickCreateEnabled=this._isQuickCreateEnabled();this.rendererParams.readOnlyMode=params.readOnlyMode;var examples=archAttrs.examples;if(examples){this.rendererParams.examples=kanbanExamplesRegistry.get(examples);}
this.controllerParams.on_create=archAttrs.on_create;this.controllerParams.hasButtons=!params.selectionMode?true:false;this.controllerParams.quickCreateEnabled=this.rendererParams.quickCreateEnabled;},_isQuickCreateEnabled:function(){if(!this.controllerParams.activeActions.create){return false;}
if(this.arch.attrs.quick_create!==undefined){return!!JSON.parse(this.arch.attrs.quick_create);}
return true;},_processField(viewType,field,attrs){if(['date','datetime'].includes(field.type)&&'allow_group_range_value'in attrs){attrs.allowGroupRangeValue=!!JSON.parse(attrs.allow_group_range_value);delete attrs.allow_group_range_value;}
return this._super(...arguments);},_processNode(node,fv){const isKanbanImage=node.tag==='img'&&node.attrs['t-att-src']&&node.attrs['t-att-src'].includes('kanban_image');if(isKanbanImage&&!fv.fieldsInfo.kanban.__last_update){fv.fieldsInfo.kanban.__last_update={type:'datetime'};}
return this._super(...arguments);},_updateMVCParams:function(){this._super.apply(this,arguments);if(this.searchMenuTypes.includes('groupBy')&&!this.noDefaultGroupby&&this.arch.attrs.default_group_by){this.loadParams.groupBy=[this.arch.attrs.default_group_by];}},});return KanbanView;});;

/* /web/static/src/legacy/js/views/kanban/quick_create_form_view.js */
odoo.define('web.QuickCreateFormView',function(require){"use strict";var BasicModel=require('web.BasicModel');var FormController=require('web.FormController');var FormRenderer=require('web.FormRenderer');var FormView=require('web.FormView');const{qweb}=require("web.core");var QuickCreateFormRenderer=FormRenderer.extend({start:async function(){await this._super.apply(this,arguments);this.$el.addClass('o_xxs_form_view');this.$el.removeClass('o_xxl_form_view');},_applyFormSizeClass(){},_onNavigationMove:function(ev){var direction=ev.data.direction;if(direction==='cancel'||direction==='next_line'){ev.stopPropagation();this.trigger_up(direction==='cancel'?'cancel':'add');}else{this._super.apply(this,arguments);}},});var QuickCreateFormModel=BasicModel.extend({getChanges:function(localID){var record=this.localData[localID];return this._generateChanges(record,{changesOnly:false});},});var QuickCreateFormController=FormController.extend({commitChanges:function(){var mutexDef=this.mutex.getUnlockedDef();return Promise.all([mutexDef,this.renderer.commitChanges(this.handle)]);},getChanges:function(){return this.model.getChanges(this.handle);},renderButtons($node){this.$buttons=$(qweb.render('KanbanView.RecordQuickCreate.buttons'));if($node){this.$buttons.appendTo($node);}},updateButtons(){},});var QuickCreateFormView=FormView.extend({withControlPanel:false,config:_.extend({},FormView.prototype.config,{Model:QuickCreateFormModel,Renderer:QuickCreateFormRenderer,Controller:QuickCreateFormController,}),});return QuickCreateFormView;});;

/* /web/static/src/legacy/js/views/list/list_confirm_dialog.js */
odoo.define('@web/legacy/js/views/list/list_confirm_dialog',async function(require){'use strict';let __exports={};const core=require('web.core');const Dialog=require('web.Dialog');const FieldWrapper=require('web.FieldWrapper');const{WidgetAdapterMixin}=require('web.OwlCompatibility');const utils=require('web.utils');const _t=core._t;const qweb=core.qweb;const ListConfirmDialog=Dialog.extend(WidgetAdapterMixin,{init:function(parent,record,params,options){options=Object.assign({},options,{$content:$(qweb.render('ListView.confirmModal',params)),buttons:options.buttons||[{text:_t("Ok"),classes:'btn-primary',close:true,click:options.confirm_callback,},{text:_t("Cancel"),close:true,click:options.cancel_callback,}],onForceClose:options.cancel_callback,size:options.size||'medium',title:options.title||_t("Confirmation"),});this._super(parent,options);this.fieldWidgets=params.fields.map(({name})=>{const Widget=record.fieldsInfo.list[name].Widget;const widgetOptions={mode:'readonly',viewType:'list',noOpen:true,};if(!utils.isComponent(Widget)){return{isLegacyWidget:true,fieldWidget:new Widget(this,name,record,widgetOptions),};}else{return{isLegacyWidget:false,fieldWidget:new FieldWrapper(this,Widget,{fieldName:name,record,options:widgetOptions,}),};}});},willStart:function(){const proms=this.fieldWidgets.map(({isLegacyWidget,fieldWidget})=>{if(isLegacyWidget){return fieldWidget._widgetRenderAndInsert(function(){});}else{return fieldWidget.mount(document.createDocumentFragment());}});proms.push(this._super.apply(this,arguments));return Promise.all(proms);},start:function(){this.fieldWidgets.forEach(({fieldWidget})=>{this.$content.find(`.o_changes_widget[data-name=${fieldWidget.name}]`).replaceWith(fieldWidget.$el);fieldWidget.el.style.pointerEvents='none';});return this._super.apply(this,arguments);},destroy:function(){WidgetAdapterMixin.destroy.call(this);this._super();},});__exports[Symbol.for("default")]=ListConfirmDialog;return __exports;});odoo.define(`web.ListConfirmDialog`,async function(require){return require('@web/legacy/js/views/list/list_confirm_dialog')[Symbol.for("default")];});;

/* /web/static/src/legacy/js/views/list/list_controller.js */
odoo.define('@web/legacy/js/views/list/list_controller',async function(require){'use strict';let __exports={};const config=require('web.config');const core=require('web.core');const BasicController=require('web.BasicController');const DataExport=require('web.DataExport');const Dialog=require('web.Dialog');const ListConfirmDialog=require('web.ListConfirmDialog');const session=require('web.session');const viewUtils=require('web.viewUtils');var _t=core._t;var qweb=core.qweb;var ListController=BasicController.extend({buttons_template:'ListView.buttons',events:_.extend({},BasicController.prototype.events,{'click .o_list_export_xlsx':'_onDirectExportData','click .o_list_select_domain':'_onSelectDomain',}),custom_events:_.extend({},BasicController.prototype.custom_events,{activate_next_widget:'_onActivateNextWidget',add_record:'_onAddRecord',button_clicked:'_onButtonClicked',group_edit_button_clicked:'_onEditGroupClicked',edit_line:'_onEditLine',save_line:'_onSaveLine',selection_changed:'_onSelectionChanged',toggle_column_order:'_onToggleColumnOrder',toggle_group:'_onToggleGroup',}),init:function(parent,model,renderer,params){this._super.apply(this,arguments);this.hasActionMenus=params.hasActionMenus;this.headerButtons=params.headerButtons||[];this.toolbarActions=params.toolbarActions||{};this.editable=params.editable;this.noLeaf=params.noLeaf;this.selectedRecords=params.selectedRecords||[];this.multipleRecordsSavingPromise=null;this.fieldChangedPrevented=false;this.isPageSelected=false;this.isDomainSelected=false;this.isExportEnable=false;},willStart(){const sup=this._super(...arguments);const acl=session.user_has_group('base.group_allow_export').then(hasGroup=>{this.isExportEnable=hasGroup;});return Promise.all([sup,acl]);},canBeRemoved:async function(){const _super=this._super.bind(this);await this.renderer.unselectRow({canDiscard:true});return _super(...arguments);},getOwnedQueryParams:function(){var state=this._super.apply(this,arguments);var orderedBy=this.model.get(this.handle,{raw:true}).orderedBy||[];return _.extend({},state,{orderedBy:orderedBy});},getSelectedIds:function(){return _.map(this.getSelectedRecords(),function(record){return record.res_id;});},getSelectedIdsWithDomain:async function(){if(this.isDomainSelected){const state=this.model.get(this.handle,{raw:true});return await this._domainToResIds(state.getDomain(),session.active_ids_limit);}else{return Promise.resolve(this.model.localIdsToResIds(this.selectedRecords));}},getSelectedRecords:function(){var self=this;return _.map(this.selectedRecords,function(db_id){return self.model.get(db_id,{raw:true});});},getSelectedRecordsWithDomain:async function(){if(this.isDomainSelected){const state=this.model.get(this.handle,{raw:true});return await this._domainToRecords(state.getDomain(),session.active_ids_limit);}else{return Promise.resolve(this.selectedRecords.map(localId=>{const data=this.model.localData[localId].data;return{id:data.id,display_name:data.display_name};}));}},renderButtons:function($node){if(this.noLeaf||!this.hasButtons){this.hasButtons=false;this.$buttons=$('<div>');}else{this.$buttons=$(qweb.render(this.buttons_template,{widget:this}));this.$buttons.on('click','.o_list_button_add',this._onCreateRecord.bind(this));this._assignCreateKeyboardBehavior(this.$buttons.find('.o_list_button_add'));this.$buttons.find('.o_list_button_add').tooltip({delay:{show:200,hide:0},title:function(){return qweb.render('CreateButton.tooltip');},trigger:'manual',});this.$buttons.on('mousedown','.o_list_button_discard',this._onDiscardMousedown.bind(this));this.$buttons.on('click','.o_list_button_discard',this._onDiscard.bind(this));}
if($node){this.$buttons.appendTo($node);}},_renderHeaderButtons(){if(this.$headerButtons){this.$headerButtons.remove();this.$headerButtons=null;}
if(!this.headerButtons.length||!this.selectedRecords.length){return;}
const btnClasses='btn-primary btn-secondary btn-link btn-success btn-info btn-warning btn-danger'.split(' ');let $elms=$();this.headerButtons.forEach(node=>{const $btn=viewUtils.renderButtonFromNode(node);$btn.addClass('btn');if(!btnClasses.some(cls=>$btn.hasClass(cls))){$btn.addClass('btn-secondary');}
$btn.on("click",this._onHeaderButtonClicked.bind(this,node));$elms=$elms.add($btn);});this.$headerButtons=$elms;this.$headerButtons.appendTo(this.$buttons);},update:function(params,options){var self=this;let res_ids;if(options&&options.keepSelection){res_ids=this.model.get(this.handle).res_ids;this.selectedRecords=_.filter(this.selectedRecords,function(id){return _.contains(res_ids,self.model.get(id).res_id);});}else{this.selectedRecords=[];}
if(this.selectedRecords.length===0||this.selectedRecords.length<res_ids.length){this.isDomainSelected=false;this.isPageSelected=false;}
params.selectedRecords=this.selectedRecords;return this._super.apply(this,arguments);},updateButtons:function(mode){if(this.hasButtons){this.$buttons.toggleClass('o-editing',mode==='edit');const state=this.model.get(this.handle,{raw:true});if(state.count){this.$buttons.find('.o_list_export_xlsx').show();}else{this.$buttons.find('.o_list_export_xlsx').hide();}}
this._updateSelectionBox();},_abandonRecord:function(recordID){this._super.apply(this,arguments);if((recordID||this.handle)!==this.handle){var state=this.model.get(this.handle);this.renderer.removeLine(state,recordID);this._updatePaging(state);}},_addRecord:function(dataPointId){var self=this;this._disableButtons();return this._removeSampleData(()=>{return this.renderer.unselectRow().then(function(){return self.model.addDefaultRecord(dataPointId,{position:self.editable,});}).then(function(recordID){var state=self.model.get(self.handle);self._updateRendererState(state,{keepWidths:true}).then(function(){self.renderer.editRecord(recordID);}).then(()=>{self._updatePaging(state);});}).then(this._enableButtons.bind(this)).guardedCatch(this._enableButtons.bind(this));});},_assignCreateKeyboardBehavior:function($createButton){var self=this;$createButton.on('keydown',function(e){$createButton.tooltip('hide');switch(e.which){case $.ui.keyCode.ENTER:e.preventDefault();self._onCreateRecord.apply(self);break;case $.ui.keyCode.DOWN:e.preventDefault();self._giveFocus();break;case $.ui.keyCode.TAB:if(!e.shiftKey&&e.target.classList.contains("btn-primary")&&!self.model.isInSampleMode()){e.preventDefault();$createButton.tooltip('show');}
break;}});},_confirmSave(id,options={}){const state=this.model.get(this.handle);return this._updateRendererState(state,{noRender:!state.isM2MGrouped,...options}).then(this._setMode.bind(this,"readonly",id));},_deleteRecordsInCurrentDomain:function(){const doIt=async()=>{const state=this.model.get(this.handle,{raw:true});const resIds=await this._domainToResIds(state.getDomain(),session.active_ids_limit);await this._rpc({model:this.modelName,method:'unlink',args:[resIds],context:state.getContext(),});if(resIds.length===session.active_ids_limit){const msg=_.str.sprintf(_t("Only the first %d records have been deleted (out of %d selected)"),resIds.length,state.count);this.displayNotification({message:msg});}
this.reload();};if(this.confirmOnDelete){Dialog.confirm(this,_t("Are you sure you want to delete these records ?"),{confirm_callback:doIt,});}else{doIt();}},_discardChanges:function(recordID){if((recordID||this.handle)===this.handle){recordID=this.renderer.getEditableRecordID();if(recordID===null){return Promise.resolve();}}
var self=this;return this._super(recordID).then(function(){self.updateButtons('readonly');});},_domainToRecords:function(domain,limit){return this._rpc({model:this.modelName,method:'search_read',args:[domain],kwargs:{fields:['display_name'],limit:limit,},});},_domainToResIds:function(domain,limit){return this._rpc({model:this.modelName,method:'search',args:[domain],kwargs:{limit:limit,},});},_getExportDialogWidget(){let state=this.model.get(this.handle);let defaultExportFields=this.renderer.columns.filter(field=>field.tag==='field'&&state.fields[field.attrs.name].exportable!==false).map(field=>field.attrs.name);let groupedBy=this.renderer.state.groupedBy;const domain=this.isDomainSelected&&state.getDomain();return new DataExport(this,state,defaultExportFields,groupedBy,domain,this.getSelectedIds());},_getPagingInfo:function(state){if(!state.count){return null;}
return Object.assign(this._super(...arguments),{validate:()=>this.renderer.unselectRow({canDiscard:true}),});},_getActionMenuItems:function(state){const{isM2MGrouped}=state;if(!this.hasActionMenus||!this.selectedRecords.length){return null;}
const props=this._super(...arguments);const otherActionItems=[];if(this.isExportEnable){otherActionItems.push({description:_t("Export"),callback:()=>this._onExportData()});}
if(this.archiveEnabled&&!isM2MGrouped){otherActionItems.push({description:_t("Archive"),callback:()=>{const dialog=Dialog.confirm(this,_t("Are you sure that you want to archive all the selected records?"),{confirm_callback:()=>{this._toggleArchiveState(true);dialog.close();},});}},{description:_t("Unarchive"),callback:()=>this._toggleArchiveState(false)});}
if(this.activeActions.delete&&!isM2MGrouped){otherActionItems.push({description:_t("Delete"),callback:()=>this._onDeleteSelectedRecords()});}
return Object.assign(props,{items:Object.assign({},this.toolbarActions,{other:otherActionItems}),context:state.getContext(),domain:state.getDomain(),isDomainSelected:this.isDomainSelected,});},_isValueSet(fieldType,value){switch(fieldType){case'boolean':case'one2many':case'many2many':case'integer':case'monetary':case'float':return true;case'selection':return value!==false;default:return!!value;}},_saveMultipleRecords:function(recordId,node,changes){var recordIds=_.union([recordId],this.selectedRecords);var fieldName=node.attrs.name;var value=changes[fieldName];var validRecordIds=recordIds.reduce((result,nextRecordId)=>{var record=this.model.get(nextRecordId);var modifiers=this.renderer._registerModifiers(node,record);const fieldType=record.fields[fieldName].type;if(!modifiers.readonly&&(!modifiers.required||this._isValueSet(fieldType,value))){result.push(nextRecordId);}
return result;},[]);return new Promise((resolve,reject)=>{const saveRecords=()=>{this.model.saveRecords(this.handle,recordId,validRecordIds,Object.keys(changes)).then(async()=>{this.updateButtons('readonly');this.selectedRecords=[];await this._confirmSave(this.handle,{keepWidths:true,selectedRecords:[],});this._updateSelectionBox();this.renderer.focusCell(recordId,node);resolve(!Object.keys(changes).length);}).guardedCatch(discardAndReject);};const discardAndReject=()=>{this.model.discardChanges(recordId);this._confirmSave(recordId).then(()=>{this.renderer.focusCell(recordId,node);reject();});};if(validRecordIds.length>0){if(recordIds.length===1){return saveRecords();}
const dialogOptions={confirm_callback:saveRecords,cancel_callback:discardAndReject,};const record=this.model.get(recordId);const params={isDomainSelected:this.isDomainSelected,fields:Object.keys(changes).map((fieldName)=>{let fieldLabel=record.fields[fieldName].string;if(node.attrs.name===fieldName&&node.attrs.string){fieldLabel=node.attrs.string;}
return{name:fieldName,label:fieldLabel};}),nbRecords:recordIds.length,nbValidRecords:validRecordIds.length,};new ListConfirmDialog(this,record,params,dialogOptions).open({shouldFocusButtons:true});}else{Dialog.alert(this,_t("No valid record to save"),{confirm_callback:discardAndReject,});}});},_saveRecord:function(recordId){var record=this.model.get(recordId,{raw:true});if(record.isDirty()&&this.renderer.isInMultipleRecordEdition(recordId)){const prom=this.multipleRecordsSavingPromise||Promise.reject();this.multipleRecordsSavingPromise=null;return prom;}
return this._super.apply(this,arguments);},_setMode:function(mode,recordID){if((recordID||this.handle)!==this.handle){this.mode=mode;this.updateButtons(mode);return this.renderer.setRowMode(recordID,mode);}else{return this._super.apply(this,arguments);}},_shouldBounceOnClick(){const state=this.model.get(this.handle,{raw:true});return!state.count||state.isSample;},_toggleArchiveState:async function(archive){const resIds=await this.getSelectedIdsWithDomain()
const notif=this.isDomainSelected;await this._archive(resIds,archive);const total=this.model.get(this.handle,{raw:true}).count;if(notif&&resIds.length===session.active_ids_limit&&resIds.length<total){const msg=_.str.sprintf(_t("Of the %d records selected, only the first %d have been archived/unarchived."),total,resIds.length);this.displayNotification({title:_t('Warning'),message:msg});}},_toggleCreateButton:function(){if(this.hasButtons){var state=this.model.get(this.handle);var createHidden=this.editable&&state.groupedBy.length&&state.data.length;this.$buttons.find('.o_list_button_add').toggleClass('o_hidden',!!createHidden);}},_update:async function(){await this._super(...arguments);this._toggleCreateButton();this.updateButtons('readonly');},_updateSelectionBox(){this._renderHeaderButtons();if(this.$selectionBox){this.$selectionBox.remove();this.$selectionBox=null;}
if(this.selectedRecords.length){const state=this.model.get(this.handle,{raw:true});this.$selectionBox=$(qweb.render('ListView.selection',{isDomainSelected:this.isDomainSelected,isMobile:config.device.isMobile,isPageSelected:this.isPageSelected,nbSelected:this.selectedRecords.length,nbTotal:state.count,}));this.$selectionBox.appendTo(this.$buttons);}},_onActivateNextWidget:function(ev){ev.stopPropagation();this.renderer.editFirstRecord(ev);},_onAddRecord:function(ev){ev.stopPropagation();var dataPointId=ev.data.groupId||this.handle;if(this.activeActions.create){this._addRecord(dataPointId);}else if(ev.data.onFail){ev.data.onFail();}},_onBeforeUnload:function(){const recordId=this.renderer.getEditableRecordID();if(recordId){this._urgentSave(recordId);}},_onButtonClicked:function(ev){ev.stopPropagation();this._callButtonAction(ev.data.attrs,ev.data.record);},_onCreateRecord:function(ev){if(ev){ev.stopPropagation();}
var state=this.model.get(this.handle,{raw:true});if(this.editable&&!state.groupedBy.length){this._addRecord(this.handle);}else{this.trigger_up('switch_view',{view_type:'form',res_id:undefined});}},_onDeleteSelectedRecords:async function(){if(this.isDomainSelected){this._deleteRecordsInCurrentDomain();}else{this._deleteRecords(this.selectedRecords);}},_onDiscard:function(ev){ev.stopPropagation();this._discardChanges();},_onDiscardMousedown:function(ev){var self=this;this.fieldChangedPrevented=true;window.addEventListener('mouseup',function(mouseupEvent){var preventedEvent=self.fieldChangedPrevented;self.fieldChangedPrevented=false;if(ev.target!==mouseupEvent.target&&preventedEvent.constructor.name==='OdooEvent'){self._onFieldChanged(preventedEvent);}},{capture:true,once:true});},_onEditLine:function(ev){var self=this;ev.stopPropagation();this.trigger_up('mutexify',{action:function(){self._setMode('edit',ev.data.recordId).then(ev.data.onSuccess);},});},_onExportData:function(){this._getExportDialogWidget().open();},_onDirectExportData(){return this._rpc({model:'ir.exports',method:'search_read',args:[[],['id']],limit:1,}).then(()=>this._getExportDialogWidget().export())},_onEditGroupClicked:function(ev){ev.stopPropagation();this.do_action({context:{create:false},type:'ir.actions.act_window',views:[[false,'form']],res_model:ev.data.record.model,res_id:ev.data.record.res_id,flags:{mode:'edit'},});},_onFieldChanged:function(ev){ev.stopPropagation();const recordId=ev.data.dataPointID;if(this.fieldChangedPrevented){this.fieldChangedPrevented=ev;}else if(this.renderer.isInMultipleRecordEdition(recordId)){const saveMulti=()=>{const target=ev.data.__originalComponent||ev.target;this.multipleRecordsSavingPromise=this._saveMultipleRecords(ev.data.dataPointID,target.__node,ev.data.changes);};ev.data.onSuccess=saveMulti;ev.data.onFailure=saveMulti;ev.data.notifyChange=false;ev.data.force_save=false;}
this._super.apply(this,arguments);},async _onHeaderButtonClicked(node){this._disableButtons();const state=this.model.get(this.handle);try{const resIds=await this.getSelectedIdsWithDomain();const actionData=Object.assign({},node.attrs,{context:state.getContext({additionalContext:node.attrs.context}),});Object.assign(actionData.context,{active_domain:state.getDomain(),active_id:resIds[0],active_ids:resIds,active_model:state.model,});const recordData={context:state.getContext(),model:state.model,resIDs:resIds,};await this._executeButtonAction(actionData,recordData);}finally{this._enableButtons();}},_onReload(ev){const{isM2MGrouped}=this.model.get(this.handle);if(isM2MGrouped){ev.data.db_id=this.handle;}
this._super(...arguments);},_onSaveLine:function(ev){this.saveRecord(ev.data.recordID).then(ev.data.onSuccess).guardedCatch(ev.data.onFailure);},_onSelectDomain:function(ev){ev.preventDefault();this.isDomainSelected=true;this._updateSelectionBox();this._updateControlPanel();},_onSelectionChanged:function(ev){this.selectedRecords=ev.data.selection;this.isPageSelected=ev.data.allChecked;this.isDomainSelected=false;this.$('.o_list_export_xlsx').toggle(!this.selectedRecords.length);this._updateSelectionBox();this._updateControlPanel();},_onSetDirty:function(ev){var recordId=ev.data.dataPointID;if(this.renderer.isInMultipleRecordEdition(recordId)){ev.stopPropagation();Dialog.alert(this,_t("No valid record to save"),{confirm_callback:async()=>{this.model.discardChanges(recordId);await this._confirmSave(recordId);this.renderer.focusCell(recordId,ev.target.__node);},});}else{this._super.apply(this,arguments);}},_onToggleColumnOrder:function(ev){ev.stopPropagation();var state=this.model.get(this.handle);if(!state.groupedBy){this._updatePaging(state,{currentMinimum:1});}
var self=this;this.model.setSort(state.id,ev.data.name).then(function(){self.update({});});},_onToggleGroup:function(ev){ev.stopPropagation();var self=this;this.model.toggleGroup(ev.data.group.id).then(function(){self.update({},{keepSelection:true,reload:false}).then(function(){if(ev.data.onSuccess){ev.data.onSuccess();}});});},});__exports[Symbol.for("default")]=ListController;return __exports;});odoo.define(`web.ListController`,async function(require){return require('@web/legacy/js/views/list/list_controller')[Symbol.for("default")];});;

/* /web/static/src/legacy/js/views/list/list_editable_renderer.js */
odoo.define('@web/legacy/js/views/list/list_editable_renderer',async function(require){'use strict';let __exports={};const core=require('web.core');const dom=require('web.dom');const ListRenderer=require('web.ListRenderer');const utils=require('web.utils');const{WidgetAdapterMixin}=require('web.OwlCompatibility');var _t=core._t;ListRenderer.include({RESIZE_DELAY:200,custom_events:_.extend({},ListRenderer.prototype.custom_events,{navigation_move:'_onNavigationMove',}),events:_.extend({},ListRenderer.prototype.events,{'click .o_field_x2many_list_row_add a':'_onAddRecord','click .o_group_field_row_add a':'_onAddRecordToGroup','keydown .o_field_x2many_list_row_add a':'_onKeyDownAddRecord','click tbody td.o_data_cell':'_onCellClick','click tbody tr:not(.o_data_row)':'_onEmptyRowClick','click tfoot':'_onFooterClick','click tr .o_list_record_remove':'_onRemoveIconClick',}),init:function(parent,state,params){this._super.apply(this,arguments);this.editable=params.editable;this.isMultiEditable=params.isMultiEditable;this.columnWidths=false;this.addCreateLine=params.addCreateLine;this.addCreateLineInGroups=params.addCreateLineInGroups;this.creates=[];this.arch.children.forEach(child=>{if(child.tag!=='control'){return;}
child.children.forEach(child=>{if(child.tag!=='create'||child.attrs.invisible){return;}
this.creates.push({context:child.attrs.context,string:child.attrs.string,});});});if(this.creates.length===0){this.creates.push({string:_t("Add a line"),});}
this.addTrashIcon=params.addTrashIcon;this.isMany2Many=params.isMany2Many;this.currentRow=null;this.currentFieldIndex=null;this.isResizing=false;this.eventListeners=[];},start:function(){core.bus.on('click',this,this._onWindowClicked.bind(this));core.bus.on('resize',this,_.debounce(this._onResize.bind(this),this.RESIZE_DELAY));core.bus.on('DOM_updated',this,()=>this._freezeColumnWidths());return this._super();},destroy:function(){this.eventListeners.forEach(listener=>{const{type,el,callback,options}=listener;el.removeEventListener(type,callback,options);});return this._super.apply(this,arguments);},on_attach_callback:function(){this._super();this._freezeColumnWidths();},canBeSaved:function(recordID){if((recordID||this.state.id)===this.state.id){recordID=this.getEditableRecordID();if(recordID===null){return[];}}
var fieldNames=this._super(recordID);this.$('.o_selected_row .o_data_cell').removeClass('o_invalid_cell');this.$('.o_selected_row .o_data_cell:has(> .o_field_invalid)').addClass('o_invalid_cell');return fieldNames;},confirmChange:function(state,recordID){var self=this;return this._super.apply(this,arguments).then(function(widgets){if(widgets.length){var $row=self._getRow(recordID);var record=self._getRecord(recordID);self._setDecorationClasses($row,self.rowDecorations,record);self._updateFooter();}
return widgets;});},confirmUpdate:function(state,id,fields,ev){var self=this;var oldData=this.state.data;this._setState(state);return this.confirmChange(state,id,fields,ev).then(function(){var record=self._getRecord(id);if(!record){return;}
_.each(oldData,function(rec){if(rec.id!==id){self._updateAllModifiers(rec);self._destroyFieldWidgets(rec.id);}});const currentRowFieldWidgets=self.allFieldWidgets[id];delete self.allFieldWidgets[id];self.defs=[];var $newBody=self._renderBody();var defs=self.defs;delete self.defs;return Promise.all(defs).then(function(){self._destroyFieldWidgets(id);self.allFieldWidgets[id]=currentRowFieldWidgets;_.each(self.columns,function(node){self._registerModifiers(node,record,null,{mode:'edit'});});var currentRowID;var currentWidget;var focusedElement;var selectionRange;if(self.currentRow!==null){currentRowID=self._getRecordID(self.currentRow);currentWidget=self.allFieldWidgets[currentRowID][self.currentFieldIndex];if(currentWidget){focusedElement=currentWidget.getFocusableElement().get(0);if(currentWidget.formatType!=='boolean'&&focusedElement){selectionRange=dom.getSelectionRange(focusedElement);}}}
var $editedRow=self._getRow(id);$editedRow.nextAll('.o_data_row').remove();$editedRow.prevAll('.o_data_row').remove();var $newRow=$newBody.find('.o_data_row[data-id="'+id+'"]');$newRow.prevAll('.o_data_row').get().reverse().forEach(function(row){$(row).insertBefore($editedRow);});$newRow.nextAll('.o_data_row').get().reverse().forEach(function(row){$(row).insertAfter($editedRow);});if(self._isInDom){for(const handle in self.allFieldWidgets){if(handle!==id){self.allFieldWidgets[handle].forEach(widget=>{if(widget.on_attach_callback){widget.on_attach_callback();}});}}}
if(self.currentRow!==null){var newRowIndex=$editedRow.prop('rowIndex')-1;self.currentRow=newRowIndex;return self._selectCell(newRowIndex,self.currentFieldIndex,{force:true}).then(function(){currentWidget=self.allFieldWidgets[currentRowID][self.currentFieldIndex];if(currentWidget){focusedElement=currentWidget.getFocusableElement().get(0);if(selectionRange){dom.setSelectionRange(focusedElement,selectionRange);}}});}});});},editFirstRecord:function(ev){const $borderRow=this._getBorderRow(ev.data.side||'first');this._selectCell($borderRow.prop('rowIndex')-1,ev.data.cellIndex||0);},editRecord:function(recordID){var $row=this._getRow(recordID);var rowIndex=$row.prop('rowIndex')-1;return this._selectCell(rowIndex,0);},focusCell:function(recordId,column){var $row=this._getRow(recordId);var cellIndex=this.columns.indexOf(column);$row.find('.o_data_cell')[cellIndex].focus();},getEditableRecordID:function(){if(this.currentRow!==null){return this._getRecordID(this.currentRow);}
return null;},isInMultipleRecordEdition:function(recordId){return this.isEditable()&&this.isMultiEditable&&this.selection.includes(recordId);},isEditable:function(){return this.editable||(this.isMultiEditable&&this.selection.length);},removeLine:function(state,recordID){this._setState(state);var $row=this._getRow(recordID);if($row.length===0){return;}
if($row.prop('rowIndex')-1===this.currentRow){this.currentRow=null;this._enableRecordSelectors();}
this._destroyFieldWidgets(recordID);if(this.state.count>=4){$row.remove();}else{var $emptyRow=this._renderEmptyRow();$row.replaceWith($emptyRow);const $lastDataRow=this.$('.o_data_row:last');if($lastDataRow.length){$emptyRow.insertAfter($lastDataRow);}}},setRowMode:function(recordID,mode){var self=this;var record=self._getRecord(recordID);if(!record){return Promise.resolve();}
var editMode=(mode==='edit');var $row=this._getRow(recordID);this.currentRow=editMode?$row.prop('rowIndex')-1:null;var $tds=$row.children('.o_data_cell');var oldWidgets=_.clone(this.allFieldWidgets[record.id]);var options={renderInvisible:editMode,renderWidgets:editMode,};options.mode=editMode?'edit':'readonly';var defs=[];this.defs=defs;_.each(this.columns,function(node,colIndex){var $td=$tds.eq(colIndex);var $newTd=self._renderBodyCell(record,node,colIndex,options);if($td.hasClass('o_list_button')){self._unregisterModifiersElement(node,recordID,$td.children());}
if(editMode){$td.empty().append($newTd.contents());}else{self._unregisterModifiersElement(node,recordID,$td);$td.replaceWith($newTd);}});delete this.defs;_.each(oldWidgets,this._destroyFieldWidget.bind(this,recordID));$row.toggleClass('o_selected_row',editMode);if(editMode){this._disableRecordSelectors();}else{this._enableRecordSelectors();}
return Promise.all(defs).then(function(){WidgetAdapterMixin.on_attach_callback.call(self);core.bus.trigger('DOM_updated');});},unselectRow:function(options={}){if(this.currentRow===null){return Promise.resolve();}
var recordID=this._getRecordID(this.currentRow);var recordWidgets=this.allFieldWidgets[recordID];function toggleWidgets(disabled){_.each(recordWidgets,function(widget){var $el=widget.getFocusableElement();$el.prop('disabled',disabled);});}
toggleWidgets(true);return new Promise(async(resolve,reject)=>{const record=this._getRecord(recordID);if(options.canDiscard&&record.isNew()){await this.commitChanges(recordID);if(!record.isDirty()){this.trigger_up('mutexify',{action:()=>{return this.trigger_up('discard_changes',{recordID:recordID,onSuccess:resolve,onFailure:reject,});},});return;}}
this.trigger_up('save_line',{recordID:recordID,onSuccess:resolve,onFailure:reject,});}).then(selectNextRow=>{this._enableRecordSelectors();return selectNextRow;}).guardedCatch(()=>{toggleWidgets(false);});},updateState:function(state,params){if(params.keepWidths&&this.$el.is(':visible')){this._storeColumnWidths();}
if(params.noRender){this.allModifiersData=[];}
if('addTrashIcon'in params){if(this.addTrashIcon!==params.addTrashIcon){this.columnWidths=false;}
this.addTrashIcon=params.addTrashIcon;}
if('addCreateLine'in params){this.addCreateLine=params.addCreateLine;}
return this._super.apply(this,arguments);},_addEventListener:function(type,el,callback,options){el.addEventListener(type,callback,options);this.eventListeners.push({type,el,callback,options});},_computeDefaultWidths:function(){const isListEmpty=!this._hasVisibleRecords(this.state);const relativeWidths=[];this.columns.forEach(column=>{const th=this._getColumnHeader(column);if(th.offsetParent===null){relativeWidths.push(false);}else{const width=this._getColumnWidth(column);if(width.match(/[a-zA-Z]/)){if(isListEmpty){th.style.width=width;}else{th.style.minWidth=width;}
relativeWidths.push(false);}else{relativeWidths.push(parseFloat(width,10));}}});if(isListEmpty){const totalWidth=this._getColumnsTotalWidth(relativeWidths);for(let i in this.columns){if(relativeWidths[i]){const th=this._getColumnHeader(this.columns[i]);th.style.width=(relativeWidths[i]/totalWidth*100)+'%';}}
const trashHeader=this.el.getElementsByClassName('o_list_record_remove_header')[0];if(trashHeader){trashHeader.style.width='32px';}}},_destroyFieldWidgets:function(recordID){if(recordID in this.allFieldWidgets){var widgetsToDestroy=this.allFieldWidgets[recordID].slice();_.each(widgetsToDestroy,this._destroyFieldWidget.bind(this,recordID));delete this.allFieldWidgets[recordID];}},_disableRecordSelectors:function(){this.$('.o_list_record_selector input').attr('disabled','disabled');},_enableRecordSelectors:function(){this.$('.o_list_record_selector input').attr('disabled',false);},_freezeColumnWidths:function(){if(!this.columnWidths&&this.el.offsetParent===null){return;}
const thElements=[...this.el.querySelectorAll('table thead th')];if(!thElements.length){return;}
const table=this.el.getElementsByClassName('o_list_table')[0];let columnWidths=this.columnWidths;if(!columnWidths||!columnWidths.length){table.style.tableLayout='auto';thElements.forEach(th=>{th.style.width=null;th.style.maxWidth=null;});this._computeDefaultWidths();columnWidths=this._squeezeTable();}
thElements.forEach((th,index)=>{if(!th.style.width){th.style.width=`${columnWidths[index]}px`;}});table.style.tableLayout='fixed';},_getBorderRow:function(side){let $borderDataRow=this.$(`.o_data_row:${side}`);if(!this._isRecordEditable($borderDataRow.data('id'))){$borderDataRow=this._getNearestEditableRow($borderDataRow,side==='first');}
return $borderDataRow;},_getColumnsTotalWidth(relativeWidths){return relativeWidths.reduce((acc,width)=>acc+width,0);},_getColumnWidth:function(column){if(column.attrs.width){return column.attrs.width;}
const fieldsInfo=this.state.fieldsInfo.list;const name=column.attrs.name;if(!fieldsInfo[name]){return'1';}
const widget=fieldsInfo[name].Widget.prototype;if('widthInList'in widget){return widget.widthInList;}
const field=this.state.fields[name];if(!field){return'1';}
const fixedWidths={boolean:'70px',date:'92px',datetime:'146px',float:'92px',integer:'74px',monetary:'104px',};let type=field.type;if(fieldsInfo[name].widget in fixedWidths){type=fieldsInfo[name].widget;}
return fixedWidths[type]||'1';},_getColumnHeader:function(column){const{icon,name,string}=column.attrs;if(name){return this.el.querySelector(`thead th[data-name="${name}"]`);}else if(string){return this.el.querySelector(`thead th[data-string="${string}"]`);}else if(icon){return this.el.querySelector(`thead th[data-icon="${icon}"]`);}},_getNearestEditableRow:function($row,next){const direction=next?'next':'prev';let $nearestRow;if(this.editable){$nearestRow=$row[direction]();if(!$nearestRow.hasClass('o_data_row')){var $nextBody=$row.closest('tbody')[direction]();while($nextBody.length&&!$nextBody.find('.o_data_row').length){$nextBody=$nextBody[direction]();}
$nearestRow=$nextBody.find(`.o_data_row:${next ? 'first' : 'last'}`);}}else{const recordId=$row.data('id');const rowSelectionIndex=this.selection.indexOf(recordId);let nextRowIndex;if(rowSelectionIndex<0){nextRowIndex=next?0:this.selection.length-1;}else{nextRowIndex=rowSelectionIndex+(next?1:-1);}
$nearestRow=this._getRow(this.selection[nextRowIndex]);}
return $nearestRow;},_getNumberOfCols:function(){var n=this._super();if(this.addTrashIcon){n++;}
return n;},_getRecord:function(recordId){var record;utils.traverse_records(this.state,function(r){if(r.id===recordId){record=r;}});return record;},_getRecordID:function(rowIndex){var $tr=this.$('table.o_list_table > tbody > tr').eq(rowIndex);return $tr.data('id');},_getRow:function(recordId){return this.$('.o_data_row[data-id="'+recordId+'"]');},_hasVisibleRecords:function(list){if(!list.groupedBy.length){return!!list.data.length;}else{var hasVisibleRecords=false;for(var i=0;i<list.data.length;i++){hasVisibleRecords=hasVisibleRecords||this._hasVisibleRecords(list.data[i]);}
return hasVisibleRecords;}},_isRecordEditable:function(recordID){return this.editable||(this.isMultiEditable&&this.selection.includes(recordID));},_moveToNextLine:function(options){this._moveToSideLine(true,options);},_moveToPreviousLine:function(options){this._moveToSideLine(false,options);},_moveToSideLine:function(next,options){options=options||{};const recordID=this._getRecordID(this.currentRow);this.commitChanges(recordID).then(()=>{const record=this._getRecord(recordID);const multiEdit=this.isInMultipleRecordEdition(recordID);if(!multiEdit){const fieldNames=this.canBeSaved(recordID);if(fieldNames.length&&(record.isDirty()||options.forceCreate)){return;}}
const side=next?'first':'last';const borderRowIndex=this._getBorderRow(side).prop('rowIndex')-1;const cellIndex=next?0:this.allFieldWidgets[recordID].length-1;const cellOptions={inc:next?1:-1,force:true};const $currentRow=this._getRow(recordID);const $nextRow=this._getNearestEditableRow($currentRow,next);let nextRowIndex=null;let groupId;if(!this.isGrouped){if($nextRow.length){nextRowIndex=$nextRow.prop('rowIndex')-1;}else if(!this.editable){nextRowIndex=borderRowIndex;}else if(!options.forceCreate&&!record.isDirty()){this.trigger_up('discard_changes',{recordID:recordID,onSuccess:this.trigger_up.bind(this,'activate_next_widget',{side:side}),});return;}}else{var $directNextRow=$currentRow.next();if(next&&this.editable==="bottom"&&$directNextRow.hasClass('o_add_record_row')){if(options.forceCreate||record.isDirty()){groupId=$directNextRow.data('group-id');}else{nextRowIndex=($nextRow.prop('rowIndex')-1)||null;this.trigger_up('discard_changes',{recordID:recordID,onSuccess:()=>{if(nextRowIndex!==null){if(!record.res_id){nextRowIndex--;}
this._selectCell(nextRowIndex,cellIndex,cellOptions);}else{this._selectCell(borderRowIndex,cellIndex,cellOptions);}},});return;}}else{nextRowIndex=$nextRow.length?($nextRow.prop('rowIndex')-1):borderRowIndex;}}
if(nextRowIndex!==null){this._selectCell(nextRowIndex,cellIndex,cellOptions);}else if(this.editable){this.unselectRow().then(this.trigger_up.bind(this,'add_record',{groupId:groupId,onFail:this._selectCell.bind(this,borderRowIndex,cellIndex,cellOptions),}));}});},_processColumns:function(){const oldColumns=this.columns;this._super.apply(this,arguments);if(this.columnWidths&&oldColumns&&oldColumns.length===this.columns.length){for(let i=0;i<oldColumns.length;i++){if(oldColumns[i]!==this.columns[i]){this.columnWidths=false;break;}}}else{this.columnWidths=false;}},_render:function(){this.currentRow=null;this.currentFieldIndex=null;return this._super.apply(this,arguments);},_renderGroup:function(group){var result=this._super.apply(this,arguments);if(!group.groupedBy.length&&this.addCreateLineInGroups){var $groupBody=result[0];var $a=$('<a href="#" role="button">').text(_t("Add a line")).attr('data-group-id',group.id);var $td=$('<td>').attr('colspan',this._getNumberOfCols()).addClass('o_group_field_row_add').attr('tabindex',-1).append($a);var $tr=$('<tr>',{class:'o_add_record_row'}).attr('data-group-id',group.id).append($td);$groupBody.append($tr.prepend($('<td>').html('&nbsp;')));}
return result;},_renderBody:function(){var self=this;var $body=this._super.apply(this,arguments);if(this.hasHandle){$body.sortable({axis:'y',items:'> tr.o_data_row',helper:'clone',handle:'.o_row_handle',cursor:"grabbing",stop:function(event,ui){if(self.currentRow!==null){var currentID=self.state.data[self.currentRow].id;self.currentRow=self._getRow(currentID).index();}
self.unselectRow().then(function(){self._moveRecord(ui.item.data('id'),ui.item.index());});},});}
return $body;},_renderFooter:function(){const $footer=this._super.apply(this,arguments);if(this.addTrashIcon){$footer.find('tr').append($('<td>'));}
return $footer;},_renderHeader:function(){var $thead=this._super.apply(this,arguments);if(this.addTrashIcon){$thead.find('tr').append($('<th>',{class:'o_list_record_remove_header'}));}
return $thead;},_renderHeaderCell:function(){const $th=this._super.apply(this,arguments);if($th[0].innerHTML.length&&this._hasVisibleRecords(this.state)){const resizeHandle=document.createElement('span');resizeHandle.classList='o_resize';resizeHandle.onclick=this._onClickResize.bind(this);resizeHandle.onmousedown=this._onStartResize.bind(this);$th.append(resizeHandle);}
return $th;},_renderRow:function(record,index){var $row=this._super.apply(this,arguments);if(this.addTrashIcon){var $icon=this.isMany2Many?$('<button>',{'class':'fa fa-times','name':'unlink','aria-label':_t('Unlink row ')+(index+1)}):$('<button>',{'class':'fa fa-trash-o','name':'delete','aria-label':_t('Delete row ')+(index+1)});var $td=$('<td>',{class:'o_list_record_remove'}).append($icon);$row.append($td);}
return $row;},_renderRows:function(){var $rows=this._super();if(this.addCreateLine){var $tr=$('<tr>');var colspan=this._getNumberOfCols();if(this.handleField){colspan=colspan-1;$tr.append('<td>');}
var $td=$('<td>').attr('colspan',colspan).addClass('o_field_x2many_list_row_add');$tr.append($td);$rows.push($tr);if(this.addCreateLine){_.each(this.creates,function(create,index){var $a=$('<a href="#" role="button">').attr('data-context',create.context).text(create.string);if(index>0){$a.addClass('ml16');}
$td.append($a);});}}
return $rows;},_renderView:function(){this.currentRow=null;return this._super.apply(this,arguments).then(()=>{const table=this.el.getElementsByClassName('o_list_table')[0];if(table){table.classList.toggle('o_empty_list',!this._hasVisibleRecords(this.state));this._freezeColumnWidths();}});},_selectCell:function(rowIndex,fieldIndex,options){options=options||{};if(!options.force&&rowIndex===this.currentRow&&fieldIndex===this.currentFieldIndex){return Promise.resolve();}
var wrap=options.wrap===undefined?true:options.wrap;var recordID=this._getRecordID(rowIndex);var self=this;return this._selectRow(rowIndex).then(function(){var record=self._getRecord(recordID);if(fieldIndex>=(self.allFieldWidgets[record.id]||[]).length){return Promise.reject();}
var oldFieldIndex=self.currentFieldIndex;self.currentFieldIndex=fieldIndex;fieldIndex=self._activateFieldWidget(record,fieldIndex,{inc:options.inc||1,wrap:wrap,event:options&&options.event,});if(fieldIndex<0){self.currentFieldIndex=oldFieldIndex;return Promise.reject();}
self.currentFieldIndex=fieldIndex;});},_selectRow:function(rowIndex){if(rowIndex===this.currentRow){return Promise.resolve();}
if(!this.columnWidths){this._storeColumnWidths();}
var recordId=this._getRecordID(rowIndex);var self=this;return this.unselectRow({canDiscard:true}).then((selectNextRow=true)=>{if(!selectNextRow){return Promise.resolve();}
if(!recordId){return Promise.reject();}
return new Promise(function(resolve){self.trigger_up('edit_line',{recordId:recordId,onSuccess:function(){self._disableRecordSelectors();resolve();},});});});},_squeezeTable:function(){const table=this.el.getElementsByClassName('o_list_table')[0];table.classList.add('o_list_computing_widths');const thead=table.getElementsByTagName('thead')[0];const thElements=[...thead.getElementsByTagName('th')];const columnWidths=thElements.map(th=>th.offsetWidth);const getWidth=th=>columnWidths[thElements.indexOf(th)]||0;const getTotalWidth=()=>thElements.reduce((tot,th,i)=>tot+columnWidths[i],0);const shrinkColumns=(columns,width)=>{let thresholdReached=false;columns.forEach(th=>{const index=thElements.indexOf(th);let maxWidth=columnWidths[index]-Math.ceil(width/columns.length);if(maxWidth<92){maxWidth=92;thresholdReached=true;}
th.style.maxWidth=`${maxWidth}px`;columnWidths[index]=maxWidth;});return thresholdReached;};const sortedThs=[...thead.querySelectorAll('th:not(.o_list_button)')].sort((a,b)=>getWidth(b)-getWidth(a));const allowedWidth=table.parentNode.offsetWidth;let totalWidth=getTotalWidth();let stop=false;let index=0;while(totalWidth>allowedWidth&&!stop){index++;const largests=sortedThs.slice(0,index);while(getWidth(largests[0])===getWidth(sortedThs[index])){largests.push(sortedThs[index]);index++;}
const nextLargest=sortedThs[index];const totalToRemove=totalWidth-allowedWidth;const canRemove=(getWidth(largests[0])-getWidth(nextLargest))*largests.length;stop=shrinkColumns(largests,Math.min(totalToRemove,canRemove));totalWidth=getTotalWidth();}
table.classList.remove('o_list_computing_widths');return columnWidths;},_storeColumnWidths:function(){this.columnWidths=this.$('thead th').toArray().map(function(th){return $(th).outerWidth();});},_onAddRecordToGroup:function(ev){ev.preventDefault();ev.stopPropagation();var self=this;const target=ev.target.tagName!=='A'?ev.target.getElementsByTagName('A')[0]:ev.target;const groupId=target.dataset.groupId;this.currentGroupId=groupId;this.unselectRow().then(function(){self.trigger_up('add_record',{groupId:groupId,});});},_onAddRecord:function(ev){ev.preventDefault();ev.stopPropagation();var self=this;this.unselectRow().then(function(){self.trigger_up('add_record',{context:ev.currentTarget.dataset.context&&[ev.currentTarget.dataset.context]});});},_onCellClick:function(event){var $td=$(event.currentTarget);var $tr=$td.parent();var rowIndex=$tr.prop('rowIndex')-1;if(!this._isRecordEditable($tr.data('id'))||$(event.target).prop('special_click')){return;}
var fieldIndex=Math.max($tr.find('.o_field_cell').index($td),0);this._selectCell(rowIndex,fieldIndex,{event:event});},_onClickResize:function(ev){ev.stopPropagation();ev.preventDefault();},_onEmptyRowClick:function(){this.unselectRow();},_onFooterClick:function(){this.unselectRow();},_onKeyDown:function(ev){const $target=$(ev.currentTarget);const $tr=$target.closest('tr');const recordEditable=this._isRecordEditable($tr.data('id'));if(recordEditable&&ev.keyCode===$.ui.keyCode.ENTER&&$tr.hasClass('o_selected_row')){return;}
if(recordEditable&&ev.keyCode===$.ui.keyCode.ENTER&&!$tr.hasClass('o_selected_row')&&!$tr.hasClass('o_group_header')){ev.stopPropagation();ev.preventDefault();if($target.closest('td').hasClass('o_group_field_row_add')){this._onAddRecordToGroup(ev);}else{this._onCellClick(ev);}}else{this._super.apply(this,arguments);}},_onKeyDownAddRecord:function(e){switch(e.keyCode){case $.ui.keyCode.ENTER:e.stopPropagation();e.preventDefault();this._onAddRecord(e);break;}},_onNavigationMove:function(ev){var self=this;if(this.currentRow===null&&ev.data.direction==='up'){return;}
ev.stopPropagation();if(ev.data.originalEvent&&['next','previous'].includes(ev.data.direction)){ev.data.originalEvent.preventDefault();ev.data.originalEvent.stopPropagation();}
switch(ev.data.direction){case'previous':if(this.currentFieldIndex>0){this._selectCell(this.currentRow,this.currentFieldIndex-1,{inc:-1,wrap:false}).guardedCatch(this._moveToPreviousLine.bind(this));}else{this._moveToPreviousLine();}
break;case'next':if(this.currentFieldIndex+1<this.columns.length){this._selectCell(this.currentRow,this.currentFieldIndex+1,{wrap:false}).guardedCatch(this._moveToNextLine.bind(this));}else{this._moveToNextLine();}
break;case'next_line':if(!this.editable&&this.selection.length===1&&this._getRecordID(this.currentRow)===ev.target.dataPointID){this.unselectRow();}else{this._moveToNextLine({forceCreate:true});}
break;case'cancel':ev.data.originalEvent.stopPropagation();var rowIndex=this.currentRow;var cellIndex=this.currentFieldIndex+1;this.trigger_up('discard_changes',{recordID:ev.target.dataPointID,onSuccess:function(){self._enableRecordSelectors();var recordId=self._getRecordID(rowIndex);if(recordId){var correspondingRow=self._getRow(recordId);correspondingRow.children().eq(cellIndex).focus();}else if(self.currentGroupId){self.$('a[data-group-id="'+self.currentGroupId+'"]').focus();}else{self.$('.o_field_x2many_list_row_add a:first').focus();}}});break;}},_onRemoveIconClick:function(event){event.stopPropagation();var $row=$(event.target).closest('tr');var id=$row.data('id');if($row.hasClass('o_selected_row')){this.trigger_up('list_record_remove',{id:id});}else{var self=this;this.unselectRow().then(function(){self.trigger_up('list_record_remove',{id:id});});}},_onResize:function(){this.columnWidths=false;this._freezeColumnWidths();},_onRowClicked:function(ev){if(!this._isRecordEditable(ev.currentTarget.dataset.id)){if(this.getEditableRecordID()){this.unselectRow();}else{this._super.apply(this,arguments);}}},_onSortColumn:function(){if(this.currentRow===null&&!this.isResizing){this._super.apply(this,arguments);}},_onStartResize:function(ev){if(ev.which!==1){return;}
ev.preventDefault();ev.stopPropagation();this.isResizing=true;const table=this.el.getElementsByClassName('o_list_table')[0];const th=ev.target.closest('th');table.style.width=`${table.offsetWidth}px`;const thPosition=[...th.parentNode.children].indexOf(th);const resizingColumnElements=[...table.getElementsByTagName('tr')].filter(tr=>tr.children.length===th.parentNode.children.length).map(tr=>tr.children[thPosition]);const optionalDropdown=this.el.getElementsByClassName('o_optional_columns')[0];const initialX=ev.pageX;const initialWidth=th.offsetWidth;const initialTableWidth=table.offsetWidth;const initialDropdownX=optionalDropdown?optionalDropdown.offsetLeft:null;const resizeStoppingEvents=['keydown','mousedown','mouseup',];if(!this.el.style.width){this.el.style.width=`${this.el.offsetWidth}px`;}
table.classList.add('o_resizing');resizingColumnElements.forEach(el=>el.classList.add('o_column_resizing'));const resizeHeader=ev=>{ev.preventDefault();ev.stopPropagation();const delta=ev.pageX-initialX;const newWidth=Math.max(10,initialWidth+delta);const tableDelta=newWidth-initialWidth;th.style.width=`${newWidth}px`;th.style.maxWidth=`${newWidth}px`;table.style.width=`${initialTableWidth + tableDelta}px`;if(optionalDropdown){optionalDropdown.style.left=`${initialDropdownX + tableDelta}px`;}};this._addEventListener('mousemove',window,resizeHeader);const stopResize=ev=>{if(ev.type==='mousedown'&&ev.which===1){return;}
ev.preventDefault();ev.stopPropagation();clearTimeout(this.resizeTimeout);this.resizeTimeout=setTimeout(()=>{this.isResizing=false;},100);window.removeEventListener('mousemove',resizeHeader);table.classList.remove('o_resizing');resizingColumnElements.forEach(el=>el.classList.remove('o_column_resizing'));resizeStoppingEvents.forEach(stoppingEvent=>{window.removeEventListener(stoppingEvent,stopResize);});document.activeElement.blur();};resizeStoppingEvents.forEach(stoppingEvent=>{this._addEventListener(stoppingEvent,window,stopResize);});},_onToggleOptionalColumnDropdown:function(ev){this.unselectRow().then(this._super.bind(this,ev));},_onWindowClicked:function(event){if(!this.isEditable()){return;}
if(!document.contains(this.el)){return;}
if(this.currentRow===null){return;}
if($(event.target).closest('.ui-autocomplete').length){return;}
const $modal=$('.modal[role="dialog"]:last');if($modal.length){var $listModal=this.$el.closest('.modal');if($modal.prop('id')!==$listModal.prop('id')){return;}}
if(!document.contains(event.target)){return;}
if(this.el.contains(event.target)&&this.el!==event.target){return;}
if($(event.target).hasClass('o_facet_remove')){return;}
this.unselectRow({canDiscard:![...event.target.classList].includes('o_list_button_save')});},});return __exports;});odoo.define(`web.EditableListRenderer`,async function(require){return require('@web/legacy/js/views/list/list_editable_renderer')[Symbol.for("default")];});;

/* /web/static/src/legacy/js/views/list/list_model.js */
odoo.define('@web/legacy/js/views/list/list_model',async function(require){'use strict';let __exports={};const BasicModel=require('web.BasicModel');var ListModel=BasicModel.extend({init:function(parent,params){this._super.apply(this,arguments);this.groupbys=params.groupbys;},__get:function(){var result=this._super.apply(this,arguments);var dp=result&&this.localData[result.id];if(dp&&dp.groupData){result.groupData=this.get(dp.groupData);}
return result;},saveRecords:function(listDatapointId,referenceRecordId,recordIds,fieldName){var self=this;var referenceRecord=this.localData[referenceRecordId];var list=this.localData[listDatapointId];var allChanges=this._generateChanges(referenceRecord,{changesOnly:false});var changes=_.pick(allChanges,fieldName);var records=recordIds.map(function(recordId){return self.localData[recordId];});var model=records[0].model;var recordResIds=_.pluck(records,'res_id');var fieldNames=records[0].getFieldNames();var context=records[0].getContext();return this._rpc({model:model,method:'write',args:[recordResIds,changes],context:context,}).then(function(){return self._rpc({model:model,method:'read',args:[recordResIds,fieldNames],context:context,});}).then(function(results){const updateLocalRecord=(id,data)=>{const record=self.localData[id];record.data=_.extend({},record.data,data);record._changes={};record._isDirty=false;self._parseServerData(fieldNames,record,record.data);};results.forEach(function(data){const record=_.findWhere(records,{res_id:data.id});updateLocalRecord(record.id,data);self._updateDuplicateRecords(record.id,(id)=>updateLocalRecord(id,data));});}).then(function(){if(!list.groupedBy.length){return Promise.all([self._fetchX2ManysBatched(list),self._fetchReferencesBatched(list)]);}else{return Promise.all([self._fetchX2ManysSingleBatch(list),self._fetchReferencesSingleBatch(list)]);}});},_readGroup:function(list,options){var self=this;options=options||{};options.fetchRecordsWithGroups=true;return this._super(list,options).then(function(result){return self._readGroupExtraFields(list).then(_.constant(result));});},_readGroupExtraFields:function(list){var self=this;var groupByFieldName=list.groupedBy[0].split(':')[0];var groupedByField=list.fields[groupByFieldName];if(groupedByField.type!=='many2one'||!this.groupbys[groupByFieldName]){return Promise.resolve();}
var groupIds=_.reduce(list.data,function(groupIds,id){var resId=self.get(id,{raw:true}).res_id;if(resId){groupIds.push(resId);}
return groupIds;},[]);var groupFields=Object.keys(this.groupbys[groupByFieldName].viewFields);var prom;if(groupIds.length&&groupFields.length){prom=this._rpc({model:groupedByField.relation,method:'read',args:[groupIds,groupFields],context:list.context,});}
return Promise.resolve(prom).then(function(result){var fvg=self.groupbys[groupByFieldName];_.each(list.data,function(id){var dp=self.localData[id];var groupData=result&&_.findWhere(result,{id:dp.res_id,});var groupDp=self._makeDataPoint({context:dp.context,data:groupData,fields:fvg.fields,fieldsInfo:fvg.fieldsInfo,modelName:groupedByField.relation,parentID:dp.id,res_id:dp.res_id,viewType:'groupby',});dp.groupData=groupDp.id;self._parseServerData(groupFields,groupDp,groupDp.data);});});},});__exports[Symbol.for("default")]=ListModel;return __exports;});odoo.define(`web.ListModel`,async function(require){return require('@web/legacy/js/views/list/list_model')[Symbol.for("default")];});;

/* /web/static/src/legacy/js/views/list/list_renderer.js */
odoo.define('@web/legacy/js/views/list/list_renderer',async function(require){'use strict';let __exports={};const BasicRenderer=require('web.BasicRenderer');const{ComponentWrapper}=require('web.OwlCompatibility');const config=require('web.config');const core=require('web.core');const dom=require('web.dom');const field_utils=require('web.field_utils');const Pager=require('web.Pager');const utils=require('web.utils');const viewUtils=require('web.viewUtils');var _t=core._t;var DECORATIONS=['decoration-bf','decoration-it','decoration-danger','decoration-info','decoration-muted','decoration-primary','decoration-success','decoration-warning'];var FIELD_CLASSES={char:'o_list_char',float:'o_list_number',integer:'o_list_number',monetary:'o_list_number',text:'o_list_text',many2one:'o_list_many2one',};var ListRenderer=BasicRenderer.extend({className:'o_legacy_list_view',events:{"mousedown":"_onMouseDown","click .o_optional_columns_dropdown .dropdown-item":"_onToggleOptionalColumn","click .o_optional_columns_dropdown_toggle":"_onToggleOptionalColumnDropdown",'click tbody tr':'_onRowClicked','change tbody .o_list_record_selector':'_onSelectRecord','click thead th.o_column_sortable':'_onSortColumn','click .o_list_record_selector':'_onToggleCheckbox','click .o_group_header':'_onToggleGroup','change thead .o_list_record_selector input':'_onToggleSelection','keypress thead tr td':'_onKeyPress','keydown td':'_onKeyDown','keydown th':'_onKeyDown',},sampleDataTargets:['.o_data_row','.o_group_header','.o_list_table > tfoot','.o_list_table > thead .o_list_record_selector',],init:function(parent,state,params){this._super.apply(this,arguments);this._preprocessColumns();this.columnInvisibleFields=params.columnInvisibleFields||{};this.rowDecorations=this._extractDecorationAttrs(this.arch);this.fieldDecorations={};for(const field of this.arch.children.filter(c=>c.tag==='field')){const decorations=this._extractDecorationAttrs(field);this.fieldDecorations[field.attrs.name]=decorations;}
this.hasSelectors=params.hasSelectors;this.selection=params.selectedRecords||[];this.pagers=[];this.isGrouped=this.state.groupedBy.length>0;this.groupbys=params.groupbys;this.no_open=params.no_open;},willStart:function(){this._processColumns(this.columnInvisibleFields);return this._super.apply(this,arguments);},giveFocus:function(){this.$('th:eq(0) input, th:eq(1)').first().focus();},updateState:function(state,params){this._setState(state);this.isGrouped=this.state.groupedBy.length>0;this.columnInvisibleFields=params.columnInvisibleFields||{};this._processColumns(this.columnInvisibleFields);if(params.selectedRecords){this.selection=params.selectedRecords;}
return this._super.apply(this,arguments);},_computeAggregates:function(){var self=this;var data=[];if(this.selection.length){utils.traverse_records(this.state,function(record){if(_.contains(self.selection,record.id)){data.push(record);}});}else{data=this.state.data;}
_.each(this.columns,this._computeColumnAggregates.bind(this,data));},_computeColumnAggregates:function(data,column){var attrs=column.attrs;var field=this.state.fields[attrs.name];if(!field){return;}
var type=field.type;if(type!=='integer'&&type!=='float'&&type!=='monetary'){return;}
var func=(attrs.sum&&'sum')||(attrs.avg&&'avg')||(attrs.max&&'max')||(attrs.min&&'min');if(func){var count=0;var aggregateValue=0;if(func==='max'){aggregateValue=-Infinity;}else if(func==='min'){aggregateValue=Infinity;}
_.each(data,function(d){var value=(d.type==='record')?d.data[attrs.name]:d.aggregateValues[attrs.name];if(Number(value)!==value){return;}
count+=1;if(func==='avg'){aggregateValue+=value;}else if(func==='sum'){aggregateValue+=value;}else if(func==='max'){aggregateValue=Math.max(aggregateValue,value);}else if(func==='min'){aggregateValue=Math.min(aggregateValue,value);}});if(func==='avg'){aggregateValue=count?aggregateValue/count:aggregateValue;}
if(count){column.aggregate={help:attrs[func],value:aggregateValue,};}else{delete column.aggregate;}}},_extractDecorationAttrs:function(node){const decorations={};for(const[key,expr]of Object.entries(node.attrs)){if(DECORATIONS.includes(key)){let cssClass;if(key==='decoration-bf'){cssClass='fw-bold';}else if(key==='decoration-it'){cssClass='fst-italic';}else{cssClass=key.replace('decoration','text');}
decorations[cssClass]=py.parse(py.tokenize(expr));}}
return decorations;},_findConnectedCell:function($cell,direction,colIndex){var $connectedRow=$cell.closest('tr')[direction]('tr');if(!$connectedRow.length){var tbody=$cell.closest('tbody, thead');var $connectedGroup=tbody[direction]('tbody, thead');if($connectedGroup.length){var $connectedRows=$connectedGroup.find('tr');var rowIndex;if(direction==='prev'){rowIndex=$connectedRows.length-1;}else{rowIndex=0;}
$connectedRow=$connectedRows.eq(rowIndex);}else{return;}}
var $connectedCell;if($connectedRow.hasClass('o_group_header')){$connectedCell=$connectedRow.children();this.currentColIndex=colIndex;}else if($connectedRow.has('td.o_group_field_row_add').length){$connectedCell=$connectedRow.find('.o_group_field_row_add');this.currentColIndex=colIndex;}else{var connectedRowChildren=$connectedRow.children();if(colIndex===-1){colIndex=connectedRowChildren.length-1;}
$connectedCell=connectedRowChildren.eq(colIndex);}
return $connectedCell;},_getNumberOfCols:function(){var n=this.columns.length;return this.hasSelectors?n+1:n;},_getOptionalColumnsStorageKeyParts:function(){var self=this;return{fields:_.map(this.state.fieldsInfo[this.viewType],function(_,fieldName){return{name:fieldName,type:self.state.fields[fieldName].type};}),};},_getSelectableRecordCheckboxes:function(){return this.$('tbody .o_list_record_selector input:visible:not(:disabled)');},_groupAdjacentButtons:function(){const children=[];let groupId=0;let buttonGroupNode=null;for(const c of this.arch.children){if(c.tag==='button'){if(!buttonGroupNode){buttonGroupNode={tag:'button_group',children:[c],attrs:{name:`button_group_${groupId++}`,modifiers:{},},};children.push(buttonGroupNode);}else{buttonGroupNode.children.push(c);}}else{buttonGroupNode=null;children.push(c);}}
this.arch.children=children;},_preprocessColumns:function(){this._processModeClassNames();this._groupAdjacentButtons();this.arch.children.filter(c=>c.tag==='button_group').forEach(c=>{c.attrs.editOnly=c.children.every(n=>n.attrs.editOnly);c.attrs.readOnly=c.children.every(n=>n.attrs.readOnly);});},_processColumns:function(columnInvisibleFields){var self=this;this.handleField=null;this.columns=[];this.optionalColumns=[];this.optionalColumnsEnabled=[];var storedOptionalColumns;this.trigger_up('load_optional_fields',{keyParts:this._getOptionalColumnsStorageKeyParts(),callback:function(res){storedOptionalColumns=res;},});_.each(this.arch.children,function(c){if(c.tag!=='control'&&c.tag!=='groupby'&&c.tag!=='header'){var reject=c.attrs.modifiers.column_invisible;if(c.tag==="button_group"){reject=c.children.every(child=>columnInvisibleFields[child.attrs.name]);}else if(c.attrs.name in columnInvisibleFields){reject=columnInvisibleFields[c.attrs.name];}
if(!reject&&c.attrs.widget==='handle'){self.handleField=c.attrs.name;if(self.isGrouped){reject=true;}}
if(!reject&&c.attrs.optional){self.optionalColumns.push(c);var enabled;if(storedOptionalColumns===undefined){enabled=c.attrs.optional==='show';}else{enabled=_.contains(storedOptionalColumns,c.attrs.name);}
if(enabled){self.optionalColumnsEnabled.push(c.attrs.name);}
reject=!enabled;}
if(!reject){self.columns.push(c);}}});},_processModeClassNames:function(){this.arch.children.forEach(c=>{if(c.attrs.class){c.attrs.editOnly=/\boe_edit_only\b/.test(c.attrs.class);c.attrs.readOnly=/\boe_read_only\b/.test(c.attrs.class);}});},_renderAggregateCells:function(aggregateValues){var self=this;return _.map(this.columns,function(column){var $cell=$('<td>');if(config.isDebug()){$cell.addClass(column.attrs.name);}
if(column.attrs.editOnly){$cell.addClass('oe_edit_only');}
if(column.attrs.readOnly){$cell.addClass('oe_read_only');}
if(column.attrs.name in aggregateValues){var field=self.state.fields[column.attrs.name];var value=aggregateValues[column.attrs.name].value;var help=aggregateValues[column.attrs.name].help;var formatFunc=field_utils.format[column.attrs.widget];if(!formatFunc){formatFunc=field_utils.format[field.type];}
var formattedValue=formatFunc(value,field,{escape:true,digits:column.attrs.digits?JSON.parse(column.attrs.digits):undefined,});$cell.addClass('o_list_number').attr('title',help).html(formattedValue);}
return $cell;});},_renderBody:function(){var self=this;var $rows=this._renderRows();while($rows.length<4){$rows.push(self._renderEmptyRow());}
return $('<tbody>').append($rows);},_renderBodyCell:function(record,node,colIndex,options){var tdClassName='o_data_cell';if(node.tag==='button_group'){tdClassName+=' o_list_button';}else if(node.tag==='field'){tdClassName+=' o_field_cell';var typeClass=FIELD_CLASSES[this.state.fields[node.attrs.name].type];if(typeClass){tdClassName+=(' '+typeClass);}
if(node.attrs.widget){tdClassName+=(' o_'+node.attrs.widget+'_cell');}}
if(node.attrs.editOnly){tdClassName+=' oe_edit_only';}
if(node.attrs.readOnly){tdClassName+=' oe_read_only';}
var $td=$('<td>',{class:tdClassName,tabindex:-1});var modifiers=this._registerModifiers(node,record,$td,_.pick(options,'mode'));if(modifiers.invisible&&!(options&&options.renderInvisible)){return $td;}
if(node.tag==='button_group'){for(const buttonNode of node.children){if(!this.columnInvisibleFields[buttonNode.attrs.name]){$td.append(this._renderButton(record,buttonNode));}}
return $td;}else if(node.tag==='widget'){return $td.append(this._renderWidget(record,node));}
if(node.attrs.widget||(options&&options.renderWidgets)){var $el=this._renderFieldWidget(node,record,_.pick(options,'mode'));return $td.append($el);}
this._handleAttributes($td,node);this._setDecorationClasses($td,this.fieldDecorations[node.attrs.name],record);var name=node.attrs.name;var field=this.state.fields[name];var value=record.data[name];var formatter=field_utils.format[field.type];var formatOptions={escape:true,data:record.data,isPassword:'password'in node.attrs,digits:node.attrs.digits&&JSON.parse(node.attrs.digits),};var formattedValue=formatter(value,field,formatOptions);var title='';if(field.type!=='boolean'){title=formatter(value,field,_.extend(formatOptions,{escape:false}));}
return $td.html(formattedValue).attr('title',title).attr('name',name);},_renderButton:function(record,node){var self=this;var nodeWithoutWidth=Object.assign({},node);delete nodeWithoutWidth.attrs.width;let extraClass='';if(node.attrs.icon){const btnStyleRegex=/\bbtn-[a-z]+\b/;if(!btnStyleRegex.test(nodeWithoutWidth.attrs.class)){extraClass='btn-link o_icon_button';}}
var $button=viewUtils.renderButtonFromNode(nodeWithoutWidth,{extraClass:extraClass,});this._handleAttributes($button,node);this._registerModifiers(node,record,$button);if(record.res_id){const debouncedClick=_.debounce(()=>{self.trigger_up('button_clicked',{attrs:node.attrs,record:record,});},500,true);$button.on("click",(e)=>{e.stopPropagation();debouncedClick();});}else{if(node.attrs.options.warn){$button.on("click",function(e){e.stopPropagation();self.displayNotification({message:_t('Please click on the "save" button first'),type:'danger'});});}else{$button.prop('disabled',true);}}
return $button;},_renderEmptyRow:function(){var $td=$('<td>&nbsp;</td>').attr('colspan',this._getNumberOfCols());return $('<tr>').append($td);},_renderFooter:function(){var aggregates={};_.each(this.columns,function(column){if('aggregate'in column){aggregates[column.attrs.name]=column.aggregate;}});var $cells=this._renderAggregateCells(aggregates);if(this.hasSelectors){$cells.unshift($('<td>'));}
return $('<tfoot>').append($('<tr>').append($cells));},_renderGroupButton:function(list,node){var $button=viewUtils.renderButtonFromNode(node,{extraClass:node.attrs.icon?'o_icon_button':undefined,textAsTitle:!!node.attrs.icon,});this._handleAttributes($button,node);this._registerModifiers(node,list.groupData,$button);$button.on("click",this._onGroupButtonClicked.bind(this,list.groupData,node));$button.on("keydown",this._onGroupButtonKeydown.bind(this));return $button;},_renderGroupButtons:function(list,group){var self=this;var $buttons=$();if(list.value){group.arch.children.forEach(function(child){if(child.tag==='button'){$buttons=$buttons.add(self._renderGroupButton(list,child));}});}
return $buttons;},_renderGroupRow:function(group,groupLevel){var cells=[];const groupBy=this.state.groupedBy[groupLevel];const groupByFieldName=groupBy.split(':')[0];const groupByField=group.fields[groupByFieldName];const name=groupByField.type==="boolean"?(group.value===undefined?_t('None'):(group.value?_t('Yes'):_t('No'))):(group.value===undefined||group.value===false?_t('None'):group.value);var $th=$('<th>').addClass('o_group_name').attr('tabindex',-1).text(name+' ('+group.count+')');var $arrow=$('<span>').css('padding-left',2+(groupLevel*20)+'px').css('padding-right','5px').addClass('fa');if(group.count>0){$arrow.toggleClass('fa-caret-right',!group.isOpen).toggleClass('fa-caret-down',group.isOpen);}
$th.prepend($arrow);cells.push($th);var aggregateKeys=Object.keys(group.aggregateValues);var aggregateValues=_.mapObject(group.aggregateValues,function(value){return{value:value};});var aggregateCells=this._renderAggregateCells(aggregateValues);var firstAggregateIndex=_.findIndex(this.columns,function(column){return column.tag==='field'&&_.contains(aggregateKeys,column.attrs.name);});var colspanBeforeAggregate;if(firstAggregateIndex!==-1){colspanBeforeAggregate=firstAggregateIndex;var lastAggregateIndex=_.findLastIndex(this.columns,function(column){return column.tag==='field'&&_.contains(aggregateKeys,column.attrs.name);});cells=cells.concat(aggregateCells.slice(firstAggregateIndex,lastAggregateIndex+1));var colSpan=this.columns.length-1-lastAggregateIndex;if(colSpan>0){cells.push($('<th>').attr('colspan',colSpan));}}else{var colN=this.columns.length;colspanBeforeAggregate=colN>1?colN-1:1;if(colN>1){cells.push($('<th>'));}}
if(this.hasSelectors){colspanBeforeAggregate+=1;}
$th.attr('colspan',colspanBeforeAggregate);if(group.isOpen&&!group.groupedBy.length&&(group.count>group.data.length)){const lastCell=cells[cells.length-1][0];this._renderGroupPager(group,lastCell);}
if(group.isOpen&&this.groupbys[groupBy]){var $buttons=this._renderGroupButtons(group,this.groupbys[groupBy]);if($buttons.length){var $buttonSection=$('<div>',{class:'o_group_buttons',}).append($buttons);$th.append($buttonSection);}}
return $('<tr>').addClass('o_group_header').toggleClass('o_group_open',group.isOpen).toggleClass('o_group_has_content',group.count>0).data('group',group).append(cells);},_renderGroup:function(group,groupLevel){var self=this;if(group.groupedBy.length){return this._renderGroups(group.data,groupLevel+1);}else{var $records=_.map(group.data,function(record){return self._renderRow(record);});return[$('<tbody>').append($records)];}},_renderGroupPager:function(group,target){const currentMinimum=group.offset+1;const limit=group.limit;const size=group.count;if(!this._shouldRenderPager(currentMinimum,limit,size)){return;}
const pager=new ComponentWrapper(this,Pager,{currentMinimum,limit,size,onPagerChanged:this._onPagerChanged.bind(this,group),});const pagerMounting=pager.mount(target).then(()=>{pager.el.addEventListener('click',ev=>ev.stopPropagation());});this.defs.push(pagerMounting);this.pagers.push(pager);},_renderGroups:function(data,groupLevel){var self=this;groupLevel=groupLevel||0;var result=[];var $tbody=$('<tbody>');_.each(data,function(group){if(!$tbody){$tbody=$('<tbody>');}
$tbody.append(self._renderGroupRow(group,groupLevel));if(group.data.length){result.push($tbody);result=result.concat(self._renderGroup(group,groupLevel));$tbody=null;}});if($tbody){result.push($tbody);}
return result;},_renderHeader:function(){var $tr=$('<tr>').append(_.map(this.columns,this._renderHeaderCell.bind(this)));if(this.hasSelectors){$tr.prepend(this._renderSelector('th'));}
return $('<thead>').append($tr);},_renderHeaderCell:function(node){const{icon,name,string}=node.attrs;var order=this.state.orderedBy;var isNodeSorted=order[0]&&order[0].name===name;var field=this.state.fields[name];var $th=$('<th>');if(name){$th.attr('data-name',name);}else if(string){$th.attr('data-string',string);}else if(icon){$th.attr('data-icon',icon);}
if(node.attrs.editOnly){$th.addClass('oe_edit_only');}
if(node.attrs.readOnly){$th.addClass('oe_read_only');}
if(node.tag==='button_group'){$th.addClass('o_list_button');}
if(!field||node.attrs.nolabel==='1'){return $th;}
var description=string||field.string;if(node.attrs.widget){$th.addClass(' o_'+node.attrs.widget+'_cell');const FieldWidget=this.state.fieldsInfo.list[name].Widget;if(FieldWidget.prototype.noLabel){description='';}else if(FieldWidget.prototype.label){description=FieldWidget.prototype.label;}}
$th.text(description).attr('tabindex',-1).toggleClass('o-sort-down',isNodeSorted?!order[0].asc:false).toggleClass('o-sort-up',isNodeSorted?order[0].asc:false).addClass((field.sortable||this.state.fieldsInfo.list[name].options.allow_order||false)&&'o_column_sortable');if(isNodeSorted){$th.attr('aria-sort',order[0].asc?'ascending':'descending');}
if(field.type==='float'||field.type==='integer'||field.type==='monetary'){$th.addClass('o_list_number_th');}
if(config.isDebug()){var fieldDescr={field:field,name:name,string:description||name,record:this.state,attrs:_.extend({},node.attrs,this.state.fieldsInfo.list[name]),};this._addFieldTooltip(fieldDescr,$th);}else{$th.attr('title',description);}
return $th;},_renderRow:function(record){var self=this;var $cells=this.columns.map(function(node,index){return self._renderBodyCell(record,node,index,{mode:'readonly'});});var $tr=$('<tr/>',{class:'o_data_row'}).attr('data-id',record.id).append($cells);if(this.hasSelectors){$tr.prepend(this._renderSelector('td',!record.res_id));}
if(this.no_open&&this.mode==="readonly"){$tr.addClass('o_list_no_open');}
this._setDecorationClasses($tr,this.rowDecorations,record);return $tr;},_renderRows:function(){return this.state.data.map(this._renderRow.bind(this));},_renderOptionalColumnsDropdown:function(){var self=this;var $optionalColumnsDropdown=$('<div>',{class:'o_optional_columns text-center dropdown',});var $a=$("<a>",{'class':"dropdown-toggle text-dark o-no-caret",'href':"#",'role':"button",'data-bs-toggle':"dropdown",'data-bs-offset':"0,30",'aria-expanded':false,'aria-label':_t('Optional columns'),});$a.appendTo($optionalColumnsDropdown);var direction=_t.database.parameters.direction;var dropdownMenuClass=direction==='rtl'?'dropdown-menu-start':'dropdown-menu-end';var $dropdown=$("<div>",{class:'dropdown-menu o_optional_columns_dropdown '+dropdownMenuClass,role:'menu',});this.optionalColumns.forEach(function(col){var txt=(col.attrs.string||self.state.fields[col.attrs.name].string)+
(config.isDebug()?(' ('+col.attrs.name+')'):'');var $checkbox=dom.renderCheckbox({text:txt,role:"menuitemcheckbox",prop:{name:col.attrs.name,checked:_.contains(self.optionalColumnsEnabled,col.attrs.name),}});$dropdown.append($("<div>",{class:"dropdown-item",}).append($checkbox));});$dropdown.appendTo($optionalColumnsDropdown);return $optionalColumnsDropdown;},_renderSelector:function(tag,disableInput){var $content=dom.renderCheckbox();if(disableInput){$content.find("input[type='checkbox']").prop('disabled',disableInput);}
return $('<'+tag+'>').addClass('o_list_record_selector').append($content);},async _renderView(){const oldPagers=this.pagers;let prom;let tableWrapper;if(this.state.count>0||!this.noContentHelp){this.pagers=[];const orderedBy=this.state.orderedBy;this.hasHandle=orderedBy.length===0||orderedBy[0].name===this.handleField;this._computeAggregates();const $table=$('<table class="o_list_table table table-sm table-hover table-striped"/>');$table.toggleClass('o_list_table_grouped',this.isGrouped);$table.toggleClass('o_list_table_ungrouped',!this.isGrouped);const defs=[];this.defs=defs;if(this.isGrouped){$table.append(this._renderHeader());$table.append(this._renderGroups(this.state.data));$table.append(this._renderFooter());}else{$table.append(this._renderHeader());$table.append(this._renderBody());$table.append(this._renderFooter());}
tableWrapper=Object.assign(document.createElement('div'),{className:'table-responsive',});tableWrapper.appendChild($table[0]);delete this.defs;prom=Promise.all(defs);}
await Promise.all([this._super.apply(this,arguments),prom]);this.el.innerHTML="";this.el.classList.remove('o_list_optional_columns');oldPagers.forEach(pager=>pager.destroy());if(tableWrapper){this.el.appendChild(tableWrapper);if(document.body.contains(this.el)){this.pagers.forEach(pager=>pager.on_attach_callback());}
if(this._shouldRenderOptionalColumnsDropdown()){this.el.classList.add('o_list_optional_columns');this.$('table').append($('<i class="o_optional_columns_dropdown_toggle oi oi-fw oi-settings-adjust lh-base"/>'));this.$el.append(this._renderOptionalColumnsDropdown());}
if(this.selection.length){const $checked_rows=this.$('tr').filter((i,el)=>this.selection.includes(el.dataset.id));$checked_rows.find('.o_list_record_selector input').prop('checked',true);if($checked_rows.length===this.$('.o_data_row').length){this.$('thead .o_list_record_selector input').prop('checked',true);}}}
if(!this._hasContent()&&!!this.noContentHelp){this._renderNoContentHelper();}},_setDecorationClasses:function($el,decorations,record){for(const[cssClass,expr]of Object.entries(decorations)){$el.toggleClass(cssClass,py.PY_isTrue(py.evaluate(expr,record.evalContext)));}},_shouldRenderPager:function(currentMinimum,limit,size){if(!limit||!size){return false;}
const maximum=Math.min(currentMinimum+limit-1,size);const singlePage=(1===currentMinimum)&&(maximum===size);return!singlePage;},_shouldRenderOptionalColumnsDropdown:function(){return this.optionalColumns.length;},_updateFooter:function(){this._computeAggregates();this.$('tfoot').replaceWith(this._renderFooter());},_updateSelection:function(){const previousSelection=JSON.stringify(this.selection);this.selection=[];var self=this;var $inputs=this._getSelectableRecordCheckboxes();var allChecked=$inputs.length>0;$inputs.each(function(index,input){if(input.checked){self.selection.push($(input).closest('tr').data('id'));}else{allChecked=false;}});this.$('thead .o_list_record_selector input').prop('checked',allChecked);if(JSON.stringify(this.selection)!==previousSelection){this.trigger_up('selection_changed',{allChecked,selection:this.selection});}
this._updateFooter();},_onGroupButtonClicked:function(record,node,ev){ev.stopPropagation();if(node.attrs.type==='edit'){this.trigger_up('group_edit_button_clicked',{record:record,});}else{this.trigger_up('button_clicked',{attrs:node.attrs,record:record,});}},_onGroupButtonKeydown:function(ev){if(ev.keyCode===$.ui.keyCode.ENTER){ev.stopPropagation();}},_onToggleOptionalColumn:function(ev){var self=this;ev.stopPropagation();ev.preventDefault();var input=ev.currentTarget.querySelector('input');var fieldIndex=this.optionalColumnsEnabled.indexOf(input.name);if(fieldIndex>=0){this.optionalColumnsEnabled.splice(fieldIndex,1);}else{this.optionalColumnsEnabled.push(input.name);}
this.trigger_up('save_optional_fields',{keyParts:this._getOptionalColumnsStorageKeyParts(),optionalColumnsEnabled:this.optionalColumnsEnabled,});this._processColumns(this.columnInvisibleFields);this._render().then(function(){self._onToggleOptionalColumnDropdown(ev);});},_onToggleOptionalColumnDropdown:function(ev){ev.stopPropagation();this.$('.o_optional_columns .dropdown-toggle').dropdown('toggle');var position=(this.$(".table-responsive").css('overflow')==="auto"?this.$el.width():this.$('table').width());var direction="left";if(_t.database.parameters.direction==='rtl'){position=position-this.$('.o_optional_columns .o_optional_columns_dropdown').width();direction="right";}
this.$('.o_optional_columns').css(direction,position);},_onKeyDown:function(ev){var $cell=$(ev.currentTarget);var $tr;var $futureCell;var colIndex;if(this.state.isSample){return;}
switch(ev.keyCode){case $.ui.keyCode.LEFT:ev.preventDefault();$tr=$cell.closest('tr');$tr.closest('tbody').addClass('o_keyboard_navigation');if($tr.hasClass('o_group_header')&&$tr.hasClass('o_group_open')){this._onToggleGroup(ev);}else{$futureCell=$cell.prev();}
break;case $.ui.keyCode.RIGHT:ev.preventDefault();$tr=$cell.closest('tr');$tr.closest('tbody').addClass('o_keyboard_navigation');if($tr.hasClass('o_group_header')&&!$tr.hasClass('o_group_open')){this._onToggleGroup(ev);}else{$futureCell=$cell.next();}
break;case $.ui.keyCode.UP:ev.preventDefault();$cell.closest('tbody').addClass('o_keyboard_navigation');colIndex=this.currentColIndex||$cell.index();$futureCell=this._findConnectedCell($cell,'prev',colIndex);if(!$futureCell){this.trigger_up('navigation_move',{direction:'up'});}
break;case $.ui.keyCode.DOWN:ev.preventDefault();$cell.closest('tbody').addClass('o_keyboard_navigation');colIndex=this.currentColIndex||$cell.index();$futureCell=this._findConnectedCell($cell,'next',colIndex);break;case $.ui.keyCode.ENTER:ev.preventDefault();$tr=$cell.closest('tr');if($tr.hasClass('o_group_header')){this._onToggleGroup(ev);}else{var id=$tr.data('id');if(id){this.trigger_up('open_record',{id:id,target:ev.target});}}
break;}
if($futureCell){var isInGroupHeader=$futureCell.closest('tr').hasClass('o_group_header');var $activables=!isInGroupHeader&&$futureCell.find(':focusable');if($activables.length){$activables[0].focus();}else{$futureCell.focus();}}},_onMouseDown:function(){$('.o_keyboard_navigation').removeClass('o_keyboard_navigation');},_onPagerChanged:async function(group,{currentMinimum,limit}){this.trigger_up('load',{id:group.id,limit:limit,offset:currentMinimum-1,on_success:reloadedGroup=>{Object.assign(group,reloadedGroup);this._render();},});},_onRowClicked:function(ev){if(!ev.target.closest('.o_list_record_selector')&&!$(ev.target).prop('special_click')&&!this.no_open){var id=$(ev.currentTarget).data('id');if(id){this.trigger_up('open_record',{id:id,target:ev.target});}}},_onSelectRecord:function(ev){ev.stopPropagation();this._updateSelection();},_onSortColumn:function(ev){var name=$(ev.currentTarget).data('name');this.trigger_up('toggle_column_order',{id:this.state.id,name:name});},_onToggleCheckbox:function(ev){const $recordSelector=$(ev.target).find('input[type=checkbox]:not(":disabled")');$recordSelector.prop('checked',!$recordSelector.prop("checked"));$recordSelector.change();},_onToggleGroup:function(ev){ev.preventDefault();var group=$(ev.currentTarget).closest('tr').data('group');if(group.count){this.trigger_up('toggle_group',{group:group,onSuccess:()=>{this._updateSelection();if(document.activeElement.tagName==='BODY'){var groupHeaders=$('tr.o_group_header:data("group")');var header=groupHeaders.filter(function(){return $(this).data('group').id===group.id;});header.find('.o_group_name').focus();}},});}},_onToggleSelection:function(ev){var checked=$(ev.currentTarget).prop('checked')||false;this.$('tbody .o_list_record_selector input:not(":disabled")').prop('checked',checked);this._updateSelection();},});__exports[Symbol.for("default")]=ListRenderer;return __exports;});odoo.define(`web.ListRenderer`,async function(require){return require('@web/legacy/js/views/list/list_renderer')[Symbol.for("default")];});;

/* /web/static/src/legacy/js/views/list/list_view.js */
odoo.define('@web/legacy/js/views/list/list_view',async function(require){'use strict';let __exports={};const BasicView=require('web.BasicView');const core=require('web.core');const ListModel=require('web.ListModel');const ListRenderer=require('web.ListRenderer');const ListController=require('web.ListController');const pyUtils=require('web.py_utils');var _lt=core._lt;var ListView=BasicView.extend({accesskey:"l",display_name:_lt('List'),icon:'oi oi-view-list',config:_.extend({},BasicView.prototype.config,{Model:ListModel,Renderer:ListRenderer,Controller:ListController,}),viewType:'list',init:function(viewInfo,params){var self=this;this._super.apply(this,arguments);var selectedRecords=[];var pyevalContext=py.dict.fromJSON(_.pick(params.context,function(value,key,object){return!_.isUndefined(value)})||{});var expandGroups=!!JSON.parse(pyUtils.py_eval(this.arch.attrs.expand||"0",{'context':pyevalContext}));this.groupbys={};this.headerButtons=[];this.arch.children.forEach(function(child){if(child.tag==='groupby'){self._extractGroup(child);}
if(child.tag==='header'){self._extractHeaderButtons(child);}});let editable=false;if((!this.arch.attrs.edit||!!JSON.parse(this.arch.attrs.edit))&&!params.readonly){editable=this.arch.attrs.editable;}
this.controllerParams.activeActions.export_xlsx=this.arch.attrs.export_xlsx?!!JSON.parse(this.arch.attrs.export_xlsx):true;this.controllerParams.editable=editable;this.controllerParams.hasActionMenus=params.hasActionMenus;this.controllerParams.headerButtons=this.headerButtons;this.controllerParams.toolbarActions=viewInfo.toolbar;this.controllerParams.mode='readonly';this.controllerParams.selectedRecords=selectedRecords;this.rendererParams.arch=this.arch;this.rendererParams.groupbys=this.groupbys;this.rendererParams.hasSelectors='hasSelectors'in params?params.hasSelectors:true;this.rendererParams.editable=editable;this.rendererParams.selectedRecords=selectedRecords;this.rendererParams.addCreateLine=false;this.rendererParams.addCreateLineInGroups=editable&&this.controllerParams.activeActions.create;this.rendererParams.isMultiEditable=this.arch.attrs.multi_edit&&!!JSON.parse(this.arch.attrs.multi_edit);this.modelParams.groupbys=this.groupbys;this.loadParams.limit=this.loadParams.limit||80;this.loadParams.openGroupByDefault=expandGroups;this.loadParams.type='list';var groupsLimit=parseInt(this.arch.attrs.groups_limit,10);this.loadParams.groupsLimit=groupsLimit||(expandGroups?10:80);},_extractGroup:function(node){var innerView=this.fields[node.attrs.name].views.groupby;this.groupbys[node.attrs.name]=this._processFieldsView(innerView,'groupby');},_extractHeaderButtons(node){node.children.forEach(child=>{if(child.tag==='button'&&!child.attrs.modifiers.invisible){this.headerButtons.push(child);}});},_extractParamsFromAction:function(action){var params=this._super.apply(this,arguments);var inDialog=action.target==='new';var inline=action.target==='inline';params.hasActionMenus=!inDialog&&!inline;return params;},_updateMVCParams:function(){this._super.apply(this,arguments);this.controllerParams.noLeaf=!!this.loadParams.context.group_by_no_leaf;},});__exports[Symbol.for("default")]=ListView;return __exports;});odoo.define(`web.ListView`,async function(require){return require('@web/legacy/js/views/list/list_view')[Symbol.for("default")];});;

/* /web/static/src/legacy/js/views/qweb/qweb_view.js */
odoo.define('@web/legacy/js/views/qweb/qweb_view',async function(require){'use strict';let __exports={};const core=require('web.core');const AbstractView=require("@web/legacy/js/views/abstract_view")[Symbol.for("default")];const AbstractModel=require("@web/legacy/js/views/abstract_model")[Symbol.for("default")];const AbstractRenderer=require("@web/legacy/js/views/abstract_renderer")[Symbol.for("default")];const AbstractController=require("@web/legacy/js/views/abstract_controller")[Symbol.for("default")];const registry=require('web.view_registry');var _lt=core._lt;var Model=AbstractModel.extend({init:function(){this._super.apply(this,arguments);this._state={viewId:false,modelName:false,body:'',context:{},domain:[],};},_fetch:function(){var state=this._state;return this._rpc({model:state.modelName,method:'qweb_render_view',kwargs:{view_id:state.viewId,domain:state.domain,context:state.context}}).then(function(r){state.body=r;return state.viewId;});},__get:function(){return this._state;},__load:function(params){_.extend(this._state,_.pick(params,['viewId','modelName','domain','context']));return this._fetch();},__reload:function(_id,params){_.extend(this._state,_.pick(params,['domain','context']));return this._fetch();}});var Renderer=AbstractRenderer.extend({_render:function(){var self=this;return this._super.apply(this,arguments).then(function(){self.$el.html(self.state.body);});}});var Controller=AbstractController.extend({events:_.extend({},AbstractController.prototype.events,{'click [type="toggle"]':'_onLazyToggle','click [type="action"]':'_onActionClicked',}),init:function(){this._super.apply(this,arguments);},renderButtons:function($node){this.$buttons=$('<nav/>');if($node){$node.append(this.$buttons);}},_update:function(){var self=this;return this._super.apply(this,arguments).then(function(){var $cp_buttons=self.renderer.$('nav.o_qweb_cp_buttons');$cp_buttons.children().appendTo(self.$buttons.empty());$cp_buttons.remove();});},_onLazyToggle:function(e){var $target=$(e.target);var $t=$target.closest('[data-model]');if(!($target.hasClass('fa-caret-down')||$target.hasClass('fa-caret-right'))){$target=$t.find('.fa-caret-down, .fa-caret-right');}
var data=$t.data();if(this._fold($t)){$target.removeClass('fa-caret-down').addClass('fa-caret-right');return;}
var args=data.args||_.omit(data,'model','method','id');return this._rpc({model:data.model,method:data.method,args:data.id?[data.id]:undefined,kwargs:args}).then(function(s){return $(s);}).then(function($newcontent){$t.data('children',$newcontent).after($newcontent);$target.removeClass('fa-caret-right').addClass('fa-caret-down');});},_fold:function($el){var $children=$el.data('children');if(!$children){return false;}
var self=this;$children.each(function(_i,e){self._fold($(e));}).remove();$el.removeData('children');return true;}});var QWebView=AbstractView.extend({display_name:_lt('Freedom View'),icon:'fa-file-picture-o',viewType:'qweb',enableTimeRangeMenu:true,config:_.extend({},AbstractView.prototype.config,{Model:Model,Renderer:Renderer,Controller:Controller,}),init:function(viewInfo,params){this._super.apply(this,arguments);this.loadParams.viewId=viewInfo.view_id;}});registry.add('qweb',QWebView);__exports[Symbol.for("default")]={View:QWebView,Controller:Controller,Renderer:Renderer,Model:Model};return __exports;});odoo.define(`web.qweb`,async function(require){return require('@web/legacy/js/views/qweb/qweb_view')[Symbol.for("default")];});;

/* /web/static/src/legacy/js/views/renderer_wrapper.js */
odoo.define('@web/legacy/js/views/renderer_wrapper',async function(require){'use strict';let __exports={};const{ComponentWrapper}=require('web.OwlCompatibility');class RendererWrapper extends ComponentWrapper{getLocalState(){}
setLocalState(){}
giveFocus(){}
resetLocalState(){}}
__exports[Symbol.for("default")]=RendererWrapper;return __exports;});odoo.define(`web.RendererWrapper`,async function(require){return require('@web/legacy/js/views/renderer_wrapper')[Symbol.for("default")];});;

/* /web/static/src/legacy/js/views/sample_server.js */
odoo.define('@web/legacy/js/views/sample_server',async function(require){'use strict';let __exports={};const session=require('web.session');const utils=require('web.utils');const Registry=require('web.Registry');const viewUtils=require('web.viewUtils');class UnimplementedRouteError extends Error{}
function getSampleFromId(id,sampleTexts){return sampleTexts[(id-1)%sampleTexts.length];}
function fieldNameRegex(...terms){return new RegExp(`\\b((\\w+)?_)?(${terms.join('|')})(_(\\w+)?)?\\b`);}
const DESCRIPTION_REGEX=fieldNameRegex('description','label','title','subject','message');const EMAIL_REGEX=fieldNameRegex('email');const PHONE_REGEX=fieldNameRegex('phone');const URL_REGEX=fieldNameRegex('url');class SampleServer{constructor(modelName,fields){this.mainModel=modelName;this.data={};this.data[modelName]={fields,records:[],};for(const fieldName in fields){const field=fields[fieldName];if(['many2one','one2many','many2many'].includes(field.type)){this.data[field.relation]=this.data[field.relation]||{fields:{display_name:{type:'char'},id:{type:'integer'},color:{type:'integer'},},records:[],};}}
this.existingGroups=null;this.populated=false;this.existingGroupsPopulated=false;}
mockRpc(params){if(!(params.model in this.data)){throw new Error(`SampleServer: unknown model ${params.model}`);}
this._populateModels();switch(params.method||params.route){case'/web/dataset/search_read':return this._mockSearchReadController(params);case'web_read_group':return this._mockWebReadGroup(params);case'read_group':return this._mockReadGroup(params);case'read_progress_bar':return this._mockReadProgressBar(params);case'read':return this._mockRead(params);}
const method=params.method||params.route;const mockFunction=SampleServer.mockRegistry.get(`${params.model}/${method}`)||SampleServer.mockRegistry.get(method);if(mockFunction){return mockFunction.call(this,params);}
console.log(`SampleServer: unimplemented route "${params.method || params.route}"`);throw new SampleServer.UnimplementedRouteError();}
setExistingGroups(groups){this.existingGroups=groups;}
_aggregateFields(measures,records){const values={};for(const{fieldName,type}of measures){if(['float','integer','monetary'].includes(type)){if(records.length){let value=0;for(const record of records){value+=record[fieldName];}
values[fieldName]=this._sanitizeNumber(value);}else{values[fieldName]=null;}}
if(type==='many2one'){const ids=new Set(records.map(r=>r[fieldName]));values.fieldName=ids.size||null;}}
return values;}
_formatValue(value,options){if(!value){return false;}
const{type,interval,relation}=options;if(['date','datetime'].includes(type)){const fmt=SampleServer.FORMATS[interval];return moment(value).format(fmt);}else if(type==='many2one'){const rec=this.data[relation].records.find(({id})=>id===value);return[value,rec.display_name];}else{return value;}}
_generateFieldValue(modelName,fieldName,id){const field=this.data[modelName].fields[fieldName];switch(field.type){case"boolean":return fieldName==='active'?true:this._getRandomBool();case"char":case"text":if(["display_name","name"].includes(fieldName)){if(SampleServer.PEOPLE_MODELS.includes(modelName)){return getSampleFromId(id,SampleServer.SAMPLE_PEOPLE);}else if(modelName==='res.country'){return getSampleFromId(id,SampleServer.SAMPLE_COUNTRIES);}}
if(fieldName==='display_name'){return getSampleFromId(id,SampleServer.SAMPLE_TEXTS);}else if(["name","reference"].includes(fieldName)){return`REF${String(id).padStart(4, '0')}`;}else if(DESCRIPTION_REGEX.test(fieldName)){return getSampleFromId(id,SampleServer.SAMPLE_TEXTS);}else if(EMAIL_REGEX.test(fieldName)){const emailName=getSampleFromId(id,SampleServer.SAMPLE_PEOPLE).replace(/ /,".").toLowerCase();return`${emailName}@sample.demo`;}else if(PHONE_REGEX.test(fieldName)){return`+1 555 754 ${String(id).padStart(4, '0')}`;}else if(URL_REGEX.test(fieldName)){return`http://sample${id}.com`;}
return false;case"date":case"datetime":{const format=field.type==="date"?"YYYY-MM-DD":"YYYY-MM-DD HH:mm:ss";return this._getRandomDate(format);}
case"float":return this._getRandomFloat(SampleServer.MAX_FLOAT);case"integer":{let max=SampleServer.MAX_INTEGER;if(fieldName.includes('color')){max=this._getRandomBool()?SampleServer.MAX_COLOR_INT:0;}
return this._getRandomInt(max);}
case"monetary":return this._getRandomInt(SampleServer.MAX_MONETARY);case"many2one":if(field.relation==='res.currency'){return session.company_currency_id;}
if(field.relation==='ir.attachment'){return false;}
return this._getRandomSubRecordId();case"one2many":case"many2many":{const ids=[this._getRandomSubRecordId(),this._getRandomSubRecordId()];return[...new Set(ids)];}
case"selection":{if(fieldName==='activity_exception_decoration'){return false;}
if(field.selection.length>0){return this._getRandomArrayEl(field.selection)[0];}
return false;}
default:return false;}}
_getRandomArrayEl(array){return array[Math.floor(Math.random()*array.length)];}
_getRandomBool(){return Math.random()<0.5;}
_getRandomDate(format){const delta=Math.floor((Math.random()-Math.random())*SampleServer.DATE_DELTA);return new moment().add(delta,"hour").format(format);}
_getRandomFloat(max){return this._sanitizeNumber(Math.random()*max);}
_getRandomInt(max){return Math.floor(Math.random()*max);}
_getRandomSubRecordId(){return Math.floor(Math.random()*SampleServer.SUB_RECORDSET_SIZE)+1;}
_mockRead(params){const model=this.data[params.model];const ids=params.args[0];const fieldNames=params.args[1];const records=[];for(const r of model.records){if(!ids.includes(r.id)){continue;}
const record={id:r.id};for(const fieldName of fieldNames){const field=model.fields[fieldName];if(!field){record[fieldName]=false;}else if(field.type==='many2one'){const relModel=this.data[field.relation];const relRecord=relModel.records.find(relR=>r[fieldName]===relR.id);record[fieldName]=relRecord?[relRecord.id,relRecord.display_name]:false;}else{record[fieldName]=r[fieldName];}}
records.push(record);}
return records;}
_mockReadGroup(params){const lazy='lazy'in params?params.lazy:true;const model=params.model;const fields=this.data[model].fields;const records=this.data[model].records;const normalizedGroupBys=[];let groupBy=[];if(params.groupBy.length){groupBy=lazy?[params.groupBy[0]]:params.groupBy;}
for(const groupBySpec of groupBy){let[fieldName,interval]=groupBySpec.split(':');interval=interval||'month';const{type,relation}=fields[fieldName];if(type){const gb={fieldName,type,interval,relation,alias:groupBySpec};normalizedGroupBys.push(gb);}}
const groups=utils.groupBy(records,(record)=>{const vals={};for(const gb of normalizedGroupBys){const{fieldName,type}=gb;let value;if(['date','datetime'].includes(type)){value=this._formatValue(record[fieldName],gb);}else{value=record[fieldName];}
vals[fieldName]=value;}
return JSON.stringify(vals);});const measures=[];for(const measureSpec of(params.fields||Object.keys(fields))){const[fieldName,aggregateFunction]=measureSpec.split(':');const{type}=fields[fieldName];if(!params.groupBy.includes(fieldName)&&type&&(type!=='many2one'||aggregateFunction!=='count_distinct')){measures.push({fieldName,type});}}
let result=[];for(const id in groups){const records=groups[id];const group={__domain:[]};let countKey=`__count`;if(normalizedGroupBys.length&&lazy){countKey=`${normalizedGroupBys[0].fieldName}_count`;}
group[countKey]=records.length;const firstElem=records[0];for(const gb of normalizedGroupBys){const{alias,fieldName}=gb;group[alias]=this._formatValue(firstElem[fieldName],gb);}
Object.assign(group,this._aggregateFields(measures,records));result.push(group);}
if(normalizedGroupBys.length>0){const{alias,interval,type}=normalizedGroupBys[0];result=utils.sortBy(result,(group)=>{const val=group[alias];if(['date','datetime'].includes(type)){return moment(val,SampleServer.FORMATS[interval]);}
return val;});}
return result;}
_mockReadProgressBar(params){const groupByFieldName=viewUtils.getGroupByField(params.kwargs.group_by);const progress_bar=params.kwargs.progress_bar;const groupByField=this.data[params.model].fields[groupByFieldName];const data={};for(const record of this.data[params.model].records){let groupByValue=record[groupByFieldName];if(groupByField.type==="many2one"){const relatedRecords=this.data[groupByField.relation].records;const relatedRecord=relatedRecords.find(r=>r.id===groupByValue);groupByValue=relatedRecord.display_name;}
if(!(groupByValue in data)){if(groupByValue===true){groupByValue="True";}else if(groupByValue===false){groupByValue="False";}}
if(!(groupByValue in data)){data[groupByValue]={};for(const key in progress_bar.colors){data[groupByValue][key]=0;}}
const fieldValue=record[progress_bar.field];if(fieldValue in data[groupByValue]){data[groupByValue][fieldValue]++;}}
return data;}
_mockSearchReadController(params){const model=this.data[params.model];const rawRecords=model.records.slice(0,SampleServer.SEARCH_READ_LIMIT);const records=this._mockRead({model:params.model,args:[rawRecords.map(r=>r.id),params.fields],});return{records,length:records.length};}
_mockWebReadGroup(params){let groups;if(this.existingGroups){this._tweakExistingGroups(params);groups=this.existingGroups;}else{groups=this._mockReadGroup(params);}
return{groups,length:groups.length,};}
_populateExistingGroups(params){if(!this.existingGroupsPopulated){const groups=this.existingGroups;this.groupsInfo=groups;const groupBy=params.groupBy[0];const groupByFieldName=viewUtils.getGroupByField(groupBy);const groupByField=this.data[params.model].fields[groupByFieldName];const values=groups.map(g=>{if(['date','datetime'].includes(groupByField.type)){return g.__range[groupBy]?g.__range[groupBy].from:false;}else{return g[groupBy];}});const groupedByM2O=groupByField.type==='many2one';if(groupedByM2O){this.data[groupByField.relation].records=values.map(v=>{return{id:v[0],display_name:v[1]};});}
for(const r of this.data[params.model].records){const value=getSampleFromId(r.id,values);r[groupByFieldName]=groupedByM2O?value[0]:value;}
this.existingGroupsPopulated=true;}}
_populateModels(){if(!this.populated){for(const modelName in this.data){const model=this.data[modelName];const fieldNames=Object.keys(model.fields).filter(f=>f!=='id');const size=modelName===this.mainModel?SampleServer.MAIN_RECORDSET_SIZE:SampleServer.SUB_RECORDSET_SIZE;for(let id=1;id<=size;id++){const record={id};for(const fieldName of fieldNames){record[fieldName]=this._generateFieldValue(modelName,fieldName,id);}
model.records.push(record);}}
this.populated=true;}}
_sanitizeNumber(value){return parseFloat(value.toFixed(SampleServer.FLOAT_PRECISION));}
_tweakExistingGroups(params){const groups=this.existingGroups;this._populateExistingGroups(params);const groupBy=params.groupBy[0];const groupByFieldName=viewUtils.getGroupByField(groupBy);const groupByField=this.data[params.model].fields[groupByFieldName];const records=this.data[params.model].records;for(const g of groups){let groupValue=g[groupBy];if(groupByField.type==='many2one'){groupValue=g[groupBy][0];}else if(['date','datetime'].includes(groupByField.type)){groupValue=g.__range[groupBy]?g.__range[groupBy].from:false;}
const recordsInGroup=records.filter(r=>r[groupByFieldName]===groupValue);g[`${groupByFieldName}_count`]=recordsInGroup.length;for(const field of params.fields){const fieldType=this.data[params.model].fields[field].type;if(['integer, float','monetary'].includes(fieldType)){g[field]=recordsInGroup.reduce((acc,r)=>acc+r[field],0);}}
g.__data={records:this._mockRead({model:params.model,args:[recordsInGroup.map(r=>r.id),params.fields],}),length:recordsInGroup.length,};}}}
SampleServer.FORMATS={hour:'HH[:00] DD MMM',day:'YYYY-MM-DD',week:'[W]ww YYYY',month:'MMMM YYYY',quarter:'[Q]Q YYYY',year:'Y',};SampleServer.DISPLAY_FORMATS=Object.assign({},SampleServer.FORMATS,{day:'DD MMM YYYY'});SampleServer.MAIN_RECORDSET_SIZE=16;SampleServer.SUB_RECORDSET_SIZE=5;SampleServer.SEARCH_READ_LIMIT=10;SampleServer.MAX_FLOAT=100;SampleServer.MAX_INTEGER=50;SampleServer.MAX_COLOR_INT=7;SampleServer.MAX_MONETARY=100000;SampleServer.DATE_DELTA=24*60;SampleServer.FLOAT_PRECISION=2;SampleServer.SAMPLE_COUNTRIES=["Belgium","France","Portugal","Singapore","Australia"];SampleServer.SAMPLE_PEOPLE=["John Miller","Henry Campbell","Carrie Helle","Wendi Baltz","Thomas Passot",];SampleServer.SAMPLE_TEXTS=["Laoreet id","Volutpat blandit","Integer vitae","Viverra nam","In massa",];SampleServer.PEOPLE_MODELS=['res.users','res.partner','hr.employee','mail.followers','mailing.contact'];SampleServer.UnimplementedRouteError=UnimplementedRouteError;SampleServer.mockRegistry=new Registry();__exports[Symbol.for("default")]=SampleServer;return __exports;});odoo.define(`web.SampleServer`,async function(require){return require('@web/legacy/js/views/sample_server')[Symbol.for("default")];});;

/* /web/static/src/legacy/js/views/search_panel.js */
odoo.define('@web/legacy/js/views/search_panel',async function(require){'use strict';let __exports={};const{Model,useModel}=require("web.Model");const{LegacyComponent}=require("@web/legacy/legacy_component");const{onMounted,onWillStart,onWillUpdateProps,useRef,useState,useSubEnv}=owl;class SearchPanel extends LegacyComponent{setup(){useSubEnv({searchModel:this.props.searchModel});this.state=useState({active:{},expanded:{},});this.model=useModel("searchModel");this.scrollTop=0;this.hasImportedState=false;this.importState(this.props.importedState);this.legacySearchPanelRef=useRef("legacySearchPanel");onWillStart(async()=>{this._expandDefaultValue();this._updateActiveValues();});onMounted(()=>{this._updateGroupHeadersChecked();if(this.hasImportedState&&this.legacySearchPanelRef.el){this.legacySearchPanelRef.el.scroll({top:this.scrollTop});}});onWillUpdateProps(async()=>{this._updateActiveValues();});}
get sections(){return this.model.get("sections",s=>!s.empty);}
exportState(){const exported={expanded:this.state.expanded,scrollTop:this.legacySearchPanelRef.el?this.legacySearchPanelRef.el.scrollTop:0,};return JSON.stringify(exported);}
importState(stringifiedState){this.hasImportedState=Boolean(stringifiedState);if(this.hasImportedState){const state=JSON.parse(stringifiedState);this.state.expanded=state.expanded;this.scrollTop=state.scrollTop;}}
_expandDefaultValue(){if(this.hasImportedState){return;}
const categories=this.model.get("sections",s=>s.type==="category");for(const category of categories){this.state.expanded[category.id]={};if(category.activeValueId){const ancestorIds=this._getAncestorValueIds(category,category.activeValueId);for(const ancestorId of ancestorIds){this.state.expanded[category.id][ancestorId]=true;}}}}
_getAncestorValueIds(category,categoryValueId){const{parentId}=category.values.get(categoryValueId);return parentId?[...this._getAncestorValueIds(category,parentId),parentId]:[];}
async _toggleCategory(category,value){if(value.childrenIds.length){const categoryState=this.state.expanded[category.id];if(categoryState[value.id]&&category.activeValueId===value.id){delete categoryState[value.id];}else{categoryState[value.id]=true;}}
if(category.activeValueId!==value.id){this.state.active[category.id]=value.id;this.model.dispatch("toggleCategoryValue",category.id,value.id);}}
_toggleFilterGroup(filterId,{values}){const valueIds=[];const checked=[...values.values()].every((value)=>this.state.active[filterId][value.id]);values.forEach(({id})=>{valueIds.push(id);this.state.active[filterId][id]=!checked;});this.model.dispatch("toggleFilterValues",filterId,valueIds,!checked);}
_toggleFilterValue(filterId,valueId,{currentTarget}){this.state.active[filterId][valueId]=currentTarget.checked;this._updateGroupHeadersChecked();this.model.dispatch("toggleFilterValues",filterId,[valueId]);}
_updateActiveValues(){for(const section of this.model.get("sections")){if(section.type==="category"){this.state.active[section.id]=section.activeValueId;}else{this.state.active[section.id]={};if(section.groups){for(const group of section.groups.values()){for(const value of group.values.values()){this.state.active[section.id][value.id]=value.checked;}}}
if(section&&section.values){for(const value of section.values.values()){this.state.active[section.id][value.id]=value.checked;}}}}}
_updateGroupHeadersChecked(){if(!this.legacySearchPanelRef.el){return;}
const groups=this.legacySearchPanelRef.el.querySelectorAll(":scope .o_search_panel_filter_group");for(const group of groups){const header=group.querySelector(":scope .o_search_panel_group_header input");const vals=[...group.querySelectorAll(":scope .o_search_panel_filter_value input")];header.checked=false;header.indeterminate=false;if(vals.every((v)=>v.checked)){header.checked=true;}else if(vals.some((v)=>v.checked)){header.indeterminate=true;}}}}
SearchPanel.modelExtension="SearchPanel";SearchPanel.props={className:{type:String,optional:1},importedState:{type:String,optional:1},searchModel:Model,};SearchPanel.template="web.Legacy.SearchPanel";__exports[Symbol.for("default")]=SearchPanel;return __exports;});odoo.define(`web.searchPanel`,async function(require){return require('@web/legacy/js/views/search_panel')[Symbol.for("default")];});;

/* /web/static/src/legacy/js/views/search_panel_model_extension.js */
odoo.define('@web/legacy/js/views/search_panel_model_extension',async function(require){'use strict';let __exports={};const ActionModel=require("web.ActionModel");const{sortBy}=require("web.utils");const Domain=require("web.Domain");const pyUtils=require("web.py_utils");const DEFAULT_VIEW_TYPES=["kanban","tree"];const DEFAULT_LIMIT=200;let nextSectionId=1;function hasDomain(filter){return filter.domain!=="[]";}
function hasValues({errorMsg,groups,type,values}){if(errorMsg){return true;}else if(groups){return[...groups.values()].some((g)=>g.values.size);}else if(type==="category"){return values&&values.size>1;}else{return values&&values.size>0;}}
function serialiseMap(map){return[...map].map(([key,val])=>[key,Object.assign({},val)]);}
class SearchPanelModelExtension extends ActionModel.Extension{constructor(){super(...arguments);this.categoriesToLoad=[];this.defaultValues={};this.filtersToLoad=[];this.initialStateImport=false;this.searchDomain=[];for(const key in this.config.context){const match=/^searchpanel_default_(.*)$/.exec(key);if(match){this.defaultValues[match[1]]=this.config.context[key];}}}
async callLoad(params){const searchDomain=this._getExternalDomain();params.searchDomainChanged=(JSON.stringify(this.searchDomain)!==JSON.stringify(searchDomain));if(!this.shouldLoad&&!this.initialStateImport){const isFetchable=(section)=>section.enableCounters||(params.searchDomainChanged&&!section.expand);this.categoriesToLoad=this.categories.filter(isFetchable);this.filtersToLoad=this.filters.filter(isFetchable);this.shouldLoad=params.searchDomainChanged||Boolean(this.categoriesToLoad.length+this.filtersToLoad.length);}
this.searchDomain=searchDomain;this.initialStateImport=false;await super.callLoad(params);}
exportState(){const state=Object.assign({},super.exportState());state.sections=serialiseMap(state.sections);for(const[,section]of state.sections){section.values=serialiseMap(section.values);if(section.groups){section.groups=serialiseMap(section.groups);for(const[,group]of section.groups){group.values=serialiseMap(group.values);}}}
return state;}
get(property,...args){switch(property){case"domain":return this.getDomain();case"sections":return this.getSections(...args);}}
importState(importedState){this.initialStateImport=false;super.importState(...arguments);if(importedState){this.state.sections=new Map(this.state.sections);for(const section of this.state.sections.values()){section.values=new Map(section.values);if([...section.values.keys()].some(e=>e!==false)){this.initialStateImport=true;}
if(section.groups){section.groups=new Map(section.groups);for(const group of section.groups.values()){group.values=new Map(group.values);}}}}}
async isReady(){await this.sectionsPromise;}
async load(params){this.sectionsPromise=this._fetchSections(params.isInitialLoad);if(this._shouldWaitForData(params)){await this.sectionsPromise;}}
prepareState(){Object.assign(this.state,{sections:new Map()});this._createSectionsFromArch();}
getDomain(){return Domain.prototype.normalizeArray([...this._getCategoryDomain(),...this._getFilterDomain(),]);}
getSections(predicate){let sections=[...this.state.sections.values()].map((section)=>Object.assign({},section,{empty:!hasValues(section)}));if(predicate){sections=sections.filter(predicate);}
return sections.sort((s1,s2)=>s1.index-s2.index);}
toggleCategoryValue(sectionId,valueId){const category=this.state.sections.get(sectionId);category.activeValueId=valueId;}
toggleFilterValues(sectionId,valueIds,forceTo=null){const section=this.state.sections.get(sectionId);for(const valueId of valueIds){const value=section.values.get(valueId);value.checked=forceTo===null?!value.checked:forceTo;}}
get categories(){return[...this.state.sections.values()].filter(s=>s.type==="category");}
get filters(){return[...this.state.sections.values()].filter(s=>s.type==="filter");}
_applyDefaultFilterValues(){for(const{fieldName,values}of this.filters){const defaultValues=this.defaultValues[fieldName]||[];for(const valueId of defaultValues){const value=values.get(valueId);if(value){value.checked=true;}}}}
_createCategoryTree(sectionId,result){const category=this.state.sections.get(sectionId);let{error_msg,parent_field:parentField,values,}=result;if(error_msg){category.errorMsg=error_msg;values=[];}
if(category.hierarchize){category.parentField=parentField;}
for(const value of values){category.values.set(value.id,Object.assign({},value,{childrenIds:[],parentId:value[parentField]||false,}));}
for(const value of values){const{parentId}=category.values.get(value.id);if(parentId&&category.values.has(parentId)){category.values.get(parentId).childrenIds.push(value.id);}}
category.rootIds=[false];for(const value of values){const{parentId}=category.values.get(value.id);if(!parentId){category.rootIds.push(value.id);}}
const valueIds=[false,...values.map((val)=>val.id)];this._ensureCategoryValue(category,valueIds);}
_createFilterTree(sectionId,result){const filter=this.state.sections.get(sectionId);let{error_msg,values,}=result;if(error_msg){filter.errorMsg=error_msg;values=[];}
values.forEach((value)=>{const oldValue=filter.values.get(value.id);value.checked=oldValue?oldValue.checked:false;});filter.values=new Map();const groupIds=[];if(filter.groupBy){const groups=new Map();for(const value of values){const groupId=value.group_id;if(!groups.has(groupId)){if(groupId){groupIds.push(groupId);}
groups.set(groupId,{id:groupId,name:value.group_name,values:new Map(),tooltip:value.group_tooltip,sequence:value.group_sequence,hex_color:value.group_hex_color,});const oldGroup=filter.groups&&filter.groups.get(groupId);groups.get(groupId).state=(oldGroup&&oldGroup.state)||false;}
groups.get(groupId).values.set(value.id,value);}
filter.groups=groups;filter.sortedGroupIds=sortBy(groupIds,(id)=>groups.get(id).sequence||groups.get(id).name);for(const group of filter.groups.values()){for(const[valueId,value]of group.values){filter.values.set(valueId,value);}}}else{for(const value of values){filter.values.set(value.id,value);}}}
_createSectionsFromArch(){let hasCategoryWithCounters=false;let hasFilterWithDomain=false;this.config.archNodes.forEach(({attrs,tag},index)=>{if(tag!=="field"||attrs.invisible==="1"){return;}
const type=attrs.select==="multi"?"filter":"category";const section={color:attrs.color,description:attrs.string||this.config.fields[attrs.name].string,enableCounters:!!pyUtils.py_eval(attrs.enable_counters||"0"),expand:!!pyUtils.py_eval(attrs.expand||"0"),fieldName:attrs.name,icon:attrs.icon,id:nextSectionId++,index,limit:pyUtils.py_eval(attrs.limit||String(DEFAULT_LIMIT)),type,values:new Map(),};if(type==="category"){section.activeValueId=this.defaultValues[attrs.name];section.icon=section.icon||"fa-folder";section.hierarchize=!!pyUtils.py_eval(attrs.hierarchize||"1");section.values.set(false,{childrenIds:[],display_name:this.env._t("All"),id:false,bold:true,parentId:false,});hasCategoryWithCounters=hasCategoryWithCounters||section.enableCounters;}else{section.domain=attrs.domain||"[]";section.groupBy=attrs.groupby;section.icon=section.icon||"fa-filter";hasFilterWithDomain=hasFilterWithDomain||section.domain!=="[]";}
this.state.sections.set(section.id,section);});if(hasCategoryWithCounters&&hasFilterWithDomain){for(const category of this.categories){category.enableCounters=false;}
console.warn("Warning: categories with counters are incompatible with filters having a domain attribute.","All category counters have been disabled to avoid inconsistencies.",);}}
_ensureCategoryValue(category,valueIds){if(!valueIds.includes(category.activeValueId)){category.activeValueId=valueIds[0];}}
async _fetchCategories(categories){const filterDomain=this._getFilterDomain();await Promise.all(categories.map(async(category)=>{const result=await this.env.services.rpc({method:"search_panel_select_range",model:this.config.modelName,args:[category.fieldName],kwargs:{category_domain:this._getCategoryDomain(category.id),enable_counters:category.enableCounters,expand:category.expand,filter_domain:filterDomain,hierarchize:category.hierarchize,limit:category.limit,search_domain:this.searchDomain,},params:{context:this.config.context,},});this._createCategoryTree(category.id,result);}));}
async _fetchFilters(filters){const evalContext={};for(const category of this.categories){evalContext[category.fieldName]=category.activeValueId;}
const categoryDomain=this._getCategoryDomain();await Promise.all(filters.map(async(filter)=>{const result=await this.env.services.rpc({method:"search_panel_select_multi_range",model:this.config.modelName,args:[filter.fieldName],kwargs:{category_domain:categoryDomain,comodel_domain:Domain.prototype.stringToArray(filter.domain,evalContext),enable_counters:filter.enableCounters,filter_domain:this._getFilterDomain(filter.id),expand:filter.expand,group_by:filter.groupBy||false,group_domain:this._getGroupDomain(filter),limit:filter.limit,search_domain:this.searchDomain,},params:{context:this.config.context,},});this._createFilterTree(filter.id,result);}));}
async _fetchSections(isInitialLoad){await this._fetchCategories(isInitialLoad?this.categories:this.categoriesToLoad);await this._fetchFilters(isInitialLoad?this.filters:this.filtersToLoad);if(isInitialLoad){this._applyDefaultFilterValues();}}
_getCategoryDomain(excludedCategoryId){const domain=[];for(const category of this.categories){if(category.id===excludedCategoryId||!category.activeValueId){continue;}
const field=this.config.fields[category.fieldName];const operator=field.type==="many2one"&&category.parentField?"child_of":"=";domain.push([category.fieldName,operator,category.activeValueId,]);}
return domain;}
_getExternalDomain(){const domains=this.config.get("domain");const domain=domains.reduce((acc,dom)=>[...acc,...dom],[]);return Domain.prototype.normalizeArray(domain);}
_getFilterDomain(excludedFilterId){const domain=[];function addCondition(fieldName,valueMap){const ids=[];for(const[valueId,value]of valueMap){if(value.checked){ids.push(valueId);}}
if(ids.length){domain.push([fieldName,"in",ids]);}}
for(const filter of this.filters){if(filter.id===excludedFilterId){continue;}
const{fieldName,groups,values}=filter;if(groups){for(const group of groups.values()){addCondition(fieldName,group.values);}}else{addCondition(fieldName,values);}}
return domain;}
_getGroupDomain(filter){const{fieldName,groups,enableCounters}=filter;const{type:fieldType}=this.config.fields[fieldName];if(!enableCounters||!groups){return{many2one:[],many2many:{},}[fieldType];}
let groupDomain=null;if(fieldType==="many2one"){for(const group of groups.values()){const valueIds=[];let active=false;for(const[valueId,value]of group.values){const{checked}=value;valueIds.push(valueId);if(checked){active=true;}}
if(active){if(groupDomain){groupDomain=[[0,"=",1]];break;}else{groupDomain=[[fieldName,"in",valueIds]];}}}}else if(fieldType==="many2many"){const checkedValueIds=new Map();groups.forEach(({values},groupId)=>{values.forEach(({checked},valueId)=>{if(checked){if(!checkedValueIds.has(groupId)){checkedValueIds.set(groupId,[]);}
checkedValueIds.get(groupId).push(valueId);}});});groupDomain={};for(const[gId,ids]of checkedValueIds.entries()){for(const groupId of groups.keys()){if(gId!==groupId){const key=JSON.stringify(groupId);if(!groupDomain[key]){groupDomain[key]=[];}
groupDomain[key].push([fieldName,"in",ids]);}}}}
return groupDomain;}
_shouldWaitForData({isInitialLoad,searchDomainChanged}){if(isInitialLoad&&Object.keys(this.defaultValues).length){return true;}
if(this.categories.length&&this.filters.some(hasDomain)){return true;}
if(!this.searchDomain.length){return false;}
return[...this.state.sections.values()].some((section)=>!section.expand&&searchDomainChanged);}
static extractArchInfo(archs,viewType){const{children}=archs.search;const spNode=children.find(c=>c.tag==="searchpanel");const isObject=(obj)=>typeof obj==="object"&&obj!==null;if(spNode){const actualType=viewType==="list"?"tree":viewType;const{view_types}=spNode.attrs;const viewTypes=view_types?view_types.split(","):DEFAULT_VIEW_TYPES;if(viewTypes.includes(actualType)){return{attrs:spNode.attrs,children:spNode.children.filter(isObject),};}}
return null;}}
SearchPanelModelExtension.layer=1;ActionModel.registry.add("SearchPanel",SearchPanelModelExtension,30);__exports[Symbol.for("default")]=SearchPanelModelExtension;return __exports;});odoo.define(`web.searchPanelModelExtension`,async function(require){return require('@web/legacy/js/views/search_panel_model_extension')[Symbol.for("default")];});;

/* /web/static/src/legacy/js/views/select_create_controllers_registry.js */
odoo.define('web.select_create_controllers_registry',function(require){"use strict";return{};});odoo.define('web._select_create_controllers_registry',function(require){"use strict";var KanbanController=require('web.KanbanController');var ListController=require('web.ListController');var select_create_controllers_registry=require('web.select_create_controllers_registry');var SelectCreateKanbanController=KanbanController.extend({_onOpenRecord:function(ev){var selectedRecord=this.model.get(ev.data.id);this.trigger_up('select_record',{id:selectedRecord.res_id,display_name:selectedRecord.data.display_name,});},});var SelectCreateListController=ListController.extend({_onOpenRecord:function(ev){var selectedRecord=this.model.get(ev.data.id);this.trigger_up('select_record',{id:selectedRecord.res_id,display_name:selectedRecord.data.display_name,});},});_.extend(select_create_controllers_registry,{SelectCreateListController:SelectCreateListController,SelectCreateKanbanController:SelectCreateKanbanController,});});;

/* /web/static/src/legacy/js/views/signature_dialog.js */
odoo.define('@web/legacy/js/views/signature_dialog',async function(require){'use strict';let __exports={};const core=require('web.core');const Dialog=require('web.Dialog');const{NameAndSignature}=require('web.name_and_signature');var _t=core._t;var SignatureDialog=Dialog.extend({template:'web.signature_dialog',custom_events:{'signature_changed':'_onChangeSignature',},init:function(parent,options){var self=this;options=options||{};options.title=options.title||_t("Adopt Your Signature");options.size=options.size||'medium';options.technical=false;if(!options.buttons){options.buttons=[];options.buttons.push({text:_t("Adopt & Sign"),classes:"btn-primary",disabled:true,click:function(e){self._onConfirm();}});options.buttons.push({text:_t("Cancel"),close:true});}
this._super(parent,options);this.nameAndSignature=new NameAndSignature(this,options.nameAndSignatureOptions);},willStart:function(){return Promise.all([this.nameAndSignature.appendTo($('<div>')),this._super.apply(this,arguments)]);},start:function(){var self=this;this.$primaryButton=this.$footer.find('.btn-primary');this.opened().then(function(){self.$('.o_web_sign_name_and_signature').replaceWith(self.nameAndSignature.$el);self.nameAndSignature.resetSignature();});return this._super.apply(this,arguments);},isSignatureEmpty:function(){return this.nameAndSignature.isSignatureEmpty();},_onChangeSignature:function(){var isEmpty=this.nameAndSignature.isSignatureEmpty();this.$primaryButton.prop('disabled',isEmpty);},_onConfirm:function(fct){this.trigger_up('upload_signature',{name:this.nameAndSignature.getName(),signatureImage:this.nameAndSignature.getSignatureImage(),});},});__exports[Symbol.for("default")]=SignatureDialog;return __exports;});odoo.define(`web.signature_dialog`,async function(require){return require('@web/legacy/js/views/signature_dialog')[Symbol.for("default")];});;

/* /web/static/src/legacy/js/views/standalone_field_manager_mixin.js */
odoo.define('@web/legacy/js/views/standalone_field_manager_mixin',async function(require){'use strict';let __exports={};const FieldManagerMixin=require('web.FieldManagerMixin');var StandaloneFieldManagerMixin=_.extend({},FieldManagerMixin,{init:function(){FieldManagerMixin.init.apply(this,arguments);this.registeredWidgets={};},_confirmChange:function(id,fields,event){var result=FieldManagerMixin._confirmChange.apply(this,arguments);var record=this.model.get(id);_.each(this.registeredWidgets[id],function(widget,fieldName){if(_.contains(fields,fieldName)){widget.reset(record,event);}});return result;},_registerWidget:function(datapointID,fieldName,widget){if(!this.registeredWidgets[datapointID]){this.registeredWidgets[datapointID]={};}
this.registeredWidgets[datapointID][fieldName]=widget;},});__exports[Symbol.for("default")]=StandaloneFieldManagerMixin;return __exports;});odoo.define(`web.StandaloneFieldManagerMixin`,async function(require){return require('@web/legacy/js/views/standalone_field_manager_mixin')[Symbol.for("default")];});;

/* /web/static/src/legacy/js/views/view_dialogs.js */
odoo.define('@web/legacy/js/views/view_dialogs',async function(require){'use strict';let __exports={};const config=require('web.config');const core=require('web.core');const Dialog=require('web.Dialog');const dom=require('web.dom');const view_registry=require('web.view_registry');const select_create_controllers_registry=require('web.select_create_controllers_registry');var _t=core._t;const{markup}=require("@odoo/owl");var ViewDialog=Dialog.extend({custom_events:_.extend({},Dialog.prototype.custom_events,{push_state:'_onPushState',}),init:function(parent,options){options=options||{};options.fullscreen=config.device.isMobile;options.dialogClass=options.dialogClass||''+' o_act_window';this._super(parent,$.extend(true,{},options));this.res_model=options.res_model||null;this.domain=options.domain||[];this.context=options.context||{};this.options=_.extend(this.options||{},options||{});},_onPushState:function(event){event.stopPropagation();},});var FormViewDialog=ViewDialog.extend({init:function(parent,options){var self=this;options=options||{};this.res_id=options.res_id||null;this.on_saved=options.on_saved||(function(){});this.on_remove=options.on_remove||(function(){});this.context=options.context;this._createContext=options._createContext;this.model=options.model;this.parentID=options.parentID;this.recordID=options.recordID;this.shouldSaveLocally=options.shouldSaveLocally;this.readonly=options.readonly;this.deletable=options.deletable;this.editable=options.editable;this.disable_multiple_selection=options.disable_multiple_selection;var oBtnRemove='o_btn_remove';var multi_select=!_.isNumber(options.res_id)&&!options.disable_multiple_selection;var readonly=_.isNumber(options.res_id)&&options.readonly;if(!options.buttons){options.buttons=[{text:options.close_text||(readonly?_t("Close"):_t("Discard")),classes:"btn-secondary o_form_button_cancel",close:true,hotkey:'j',click:function(){if(!readonly){self.form_view.model.discardChanges(self.form_view.handle,{rollback:self.shouldSaveLocally,});}},}];if(!readonly){options.buttons.unshift({text:options.save_text||(multi_select?_t("Save & Close"):_t("Save")),classes:"btn-primary",hotkey:'s',click:function(){self._save().then(self.close.bind(self));}});if(multi_select){options.buttons.splice(1,0,{text:_t("Save & New"),classes:"btn-primary",hotkey:'n',click:function(){self._save().then(function(){const additionalContext=self._createContext&&self._createContext(false);self.form_view.createRecord(self.parentID,additionalContext);}).then(function(){if(!self.deletable){return;}
self.deletable=false;self.buttons=self.buttons.filter(function(button){return button.classes.split(' ').indexOf(oBtnRemove)<0;});self.set_buttons(self.buttons);self.set_title(_t("Create ")+_.str.strRight(self.title,_t("Open: ")));});},});}
var multi=options.disable_multiple_selection;if(!multi&&this.deletable){this._setRemoveButtonOption(options,oBtnRemove);}}}
this._super(parent,options);},open:function(){var self=this;var _super=this._super.bind(this);var fields_view_def;if(this.options.fields_view){fields_view_def=Promise.resolve(this.options.fields_view);}else{fields_view_def=this.loadFieldView(this.res_model,this.context,this.options.view_id,'form');}
fields_view_def.then(function(viewInfo){var refinedContext=_.pick(self.context,function(value,key){return key.indexOf('_view_ref')===-1;});var xml=new DOMParser().parseFromString(viewInfo.arch,"text/xml")
var key=xml.documentElement.getAttribute("js_class");var FormView=view_registry.get(key||'form');var formview=new FormView(viewInfo,{modelName:self.res_model,context:refinedContext,ids:self.res_id?[self.res_id]:[],currentId:self.res_id||undefined,index:0,mode:self.res_id&&self.options.readonly?'readonly':'edit',footerToButtons:true,default_buttons:false,withControlPanel:false,model:self.model,parentID:self.parentID,recordID:self.recordID,isFromFormViewDialog:true,editable:self.editable});return formview.getController(self);}).then(function(formView){self.form_view=formView;var fragment=document.createDocumentFragment();if(self.recordID&&self.shouldSaveLocally){self.model.save(self.recordID,{savePoint:true});}
return self.form_view.appendTo(fragment).then(function(){self.opened().then(function(){var $buttons=$('<div>');self.form_view.renderButtons($buttons);if($buttons.children().length){self.$footer.empty().append($buttons.contents());}
dom.append(self.$el,fragment,{callbacks:[{widget:self.form_view}],in_DOM:true,});self.form_view.updateButtons();self.trigger_up('dialog_form_loaded');});return _super();});});return this;},_focusOnClose:function(){var isFocusSet=false;this.trigger_up('form_dialog_discarded',{callback:function(isFocused){isFocusSet=isFocused;},});return isFocusSet;},_remove:function(){return Promise.resolve(this.on_remove());},_save:function(){var self=this;return this.form_view.saveRecord(this.form_view.handle,{stayInEdit:true,reload:false,savePoint:this.shouldSaveLocally,viewType:'form',}).then(function(changedFields){var record=self.form_view.model.get(self.form_view.handle);return self.on_saved(record,!!changedFields.length);});},_setRemoveButtonOption(options,btnClasses){const self=this;options.buttons.push({text:options.removeButtonText||_t("Remove"),classes:'btn-secondary '+btnClasses,hotkey:'x',click:function(){self._remove().then(self.close.bind(self));}});},});var SelectCreateDialog=ViewDialog.extend({custom_events:_.extend({},ViewDialog.prototype.custom_events,{select_record:function(event){if(!this.options.readonly){this.on_selected([event.data]);this.close();}},selection_changed:function(event){event.stopPropagation();this.$footer.find(".o_select_button").prop('disabled',!event.data.selection.length);},}),init:function(){this._super.apply(this,arguments);_.defaults(this.options,{initial_view:'search'});this.on_selected=this.options.on_selected||(function(){});this.on_closed=this.options.on_closed||(function(){});this.initialIDs=this.options.initial_ids;this.viewType='list';},open:function(){if(this.options.initial_view!=="search"){return this.create_edit_record();}
var self=this;var _super=this._super.bind(this);var viewRefID=this.viewType==='kanban'?(this.options.kanban_view_ref&&JSON.parse(this.options.kanban_view_ref)||false):false;const searchviewId=this.options.searchViewId||false;return this.loadViews(this.res_model,this.context,[[viewRefID,this.viewType],[searchviewId,'search']],{load_filters:true}).then(this.setup.bind(this)).then(function(fragment){self.opened().then(function(){dom.append(self.$el,fragment,{callbacks:[{widget:self.viewController}],in_DOM:true,});self.set_buttons(self.__buttons);});return _super();});},setup:function(fieldsViews){var self=this;var fragment=document.createDocumentFragment();var domain=this.domain;if(this.initialIDs){domain=domain.concat([['id','in',this.initialIDs]]);}
var ViewClass=view_registry.get(this.viewType);var viewOptions={};var selectCreateController;if(this.viewType==='list'){_.extend(viewOptions,{hasSelectors:!this.options.disable_multiple_selection,readonly:true,},this.options.list_view_options);selectCreateController=select_create_controllers_registry.SelectCreateListController;}
if(this.viewType==='kanban'){_.extend(viewOptions,{noDefaultGroupby:true,selectionMode:this.options.selectionMode||false,});selectCreateController=select_create_controllers_registry.SelectCreateKanbanController;}
var view=new ViewClass(fieldsViews[this.viewType],_.extend(viewOptions,{action:{controlPanelFieldsView:fieldsViews.search,help:markup(_.str.sprintf("<p>%s</p>",_.escape(_t("No records found!")))),},action_buttons:false,dynamicFilters:this.options.dynamicFilters,context:this.context,domain:domain,modelName:this.res_model,withBreadcrumbs:false,withSearchPanel:false,}));view.setController(selectCreateController);return view.getController(this).then(function(controller){self.viewController=controller;self._prepareButtons();return self.viewController.appendTo(fragment);}).then(function(){return fragment;});},close:function(){this._super.apply(this,arguments);this.on_closed();},create_edit_record:function(){var self=this;var dialog=new FormViewDialog(this,_.extend({},this.options,{on_saved:function(record){var values=[{id:record.res_id,display_name:record.data.display_name||record.data.name,}];self.on_selected(values);},})).open();dialog.on('closed',this,this.close);return dialog;},_focusOnClose:function(){var isFocusSet=false;this.trigger_up('form_dialog_discarded',{callback:function(isFocused){isFocusSet=isFocused;},});return isFocusSet;},_prepareButtons:function(){this.__buttons=[{text:_t("Cancel"),classes:'btn-secondary o_form_button_cancel',close:true,hotkey:'z'}];if(!this.options.no_create){this.__buttons.unshift({text:_t("Create"),classes:'btn-primary',click:this.create_edit_record.bind(this),hotkey:'c'});}
if(!this.options.disable_multiple_selection){this.__buttons.unshift({text:_t("Select"),classes:'btn-primary o_select_button',disabled:true,close:true,hotkey:'v',click:async()=>{const values=await this.viewController.getSelectedRecordsWithDomain();this.on_selected(values);},});}},});__exports[Symbol.for("default")]={FormViewDialog:FormViewDialog,SelectCreateDialog:SelectCreateDialog,};return __exports;});odoo.define(`web.view_dialogs`,async function(require){return require('@web/legacy/js/views/view_dialogs')[Symbol.for("default")];});;

/* /web/static/src/legacy/js/views/view_registry.js */
odoo.define('web.view_registry',function(require){"use strict";var Registry=require('web.Registry');return new Registry();});odoo.define('web._view_registry',function(require){"use strict";var FormView=require('web.FormView');var KanbanView=require('web.KanbanView');var ListView=require('web.ListView');var view_registry=require('web.view_registry');view_registry.add('form',FormView).add('list',ListView).add('kanban',KanbanView);});;

/* /web/static/src/legacy/js/views/view_utils.js */
odoo.define('@web/legacy/js/views/view_utils',async function(require){'use strict';let __exports={};const dom=require('web.dom');const utils=require('web.utils');var viewUtils={getGroupByField:function(groupedBy){return groupedBy&&groupedBy.split(':')[0];},getGroupValue:function(group,groupedBy){var groupedByField=group.fields[this.getGroupByField(groupedBy)];switch(groupedByField.type){case'many2one':return group.res_id||false;case'selection':var descriptor=_.find(groupedByField.selection,function(option){return option[1]===group.value;});return descriptor&&descriptor[0];case'char':case'boolean':return group.value;case'date':case'datetime':const[format,granularity]=groupedByField.type==='date'?["YYYY-MM-DD",'day']:["YYYY-MM-DD HH:mm:ss",'second'];return group.range[groupedBy]?moment.utc(group.range[groupedBy].to).subtract(1,granularity).format(format):false;default:return false;}},isQuickCreateEnabled:function(list){var groupByField=list.groupedBy[0]&&viewUtils.getGroupByField(list.groupedBy[0]);if(!groupByField){return false;}
var dateTypes=['date','datetime'];if(!list.fields[groupByField].readonly&&_.contains(dateTypes,list.fields[groupByField].type)){return list.fieldsInfo&&list.fieldsInfo[list.viewType][groupByField]&&list.fieldsInfo[list.viewType][groupByField].allowGroupRangeValue;}
var availableTypes=['char','boolean','many2one','selection'];return _.contains(availableTypes,list.fields[groupByField].type);},parseArch:function(arch){var doc=$.parseXML(arch).documentElement;var stripWhitespaces=doc.nodeName.toLowerCase()!=='kanban';return utils.xml_to_json(doc,stripWhitespaces);},renderButtonFromNode:function(node,options){var btnOptions={attrs:_.omit(node.attrs,'icon','string','type','attrs','modifiers','options','effect'),icon:node.attrs.icon,};if(options&&options.extraClass){var classes=btnOptions.attrs.class?btnOptions.attrs.class.split(' '):[];btnOptions.attrs.class=_.uniq(classes.concat(options.extraClass.split(' '))).join(' ');}
var str=(node.attrs.string||'').replace(/_/g,'');if(str){if(options&&options.textAsTitle){btnOptions.attrs.title=str;}else{btnOptions.text=str;}}
return dom.renderButton(btnOptions);},};__exports[Symbol.for("default")]=viewUtils;return __exports;});odoo.define(`web.viewUtils`,async function(require){return require('@web/legacy/js/views/view_utils')[Symbol.for("default")];});;

/* /web/static/src/legacy/js/widgets/data_export.js */
odoo.define('web.DataExport',function(require){"use strict";var config=require('web.config');var core=require('web.core');var Dialog=require('web.Dialog');var data=require('web.data');var framework=require('web.framework');var pyUtils=require('web.py_utils');var QWeb=core.qweb;var _t=core._t;var DataExport=Dialog.extend({template:'ExportDialog',events:{'change .o_exported_lists_select':'_onChangeExportList','change .o_import_compat input':'_onChangeCompatibleInput','click .o_add_field':'_onClickAddField','click .o_delete_exported_list':'_onClickDeleteExportListBtn','click .o_expand':'_onClickExpand','click .o_remove_field':'_onClickRemoveField','click .o_save_list .o_save_list_btn':'_onClickSaveListBtn','click .o_save_list .o_cancel_list_btn':'_resetTemplateField','click .o_export_tree_item':'_onClickTreeItem','dblclick .o_export_tree_item:not(.haschild)':'_onDblclickTreeItem','keydown .o_export_tree_item':'_onKeydownTreeItem','keydown .o_save_list_name':'_onKeydownSaveList','input .o_export_search_input':'_onSearchInput',},init:function(parent,record,defaultExportFields,groupedBy,activeDomain,idsToExport){var options={title:_t("Export Data"),buttons:[{text:_t("Export"),click:this._onExportData,classes:'btn-primary'},{text:_t("Close"),close:true},],fullscreen:config.device.isMobile,};this._super(parent,options);this.records={};this.record=record;this.defaultExportFields=defaultExportFields;this.groupby=groupedBy;this.exports=new data.DataSetSearch(this,'ir.exports',this.record.getContext());this.rowIndex=0;this.rowIndexLevel=0;this.isCompatibleMode=false;this.domain=activeDomain||this.record.domain;this.idsToExport=activeDomain?false:idsToExport;},start:function(){var self=this;var proms=[this._super.apply(this,arguments)];this.$modal.find('.modal-content').css('height','100%');this.$fieldsList=this.$('.o_fields_list');proms.push(this._rpc({route:'/web/export/formats'}).then(doSetupExportFormats));proms.push(this._onChangeCompatibleInput().then(function(){_.each(self.defaultExportFields,function(field){var record=self.records[field];self._addField(record.id,record.string);});}));proms.push(this._showExportsList());this.opened().then(function(){self.$('.o_fields_list').sortable({axis:'y',cursor:'grabbing',handle:'.o_short_field',forcePlaceholderSize:true,placeholder:'o-field-placeholder bg-light border border-primary',update:self.proxy('_resetTemplateField'),});});return Promise.all(proms);function doSetupExportFormats(formats){var $fmts=self.$('.o_export_format');_.each(formats,function(format){var $radio=$('<input/>',{type:'radio',value:format.tag,name:'o_export_format_name',class:'form-check-input',id:'o_radio'+format.label});var $label=$('<label/>',{html:format.label,class:'form-check-label',for:'o_radio'+format.label});if(format.error){$radio.prop('disabled',true);$label.html(_.str.sprintf("%s — %s",format.label,format.error));}
$fmts.append($("<div class='radio form-check-inline ps-4'></div>").append($radio,$label));});self.$exportFormatInputs=$fmts.find('input');self.$exportFormatInputs.filter(':enabled').first().prop('checked',true);}},export(){let exportedFields=this.defaultExportFields.map(field=>({name:field,label:this.record.fields[field].string,store:this.record.fields[field].store,type:this.record.fields[field].type,}));this._exportData(exportedFields,'xlsx',false);},_addField:function(fieldID,label){var $fieldList=this.$('.o_fields_list');if(!$fieldList.find(".o_export_field[data-field_id='"+fieldID+"']").length){$fieldList.append($('<li>',{'class':'o_export_field','data-field_id':fieldID}).append($('<span>',{'class':"fa fa-sort o_short_field mx-1"}),label.trim(),$('<span>',{'class':'o_remove_field cursor-pointer fa fa-trash m-1 float-end ','title':_t("Remove field")})));}},_exportData(exportedFields,exportFormat,idsToExport){if(_.isEmpty(exportedFields)){Dialog.alert(this,_t("Please select fields to export..."));return;}
if(this.isCompatibleMode){exportedFields.unshift({name:'id',label:_t('External ID')});}
framework.blockUI();this.getSession().get_file({url:'/web/export/'+exportFormat,data:{data:JSON.stringify({model:this.record.model,fields:exportedFields,ids:idsToExport,domain:this.domain,groupby:this.groupby,context:pyUtils.eval('contexts',[this.record.getContext()]),import_compat:this.isCompatibleMode,})},complete:framework.unblockUI,error:(error)=>this.call('crash_manager','rpc_error',error),});},_getFields:function(){var exportFields=this.$('.o_export_field').map(function(){return $(this).data('field_id');}).get();if(exportFields.length===0){Dialog.alert(this,_t("Please select fields to save export list..."));}
return exportFields;},_onExpandAction:function(record){var self=this;if(!record.children){return;}
var model=record.params.model;var prefix=record.params.prefix;var name=record.params.name;var excludeFields=[];if(record.relation_field){excludeFields.push(record.relation_field);}
if(!record.loaded){this._rpc({route:'/web/export/get_fields',params:{model:model,prefix:prefix,parent_name:name,import_compat:this.isCompatibleMode,parent_field_type:record.field_type,parent_field:record.params.parent_field,exclude:excludeFields,},}).then(function(results){record.loaded=true;self._onShowData(results,record.id);});}else{this._showContent(record.id);}},_onShowData:function(records,expansion){var self=this;if(expansion){this.$('.o_export_tree_item[data-id="'+expansion+'"]').addClass('show').find('.o_expand_parent').toggleClass('fa-chevron-right fa-chevron-down').next().after(QWeb.render('Export.TreeItems',{fields:records,debug:config.isDebug()}));}else{this.$('.o_left_field_panel').empty().append($('<div/>').addClass('o_field_tree_structure my-2').append(QWeb.render('Export.TreeItems',{fields:records,debug:config.isDebug()})));}
_.extend(this.records,_.object(_.pluck(records,'id'),records));this.$records=this.$('.o_export_tree_item');this.$records.each(function(i,el){var $el=$(el);$el.find('.o_tree_column').first().toggleClass('o_required fw-bolder',!!self.records[$el.data('id')].required);});},_addNewTemplate:function(){this.$('.o_exported_lists').addClass('d-none');this.$(".o_save_list").show().find(".o_save_list_name").val("").focus();},_resetTemplateField:function(){this.$('.o_exported_lists_select').val("");this.$('.o_delete_exported_list').addClass('d-none');this.$('.o_exported_lists').removeClass('d-none');this.$(".o_save_list").hide().find(".o_save_list_name").val("");},_showContent:function(fieldID){var $item=this.$('.o_export_tree_item[data-id="'+fieldID+'"]');$item.toggleClass('show');var isOpen=$item.hasClass('show');$item.children('.o_expand_parent').toggleClass('fa-chevron-down',!!isOpen).toggleClass('fa-chevron-right',!isOpen);var $childField=$item.find('.o_export_tree_item');var childLength=(fieldID.split('/')).length+1;for(var i=0;i<$childField.length;i++){var $child=$childField.eq(i);if(!isOpen){$child.hide();}else if(childLength===$childField.eq(i).data('id').split('/').length){if($child.hasClass('show')){$child.removeClass('show');$child.children('.o_expand_parent').removeClass('fa-chevron-down').addClass('fa-chevron-right');}
$child.show();}}},_showExportsList:function(){var self=this;if(this.$('.o_exported_lists_select').is(':hidden')){this.$('.o_exported_lists').show();return Promise.resolve();}
return this._rpc({model:'ir.exports',method:'search_read',fields:['name'],domain:[['resource','=',this.record.model]]}).then(function(exportList){self.$('.o_exported_lists').append(QWeb.render('Export.SavedList',{existing_exports:exportList,}));});},_onChangeExportList:function(){var self=this;var exportID=this.$('.o_exported_lists_select option:selected').val();this.$('.o_delete_exported_list').toggleClass('d-none',!exportID);if(exportID&&exportID!=='new_template'){this.$('.o_fields_list').empty();this._rpc({route:'/web/export/namelist',params:{model:this.record.model,export_id:parseInt(exportID,10),},}).then(function(fieldList){_.each(fieldList,function(field){self._addField(field.name,field.label);});});}else if(exportID==='new_template'){self._addNewTemplate();}},_onChangeCompatibleInput:function(){var self=this;this.isCompatibleMode=this.$('.o_import_compat input').is(':checked');this.$('.o_field_tree_structure').remove();this._resetTemplateField();return this._rpc({route:'/web/export/get_fields',params:{model:this.record.model,import_compat:this.isCompatibleMode,},}).then(function(records){var compatibleFields=_.map(records,function(record){return record.id;});self._onShowData(records);self.$('.o_fields_list').empty();const forceDefaultExportFields=records.filter(r=>r.default_export).map(r=>r.id);_.chain(self.$fieldsList.find('.o_export_field')).map(function(field){return $(field).data('field_id');}).union(forceDefaultExportFields).union(self.defaultExportFields).intersection(compatibleFields).uniq().each(function(field){var record=_.find(records,function(rec){return rec.id===field;});self._addField(record.id,record.string);});self.$('#o-export-search-filter').val('');});},_onClickAddField:function(ev){ev.stopPropagation();var $field=$(ev.currentTarget);this._resetTemplateField();this._addField($field.closest('.o_export_tree_item').data('id'),$field.closest('.o_tree_column').text());},_onClickDeleteExportListBtn:function(){var self=this;var selectExp=this.$('.o_exported_lists_select option:selected');var options={confirm_callback:function(){if(selectExp.val()){self.exports.unlink([parseInt(selectExp.val(),10)]);selectExp.remove();if(self.$('.o_exported_lists_select option').length<=1){self.$('.o_exported_lists').hide();}}}};Dialog.confirm(this,_t("Do you really want to delete this export template?"),options);},_onClickExpand:function(ev){this._onExpandAction(this.records[$(ev.target).closest('.o_export_tree_item').data('id')]);},_onClickRemoveField:function(ev){$(ev.currentTarget).closest('.o_export_field').remove();this._resetTemplateField();},_onClickSaveListBtn:function(){var self=this;var $saveList=this.$('.o_save_list');var value=$saveList.find('input').val();if(!value){Dialog.alert(this,_t("Please enter save field list name"));return;}
var fields=this._getFields();if(fields.length===0){return;}
$saveList.hide();this.exports.create({name:value,resource:this.record.model,export_fields:_.map(fields,function(field){return[0,0,{name:field}];}),}).then(function(exportListID){if(!exportListID){return;}
var $select=self.$('.o_exported_lists_select');if($select.length===0||$select.is(':hidden')){self._showExportsList();}
$select.append(new Option(value,exportListID));self.$('.o_exported_lists').removeClass('d-none');$select.val(exportListID);});},_onClickTreeItem:function(ev){ev.stopPropagation();var $elem=$(ev.currentTarget);var rowIndex=$elem.prevAll('.o_export_tree_item').length;var rowIndexLevel=$elem.parents('.o_export_tree_item').length;if(ev.shiftKey&&rowIndexLevel===this.rowIndexLevel){var minIndex=Math.min(rowIndex,this.rowIndex);var maxIndex=Math.max(rowIndex,this.rowIndex);this.$records.filter(function(){return($elem.parent()[0]===$(this).parent()[0]);}).slice(minIndex,maxIndex+1).addClass('o_selected').filter(':not(:last)').each(processChildren);}
this.rowIndex=rowIndex;this.rowIndexLevel=rowIndexLevel;if(ev.ctrlKey){$elem.toggleClass('o_selected').focus();}else if(ev.shiftKey){$elem.addClass('o_selected').focus();}else{this.$('.o_selected').removeClass('o_selected');$elem.addClass('o_selected').focus();}
function processChildren(){var $child=$(this);if($child.hasClass('show')){$child.children('.o_export_tree_item').addClass('o_selected').each(processChildren);}}},_onExportData(){let exportedFields=this.$('.o_export_field').map((i,field)=>({name:$(field).data('field_id'),label:field.textContent,})).get();let exportFormat=this.$exportFormatInputs.filter(':checked').val();this._exportData(exportedFields,exportFormat,this.idsToExport);},_onDblclickTreeItem:function(ev){var self=this;this._resetTemplateField();function addElement(el){self._addField(el.getAttribute('data-id'),el.querySelector('.o_tree_column').textContent);}
var target=ev.currentTarget;target.classList.remove('o_selected');[].reverse.call($(target).parents('.o_export_tree_item')).each(function(){addElement(this);});addElement(target);},_onKeydownSaveList:function(ev){if(ev.keyCode===$.ui.keyCode.ENTER){this._onClickSaveListBtn();}},_onKeydownTreeItem:function(ev){ev.stopPropagation();var $el=$(ev.currentTarget);var record=this.records[$el.data('id')];switch(ev.keyCode||ev.which){case $.ui.keyCode.LEFT:if($el.hasClass('show')){this._onExpandAction(record);}
break;case $.ui.keyCode.RIGHT:if(!$el.hasClass('show')){this._onExpandAction(record);}
break;case $.ui.keyCode.UP:var $prev=$el.prev('.o_export_tree_item');if($prev.length===1){while($prev.hasClass('show')){$prev=$prev.children('.o_export_tree_item').last();}}else{$prev=$el.parent('.o_export_tree_item');if($prev.length===0){break;}}
$el.removeClass('o_selected').blur();$prev.addClass("o_selected").focus();break;case $.ui.keyCode.DOWN:var $next;if($el.hasClass('show')){$next=$el.children('.o_export_tree_item').first();}else{$next=$el.next('.o_export_tree_item');if($next.length===0){$next=$el.parent('.o_export_tree_item').next('.o_export_tree_item');if($next.length===0){break;}}}
$el.removeClass('o_selected').blur();$next.addClass('o_selected').focus();break;}},_onSearchInput:function(ev){var searchText=$(ev.currentTarget).val().trim().toUpperCase();if(!searchText){this.$('.o_no_match').remove();this.$(".o_export_tree_item").show();this.$(".o_export_tree_item.haschild:not(.show) .o_export_tree_item").hide();return;}
var matchItems=this.$(".o_tree_column").filter(function(){var title=this.getAttribute('title');return this.innerText.toUpperCase().indexOf(searchText)>=0||title&&title.toUpperCase().indexOf(searchText)>=0;}).parent();this.$(".o_export_tree_item").hide();if(matchItems.length){this.$('.o_no_match').remove();_.each(matchItems,function(col){var $col=$(col);$col.show();$col.parents('.haschild.show').show();if(!$col.parent().hasClass('show')&&!$col.parent().hasClass('o_field_tree_structure')){$col.hide();}});}else if(!this.$('.o_no_match').length){this.$(".o_field_tree_structure").append($("<h3/>",{class:'text-center text-muted mt-5 o_no_match',text:_t("No match found.")}));}},});return DataExport;});;

/* /web/static/src/legacy/js/widgets/date_picker.js */
odoo.define('web.datepicker',function(require){"use strict";var core=require('web.core');var field_utils=require('web.field_utils');var time=require('web.time');var Widget=require('web.Widget');var _t=core._t;var DateWidget=Widget.extend({template:"web.datepicker",type_of_date:"date",events:{'error.datetimepicker':'errorDatetime','change .o_datepicker_input':'changeDatetime','click input':'_onInputClicked','input input':'_onInput','keydown':'_onKeydown','show.datetimepicker':'_onDateTimePickerShow','hide.datetimepicker':'_onDateTimePickerHide',},init:function(parent,options){this._super.apply(this,arguments);this.name=parent.name;this.options=_.extend({locale:moment.locale(),format:this.type_of_date==='datetime'?time.getLangDatetimeFormat():time.getLangDateFormat(),minDate:moment({y:1000}),maxDate:moment({y:9999,M:11,d:31}),useCurrent:false,icons:{time:'fa fa-clock-o',date:'fa fa-calendar',up:'fa fa-chevron-up',down:'fa fa-chevron-down',previous:'fa fa-chevron-left',next:'fa fa-chevron-right',today:'fa fa-calendar-check-o',clear:'fa fa-trash',close:'fa fa-check primary',},calendarWeeks:true,buttons:{showToday:false,showClear:false,showClose:false,},widgetParent:'body',keyBinds:null,},options||{});this.__libInput=0;this.__isOpen=false;},start:function(){this.$input=this.$('input.o_datepicker_input');this.__libInput++;this.$el.datetimepicker(this.options);this.__libInput--;this._setReadonly(false);},destroy:function(){if(this._onScroll){window.removeEventListener('wheel',this._onScroll,true);}
this.__libInput++;this.$el.datetimepicker('destroy');this.__libInput--;this._super.apply(this,arguments);},changeDatetime:function(){if(this.__libInput>0){if(this.options.warn_future){this._warnFuture(this.getValue());}
this.trigger("datetime_changed");return;}
var oldValue=this.getValue();if(this.isValid()){this._setValueFromUi();var newValue=this.getValue();var hasChanged=!oldValue!==!newValue;if(oldValue&&newValue){var formattedOldValue=oldValue.format(time.getLangDatetimeFormat());var formattedNewValue=newValue.format(time.getLangDatetimeFormat());if(formattedNewValue!==formattedOldValue){hasChanged=true;}}
if(hasChanged){if(this.options.warn_future){this._warnFuture(newValue);}
this.trigger("datetime_changed");}}else{var formattedValue=oldValue?this._formatClient(oldValue):null;this.$input.val(formattedValue);}},errorDatetime:function(e){return false;},focus:function(){this.__libInput++;this.$input.focus();this.__libInput--;},getValue:function(){var value=this.get('value');return value&&value.clone();},isValid:function(){var value=this.$input.val();if(value===""){return true;}else{try{this._parseClient(value);return true;}catch(_e){return false;}}},maxDate:function(date){this.__libInput++;this.$el.datetimepicker('maxDate',date||null);this.__libInput--;},minDate:function(date){this.__libInput++;this.$el.datetimepicker('minDate',date||null);this.__libInput--;},setValue:function(value){this.set({'value':value});var formatted_value=value?this._formatClient(value):null;this.$input.val(formatted_value);this._setLibInputValue(value);},_warnFuture:function(currentDate){if(!this.$warning){this.$warning=$('<span>',{class:'fa fa-exclamation-triangle o_tz_warning o_datepicker_warning',});var title=_t("This date is in the future. Make sure this is what you expect.");this.$warning.attr('title',title);this.$input.after(this.$warning);}
if(currentDate&&currentDate.format('YYYY-MM-DD')>moment().format('YYYY-MM-DD')){this.$warning.show();}else{this.$warning.hide();}},_formatClient:function(v){return field_utils.format[this.type_of_date](v,null,{timezone:false});},_parseClient:function(v){return field_utils.parse[this.type_of_date](v,null,{timezone:false});},_setLibInputValue:function(value){this.__libInput++;this.$el.datetimepicker('date',value||null);this.__libInput--;},_setReadonly:function(readonly){this.readonly=readonly;this.$input.prop('readonly',this.readonly);},_setValueFromUi:function(){var value=this.$input.val()||false;this.setValue(this._parseClient(value));},_onDateTimePickerHide:function(){this.__isOpen=false;this.changeDatetime();if(this._onScroll){window.removeEventListener('wheel',this._onScroll,true);}
this.changeDatetime();},_onDateTimePickerShow:function(){this.__isOpen=true;if(this.$input.val().length!==0&&this.isValid()){this.$input.select();}
var self=this;this._onScroll=function(ev){if(ev.target!==self.$input.get(0)){self.__libInput++;self.$el.datetimepicker('hide');self.__libInput--;}};window.addEventListener('wheel',this._onScroll,true);},_onKeydown:function(ev){if(ev.which===$.ui.keyCode.ESCAPE){if(this.__isOpen){ev.stopImmediatePropagation();this.__libInput++;this.$el.datetimepicker('hide');this.__libInput--;this.focus();}}},_onInput:function(ev){if(this.__libInput>0){ev.stopImmediatePropagation();}},_onInputClicked:function(){this.__libInput++;this.$el.datetimepicker('toggle');this.__libInput--;this.focus();},});var DateTimeWidget=DateWidget.extend({type_of_date:"datetime",init:function(parent,options){this._super(parent,_.extend({buttons:{showToday:false,showClear:false,showClose:true,},},options||{}));},});return{DateWidget:DateWidget,DateTimeWidget:DateTimeWidget,};});;

/* /web/static/src/legacy/js/widgets/domain_selector_dialog.js */
odoo.define("web.DomainSelectorDialog",function(require){"use strict";var core=require("web.core");var Dialog=require("web.Dialog");var Domain=require("web.Domain");var DomainSelector=require("web.DomainSelector");var _t=core._t;return Dialog.extend({custom_events:_.extend({},Dialog.prototype.custom_events,{domain_changed:"_onDomainChange",}),init:function(parent,model,domain,options){this.model=model;this.newDomain=null;this.options=_.extend({readonly:true,debugMode:false,},options||{});var buttons;if(this.options.readonly){buttons=[{text:_t("Close"),close:true},];}else{buttons=[{text:_t("Save"),classes:"btn-primary",close:true,click:function(){this.trigger_up("domain_selected",{domain:this.newDomain!==null?this.newDomain:this.domainSelector.getDomain(),});}},{text:_t("Discard"),close:true},];}
this._super(parent,_.extend({},{title:_t("Domain"),buttons:buttons,},options||{}));this.domainSelector=new DomainSelector(this,model,Domain.prototype.arrayToString(domain),options);},start:function(){var self=this;this.opened().then(function(){self.$el.css('overflow','visible').closest('.modal-dialog').css('height','auto');});return Promise.all([this._super.apply(this,arguments),this.domainSelector.appendTo(this.$el)]);},_onDomainChange:function(ev){ev.stopPropagation();this.newDomain=ev.data.domain;},});});;

/* /web/static/src/legacy/js/widgets/domain_selector.js */
odoo.define("web.DomainSelector",function(require){"use strict";var core=require("web.core");var datepicker=require("web.datepicker");var dom=require('web.dom');var Domain=require("web.Domain");var field_utils=require("web.field_utils");var ModelFieldSelector=require("web.ModelFieldSelector");var Widget=require("web.Widget");var _t=core._t;var _lt=core._lt;var operator_mapping={"=":"=","!=":_lt("is not ="),">":">","<":"<",">=":">=","<=":"<=","ilike":_lt("contains"),"not ilike":_lt("does not contain"),"in":_lt("in"),"not in":_lt("not in"),"child_of":_lt("child of"),"parent_of":_lt("parent of"),"like":"like","not like":"not like","=like":"=like","=ilike":"=ilike","set":_lt("is set"),"not set":_lt("is not set"),};var DomainNode=Widget.extend({events:{"click .o_domain_add_node_button":"_onAddButtonClick","click .o_domain_delete_node_button":"_onDeleteButtonClick","mouseenter button":"_onButtonEntered","mouseleave button":"_onButtonLeft",},init:function(parent,model,domain,options){this._super.apply(this,arguments);this.model=model;this.options=_.extend({readonly:true,operators:null,debugMode:false,},options||{});this.readonly=this.options.readonly;this.debug=this.options.debugMode;},isValid:function(){},getDomain:function(){},_onAddButtonClick:function(e){e.preventDefault();e.stopPropagation();this.trigger_up("add_node_clicked",{newBranch:!!$(e.currentTarget).data("branch"),child:this});},_onDeleteButtonClick:function(e){e.preventDefault();e.stopPropagation();this.trigger_up("delete_node_clicked",{child:this});},_onButtonEntered:function(e){e.preventDefault();e.stopPropagation();var $target=$(e.currentTarget);this.$el.toggleClass("o_hover_btns",$target.hasClass("o_domain_delete_node_button"));this.$el.toggleClass("o_hover_add_node",$target.hasClass("o_domain_add_node_button"));this.$el.toggleClass("o_hover_add_inset_node",!!$target.data("branch"));},_onButtonLeft:function(e){e.preventDefault();e.stopPropagation();this.$el.removeClass("o_hover_btns o_hover_add_node o_hover_add_inset_node");},});var DomainTree=DomainNode.extend({template:"DomainTree",events:_.extend({},DomainNode.prototype.events,{"click .o_domain_tree_operator_selector .dropdown-item":"_onOperatorChange",}),custom_events:{"add_node_clicked":"_onNodeAdditionAsk","delete_node_clicked":"_onNodeDeletionAsk",},init:function(parent,model,domain){this._super.apply(this,arguments);var parsedDomain=this._parseDomain(domain);if(parsedDomain){this._initialize(parsedDomain);}},start:function(){this._postRender();return Promise.all([this._super.apply(this,arguments),this._renderChildrenTo(this.$childrenContainer)]);},isValid:function(){for(var i=0;i<this.children.length;i++){var cValid=this.children[i].isValid();if(!cValid){return cValid;}}
return this._isValid;},getDomain:function(){var childDomains=[];var nbChildren=0;_.each(this.children,function(child){var childDomain=child.getDomain();if(childDomain.length){nbChildren++;childDomains=childDomains.concat(child.getDomain());}});var nbChildRequired=this.operator==="!"?1:2;var operators=_.times(nbChildren-nbChildRequired+1,_.constant(this.operator));return operators.concat(childDomains);},_addChild:function(domain,afterNode){var i=afterNode?_.indexOf(this.children,afterNode):this.children.length;if(i<0)return false;this.children.splice(i+1,0,instantiateNode(this,this.model,domain,this.options));this.trigger_up("domain_changed",{child:this});return true;},_addFlattenedChildren:function(domain){var node=instantiateNode(this,this.model,domain,this.options);if(node===null){return;}
if(!node.children||node.operator!==this.operator){this.children.push(node);return;}
_.each(node.children,(function(child){child.setParent(this);this.children.push(child);}).bind(this));node.destroy();},_changeOperator:function(operator,silent){this.operator=operator;if(!silent)this.trigger_up("domain_changed",{child:this});},_initialize:function(domain){this._isValid=true;this.operator=domain[0];this.children=[];if(domain.length<=1){return;}
var nbLeafsToFind=1;for(var i=1;i<domain.length;i++){if(domain[i]==="&"||domain[i]==="|"){nbLeafsToFind++;}else if(domain[i]!=="!"){nbLeafsToFind--;}
if(!nbLeafsToFind){var partLeft=domain.slice(1,i+1);var partRight=domain.slice(i+1);if(partLeft.length){this._addFlattenedChildren(partLeft);}
if(partRight.length){this._addFlattenedChildren(partRight);}
break;}}
this._isValid=(nbLeafsToFind===0);if(this.operator==="!"){this.children[0].noControlPanel=true;}},_postRender:function(){this.$childrenContainer=this.$("> .o_domain_node_children_container");},_removeChild:function(oldChild){var i=_.indexOf(this.children,oldChild);if(i<0)return false;this.children[i].destroy();this.children.splice(i,1);this.trigger_up("domain_changed",{child:this});return true;},_renderChildrenTo:function($to){var $div=$("<div/>");const children=this.children;return Promise.all(_.map(children,(function(child){return child.appendTo($div);}).bind(this))).then((function(){_.each(children,function(child){child.$el.appendTo($to);});}).bind(this));},_parseDomain:function(domain){var parsedDomain=false;try{parsedDomain=Domain.prototype.stringToArray(domain);this.invalidDomain=false;}catch(_err){this.invalidDomain=true;this.children=[];}
return parsedDomain;},_onOperatorChange:function(e){e.preventDefault();e.stopPropagation();this._changeOperator($(e.target).data("operator"));},_onNodeAdditionAsk:function(e){var domain=this.options.default||[["id","=",1]];if(e.data.newBranch){domain=[this.operator==="&"?"|":"&"].concat(domain).concat(domain);}
if(this._addChild(domain,e.data.child)){e.stopPropagation();}},_onNodeDeletionAsk:function(e){if(this._removeChild(e.data.child)){e.stopPropagation();}},});var DomainSelector=DomainTree.extend({template:"DomainSelector",events:_.extend({},DomainTree.prototype.events,{"click .o_domain_add_first_node_button":"_onAddFirstButtonClick","change .o_domain_debug_input":"_onDebugInputChange",}),custom_events:_.extend({},DomainTree.prototype.custom_events,{domain_changed:"_onDomainChange",}),init(parent,model,domain){this._super(...arguments);this.rawDomain=domain;this._redrawId=0;},start:function(){var self=this;return this._super.apply(this,arguments).then(function(){if(self.invalidDomain){var msg=_t("This domain is not supported.");self.$el.html(msg);}});},on_attach_callback(){let $modalBodyEl=this.$el.closest('.modal-body');if($modalBodyEl.length!==0){$modalBodyEl.css('overflow','visible');}},setDomain:function(domain){if(domain===Domain.prototype.arrayToString(this.getDomain())){return Promise.resolve();}
var parsedDomain=this._parseDomain(domain);if(parsedDomain){return this._redraw(parsedDomain);}},_initialize:function(domain){if(domain.length>1){Domain.prototype.normalizeArray(domain);}else{domain=["&"].concat(domain);}
return this._super(domain);},_postRender:function(){this._super.apply(this,arguments);this.$debugInput=this.$(".o_domain_debug_input");if(this.$debugInput.length){this.$debugInput.val(this.rawDomain);dom.autoresize(this.$debugInput);}
if(!this._isValid){this.displayNotification({message:_t("Domain not supported"),type:'danger'});}},_redraw:function(domain){const _redrawId=++this._redrawId;var oldChildren=this.children.slice();this._initialize(domain||this.getDomain());return this._renderChildrenTo($("<div/>")).then((function(){if(_redrawId!==this._redrawId){return;}
_.each(oldChildren,function(child){child.destroy();});this.renderElement();this._postRender();_.each(this.children,(function(child){child.$el.appendTo(this.$childrenContainer);}).bind(this));}).bind(this));},_onAddFirstButtonClick:function(){this._addChild(this.options.default||[["id","=",1]]);},_onDebugInputChange:function(e){const rawDomain=e.currentTarget.value;try{Domain.prototype.stringToArray(rawDomain);}catch(_err){this.displayNotification({title:_t("Syntax error"),message:_t("Domain not properly formed"),type:'danger'});return;}
this.trigger_up("domain_changed",{child:this,noRedraw:true,domain:rawDomain,debug:true,});},_onDomainChange:function(e){e.data.domain=e.data.domain||this.getDomain();this.rawDomain=Domain.prototype.arrayToString(e.data.domain);if(!e.data.noRedraw){this._redraw();}},});var DomainLeaf=DomainNode.extend({template:"DomainLeaf",events:_.extend({},DomainNode.prototype.events,{"change .o_domain_leaf_operator_select":"_onOperatorSelectChange","change .o_domain_leaf_value_input":"_onValueInputChange","click .o_domain_leaf_value_add_tag_button":"on_add_tag","keyup .o_domain_leaf_value_tags input":"on_add_tag","click .o_domain_leaf_value_remove_tag_button":"on_remove_tag",}),custom_events:{"field_chain_changed":"_onFieldChainChange",},init:function(parent,model,domain,options){this._super.apply(this,arguments);var currentDomain=Domain.prototype.stringToArray(domain);this.chain=currentDomain[0][0];this.operator=currentDomain[0][1];this.value=currentDomain[0][2];this.operator_mapping=operator_mapping;},willStart:function(){var defs=[this._super.apply(this,arguments)];this.fieldSelector=new ModelFieldSelector(this,this.model,this.chain!==undefined?this.chain.toString().split("."):[],this.options);defs.push(this.fieldSelector.appendTo($("<div/>")).then((function(){var wDefs=[];if(!this.readonly){var selectedField=this.fieldSelector.getSelectedField()||{};this.operators=this._getOperatorsFromType(selectedField.type);if(_.contains(["child_of","parent_of","like","not like","=like","=ilike"],this.operator)){this.operators[this.operator]=operator_mapping[this.operator];}else if(!this.operators[this.operator]){this.operators[this.operator]="?";}
this.selectionChoices=null;if(selectedField.type==="boolean"){this.selectionChoices=[["1",_t("set (true)")],["0",_t("not set (false)")]];}else if(selectedField.type==="selection"){this.selectionChoices=selectedField.selection;}
this.displayValue=this.value;try{if(selectedField&&!selectedField.relation&&!_.isArray(this.value)){this.displayValue=field_utils.format[selectedField.type](this.value,selectedField);}}catch(_err){}
this.displayOperator=this.operator;if(selectedField.type==="boolean"){this.displayValue=this.value?"1":"0";}else if((this.operator==="!="||this.operator==="=")&&this.value===false){this.displayOperator=this.operator==="!="?"set":"not set";}
if(_.contains(["date","datetime"],selectedField.type)){this.valueWidget=new(selectedField.type==="datetime"?datepicker.DateTimeWidget:datepicker.DateWidget)(this);wDefs.push(this.valueWidget.appendTo("<div/>").then((function(){this.valueWidget.$el.addClass("o_domain_leaf_value_input");this.valueWidget.setValue(moment(this.value));this.valueWidget.on("datetime_changed",this,function(){this._changeValue(this.valueWidget.getValue());});}).bind(this)));}
return Promise.all(wDefs);}}).bind(this)));return Promise.all(defs);},start:function(){this.fieldSelector.$el.prependTo(this.$("> .o_domain_leaf_info, > .o_domain_leaf_edition"));if(!this.readonly&&this.valueWidget){this.$(".o_domain_leaf_value_input").replaceWith(this.valueWidget.$el);}
return this._super.apply(this,arguments);},isValid:function(){return this.fieldSelector&&this.fieldSelector.isValid();},getDomain:function(){return[[this.chain,this.operator,this.value]];},_changeFieldChain:function(chain,silent){this.chain=chain.join(".");this.fieldSelector.setChain(chain).then((function(){if(!this.fieldSelector.isValid())return;var selectedField=this.fieldSelector.getSelectedField()||{};var operators=this._getOperatorsFromType(selectedField.type);if(operators[this.operator]===undefined){this._changeOperator("=",true);}
this._changeValue(this.value,true);if(!silent)this.trigger_up("domain_changed",{child:this});}).bind(this));},_changeOperator:function(operator,silent){this.operator=operator;if(_.contains(["set","not set"],this.operator)){this.operator=this.operator==="not set"?"=":"!=";this.value=false;}else if(_.contains(["in","not in"],this.operator)){this.value=_.isArray(this.value)?this.value:this.value?(""+this.value).split(","):[];}else{if(_.isArray(this.value)){this.value=this.value.join(",");}
this._changeValue(this.value,true);}
if(!silent)this.trigger_up("domain_changed",{child:this});},_changeValue:function(value,silent){var couldNotParse=false;var selectedField=this.fieldSelector.getSelectedField()||{};try{this.value=field_utils.parse[selectedField.type](value,selectedField);}catch(_err){this.value=value;couldNotParse=true;}
if(selectedField.type==="boolean"){if(!_.isBoolean(this.value)){this.value=!!parseFloat(this.value);}}else if(selectedField.type==="selection"){if(!_.some(selectedField.selection,(function(option){return option[0]===this.value;}).bind(this))){this.value=selectedField.selection[0][0];}}else if(_.contains(["date","datetime"],selectedField.type)){if(couldNotParse||_.isBoolean(this.value)){this.value=field_utils.parse[selectedField.type](field_utils.format[selectedField.type](moment())).toJSON();}else{this.value=this.value.toJSON();}}else{if(_.isBoolean(this.value)){this.value="";}else if(_.isObject(this.value)&&!_.isArray(this.value)){this.value=this.value.id||value||"";}}
if(!silent)this.trigger_up("domain_changed",{child:this});},_getOperatorsFromType:function(type){var operators={};switch(type){case"boolean":operators={"=":_t("is"),"!=":_t("is not"),};break;case"char":case"text":case"html":operators=_.pick(operator_mapping,"=","!=","ilike","not ilike","set","not set","in","not in");break;case"many2many":case"one2many":case"many2one":operators=_.pick(operator_mapping,"=","!=","ilike","not ilike","set","not set");break;case"integer":case"float":case"monetary":operators=_.pick(operator_mapping,"=","!=",">","<",">=","<=","ilike","not ilike","set","not set");break;case"selection":operators=_.pick(operator_mapping,"=","!=","set","not set");break;case"date":case"datetime":operators=_.pick(operator_mapping,"=","!=",">","<",">=","<=","set","not set");break;default:operators=_.extend({},operator_mapping);break;}
if(this.options.operators){operators=_.pick.apply(_,[operators].concat(this.options.operators));}
return operators;},_onOperatorSelectChange:function(e){this._changeOperator($(e.currentTarget).val());},_onValueInputChange:function(e){if(e.currentTarget!==e.target)return;this._changeValue($(e.currentTarget).val());},_onFieldChainChange:function(e){this._changeFieldChain(e.data.chain);},on_add_tag:function(e){if(e.type==="keyup"&&e.which!==$.ui.keyCode.ENTER)return;if(!_.contains(["not in","in"],this.operator))return;var values=_.isArray(this.value)?this.value.slice():[];var $input=this.$(".o_domain_leaf_value_tags input");var val=$input.val().trim();if(val&&values.indexOf(val)<0){values.push(val);_.defer(this._changeValue.bind(this,values));$input.focus();}},on_remove_tag:function(e){var values=_.isArray(this.value)?this.value.slice():[];var val=this.$(e.currentTarget).data("value");var index=values.indexOf(val);if(index>=0){values.splice(index,1);_.defer(this._changeValue.bind(this,values));}},});function instantiateNode(parent,model,domain,options){if(domain.length>1){return new DomainTree(parent,model,domain,options);}else if(domain.length===1){return new DomainLeaf(parent,model,domain,options);}
return null;}
return DomainSelector;});;

/* /web/static/src/legacy/js/widgets/iframe_widget.js */
odoo.define('web.IFrameWidget',function(require){"use strict";var Widget=require('web.Widget');var IFrameWidget=Widget.extend({tagName:'iframe',init:function(parent,url){this._super(parent);this.url=url;},start:function(){this.$el.css({height:'100%',width:'100%',border:0});this.$el.attr({src:this.url});this.$el.on("load",this._bindEvents.bind(this));return this._super();},_bindEvents:function(){this.$el.contents().click(this._onIFrameClicked.bind(this));},_onIFrameClicked:function(event){}});return IFrameWidget;});;

/* /web/static/src/legacy/js/widgets/model_field_selector.js */
odoo.define("web.ModelFieldSelector",function(require){"use strict";var core=require("web.core");var Widget=require("web.Widget");var ModelFieldSelectorPopover=require("web.ModelFieldSelectorPopover");var ModelFieldSelector=Widget.extend({template:"ModelFieldSelector",events:{},edition_events:{"focusin":"_onFocusIn","focusout":"_onFocusOut"},custom_events:{"field_selector_render":"_render"},init:function(parent,model,chain,options){this._super.apply(this,arguments);this.model=model;this.chain=chain;this.options=_.extend({order:'string',readonly:true,fields:null,debugMode:false},options||{});this.dirty=false;this.popover=new ModelFieldSelectorPopover(this,model,chain,options);if(!this.options.readonly){_.extend(this.events,this.edition_events);}},willStart:function(){return this._super.apply(this,arguments);},start:async function(){this.$value=this.$(".o_field_selector_value");this.$valid=this.$(".o_field_selector_warning");if(this.options.readonly){this.popover.prefill().then(this._render.bind(this));}
await this._super.apply(this,arguments);if(!this.options.readonly){let popoverReadyPromiseResolve;const popoverReadyPromise=new Promise((resolve)=>popoverReadyPromiseResolve=resolve);this.popover.on("field_chain_changed",undefined,(ev)=>{ev.stopPropagation();this.trigger_up("field_chain_changed",ev.data);});this.popover.appendTo($("<div/>"));this.popover.once("field_selector_started",undefined,()=>{this.$el.append(this.popover.$el);this.$popover=this.$(".o_field_selector_popover");popoverReadyPromiseResolve();});await popoverReadyPromise;}},getSelectedField:function(){return this.popover.getSelectedField();},isValid:function(){return this.popover.valid;},setChain:function(chain){return this.popover.setChain(chain).then(()=>this.chain=this.popover.chain);},_render:function(){this.chain=this.popover.chain;this.$value.html(core.qweb.render(this.template+".value",{chain:this.popover.chain,pages:this.popover.pages,}));this.$valid.toggleClass('d-none',!!this.isValid());},_onFocusIn:function(){this.popover._onFocusIn();},_onFocusOut:function(){this.popover._onFocusOut();},});return ModelFieldSelector;});;

/* /web/static/src/legacy/js/widgets/model_field_selector_popover.js */
odoo.define("web.ModelFieldSelectorPopover",function(require){"use strict";var core=require("web.core");var Widget=require("web.Widget");const{fuzzyLookup}=require('@web/core/utils/search');var _t=core._t;var modelFieldsCache={cache:{},cacheDefs:{},};core.bus.on('clear_cache',null,function(){modelFieldsCache.cache={};modelFieldsCache.cacheDefs={};});var ModelFieldSelectorPopover=Widget.extend({baseTemplate:"ModelFieldSelector",template:"ModelFieldSelector.popover",events:{"focusin":"_onFocusIn","focusout":"_onFocusOut","click .o_field_selector_close":"_onCloseClick","click .o_field_selector_prev_page":"_onPrevPageClick","click .o_field_selector_next_page":"_onNextPageClick","click li.o_field_selector_select_button":"_onLastFieldClick","change input.o_field_selector_debug":"_onDebugInputChange","keyup .o_field_selector_search > input":"_onSearchInputChange","keyup .o_field_selector_default_value_input > input":"_onDefaultValueChange","mouseover li.o_field_selector_item":"_onItemHover","keydown":"_onKeydown",},init:function(parent,model,chain,options){this._super.apply(this,arguments);this.model=model;this.chain=chain;this.options=_.extend({order:'string',filters:{},fields:null,filter:()=>true,followRelations:true,debugMode:false,showSearchInput:true,needDefaultValue:false,cancelOnEscape:false,chainedTitle:false},options||{});this.options.filters=_.extend({searchable:true,},this.options.filters);if(typeof this.options.followRelations!=='function'){this.options.followRelations=this.options.followRelations?(()=>true):(()=>false);}
this.pages=[];this.titlesNames={};this.dirty=false;this.searchValue='';this.defaultValue='';},willStart:function(){return Promise.all([this._super.apply(this,arguments),this.prefill()]);},start:function(){this.$input=this.$el.find(".o_field_selector_popover_footer > input");this.$searchInput=this.$el.find(".o_field_selector_search > input");this.$defaultValueInput=this.$el.find(".o_field_selector_default_value_input > input");this._render();return this._super.apply(this,arguments).then(()=>{this.trigger_up("field_selector_started");});},getSelectedField:function(){return _.findWhere(this.pages[this.chain.length-1],{name:_.last(this.chain)});},setChain:function(chain){if(_.isEqual(chain,this.chain)){return Promise.resolve();}
this.chain=chain;return this.prefill().then(this._render.bind(this));},open:async function(chain=[],focus=false){clearTimeout(this._hidePopoverTimeout);this.$searchInput.val('');await this.setChain(chain);this._showPopover();if(focus){this.$searchInput.focus();}},_addChainNode:function(fieldName){this.dirty=true;this.chain=this.chain.slice(0,this.pages.length-1);this.chain.push(fieldName);this.searchValue='';this.$searchInput.val('');},_getLastPageField:function(name){return _.findWhere(_.last(this.pages),{name:name,});},_getModelFieldsFromCache:function(model,filters){var self=this;var def=modelFieldsCache.cacheDefs[model];if(!def){def=modelFieldsCache.cacheDefs[model]=this._rpc({model:model,method:'fields_get',args:[false,["store","searchable","type","string","relation","selection","related"]],context:this.getSession().user_context,}).then((function(fields){modelFieldsCache.cache[model]=sortFields(fields,model,self.options.order);}).bind(this));}
return def.then((function(){return _.filter(modelFieldsCache.cache[model],function(f){return(!filters.searchable||f.searchable)&&self.options.filter(f);});}).bind(this));},_isOnDefaultValuePage:function(){return this.pages[this.pages.length-1]==='defaultValuePage';},_goToDefaultValuePage:function(name){this._validate(true);this._addChainNode(name);this.pages.push('defaultValuePage');this.$defaultValueInput.val('');this.defaultValue='';this._renderDefaultValue();},_goToNextPage:function(field){if(!_.isEqual(this._getLastPageField(field.name),field))return;this._validate(true);this._addChainNode(field.name);this._pushPageData(field.relation).then(this._render.bind(this));},_goToPrevPage:function(){if(this.pages.length<=0)return;this._validate(true);this._removeChainNode();if(this.pages.length>1){this.pages.pop();}
this._render();},_hidePopover:function(cancel=false){if(!this._isOpen)return;this._isOpen=false;this.$searchInput.parent().removeClass('d-none');this.$defaultValueInput.parent().addClass('d-none');this.$el.addClass('d-none');if(cancel){this.trigger_up("field_chain_cancel");}else if(this.dirty){this.trigger_up("field_chain_changed",{chain:this.chain,defaultValue:this.defaultValue});}
this.dirty=false;this.defaultValue='';},prefill:function(){this.pages=[];return this._pushPageData(this.model).then((function(){this._validate(true);return(this.chain.length?processChain.call(this,this.chain.slice().reverse()):Promise.resolve());}).bind(this));function processChain(chain){var fieldName=chain.pop();var field=this._getLastPageField(fieldName);if(field&&field.relation){if(chain.length){return this._pushPageData(field.relation).then(processChain.bind(this,chain));}else{return this._pushPageData(field.relation);}}else if(field&&chain.length===0){return Promise.resolve();}else if(!field&&fieldName==="1"){this._validate(true);}else if(!field&&fieldName==="0"){this._validate(true);}else{this._validate(false);}
return Promise.resolve();}},_pushPageData:function(model){var def;if(this.model===model&&this.options.fields){def=Promise.resolve(sortFields(this.options.fields,model,this.options.order));}else{def=this._getModelFieldsFromCache(model,this.options.filters);}
return def.then((function(fields){this.pages.push(fields);}).bind(this));},_removeChainNode:function(){this.dirty=true;this.chain=this.chain.slice(0,this.pages.length-1);this.chain.pop();},_getTitle:function(){var title="";if(this.pages.length>1){var prevField=_.findWhere(this.pages[this.pages.length-2],{name:(this.chain.length===this.pages.length)?this.chain[this.chain.length-2]:_.last(this.chain),});if(prevField){this.titlesNames[_.last(this.chain)]=prevField.string;title=prevField.string;}}
if(this.options.chainedTitle){title=this.chain.map((chain)=>this.titlesNames[chain]).join(' > ');}
return title;},_render:function(){this._adaptInputVisibility();var page=_.last(this.pages);this.$(".o_field_selector_popover_header .o_field_selector_title").text(this._getTitle());var lines=_.filter(page,this.options.filter);if(this.searchValue){lines=fuzzyLookup(this.searchValue,lines,(l)=>l.string);}
this.$(".o_field_selector_page").replaceWith(core.qweb.render(this.baseTemplate+".page",{lines:lines,followRelations:this.options.followRelations,debug:this.options.debugMode,}));this.$input.val(this.chain.join("."));this.trigger_up("field_selector_render");},_renderDefaultValue:function(){this._adaptInputVisibility();this.$defaultValueInput.focus();let title=this._getTitle()+'<br>'+_t("Default value");this.$(".o_field_selector_popover_header .o_field_selector_title")[0].replaceChildren(...$('<div>'+title+'</div>')[0].childNodes);this.$(".o_field_selector_page").replaceWith(core.qweb.render(this.baseTemplate+".defaultValue",{line:{string:'',description:this.defaultValue.length?_t("As a default text when no value are set"):_t("Default text is used when no values are set"),}}));this.$input.val(this.chain.join(".")+(this.defaultValue?" OR "+this.defaultValue:""));this.trigger_up("field_selector_render");},_adaptInputVisibility(){this.$searchInput.parent().toggleClass("d-none",this._isOnDefaultValuePage());this.$defaultValueInput.parent().toggleClass("d-none",!this._isOnDefaultValuePage());},_selectField:function(field){if(!_.isEqual(this._getLastPageField(field.name),field))return;this._validate(true);this._addChainNode(field.name);this._render();this._hidePopover();},_showPopover:function(){if(this._isOpen)return;this._isOpen=true;this.$el.removeClass('d-none');},_validate:function(valid){this.valid=!!valid;if(!this.valid){this.displayNotification({message:_t("Invalid field chain. You may have used a non-existing field name or followed a non-relational field."),type:'danger',});}},_onFocusIn:function(){clearTimeout(this._hidePopoverTimeout);this._showPopover();},_onFocusOut:function(){clearTimeout(this._hidePopoverTimeout);this._hidePopoverTimeout=_.defer(()=>this._hidePopover(this.options.cancelOnEscape));},_onCloseClick:function(){this._hidePopover(this.options.cancelOnEscape);},_onPrevPageClick:function(){this._goToPrevPage();},_onNextPageClick:function(e){e.stopPropagation();this._goToNextPage(this._getLastPageField($(e.currentTarget).data("name")));},_onLastFieldClick:function(e){const name=$(e.currentTarget).data("name");if(this.options.needDefaultValue&&this._isOnDefaultValuePage()){this._hidePopover();}else if(this.options.needDefaultValue){this._goToDefaultValuePage(name);}else{this._selectField(this._getLastPageField(name));}},_onDebugInputChange:function(){var userChainStr=this.$input.val();var userChain=userChainStr.split(".");if(!this.options.followRelations&&userChain.length>1){this.displayNotification({title:_t("Relation not allowed"),message:_t("You cannot follow relations for this field chain construction"),type:'danger',});userChain=[userChain[0]];}
this.setChain(userChain).then((function(){this.trigger_up("field_chain_changed",{chain:this.chain});}).bind(this));},_onSearchInputChange:function(){this.searchValue=this.$searchInput.val();this._render();},_onDefaultValueChange:function(){this.defaultValue=this.$defaultValueInput.val();if(this._isOnDefaultValuePage()){this._renderDefaultValue();}},_onItemHover:function(e){this.$("li.o_field_selector_item").removeClass("active");$(e.currentTarget).addClass("active");},_onKeydown:function(e){if(!this.$el.is(":visible"))return;var inputHasFocus=this.$input.is(":focus");let name=this.$("li.o_field_selector_item.active").data("name");switch(e.which){case $.ui.keyCode.UP:case $.ui.keyCode.DOWN:e.preventDefault();var $active=this.$("li.o_field_selector_item.active");var $to=$active[e.which===$.ui.keyCode.DOWN?"next":"prev"](".o_field_selector_item");if($to.length){$active.removeClass("active");$to.addClass("active");this.$el.focus();var $page=$to.closest(".o_field_selector_page");var full_height=$page.height();var el_position=$to.position().top;var el_height=$to.outerHeight();var current_scroll=$page.scrollTop();if(el_position<0){$page.scrollTop(current_scroll-el_height);}else if(full_height<el_position+el_height){$page.scrollTop(current_scroll+el_height);}}
break;case $.ui.keyCode.RIGHT:if(inputHasFocus)break;e.preventDefault();if(name){var field=this._getLastPageField(name);if(field.relation){this._goToNextPage(field);}else if(this.options.needDefaultValue&&!this._isOnDefaultValuePage()){this._goToDefaultValuePage(name);}}
break;case $.ui.keyCode.LEFT:{if(inputHasFocus)break;e.preventDefault();const isOnDefaultValuePage=this._isOnDefaultValuePage();this._goToPrevPage();if(isOnDefaultValuePage){this.$searchInput.focus();}
break;}
case $.ui.keyCode.ESCAPE:e.stopPropagation();this._hidePopover(this.options.cancelOnEscape);break;case $.ui.keyCode.ENTER:e.preventDefault();if(!name&&!this._isOnDefaultValuePage()){this._hidePopover(this.options.cancelOnEscape);break;}
if(this.options.needDefaultValue&&this._isOnDefaultValuePage()){this._hidePopover();}else if(this.options.needDefaultValue){this._goToDefaultValuePage(name);}else{this._selectField(this._getLastPageField(name));}
break;}}});return ModelFieldSelectorPopover;function sortFields(fields,model,order){var array=_.chain(fields).pairs().sortBy(function(p){return p[1].string;});if(order!=='string'){array=array.sortBy(function(p){return p[1][order];});}
return array.map(function(p){return _.extend({name:p[0],model:model,},p[1]);}).value();}});;

/* /web/static/src/legacy/js/widgets/ribbon.js */
odoo.define('web.ribbon',function(require){'use strict';var widgetRegistry=require('web.widget_registry');var Widget=require('web.Widget');var RibbonWidget=Widget.extend({template:'web.ribbon',init:function(parent,data,options){this._super.apply(this,arguments);this.text=options.attrs.title||options.attrs.text;this.tooltip=options.attrs.tooltip;this.className=options.attrs.bg_color?options.attrs.bg_color:'bg-success';if(this.text.length>15){this.className+=' o_small';}else if(this.text.length>10){this.className+=' o_medium';}},});widgetRegistry.add('web_ribbon',RibbonWidget);return RibbonWidget;});;

/* /web/static/src/legacy/js/widgets/week_days.js */
odoo.define('web.WeekDays',function(require){'use strict';const CustomCheckbox=require('web.CustomCheckbox');const Registry=require('web.widgetRegistry');const utils=require('web.utils');const{LegacyComponent}=require("@web/legacy/legacy_component");const{onWillUpdateProps,useState}=owl;class WeekDays extends LegacyComponent{setup(){this.weekdaysShort=[];this._sortWeekdays();this.state=useState({days:this._prepareData(this.props.record.data)});this.mode=this.props.options.mode;onWillUpdateProps(this.onWillUpdateProps);}
async onWillUpdateProps(nextProps){this.state.days=this._prepareData(nextProps.record.data);this.mode=nextProps.options.mode;}
_prepareData(data){const weekdays={};this.weekdaysShort.forEach((day)=>{weekdays[day]={id:`${day}-${utils.generateID()}`,value:data[day],};});return weekdays;}
_sortWeekdays(){const weekStart=this.env._t.database.parameters.week_start;const weekdaysShort=['mon','tue','wed','thu','fri','sat','sun'];const slicedArray1=weekdaysShort.slice(weekStart-1,weekdaysShort.length);const slicedArray2=weekdaysShort.slice(0,weekStart-1);this.weekdaysShort=slicedArray1.concat(slicedArray2);}
_onChange(checked,field){this.trigger('field-changed',{dataPointID:this.props.record.id,changes:{[field.split("-")[0]]:checked},});}}
WeekDays.components={CustomCheckbox};WeekDays.template="web.RecurrentTask";WeekDays.fieldDependencies={sun:{type:'boolean'},mon:{type:'boolean'},tue:{type:'boolean'},wed:{type:'boolean'},thu:{type:'boolean'},fri:{type:'boolean'},sat:{type:'boolean'},};Registry.add('week_days',WeekDays);return WeekDays;});;

/* /web/static/src/legacy/js/widgets/signature.js */
odoo.define('web.signature_widget',function(require){"use strict";const framework=require('web.framework');const SignatureDialog=require('web.signature_dialog');const widgetRegistry=require('web.widget_registry');const Widget=require('web.Widget');const WidgetSignature=Widget.extend({custom_events:Object.assign({},Widget.prototype.custom_events,{upload_signature:'_onUploadSignature',}),events:Object.assign({},Widget.prototype.events,{'click .o_sign_label':'_onClickSignature',}),template:'SignButton',init:function(parent,record,nodeInfo){this._super.apply(this,arguments);this.res_id=record.res_id;this.res_model=record.model;this.state=record;this.node=nodeInfo;this.signature_field=this.node.attrs.signature_field||'signature';},_onClickSignature:function(){const nameAndSignatureOptions={displaySignatureRatio:3,mode:'draw',noInputName:true,signatureType:'signature',};if(this.node.attrs.full_name){let signName;const fieldFullName=this.state.data[this.node.attrs.full_name];if(fieldFullName&&fieldFullName.type==='record'){signName=fieldFullName.data.display_name;}else{signName=fieldFullName;}
nameAndSignatureOptions.defaultName=signName||undefined;}
nameAndSignatureOptions.defaultFont=this.node.attrs.default_font||'';this.signDialog=new SignatureDialog(this,{nameAndSignatureOptions:nameAndSignatureOptions,});this.signDialog.open();},_onUploadSignature:function(ev){const file=ev.data.signatureImage[1];const always=()=>{this.trigger_up('reload');framework.unblockUI();};framework.blockUI();const rpcProm=this._rpc({model:this.res_model,method:'write',args:[[this.res_id],{[this.signature_field]:file,}],});rpcProm.then(always).guardedCatch(always);return rpcProm;},});widgetRegistry.add('signature',WidgetSignature);});;

/* /web/static/src/legacy/js/widgets/attach_document.js */
odoo.define('web.AttachDocument',function(require){"use static";var core=require('web.core');var framework=require('web.framework');var{Markup}=require('web.utils');var widgetRegistry=require('web.widget_registry');var Widget=require('web.Widget');var _t=core._t;var AttachDocument=Widget.extend({template:'LegacyAttachDocument',events:{'click':'_onClickAttachDocument','change input.o_input_file':'_onFileChanged',},init:function(parent,record,nodeInfo){this._super.apply(this,arguments);this.res_id=record.res_id;this.res_model=record.model;this.state=record;this.node=nodeInfo;this.fileuploadID=_.uniqueId('o_fileupload');},start:function(){$(window).on(this.fileuploadID,this._onFileLoaded.bind(this));return this._super.apply(this,arguments);},destroy:function(){$(window).off(this.fileuploadID);this._super.apply(this,arguments);},_notifyInvalidFields:function(invalidFields){var fields=this.state.fields;var warnings=invalidFields.map(function(fieldName){var fieldStr=fields[fieldName].string;return _.str.sprintf('<li>%s</li>',_.escape(fieldStr));});warnings.unshift('<ul>');warnings.push('</ul>');this.displayNotification({title:_t("Invalid fields:"),message:Markup(warnings.join('')),type:'danger',});},_onClickAttachDocument:function(ev){if($(ev.target).is('input.o_input_file')){return;}
var fieldNames=this.getParent().canBeSaved(this.state.id);if(fieldNames.length){return this._notifyInvalidFields(fieldNames);}
if(!this.res_id){return this.displayNotification({message:_t('Please save before attaching a file'),type:'danger'});}
this.$('input.o_input_file').trigger('click');},_onFileChanged:function(ev){ev.stopPropagation();this.$('form.o_form_binary_form').trigger('submit');framework.blockUI();},_onFileLoaded:function(){var self=this;var files=Array.prototype.slice.call(arguments,1);return new Promise(function(resolve){if(self.node.attrs.action){self._rpc({model:self.res_model,method:self.node.attrs.action,args:[self.res_id],kwargs:{attachment_ids:_.map(files,function(file){return file.id;}),}}).then(function(){resolve();});}else{resolve();}}).then(function(){self.trigger_up('reload');framework.unblockUI();});},});widgetRegistry.add('attach_document',AttachDocument);});;

/* /web/static/src/legacy/js/apps.js */
odoo.define('web.Apps',function(require){"use strict";var AbstractAction=require('web.AbstractAction');var config=require('web.config');var core=require('web.core');var framework=require('web.framework');var session=require('web.session');var _t=core._t;var apps_client=null;var Apps=AbstractAction.extend({contentTemplate:'EmptyComponent',remote_action_tag:'loempia.embed',failback_action_id:'base.open_module_tree',init:function(parent,action){this._super(parent,action);var options=action.params||{};this.params=options;},get_client:function(){var check_client_available=function(client){var i=new Image();var def=new Promise(function(resolve,reject){i.onerror=function(){reject(client);};i.onload=function(){resolve(client);};});var ts=new Date().getTime();i.src=_.str.sprintf('%s/web/static/src/img/sep-a.gif?%s',client.origin,ts);return def;};if(apps_client){return check_client_available(apps_client);}else{return this._rpc({model:'ir.module.module',method:'get_apps_server'}).then(function(u){var link=$(_.str.sprintf('<a href="%s"></a>',u))[0];var host=_.str.sprintf('%s//%s',link.protocol,link.host);var dbname=link.pathname;if(dbname[0]==='/'){dbname=dbname.substr(1);}
var client={origin:host,dbname:dbname};apps_client=client;return check_client_available(client);});}},destroy:function(){$(window).off("message."+this.uniq);if(this.$ifr){this.$ifr.remove();this.$ifr=null;}
return this._super();},_on_message:function($e){var self=this,client=this.client,e=$e.originalEvent;if(e.origin!==client.origin){return;}
var dispatcher={'event':function(m){self.trigger('message:'+m.event,m);},'action':function(m){self.do_action(m.action).then(function(r){var w=self.$ifr[0].contentWindow;w.postMessage({id:m.id,result:r},client.origin);});},'rpc':function(m){return self._rpc({route:m.args[0],params:m.args[1]}).then(function(r){var w=self.$ifr[0].contentWindow;w.postMessage({id:m.id,result:r},client.origin);});},'Model':function(m){return self._rpc({model:m.model,method:m.args[0],args:m.args[1]}).then(function(r){var w=self.$ifr[0].contentWindow;w.postMessage({id:m.id,result:r},client.origin);});},};if(!_.isObject(e.data)){return;}
if(dispatcher[e.data.type]){dispatcher[e.data.type](e.data);}},start:function(){var self=this;return new Promise(function(resolve,reject){self.get_client().then(function(client){self.client=client;var qs={db:client.dbname};if(config.isDebug()){qs.debug=odoo.debug;}
var u=$.param.querystring(client.origin+"/apps/embed/client",qs);var css={width:'100%',height:'750px'};self.$ifr=$('<iframe>').attr('src',u);self.uniq=_.uniqueId('apps');$(window).on("message."+self.uniq,self.proxy('_on_message'));self.on('message:ready',self,function(m){var w=this.$ifr[0].contentWindow;var act={type:'ir.actions.client',tag:this.remote_action_tag,params:_.extend({},this.params,{db:session.db,origin:session.origin,})};w.postMessage({type:'action',action:act},client.origin);});self.on('message:set_height',self,function(m){this.$ifr.height(m.height);});self.on('message:blockUI',self,function(){framework.blockUI();});self.on('message:unblockUI',self,function(){framework.unblockUI();});self.on('message:warn',self,function(m){self.displayNotification({title:m.title,message:m.message,sticky:m.sticky,type:'danger'});});self.$ifr.appendTo(self.$('.o_content')).css(css).addClass('apps-client');resolve();},function(){self.displayNotification({title:_t('Odoo Apps will be available soon'),message:_t('Showing locally available modules'),sticky:true,type:'danger'});return self._rpc({route:'/web/action/load',params:{action_id:self.failback_action_id},}).then(function(action){return self.do_action(action,{clear_breadcrumbs:true});}).then(resolve,reject);});});}});var AppsUpdates=Apps.extend({remote_action_tag:'loempia.embed.updates',});core.action_registry.add("apps",Apps);core.action_registry.add("apps.updates",AppsUpdates);return Apps;});;

/* /web/static/src/legacy/js/env.js */
odoo.define('@web/legacy/js/env',async function(require){'use strict';let __exports={};const commonEnv=require('web.commonEnv');const dataManager=require('web.data_manager');const{blockUI,unblockUI}=require("web.framework");const env=Object.assign(commonEnv,{dataManager});env.services=Object.assign(env.services,{blockUI,unblockUI});__exports[Symbol.for("default")]=env;return __exports;});odoo.define(`web.env`,async function(require){return require('@web/legacy/js/env')[Symbol.for("default")];});;

/* /web/static/src/legacy/js/model.js */
odoo.define("web.Model",function(require){"use strict";const{groupBy}=require("web.utils");const Registry=require("web.Registry");const{useBus}=require("@web/core/utils/hooks");const{EventBus,onWillRender,useComponent}=owl;const isNotNull=(val)=>val!==null&&val!==undefined;class ModelExtension{constructor(config){this.config=config;this.env=this.config.env;this.shouldLoad=true;this.state={};}
async callLoad(params){if(this.shouldLoad){this.shouldLoad=false;await this.load(params);}}
dispatch(method,...args){if(method in this){this[method](...args);}}
exportState(){return this.state;}
get(){return null;}
importState(state){this.shouldLoad=!state;if(this.shouldLoad){this.prepareState();}else{Object.assign(this.state,state);}}
async load(){}
prepareState(){}}
ModelExtension.layer=0;class Model extends EventBus{constructor(extensions={},globalConfig={}){super();this.config=globalConfig;this.env=this.config.env;this.dispatching=false;this.extensions=[];this.externalState={};this.mapping=new WeakMap();this.rev=1;const{name,registry}=this.constructor;if(!registry||!(registry instanceof Registry)){throw new Error(`Unimplemented registry on model "${name}".`);}
const registryExtensions=Object.entries(registry.entries());const extensionNameLayers=registryExtensions.map(([name,{layer}])=>({name,layer}));const groupedNameLayers=groupBy(extensionNameLayers,"layer");for(const groupNameLayers of Object.values(groupedNameLayers)){for(const{name}of groupNameLayers){if(name in extensions){this.addExtension(name,extensions[name]);}}}
this.importState(this.config.importedState);}
addExtension(extensionName,extensionConfig){const{name,registry}=this.constructor;const Extension=registry.get(extensionName);if(!Extension){throw new Error(`Unknown model extension "${extensionName}" in model "${name}"`);}
const get=this.__get.bind(this,Extension.name);const trigger=this.trigger.bind(this);const config=Object.assign({get,trigger},this.config,extensionConfig);const extension=new Extension(config);if(!(Extension.layer in this.extensions)){this.extensions[Extension.layer]=[];}
this.extensions[Extension.layer].push(extension);}
dispatch(method,...args){const isInitialDispatch=!this.dispatching;this.dispatching=true;for(const extension of this.extensions.flat()){extension.dispatch(method,...args);}
if(!isInitialDispatch){return;}
this.dispatching=false;let rev=this.rev;this._loadExtensions({isInitialLoad:false}).then(()=>{if(rev===this.rev){this._notifyComponents();}});}
exportState(){const exported={};for(const extension of this.extensions.flat()){exported[extension.constructor.name]=extension.exportState();}
const fullState=Object.assign({},this.externalState,exported);return JSON.stringify(fullState);}
get(property,...args){for(const extension of this.extensions.flat()){const result=extension.get(property,...args);if(isNotNull(result)){return result;}}
return null;}
importState(stringifiedState="null"){const state=JSON.parse(stringifiedState)||{};Object.assign(this.externalState,state);for(const extension of this.extensions.flat()){extension.importState(state[extension.constructor.name]);}}
async load(){await this._loadExtensions({isInitialLoad:true});}
__get(excluded,property,...args){const results=[];for(const extension of this.extensions.flat()){if(extension.constructor.name!==excluded){const result=extension.get(property,...args);if(isNotNull(result)){results.push(result);}}}
return results;}
async _loadExtensions(params){for(let layer=0;layer<this.extensions.length;layer++){await Promise.all(this.extensions[layer].map((extension)=>extension.callLoad(params)));}}
_notifyComponents(){const rev=++this.rev;this.trigger("update",{rev});}}
Model.Extension=ModelExtension;function useModel(modelName){const component=useComponent();const model=component.env[modelName];if(!(model instanceof Model)){throw new Error(`No Model found when connecting '${component.constructor.name}'`);}
model.mapping.set(component,0);const __render=component.render.bind(component);component.render=function(){if(model.rev>model.mapping.get(component)){return;}
__render();};onWillRender(()=>{model.mapping.set(component,model.rev);});useBus(model,"update",(ev)=>{const{rev}=ev.detail;if(model.mapping.get(component)<rev){model.mapping.set(component,rev);component.render();}});return model;}
return{Model,useModel,};});;

/* /web/static/src/legacy/js/owl_compatibility.js */
odoo.define('web.OwlCompatibility',function(require){"use strict";const{LegacyComponent}=require("@web/legacy/legacy_component");const{templates}=require("@web/core/assets");const{App,Component,onMounted,onWillStart,onWillUnmount,onPatched,onWillUpdateProps,onWillDestroy,useSubEnv,xml,status,}=owl;const widgetSymbol=odoo.widgetSymbol;const children=new WeakMap();const templateForLegacy=xml`<t/>`;const templateForOwl=xml`<t t-component="props.Component" t-props="childProps" />`;class ComponentAdapter extends LegacyComponent{constructor(props){if(!props.Component){throw Error(`ComponentAdapter: 'Component' prop is missing.`);}
let template;if(!(props.Component.prototype instanceof Component)){template=templateForLegacy;}else{template=templateForOwl;}
ComponentAdapter.template=template;super(...arguments);this.template=template;this.widget=null;}
setup(){onWillUpdateProps((nextProps)=>{if(this.widget){return this.updateWidget(nextProps);}});let widgetIsAttached=false;const insertWidget=()=>{this.removeEl();if(!this.widget||!this.widget.el){return;}
const node=this.__owl__.firstNode();node.parentNode.insertBefore(this.widget.el,node);this.widgetEl=this.widget.el;widgetIsAttached=true;};onMounted(()=>{insertWidget();if(this.widget&&this.widget.on_attach_callback){this.widget.on_attach_callback();}});onPatched(()=>{if(widgetIsAttached){this.renderWidget();}else{insertWidget();}});onWillDestroy(()=>this.__destroy(this.__owl__.parent.component));onWillStart(this.onWillStart);onWillUnmount(this.onWillUnmount);}
onWillStart(){if(!(this.props.Component.prototype instanceof Component)){this.widget=new this.props.Component(this,...this.widgetArgs);return this.widget._widgetRenderAndInsert(()=>{});}}
onWillUnmount(){if(this.widget&&this.widget.on_detach_callback){this.widget.on_detach_callback();}
this.removeEl();}
removeEl(){if(this.widgetEl){this.widgetEl.remove();this.widgetEl=null;}}
__destroy(){this.removeEl();if(this.widget){this.widget.destroy();}}
get childProps(){if(!this._childProps){this._childProps=Object.assign({},this.props);delete this._childProps.Component;}
return this._childProps;}
get widgetArgs(){if(this.props.widgetArgs){return this.props.widgetArgs;}
const args=Object.keys(this.props);args.splice(args.indexOf('Component'),1);if(args.length>1){throw new Error(`ComponentAdapter has more than 1 argument, 'widgetArgs' must be overriden.`);}
return args.map(a=>this.props[a]);}
updateWidget(){if(this.env.isDebug('assets')){console.warn(`ComponentAdapter: Widget could not be updated, maybe override 'updateWidget' function?`);}}
renderWidget(){if(this.env.isDebug('assets')){console.warn(`ComponentAdapter: Widget could not be re-rendered, maybe override 'renderWidget' function?`);}}
_trigger_up(ev){const evType=ev.name;const payload=ev.data;if(evType==='call_service'){let args=payload.args||[];if(payload.service==='ajax'&&payload.method==='rpc'){args=args.concat(ev.target);}
const service=this.env.services[payload.service];if(service){const result=service[payload.method].apply(service,args);payload.callback(result);}else{throw new Error(`The service "${payload.service}" is not present in the legacy owl environment.
                         You should probably create a mapper in @web/legacy/utils`);}}else if(evType==='get_session'){if(payload.callback){payload.callback(this.env.session);}}else if(evType==='load_views'){const params={model:payload.modelName,context:payload.context,views_descr:payload.views,};this.env.dataManager.load_views(params,payload.options||{}).then(payload.on_success);}else if(evType==='load_filters'){return this.env.dataManager.load_filters(payload).then(payload.on_success);}else{payload.__targetWidget=ev.target;this.trigger(evType.replace(/_/g,'-'),payload);}}
get el(){if(this.widget){return this.widget.el;}
return super.el;}}
const bodyRef={get el(){return document.body}};function standaloneAdapter(props={},ref=bodyRef){const env=owl.Component.env;const app=new App(null,{templates,env,dev:env.isDebug(),translatableAttributes:["data-tooltip"],translateFn:env._t,});if(!("Component"in props)){props.Component=owl.Component;}
const component=app.makeNode(ComponentAdapter,props).component;Object.defineProperty(component,"el",{get(){return ref.el;}});return component;}
const WidgetAdapterMixin={on_attach_callback(){for(const component of children.get(this)||[]){component.on_attach_callback();}},on_detach_callback(){for(const component of children.get(this)||[]){component.on_detach_callback();}},destroy(){for(const wrapper of children.get(this)||[]){wrapper.destroy();}
children.delete(this);},};function recursiveCall(node,childrenFirst=false,callback){if(!childrenFirst){callback(node);}
for(const child of Object.values(node.children)){recursiveCall(child,childrenFirst,callback);}
if(childrenFirst){callback(node);}}
function prepareForFinish(node){const fiber=node.fiber;const complete=fiber.complete;fiber.complete=function(){if(!this.target.ownerDocument.contains(this.target)){this.mounted=[this];}
complete.call(this);};}
const nodesToRemount=new WeakMap();function setToRemount(node,updateAndRender){let toRemount=true;if(!node.isPatched){node.isPatched=true;node.mounted.push(()=>{toRemount=false;});node.willUpdateProps.push(()=>{const rootMounted=node.fiber.root.mounted;if(toRemount&&!rootMounted.includes(node.fiber)){rootMounted.push(node.fiber);}});}
return()=>toRemount=true;}
function prepareForRemount(mainNode){const updateAndRender=mainNode.updateAndRender;recursiveCall(mainNode,false,(node)=>{if(mainNode===node){return;}
if(nodesToRemount.has(node)){nodesToRemount.get(node)();return;}else{nodesToRemount.set(node,setToRemount(node,updateAndRender));}});}
function registerWrapper(parent,wrapper){let parentChildren=children.get(parent);if(!parentChildren){parentChildren=[];children.set(parent,parentChildren);}
parentChildren.push(wrapper);}
class ProxyComponent extends LegacyComponent{setup(){for(const[hookName,cb]of Object.entries(this.props.hooks)){owl[hookName](cb);}
onWillUnmount(()=>{this._handledEvents=new Set();});this.parentWidget=this.props.parentWidget;this._handledEvents=new Set();useSubEnv({[widgetSymbol]:this._addListener.bind(this)});}
_addListener(evType){if(this.parentWidget&&!this._handledEvents.has(evType)&&status(this)==="mounted"){this._handledEvents.add(evType);this.el.addEventListener(evType,ev=>{if(!ev.cancelBubble){ev.stopPropagation();const detail=Object.assign({},ev.detail,{__originalComponent:ev.originalComponent,});this.parentWidget.trigger_up(ev.type.replace(/-/g,'_'),detail);}});}}}
ProxyComponent.template=xml`<t t-component="props.Component" t-props="props.props"/>`;class ComponentWrapper{constructor(parent,Component,props){if(parent instanceof Component){throw new Error("ComponentWrapper must be used with a legacy Widget as parent");}
this.setParent(parent);const _env=props.env;delete props.env;this.props=props;this.Component=Component;const env=_env||owl.Component.env;const appConfig={env,templates,dev:"isDebug"in env?env.isDebug():env.debug,translatableAttributes:["data-tooltip"],translateFn:env._t,};const app=new App(null,appConfig);this.app=app;this.node=this._makeOwlNode();this.env=this.node.component.env;app.root=this.node;this.__owl__=Object.create(this.node);this.componentRef={comp:null};this.status="new";this.setup();}
_makeOwlNode(){const resolveRender=()=>{if(this.renderResolve){this.renderResolve();}};const props={props:this.props,hooks:{onMounted:resolveRender,onPatched:resolveRender,onRendered:()=>{this.componentRef.comp=Object.values(this.node.children)[0].component;},},Component:this.Component,parentWidget:this.parentWidget,};return this.app.makeNode(ProxyComponent,props);}
setup(){}
get el(){return this.node.component.el;}
async mount(target,options){if(this.status==="mounted"||this.status==="willMount"){return this.render();}else if(this.status==="destroyed"){return;}
if(target){this.target=target;}
if(options){this.mountOptions=options;}
const remount=this.status==="unmounted";if(remount){prepareForRemount(this.node);}
this.status="willMount";const prom=this.app.mountNode(this.node,this.target,this.mountOptions);if(remount){this.node.fiber.deep=true;}
prepareForFinish(this.node);await prom;if(this.target.ownerDocument.contains(this.target)){this.status="mounted";}
this.node.willStart=[];const mounted=this.node.mounted;this.node.mounted=mounted.slice(0,mounted.length-1);return this;}
unmount(){this.on_detach_callback();this.el.remove();this.node.bdom=null;}
render(){if(this.status!=="mounted"){return;}
if(this.renderProm){this.node.render(true);return this.renderProm;}
this.renderProm=new Promise((resolve,reject)=>{this.renderResolve=resolve;this.renderReject=reject;}).then(()=>{this.renderProm=null;this.renderResolve=null;this.renderReject=null;});this.node.render(true);return this.renderProm;}
trigger(){return this.node.component.trigger(...arguments);}
destroy(){if(["willMount","unmounted"].includes(this.status)){recursiveCall(this.node,false,(node)=>{node.willUnmount=[];});}
this.app.destroy();this.status="destroyed";}
get $el(){return $(this.el);}
on_attach_callback(){if(!this.el||!this.el.ownerDocument.contains(this.el)){return;}
if(this.status==="mounted"){return;}
recursiveCall(this.node,true,(node)=>{for(const cb of node.mounted){cb();}});this.node.status=1;this.status="mounted";}
on_detach_callback(){if(this.status==="unmounted"){return;}
recursiveCall(this.node,false,(node)=>{if(node.status===1){const component=node.component;for(const cb of node.willUnmount){cb.call(component);}}});this.node.status=0;this.status="unmounted";}
async update(nextProps){if(this.status==="destroyed"){return;}
const props=this.node.component.props.props;const nextComponentProps=Object.assign({},props,nextProps);this.node.component.props.props=nextComponentProps;this.props=nextComponentProps;if(this.status==="unmounted"){return this.mount(this.target);}else{return this.render();}}
setParent(parent){if(parent instanceof Component){throw new Error('ComponentWrapper must be used with a legacy Widget as parent');}
if(parent){registerWrapper(parent,this);}
if(this.parentWidget){const parentChildren=children.get(this.parentWidget);parentChildren.splice(parentChildren.indexOf(this),1);}
this.parentWidget=parent;if(this.node){this.node.component.parentWidget=parent;}}}
return{ComponentAdapter,ComponentWrapper,WidgetAdapterMixin,standaloneAdapter,};});;

/* /base_import/static/lib/javascript-state-machine/state-machine.js */
(function(window){StateMachine={VERSION:"2.1.0",Result:{SUCCEEDED:1,NOTRANSITION:2,CANCELLED:3,ASYNC:4,},Error:{INVALID_TRANSITION:100,PENDING_TRANSITION:200,INVALID_CALLBACK:300,},WILDCARD:'*',ASYNC:'async',create:function(cfg,target){var initial=(typeof cfg.initial=='string')?{state:cfg.initial}:cfg.initial;var fsm=target||cfg.target||{};var events=cfg.events||[];var callbacks=cfg.callbacks||{};var map={};var add=function(e){var from=(e.from instanceof Array)?e.from:(e.from?[e.from]:[StateMachine.WILDCARD]);map[e.name]=map[e.name]||{};for(var n=0;n<from.length;n++)
map[e.name][from[n]]=e.to||from[n];};if(initial){initial.event=initial.event||'startup';add({name:initial.event,from:'none',to:initial.state});}
for(var n=0;n<events.length;n++)
add(events[n]);for(var name in map){if(map.hasOwnProperty(name))
fsm[name]=StateMachine.buildEvent(name,map[name]);}
for(var name in callbacks){if(callbacks.hasOwnProperty(name))
fsm[name]=callbacks[name]}
fsm.current='none';fsm.is=function(state){return this.current==state;};fsm.can=function(event){return!this.transition&&(map[event].hasOwnProperty(this.current)||map[event].hasOwnProperty(StateMachine.WILDCARD));}
fsm.cannot=function(event){return!this.can(event);};fsm.error=cfg.error||function(name,from,to,args,error,msg){throw msg;};if(initial&&!initial.defer)
fsm[initial.event]();return fsm;},doCallback:function(fsm,func,name,from,to,args){if(func){try{return func.apply(fsm,[name,from,to].concat(args));}
catch(e){return fsm.error(name,from,to,args,StateMachine.Error.INVALID_CALLBACK,"an exception occurred in a caller-provided callback function");}}},beforeEvent:function(fsm,name,from,to,args){return StateMachine.doCallback(fsm,fsm['onbefore'+name],name,from,to,args);},afterEvent:function(fsm,name,from,to,args){return StateMachine.doCallback(fsm,fsm['onafter'+name]||fsm['on'+name],name,from,to,args);},leaveState:function(fsm,name,from,to,args){return StateMachine.doCallback(fsm,fsm['onleave'+from],name,from,to,args);},enterState:function(fsm,name,from,to,args){return StateMachine.doCallback(fsm,fsm['onenter'+to]||fsm['on'+to],name,from,to,args);},changeState:function(fsm,name,from,to,args){return StateMachine.doCallback(fsm,fsm['onchangestate'],name,from,to,args);},buildEvent:function(name,map){return function(){var from=this.current;var to=map[from]||map[StateMachine.WILDCARD]||from;var args=Array.prototype.slice.call(arguments);if(this.transition)
return this.error(name,from,to,args,StateMachine.Error.PENDING_TRANSITION,"event "+name+" inappropriate because previous transition did not complete");if(this.cannot(name))
return this.error(name,from,to,args,StateMachine.Error.INVALID_TRANSITION,"event "+name+" inappropriate in current state "+this.current);if(false===StateMachine.beforeEvent(this,name,from,to,args))
return StateMachine.CANCELLED;if(from===to){StateMachine.afterEvent(this,name,from,to,args);return StateMachine.NOTRANSITION;}
var fsm=this;this.transition=function(){fsm.transition=null;fsm.current=to;StateMachine.enterState(fsm,name,from,to,args);StateMachine.changeState(fsm,name,from,to,args);StateMachine.afterEvent(fsm,name,from,to,args);};var leave=StateMachine.leaveState(this,name,from,to,args);if(false===leave){this.transition=null;return StateMachine.CANCELLED;}
else if("async"===leave){return StateMachine.ASYNC;}
else{if(this.transition)
this.transition();return StateMachine.SUCCEEDED;}};}};if("function"===typeof define){define("statemachine",[],function(){return StateMachine;});}
else{window.StateMachine=StateMachine;}}(this));;

/* /base_import/static/src/import_records/import_records.js */
odoo.define('@base_import/import_records/import_records',async function(require){'use strict';let __exports={};const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{Component}=owl;const favoriteMenuRegistry=registry.category("favoriteMenu");const ImportRecords=__exports.ImportRecords=class ImportRecords extends Component{setup(){this.action=useService("action");}
importRecords(){const{context,resModel}=this.env.searchModel;this.action.doAction({type:"ir.actions.client",tag:"import",params:{model:resModel,context},});}}
ImportRecords.template="base_import.ImportRecords";ImportRecords.components={DropdownItem};const importRecordsItem=__exports.importRecordsItem={Component:ImportRecords,groupNumber:4,isDisplayed:({config,isSmall})=>!isSmall&&config.actionType==="ir.actions.act_window"&&["kanban","list"].includes(config.viewType)&&!!JSON.parse(config.viewArch.getAttribute("import")||"1")&&!!JSON.parse(config.viewArch.getAttribute("create")||"1"),};favoriteMenuRegistry.add("import-menu",importRecordsItem,{sequence:1});return __exports;});;

/* /base_import/static/src/legacy/js/import_action.js */
odoo.define('base_import.import',function(require){"use strict";var AbstractAction=require('web.AbstractAction');var core=require('web.core');var session=require('web.session');var time=require('web.time');var fieldUtils=require('web.field_utils');var QWeb=core.qweb;var _t=core._t;var _lt=core._lt;var StateMachine=window.StateMachine;function jsonp(form,attributes,callback){attributes=attributes||{};var options={jsonp:_.uniqueId('import_callback_')};window[options.jsonp]=function(){delete window[options.jsonp];callback.apply(null,arguments);};if('data'in attributes){_.extend(attributes.data,options);}else{_.extend(attributes,{data:options});}
_.extend(attributes,{dataType:'script',});$(form).ajaxSubmit(attributes);}
function _make_option(term){return{id:term,text:term};}
function _from_data(data,term){return _.findWhere(data,{id:term})||_make_option(term);}
function dataFilteredQuery(q){var suggestions=_.clone(this.data);if(q.term){var exact=_.filter(suggestions,function(s){return s.id===q.term||s.text===q.term;});if(exact.length){suggestions=exact;}else{suggestions=[_make_option(q.term)].concat(_.filter(suggestions,function(s){return s.id.indexOf(q.term)!==-1||s.text.indexOf(q.term)!==-1}));}}
q.callback({results:suggestions});}
var DataImport=AbstractAction.extend({hasControlPanel:true,contentTemplate:'ImportView',opts:[{name:'encoding',label:_lt("Encoding:"),value:''},{name:'separator',label:_lt("Separator:"),value:''},{name:'quoting',label:_lt("Text Delimiter:"),value:'"'}],spreadsheet_opts:[{name:'sheet',label:_lt("Selected Sheet:"),value:''},],parse_opts_formats:[{name:'date_format',label:_lt("Date Format:"),value:''},{name:'datetime_format',label:_lt("Datetime Format:"),value:''},],parse_opts_separators:[{name:'float_thousand_separator',label:_lt("Thousands Separator:"),value:','},{name:'float_decimal_separator',label:_lt("Decimal Separator:"),value:'.'}],events:{'change .oe_import_file':'loaded_file','change input.oe_import_has_header, .oe_import_sheet':'settings_changed','change input.oe_import_advanced_mode':function(e){this.do_not_change_match=true;this['settings_changed']();},'click .oe_import_report a.oe_import_report_count':function(e){e.preventDefault();$(e.target).parent().find('i.arrow').toggleClass('up down');$(e.target).parent().parent().toggleClass('oe_import_report_showmore');},'click .oe_import_report_see_possible_value':function(e){e.preventDefault();$(e.target).parent().toggleClass('oe_import_report_showmore');},'click .oe_import_moreinfo_action a':function(e){e.preventDefault();var action=JSON.parse($(e.target).attr('data-action'));action.views=_(action.views).map(function(view){var id=view[0],type=view[1];return[id,type!=='tree'?type:action.view_type==='form'?'list':'tree'];});this.do_action(_.extend(action,{target:'new',}));},},init:function(parent,action){this._super.apply(this,arguments);this.action_manager=parent;this.res_model=action.params.model;this.parent_context=action.params.context||{};this.id=null;this.session=session;this._title=action.name||_t('Import a File');this.do_not_change_match=false;this.sheets=[];this.selectionFields={};},willStart:function(){var self=this;var def=this._rpc({model:this.res_model,method:'get_import_templates',context:this.parent_context,}).then(function(result){self.importTemplates=result;});return Promise.all([this._super.apply(this,arguments),def]);},start:function(){var self=this;this.$form=this.$('form');this.setup_encoding_picker();this.setup_separator_picker();this.setup_float_format_picker();this.setup_date_format_picker();this.setup_sheets_picker();this.renderButtons();this.controlPanelProps.cp_content={$buttons:this.$buttons};return Promise.all([this._super(),self.create_model().then(function(id){self.id=id;self.$('input[name=import_id]').val(id);}),]);},create_model:function(){return this._rpc({model:'base_import.import',method:'create',args:[{res_model:this.res_model}],kwargs:{context:session.user_context},});},renderButtons:function(){var self=this;this.$buttons=$(QWeb.render("ImportView.buttons",this));this.$buttons.filter('.o_import_validate').on('click',this.validate.bind(this));this.$buttons.filter('.o_import_import').on('click',this.import.bind(this));this.$buttons.filter('.oe_import_file').on('click',function(){self.$('.o_content .oe_import_file').click();});this.$buttons.filter('.o_import_cancel').on('click',function(e){e.preventDefault();self.exit();});},setup_encoding_picker:function(){this.$('input.oe_import_encoding').select2({width:'50%',data:_.map(('utf-8 utf-16 windows-1252 latin1 latin2 big5 gb18030 shift_jis windows-1251 koi8_r').split(/\s+/),_make_option),query:dataFilteredQuery,minimumResultsForSearch:-1,initSelection:function($e,c){return c(_make_option($e.val()));}});},setup_separator_picker:function(){var data=[{id:',',text:_t("Comma")},{id:';',text:_t("Semicolon")},{id:'\t',text:_t("Tab")},{id:' ',text:_t("Space")}];this.$('input.oe_import_separator').select2({width:'50%',data:data,query:dataFilteredQuery,minimumResultsForSearch:-1,initSelection:function($e,c){c(_from_data(data,$e.val())||_make_option($e.val()))}});},setup_float_format_picker:function(){var data_decimal=[{id:',',text:_t("Comma")},{id:'.',text:_t("Dot")},];var data_digits=data_decimal.concat([{id:'',text:_t("No Separator")}]);this.$('input.oe_import_float_thousand_separator').select2({width:'50%',data:data_digits,query:dataFilteredQuery,minimumResultsForSearch:-1,initSelection:function($e,c){c(_from_data(data_digits,$e.val())||_make_option($e.val()))}});this.$('input.oe_import_float_decimal_separator').select2({width:'50%',data:data_decimal,query:dataFilteredQuery,minimumResultsForSearch:-1,initSelection:function($e,c){c(_from_data(data_decimal,$e.val())||_make_option($e.val()))}});},setup_date_format_picker:function(){var data=_(['YYYY-MM-DD','DD/MM/YY','DD/MM/YYYY','DD-MM-YYYY','DD-MMM-YY','DD-MMM-YYYY','MM/DD/YY','MM/DD/YYYY','MM-DD-YY','MM-DD-YYYY','DDMMYY','DDMMYYYY','YYMMDD','YYYYMMDD','YY/MM/DD','YYYY/MM/DD','MMDDYY','MMDDYYYY',]).map(_make_option);this.$('input.oe_import_date_format').select2({width:'50%',data:data,query:dataFilteredQuery,minimumResultsForSearch:-1,initSelection:function($e,c){c(_from_data(data,$e.val())||_make_option($e.val()));}})},setup_sheets_picker:function(){var data=this.sheets.map(_make_option);this.$('input.oe_import_sheet').select2({width:'100%',data:data,query:dataFilteredQuery,minimumResultsForSearch:-1,initSelection:function($e,c){c(_from_data(data,$e.val())||_make_option($e.val()))},});},import_options:function(){var self=this;var options={has_headers:this.$('input.oe_import_has_header').prop('checked'),advanced:this.$('input.oe_import_advanced_mode').prop('checked'),keep_matches:this.do_not_change_match,name_create_enabled_fields:{},import_set_empty_fields:[],import_skip_records:[],fallback_values:{},skip:Number(this.$('#oe_import_row_start').val())-1||0,limit:Number(this.$('#oe_import_batch_limit').val())||null,};_.each(_.union(this.opts,this.spreadsheet_opts),function(opt){options[opt.name]=self.$('input.oe_import_'+opt.name).val();});_(this.parse_opts_formats).each(function(opt){options[opt.name]=time.moment_to_strftime_format(self.$('input.oe_import_'+opt.name).val());});_(this.parse_opts_separators).each(function(opt){options[opt.name]=self.$('input.oe_import_'+opt.name).val();});options['fields']=[];if(this.do_not_change_match){options['fields']=this.$('input.oe_import_match_field').map(function(index,el){return $(el).select2('val')||false;}).get();}
this.do_not_change_match=false;this.$('select.o_import_create_option').each(function(){var field=this.getAttribute('field');var type=this.getAttribute('type');if(field){if(['boolean','many2one','many2many','selection'].includes(type)&&this.value==='skip_record'){options.import_skip_records.push(field);}else if(['many2one',"many2many","selection"].includes(type)){if(this.value==='set_empty'){options.import_set_empty_fields.push(field);}else{options.name_create_enabled_fields[field]=this.value==='create';}}else if(['boolean','selection'].includes(type)&&this.value!=='prevent'){options.fallback_values[field]={fallback_value:this.value,field_model:this.getAttribute('model'),field_type:type};}}});return options;},onfile_loaded:function(event,from,to,arg){if(arg!=null){var savedSkipLines=0;var isPartialEnabled=this.$('.oe_import').hasClass('o_import_partial_mode');if(isPartialEnabled){savedSkipLines=this.$('#oe_import_row_start').val();}
this.toggle_partial(null);if(isPartialEnabled&&savedSkipLines){this.$('#oe_import_row_start').val(savedSkipLines);}}
this.$buttons.filter('.o_import_import, .o_import_validate').addClass('d-none');if(!this.$('input.oe_import_file').val()){return this['settings_changed']();}
this.$('.oe_import_date_format').select2('val','');this.$('.oe_import_datetime_format').val('');this.$('.oe_import_sheet').val('');this.$form.removeClass('oe_import_preview oe_import_error');var file=this.$('input.oe_import_file')[0].files[0];var isCSV=((file.type&&_.last(file.type.split('/'))==="csv")||(_.last(file.name.split('.'))==="csv"))
this.$form.find('.o_import_formatting').toggleClass('d-none',!isCSV);var fileName=file.name.split('.');var fileExtension=fileName.pop();fileName=fileName.join('.');this.$('#oe_imported_file').text(fileName);this.$('#oe_imported_file_extension').text('.'+fileExtension);this.$form.find('.oe_import_box').toggle(true);jsonp(this.$form,{url:'/base_import/set_file'},this.proxy('settings_changed'));},onpreviewing:function(){var self=this;this.$buttons.filter('.o_import_import, .o_import_validate').addClass('d-none');this.$form.addClass('oe_import_with_file');this.$form.removeClass('oe_import_preview_error oe_import_error');this.$form.toggleClass('oe_import_noheaders',!this.$('input.oe_import_has_header').prop('checked'));this.$('input.oe_import_file').val('');this.$('.oe_import_options_cell,.oe_import_options_header').addClass('d-none');this._cleanComments();$.blockUI({message:QWeb.render('Throbber')});$(document.body).addClass('o_ui_blocked');$('.oe_throbber_message').text(_t("Loading file..."));this._rpc({model:'base_import.import',method:'parse_preview',args:[this.id,this.import_options()],kwargs:{context:session.user_context},}).then(function(result){var signal=result.error?'preview_failed':'preview_succeeded';self[signal](result);$(document.body).removeClass('o_ui_blocked');$.unblockUI();});},onpreview_error:function(event,from,to,result){this.$('.oe_import_options').show();this.$form.addClass('oe_import_preview_error oe_import_error');this.$form.find('.oe_import_box, .oe_import_with_file').removeClass('d-none');this.$form.find('.o_view_nocontent').addClass('d-none');this.$('.oe_import_error_report').html(QWeb.render('ImportView.preview.error',result));},onpreview_success:function(event,from,to,result){var self=this;this.$buttons.filter('.oe_import_file').text(_t('Load File')).removeClass('btn-primary').addClass('btn-secondary').blur();this.$buttons.filter('.o_import_import, .o_import_validate').removeClass('d-none');this.$form.find('.oe_import_box, .oe_import_with_file').removeClass('d-none');this.$form.find('.o_view_nocontent').addClass('d-none');this.$form.addClass('oe_import_preview');this.$('input.oe_import_advanced_mode').prop('checked',result.advanced_mode);this.$('.oe_import_grid').html(QWeb.render('ImportView.preview',result));this.$('.oe_import_grid .o_import_preview').each((index,element)=>{$(element).popover({title:_t("Preview"),trigger:'hover',html:true,content:QWeb.render('ImportView.preview_popover',{preview:result.preview[index]}),});});this.fileLength=result.file_length;this.$('.o_import_batch').toggleClass('d-none',!(this.fileLength>100));this.$('.o_import_batch_alert').toggleClass('d-none',!result.batch);var messages=[];if(result.headers.length===1){messages.push({type:'warning',message:_t("A single column was found in the file, this often means the file separator is incorrect")});}
if(!_.isEmpty(messages)){this.$('.oe_import_options').show();this.onresults(null,null,null,{'messages':messages});}
if(!_.isEqual(this.sheets,result.options.sheets)){this.sheets=result.options.sheets||[];this.setup_sheets_picker();}
this.$('div.oe_import_has_multiple_sheets').toggle(this.sheets.length>1);_.each(['encoding','separator','float_thousand_separator','float_decimal_separator','sheet'],function(id){self.$('.oe_import_'+id).select2('val',result.options[id])});this.$('.oe_import_date_format').select2('val',time.strftime_to_moment_format(result.options.date_format));this.$('.oe_import_datetime_format').val(time.strftime_to_moment_format(result.options.datetime_format));this.$('.oe_import_debug_option').toggleClass('d-none',!result.debug);var $fields=this.$('.oe_import_match_field');this.render_fields_matches(result,$fields);var data=this._generate_fields_completion(result);var item_finder=function(id,items){items=items||data;for(var i=0;i<items.length;++i){var item=items[i];if(item.id===id){return item;}
var val;if(item.children&&(val=item_finder(id,item.children))){return val;}}
return'';};$fields.each(function(k,v){var $fieldInput=$(v);var filteredData=self._generate_fields_completion(result,k);var updateFieldInformation=function(fieldInfo){var $commentCell=$fieldInput.closest('tr.oe_import_grid-row').find('.oe_import_comment_cell');var $optionsDiv=$commentCell.find('.oe_import_options_div');var isRelational=fieldInfo.type==='many2many'||fieldInfo.type==='many2one';var setEmpty=!fieldInfo.required&&(isRelational||fieldInfo.type==='selection');var isO2MField=false;if(isRelational&&fieldInfo.id.includes('/')){var fieldName=fieldInfo.id.split('/')[0];var field=result.fields.find((field)=>field.name===fieldName);if(field&&field.type==='one2many'){isO2MField=true;}}
var showSkipRecord=setEmpty&&!isO2MField||(!fieldInfo.required&&fieldInfo.type==='boolean');if(isRelational||fieldInfo.type==='boolean'){$optionsDiv.empty();$optionsDiv.append(QWeb.render('ImportView.create_record_option',{data:fieldInfo,is_relational:isRelational,set_empty:setEmpty,show_skip_record:showSkipRecord}));}else if(fieldInfo.type==='selection'){self._rpc({model:fieldInfo.comodel_name||fieldInfo.model_name,method:'fields_get',}).then(function(values){var selectionField=fieldInfo.id.split('/').pop();var selectionLabels=values[selectionField]["selection"].map(value=>value[1]);$optionsDiv.empty();$optionsDiv.append(QWeb.render('ImportView.create_record_option',{data:fieldInfo,values:selectionLabels,set_empty:setEmpty,show_skip_record:showSkipRecord}));self.selectionFields[data.id]=values;});}else if($optionsDiv.find('.o_import_create_option').length==1){$optionsDiv.empty();}
$commentCell.attr('field',fieldInfo.id||"");$commentCell.attr('model',fieldInfo.comodel_name||fieldInfo.model_name||"");var $fieldDropdown=$fieldInput.closest('.oe_import_match_cell').find('.select2-choice');var oldType=$fieldDropdown.getAttributes()['type'];$fieldDropdown.removeClass(`o_import_field_${oldType}`).addClass(`o_import_field_icon o_import_field_${fieldInfo.type}`);$fieldDropdown.attr('type',fieldInfo.type);};var default_value=$fieldInput.val();var fieldInfo=item_finder(default_value);if(!fieldInfo){$fieldInput.val('');}
$fieldInput.select2({allowClear:true,minimumInputLength:0,data:filteredData,initSelection:function(element,callback){if(!default_value){callback('');return;}
updateFieldInformation(fieldInfo);callback(fieldInfo);self._handleMappingComments(v,fieldInfo);},formatSelection:function(object,container){var fieldTooltipString=`%(label)s: %(labelValue)s
%(name)s: %(nameValue)s
%(type)s: %(typeValue)s
%(model)s: %(modelValue)s`;var tooltip=_.str.sprintf(fieldTooltipString,{'label':_t("Label"),'labelValue':object.text,'name':_t("Name"),'nameValue':object.id,'type':_t("Type"),'typeValue':object.type,'model':_t("Model"),'modelValue':object.comodel_name||object.model_name,});$(container[0]).closest('a').attr('title',tooltip);return object.text;},formatResultCssClass:function(object){if(object.required){return"fw-bold text-decoration-underline";}
return"";},placeholder:_t('To import, select a field...'),width:'resolve',dropdownCssClass:'oe_import_selector'}).on('change',function(event){var changedField=event.currentTarget;var fieldRemovedId=event.removed?event.removed.id:false;self._cleanFieldComments(changedField,fieldRemovedId);var fieldInfo=item_finder(changedField.value);updateFieldInformation(fieldInfo);self._handleMappingComments(changedField,fieldInfo);if(!event.val){var $matchingCell=$(changedField).closest('.oe_import_match_cell')
$matchingCell.find('.o_import_field_icon').removeClass('o_import_field_icon');$matchingCell.find('a.select2-choice').removeAttr("title");}});$fieldInput.closest('.oe_import_match_cell').find('.select2-input').attr('placeholder',_t('Search for a field...'));});},_cleanFieldComments:function(changedField,fieldRemovedId){if(fieldRemovedId){var $sameMappedFields=this.$(`.oe_import_comment_cell[field=\"${fieldRemovedId}\"]`).find('.oe_import_same_mapped_field');if($sameMappedFields.length==2){$sameMappedFields.remove();}}
var $fieldRow=$(changedField).closest('tr.oe_import_grid-row');$fieldRow.find('.oe_import_comments_div').empty();$fieldRow.find('.oe_import_options_div').addClass("d-none");},_cleanComments:function(){this.$('.oe_import_error_report').empty();this.$('.oe_import_comments_div').find('.alert-error,.alert-warning').remove();this.$form.removeClass('oe_import_error');},_onBatchStart:function(){var recordsDone=this.batchSize*(this.currentBatchNumber-1);var percentage=parseInt(recordsDone/this.totalToImport*100);$('.o_import_progress_dialog').find('.progress-bar').text(percentage+"%").attr('aria-valuenow',percentage).css('width',percentage+'%');$('.o_import_progress_dialog').find('.o_import_progress_dialog_batch_count').text(this.currentBatchNumber);if(percentage!==0){var estimatedTimeLeftMinutes=((Date.now()-this.importStartTime)*((100-percentage)/percentage))/60000;$('.o_import_progress_dialog_time_left').removeClass('d-none');$('.o_import_progress_dialog_time_left_text').text(fieldUtils.format.float_time(estimatedTimeLeftMinutes));}},_onStopImport:function(event){var $currentTarget=$(event.currentTarget);$currentTarget.enable(false);$currentTarget.closest('.o_import_progress_dialog').find('.o_import_progress_dialog_stop, .o_import_progress_dialog_batch').toggleClass('d-none');this.stopImport=true;},_handleMappingComments:function(changedField,fieldInfo){var commentsToAdd=[];var $sameMappedFields=this.$('.oe_import_comment_cell[field="'+fieldInfo.id+'"]');if(fieldInfo.type=='many2many'){commentsToAdd.push(QWeb.render('ImportView.comment_m2m_field'));}
if($sameMappedFields.length>=2){if(['char','text',"many2many"].includes(fieldInfo.type)){commentsToAdd.push(QWeb.render('ImportView.comment_same_mapped_field',{field:fieldInfo.text,}));}else{var $targetMappedFieldId=$(changedField).parent().find('div.oe_import_match_field').getAttributes()['id'];_.each($sameMappedFields,function(fieldComment){var $mappingCell=$(fieldComment).parent().find('div.oe_import_match_field');if($mappingCell.getAttributes()['id']!==$targetMappedFieldId){$mappingCell.find('.select2-search-choice-close').trigger('mousedown').trigger('click');}});}}
var $commentDiv=$sameMappedFields.find(".oe_import_comments_div");$commentDiv.empty();_.each($commentDiv,function(fieldComment){_.each(commentsToAdd,function(comment){$(fieldComment).append(comment);});});},_generate_fields_completion:function(root,index){var self=this;var basic=[];var regulars=[];var o2m=[];var suggested=[];var header_types=root.header_types;function traverse(field,ancestors,collection,type){var subfields=field.fields;var advanced_mode=self.$('input.oe_import_advanced_mode').prop('checked');var field_path=ancestors.concat(field);var label=_(field_path).pluck('string').join(' / ');var id=_(field_path).pluck('name').join('/');if(!collection){if(field.name==='id'){collection=basic;}else if(_.isEmpty(subfields)||_.isEqual(_.pluck(subfields,'name'),['id','.id'])){collection=(type&&type.indexOf(field['type'])!==-1)?suggested:regulars;}else{collection=o2m;}}
collection.push({id:id,text:label,required:field.required,type:field.type,default_value:field.default_value,comodel_name:field.comodel_name,model_name:field.model_name,});if(advanced_mode){for(var i=0,end=subfields.length;i<end;++i){traverse(subfields[i],field_path,collection,type);}}}
_(root.fields).each(function(field){if(index===undefined){traverse(field,[]);}
else{if(self.$('input.oe_import_advanced_mode').prop('checked')){traverse(field,[],undefined,['all']);}
else{traverse(field,[],undefined,header_types[index]);}}});var cmp=function(field1,field2){return field1.text.localeCompare(field2.text);};suggested.sort(cmp);regulars.sort(cmp);o2m.sort(cmp);if(!_.isEmpty(regulars)&&!_.isEmpty(o2m)){if(!_.isEmpty(suggested)){basic=basic.concat({text:_t("Suggested Fields"),children:suggested});}
return basic.concat([{text:!_.isEmpty(suggested)?_t("Additional Fields"):_t("Standard Fields"),children:regulars},{text:_t("Relation Fields"),children:o2m},]);}else{return basic.concat(suggested,regulars,o2m);}},render_fields_matches:function(result,$fields){if(_(result.matches).isEmpty()){return;}
$fields.each(function(index,input){var match=result.matches[index];if(!match){return;}
var current_field=result;input.value=_(match).chain().map(function(name){return current_field=_(current_field.fields).find(function(subfield){return subfield.name===name;});}).pluck('name').value().join('/');});},call_import:function(kwargs){var fields=this.$('input.oe_import_match_field').map(function(index,el){return $(el).select2('val')||false;}).get();var columns=this.$('.o_import_header_name').map(function(){return $(this).text().trim().toLowerCase()||false;}).get();var tracking_disable='tracking_disable'in kwargs?kwargs.tracking_disable:!this.$('#oe_import_tracking').prop('checked');delete kwargs.tracking_disable;kwargs.context=_.extend({},this.parent_context,{tracking_disable:tracking_disable});this.importStartTime=Date.now();this.stopImport=false;this.totalToImport=this.fileLength-parseInt(this.$('#oe_import_row_start').val());this.batchSize=parseInt(this.$('#oe_import_batch_limit').val()||0);var isBatch=this.batchSize!==0&&this.totalToImport>this.batchSize;var totalSteps=isBatch?Math.floor(this.totalToImport/this.batchSize)+1:1;this.currentBatchNumber=1;$.blockUI({message:QWeb.render('base_import.progressDialog',{importMode:kwargs.dryrun?_t('Testing'):_t('Importing'),isBatch:isBatch,totalSteps:totalSteps,})});$(document.body).addClass('o_ui_blocked');$('.o_import_progress_dialog').find('.o_progress_stop_import').on('click',this._onStopImport.bind(this));var opts=this.import_options();return this._batchedImport(opts,[this.id,fields,columns],kwargs,{done:0,prev:0}).then(null,function(reason){var error=reason.message;var event=reason.event;if(event){event.preventDefault();}
var msg;var errordata=error.data||{};if(errordata.type==='xhrerror'){var xhr=errordata.objects[0];switch(xhr.status){case 504:msg=_t("Import timed out. Please retry. If you still encounter this issue, the file may be too big for the system's configuration, try to split it (import less records per file).");break;default:msg=_t("An unknown issue occurred during import (possibly lost connection, data limit exceeded or memory limits exceeded). Please retry in case the issue is transient. If the issue still occurs, try to split the file rather than import it at once.");}}else{msg=errordata.arguments&&(errordata.arguments[1]||errordata.arguments[0])||error.message;}
return Promise.resolve({'messages':[{type:'error',record:false,message:msg,}]});}).finally(function(){$(document.body).removeClass('o_ui_blocked');$.unblockUI();});},_batchedImport:function(opts,args,kwargs,rec){var self=this;opts.callback&&opts.callback(this);this._onBatchStart();this.currentBatchNumber+=1;if(this.stopImport){$(document.body).removeClass('o_ui_blocked');$.unblockUI();return Promise.resolve({});}
return this._rpc({model:'base_import.import',method:'execute_import',args:args.concat([opts]),kwargs:kwargs},{shadow:true,}).then(function(results){_.each(results.messages,offset_by(opts.skip));if(!kwargs.dryrun&&!results.ids){self.$('#oe_import_row_start').val(opts.skip+1);if(opts.skip){results.messages.push({type:'info',priority:true,message:_.str.sprintf(_t("This file has been successfully imported up to line %d."),opts.skip)});}
return results;}
if(!results.nextrow){return results;}
return self._batchedImport(_.defaults({skip:results.nextrow},opts),args,kwargs,{done:rec.done+(results.ids||[]).length,prev:results.nextrow}).then(function(r2){return{name:_.zip(results.name,r2.name).map(function(names){return names[0]||names[1];}),ids:(results.ids||[]).concat(r2.ids||[]),messages:r2.messages?results.messages.concat(r2.messages):results.messages,skip:r2.skip||results.nextrow,nextrow:r2.nextrow}});});},onvalidate:function(){var prom=this.call_import({dryrun:true,tracking_disable:true});prom.then(this.proxy('validated'));return prom;},onimport:function(){var self=this;var prom=this.call_import({dryrun:false});prom.then(function(results){if(self.stopImport){var recordsImported=results.ids?results.ids.length:0;if(recordsImported){self.$('#oe_import_row_start').val((results.skip||0)+1);self.displayNotification({message:_.str.sprintf(_t("%d records successfully imported"),recordsImported)});}
self['import_interrupted'](results);}else if(!_.any(results.messages,function(message){return message.type==='error';})){self['import_succeeded'](results);return;}
self['import_failed'](results);});return prom;},onimported:function(event,from,to,results){this.displayNotification({message:_.str.sprintf(_t("%d records successfully imported"),results.ids.length)});this.exit();},exit:function(){this.trigger_up('history_back');},onresults:function(event,from,to,results){var self=this;var fields=this.$('input.oe_import_match_field').map(function(index,el){return $(el).select2('val')||false;}).get();var error_type="warning";var errorMessages=results.messages;if(_.isEmpty(errorMessages)&&event!=='import_interrupted'){errorMessages.push({type:'info',message:_t("Everything seems valid.")});error_type=false;}else if(event==='import_interrupted'&&results.ids){this.toggle_partial(results);error_type=false;}else if(event==='import_failed'&&results.ids){this.toggle_partial(results);}
var offset=1;if(this.import_options().has_headers){offset+=1;}
var errorsSorted=_.sortBy(_(errorMessages).groupBy('message'),function(group){if(group[0].priority){return-2;}
var order=0;switch(group[0].type){case'error':order=0;error_type='error';break;case'warning':order=fields.length+1;break;case'info':order=2*(fields.length+1);break;default:order=3*(fields.length+1);break;}
return order+_.indexOf(fields,group[0].field);});var errorsByFields=this._regroupErrorsByFields(errorsSorted);if(!errorsByFields[0]&&error_type){var message=error_type==="warning"?_t("The file contains non-blocking warnings (see below)"):_t("The file contains blocking errors (see below)");errorsByFields[0]=[{'type':error_type,'message':message,}];}
self._cleanComments();_.each(errorsByFields,function(errors,field){var $errorCell=self.$('.oe_import_comment_cell[field="'+field+'"]');var $errorDiv=$errorCell.find(".oe_import_comments_div");var errorTemplate='ImportView.fieldError';if($errorDiv.length===0){$errorDiv=self.$('.oe_import_error_report');self.$form.addClass('oe_import_error');field=0;errorTemplate='ImportView.error';}
$errorDiv.append(QWeb.render(errorTemplate,{errors:errors,field:field,result_names:results.name,offset:offset,}));var mainError=errors[0];if(!mainError.not_matching_error&&mainError.type==="error"){$errorCell.find(".oe_import_options_div").removeClass('d-none');}});},_regroupErrorsByFields:function(errorsSorted){var errorsByFields={}
_.each(errorsSorted,function(errors){var mainError=errors[0];var field=mainError.field_path?mainError.field_path.join('/'):mainError.field||0;if(errors.length>1&&mainError.rows){var rowFrom=mainError.rows.from;var rowTo=errors[errors.length-1].rows.to;errors=mainError;mainError.rows.from=rowFrom;mainError.rows.to=rowTo;}else{errors=mainError;}
if(!errorsByFields[field]){errorsByFields[field]=[errors];}else{errorsByFields[field].push(errors);}});return errorsByFields;},toggle_partial:function(result){var $form=this.$('.oe_import');var $partial_warning=this.$('.o_import_partial_alert');var $partial_count=this.$('.o_import_partial_count');if(result==null){$partial_warning.addClass('d-none');$form.add(this.$buttons).removeClass('o_import_partial_mode');var $skip=this.$('#oe_import_row_start');$skip.val($skip.attr('value'));$partial_count.text('');return;}
this.$('.o_import_batch_alert').addClass('d-none');$partial_warning.removeClass('d-none');$form.add(this.$buttons).addClass('o_import_partial_mode');$partial_count.text((result.skip||0)+1);}});core.action_registry.add('import',DataImport);StateMachine.create({target:DataImport.prototype,events:[{name:'loaded_file',from:['none','file_loaded','preview_error','preview_success','results','imported'],to:'file_loaded'},{name:'settings_changed',from:['file_loaded','preview_error','preview_success','results'],to:'previewing'},{name:'preview_failed',from:'previewing',to:'preview_error'},{name:'preview_succeeded',from:'previewing',to:'preview_success'},{name:'validate',from:'preview_success',to:'validating'},{name:'validate',from:'results',to:'validating'},{name:'validated',from:'validating',to:'results'},{name:'import',from:['preview_success','results'],to:'importing'},{name:'import_succeeded',from:'importing',to:'imported'},{name:'import_interrupted',from:'importing',to:'results'},{name:'import_failed',from:'importing',to:'results'}],});function offset_by(by){return function offset_message(msg){if(msg.rows){msg.rows.from+=by;msg.rows.to+=by;}}}
return{DataImport:DataImport,};});;

/* /base_import/static/src/legacy/js/import_menu.js */
odoo.define('base_import.ImportMenu',function(require){"use strict";const{DropdownItem}=require('@web/core/dropdown/dropdown_item');const FavoriteMenu=require('web.FavoriteMenu');const{useModel}=require('web.Model');const{LegacyComponent}=require("@web/legacy/legacy_component");class ImportMenu extends LegacyComponent{setup(){this.model=useModel('searchModel');}
importRecords(){const action={type:'ir.actions.client',tag:'import',params:{model:this.model.config.modelName,context:this.model.config.context,}};this.trigger('do-action',{action:action});}
static shouldBeDisplayed(env){return env.view&&['kanban','list'].includes(env.view.type)&&env.action.type==='ir.actions.act_window'&&!env.device.isMobile&&!!JSON.parse(env.view.arch.attrs.import||'1')&&!!JSON.parse(env.view.arch.attrs.create||'1');}}
ImportMenu.props={};ImportMenu.template="base_import.ImportRecords";ImportMenu.components={DropdownItem};FavoriteMenu.registry.add('import-menu',ImportMenu,1);return ImportMenu;});;

/* /web_editor/static/src/components/media_dialog/document_selector.js */
odoo.define('@web_editor/components/media_dialog/document_selector',async function(require){'use strict';let __exports={};const{Attachment,FileSelector,IMAGE_MIMETYPES}=require("@web_editor/components/media_dialog/file_selector");const DocumentAttachment=__exports.DocumentAttachment=class DocumentAttachment extends Attachment{}
DocumentAttachment.template='web_editor.DocumentAttachment';const DocumentSelector=__exports.DocumentSelector=class DocumentSelector extends FileSelector{setup(){super.setup();this.uploadText=this.env._t("Upload a document");this.urlPlaceholder="https://www.odoo.com/mydocument";this.addText=this.env._t("Add document");this.searchPlaceholder=this.env._t("Search a document");this.allLoadedText=this.env._t("All documents have been loaded");}
get attachmentsDomain(){const domain=super.attachmentsDomain;domain.push(['mimetype','not in',IMAGE_MIMETYPES]);domain.unshift('&','|',['url','=',null],'!',['url','=like','/web/assets/%']);return domain;}
async onClickDocument(document){this.selectAttachment(document);await this.props.save();}
async fetchAttachments(...args){const attachments=await super.fetchAttachments(...args);if(this.selectInitialMedia()){for(const attachment of attachments){if(`/web/content/${attachment.id}`===this.props.media.getAttribute('href').replace(/[?].*/,'')){this.selectAttachment(attachment);}}}
return attachments;}
static async createElements(selectedMedia,{orm}){return Promise.all(selectedMedia.map(async attachment=>{const linkEl=document.createElement('a');let href=`/web/content/${encodeURIComponent(attachment.id)}?unique=${encodeURIComponent(attachment.checksum)}&download=true`;if(!attachment.public){let accessToken=attachment.access_token;if(!accessToken){[accessToken]=await orm.call('ir.attachment','generate_access_token',[attachment.id],);}
href+=`&access_token=${encodeURIComponent(accessToken)}`;}
linkEl.href=href;linkEl.title=attachment.name;linkEl.dataset.mimetype=attachment.mimetype;return linkEl;}));}}
DocumentSelector.mediaSpecificClasses=['o_image'];DocumentSelector.mediaSpecificStyles=[];DocumentSelector.mediaExtraClasses=[];DocumentSelector.tagNames=['A'];DocumentSelector.attachmentsListTemplate='web_editor.DocumentsListTemplate';DocumentSelector.components={...FileSelector.components,DocumentAttachment,};return __exports;});;

/* /web_editor/static/src/components/media_dialog/file_selector.js */
odoo.define('@web_editor/components/media_dialog/file_selector',async function(require){'use strict';let __exports={};const{useService}=require('@web/core/utils/hooks');const{ConfirmationDialog}=require('@web/core/confirmation_dialog/confirmation_dialog');const{Dialog}=require('@web/core/dialog/dialog');const{KeepLast}=require("@web/core/utils/concurrency");const{useDebounced}=require("@web/core/utils/timing");const{SearchMedia}=require("@web_editor/components/media_dialog/search_media");const{Component,xml,useState,useRef,onWillStart}=require("@odoo/owl");const IMAGE_MIMETYPES=__exports.IMAGE_MIMETYPES=['image/jpg','image/jpeg','image/jpe','image/png','image/svg+xml','image/gif'];const IMAGE_EXTENSIONS=__exports.IMAGE_EXTENSIONS=['.jpg','.jpeg','.jpe','.png','.svg','.gif'];class RemoveButton extends Component{setup(){this.removeTitle=this.env._t("This file is attached to the current record.");if(this.props.model==='ir.ui.view'){this.removeTitle=this.env._t("This file is a public view attachment.");}}
remove(ev){ev.stopPropagation();this.props.remove();}}
RemoveButton.template=xml`<i class="fa fa-trash o_existing_attachment_remove position-absolute top-0 end-0 p-2 bg-white-25 cursor-pointer opacity-0 opacity-100-hover z-index-1 transition-base" t-att-title="removeTitle" role="img" t-att-aria-label="removeTitle" t-on-click="this.remove"/>`;const AttachmentError=__exports.AttachmentError=class AttachmentError extends Component{setup(){this.title=this.env._t("Alert");}}
AttachmentError.components={Dialog};AttachmentError.template=xml`
<Dialog title="title">
    <div class="form-text">
        <p>The image could not be deleted because it is used in the
            following pages or views:</p>
        <ul t-foreach="props.views"  t-as="view" t-key="view.id">
            <li>
                <a t-att-href="'/web#model=ir.ui.view&amp;id=' + window.encodeURIComponent(view.id)">
                    <t t-esc="view.name"/>
                </a>
            </li>
        </ul>
    </div>
    <t t-set-slot="footer">
        <button class="btn btn-primary" t-on-click="() => this.props.close()">
            Ok
        </button>
    </t>
</Dialog>`;const Attachment=__exports.Attachment=class Attachment extends Component{setup(){this.dialogs=useService('dialog');this.rpc=useService('rpc');}
remove(){this.dialogs.add(ConfirmationDialog,{body:this.env._t("Are you sure you want to delete this file ?"),confirm:async()=>{const prevented=await this.rpc('/web_editor/attachment/remove',{ids:[this.props.id],});if(!Object.keys(prevented).length){this.props.onRemoved(this.props.id);}else{this.dialogs.add(AttachmentError,{views:prevented[this.props.id],});}},});}}
Attachment.components={RemoveButton,};const FileSelectorControlPanel=__exports.FileSelectorControlPanel=class FileSelectorControlPanel extends Component{setup(){this.state=useState({showUrlInput:false,urlInput:'',isValidUrl:false,isValidFileFormat:false});this.fileInput=useRef('file-input');}
get showSearchServiceSelect(){return this.props.searchService&&this.props.needle;}
get enableUrlUploadClick(){return!this.state.showUrlInput||(this.state.urlInput&&this.state.isValidUrl&&this.state.isValidFileFormat);}
async onUrlUploadClick(){if(!this.state.showUrlInput){this.state.showUrlInput=true;}else{await this.props.uploadUrl(this.state.urlInput);this.state.urlInput='';}}
onUrlInput(ev){const{isValidUrl,isValidFileFormat}=this.props.validateUrl(ev.target.value);this.state.isValidFileFormat=isValidFileFormat;this.state.isValidUrl=isValidUrl;}
onClickUpload(){this.fileInput.el.click();}
async onChangeFileInput(){const inputFiles=this.fileInput.el.files;if(!inputFiles.length){return;}
await this.props.uploadFiles(inputFiles);this.fileInput.el.value='';}}
FileSelectorControlPanel.template='web_editor.FileSelectorControlPanel';FileSelectorControlPanel.components={SearchMedia,};const FileSelector=__exports.FileSelector=class FileSelector extends Component{setup(){this.orm=useService('orm');this.uploadService=useService('upload');this.keepLast=new KeepLast();this.loadMoreButtonRef=useRef('load-more-button');this.state=useState({attachments:[],canLoadMoreAttachments:true,isFetchingAttachments:false,needle:'',});this.NUMBER_OF_ATTACHMENTS_TO_DISPLAY=30;onWillStart(async()=>{this.state.attachments=await this.fetchAttachments(this.NUMBER_OF_ATTACHMENTS_TO_DISPLAY,0);});this.debouncedScroll=useDebounced(this.scrollToLoadMoreButton,500);}
get canLoadMore(){return this.state.canLoadMoreAttachments;}
get hasContent(){return this.state.attachments.length;}
get isFetching(){return this.state.isFetchingAttachments;}
get selectedAttachmentIds(){return this.props.selectedMedia[this.props.id].filter(media=>media.mediaType==='attachment').map(({id})=>id);}
get attachmentsDomain(){const domain=['&',['res_model','=',this.props.resModel],['res_id','=',this.props.resId||0]];domain.unshift('|',['public','=',true]);domain.push(['name','ilike',this.state.needle]);return domain;}
validateUrl(url){const path=url.split('?')[0];const isValidUrl=/^.+\..+$/.test(path);const isValidFileFormat=true;return{isValidUrl,isValidFileFormat,path};}
async fetchAttachments(limit,offset){this.state.isFetchingAttachments=true;let attachments=[];try{attachments=await this.orm.call('ir.attachment','search_read',[],{domain:this.attachmentsDomain,fields:['name','mimetype','description','checksum','url','type','res_id','res_model','public','access_token','image_src','image_width','image_height','original_id'],order:'id desc',limit,offset,});attachments.forEach(attachment=>attachment.mediaType='attachment');}catch(e){if(e.exceptionName!=='odoo.exceptions.AccessError'){throw e;}}
this.state.canLoadMoreAttachments=attachments.length>=this.NUMBER_OF_ATTACHMENTS_TO_DISPLAY;this.state.isFetchingAttachments=false;return attachments;}
async handleLoadMore(){await this.loadMore();this.debouncedScroll();}
async loadMore(){return this.keepLast.add(this.fetchAttachments(this.NUMBER_OF_ATTACHMENTS_TO_DISPLAY,this.state.attachments.length)).then((newAttachments)=>{this.state.attachments.push(...newAttachments);});}
async handleSearch(needle){await this.search(needle);this.debouncedScroll();}
async search(needle){this.state.attachments=[];this.state.needle=needle;return this.keepLast.add(this.fetchAttachments(this.NUMBER_OF_ATTACHMENTS_TO_DISPLAY,0)).then((attachments)=>{this.state.attachments=attachments;});}
async uploadFiles(files){await this.uploadService.uploadFiles(files,{resModel:this.props.resModel,resId:this.props.resId},attachment=>this.onUploaded(attachment));}
async uploadUrl(url){await this.uploadService.uploadUrl(url,{resModel:this.props.resModel,resId:this.props.resId},attachment=>this.onUploaded(attachment));}
async onUploaded(attachment){this.state.attachments=[attachment,...this.state.attachments];this.selectAttachment(attachment);if(!this.props.multiSelect){await this.props.save();}
if(this.props.onAttachmentChange){this.props.onAttachmentChange(attachment);}}
onRemoved(attachmentId){this.state.attachments=this.state.attachments.filter(attachment=>attachment.id!==attachmentId);}
selectAttachment(attachment){this.props.selectMedia({...attachment,mediaType:'attachment'});}
selectInitialMedia(){return this.props.media&&this.constructor.tagNames.includes(this.props.media.tagName)&&!this.selectedAttachmentIds.length;}
scrollToLoadMoreButton(){if(this.state.needle||this.state.attachments.length>this.NUMBER_OF_ATTACHMENTS_TO_DISPLAY){this.loadMoreButtonRef.el.scrollIntoView({block:'end',inline:'nearest',behavior:'smooth'});}}}
FileSelector.template='web_editor.FileSelector';FileSelector.components={FileSelectorControlPanel,};return __exports;});;

/* /web_editor/static/src/components/media_dialog/icon_selector.js */
odoo.define('@web_editor/components/media_dialog/icon_selector',async function(require){'use strict';let __exports={};const fonts=require('wysiwyg.fonts');const{SearchMedia}=require("@web_editor/components/media_dialog/search_media");const{Component,useState}=require("@odoo/owl");const IconSelector=__exports.IconSelector=class IconSelector extends Component{setup(){this.state=useState({fonts:this.props.fonts,needle:'',});this.searchPlaceholder=this.env._t("Search a pictogram");}
get selectedMediaIds(){return this.props.selectedMedia[this.props.id].map(({id})=>id);}
search(needle){this.state.needle=needle;if(!this.state.needle){this.state.fonts=this.props.fonts;}else{this.state.fonts=this.props.fonts.map(font=>{const icons=font.icons.filter(icon=>icon.alias.indexOf(this.state.needle)>=0);return{...font,icons};});}}
async onClickIcon(font,icon){this.props.selectMedia({...icon,fontBase:font.base,initialIconChanged:this.props.media&&!icon.names.some(name=>this.props.media.classList.contains(name)),});await this.props.save();}
static createElements(selectedMedia){return selectedMedia.map(icon=>{const iconEl=document.createElement('span');iconEl.classList.add(icon.fontBase,icon.names[0]);return iconEl;});}
static initFonts(){fonts.computeFonts();const allFonts=fonts.fontIcons.map(({cssData,base})=>{const uniqueIcons=Array.from(new Map(cssData.map(icon=>{const alias=icon.names.join(',');const id=`${base}_${alias}`;return[id,{...icon,alias,id}];})).values());return{base,icons:uniqueIcons};});return allFonts;}}
IconSelector.mediaSpecificClasses=['fa'];IconSelector.mediaSpecificStyles=['color','background-color'];IconSelector.mediaExtraClasses=['rounded-circle','rounded','img-thumbnail','shadow',/^text-\S+$/,/^bg-\S+$/,/^fa-\S+$/,];IconSelector.tagNames=['SPAN','I'];IconSelector.template='web_editor.IconSelector';IconSelector.components={SearchMedia,};return __exports;});;

/* /web_editor/static/src/components/media_dialog/image_selector.js */
odoo.define('@web_editor/components/media_dialog/image_selector',async function(require){'use strict';let __exports={};const{useService}=require('@web/core/utils/hooks');const{getCSSVariableValue,DEFAULT_PALETTE}=require('web_editor.utils');const{Attachment,FileSelector,IMAGE_MIMETYPES,IMAGE_EXTENSIONS}=require("@web_editor/components/media_dialog/file_selector");const{KeepLast}=require("@web/core/utils/concurrency");const{useRef,useState,useEffect}=require("@odoo/owl");const AutoResizeImage=__exports.AutoResizeImage=class AutoResizeImage extends Attachment{setup(){super.setup();this.image=useRef('auto-resize-image');this.container=useRef('auto-resize-image-container');this.state=useState({loaded:false,});useEffect(()=>{this.image.el.addEventListener('load',()=>this.onImageLoaded());return this.image.el.removeEventListener('load',()=>this.onImageLoaded());},()=>[]);}
async onImageLoaded(){if(!this.image.el){return;}
if(this.props.onLoaded){await this.props.onLoaded(this.image.el);if(!this.image.el){return;}}
const aspectRatio=this.image.el.offsetWidth/this.image.el.offsetHeight;const width=aspectRatio*this.props.minRowHeight;this.container.el.style.flexGrow=width;this.container.el.style.flexBasis=`${width}px`;this.state.loaded=true;}}
AutoResizeImage.template='web_editor.AutoResizeImage';const ImageSelector=__exports.ImageSelector=class ImageSelector extends FileSelector{setup(){super.setup();this.rpc=useService('rpc');this.keepLastLibraryMedia=new KeepLast();this.state.libraryMedia=[];this.state.libraryResults=null;this.state.isFetchingLibrary=false;this.state.searchService='all';this.state.showOptimized=false;this.NUMBER_OF_MEDIA_TO_DISPLAY=10;this.uploadText=this.env._t("Upload an image");this.urlPlaceholder="https://www.odoo.com/logo.png";this.addText=this.env._t("Add URL");this.searchPlaceholder=this.env._t("Search an image");this.urlWarningTitle=this.env._t("Uploaded image's format is not supported. Try with: "+IMAGE_EXTENSIONS.join(', '));this.allLoadedText=this.env._t("All images have been loaded");this.showOptimizedOption=this.env.debug;this.MIN_ROW_HEIGHT=128;this.fileMimetypes=IMAGE_MIMETYPES.join(',');}
get canLoadMore(){if(this.state.searchService==='media-library'){return this.state.libraryResults&&this.state.libraryMedia.length<this.state.libraryResults;}
return super.canLoadMore;}
get hasContent(){if(this.state.searchService==='all'){return super.hasContent||!!this.state.libraryMedia.length;}else if(this.state.searchService==='media-library'){return!!this.state.libraryMedia.length;}
return super.hasContent;}
get isFetching(){return super.isFetching||this.state.isFetchingLibrary;}
get selectedMediaIds(){return this.props.selectedMedia[this.props.id].filter(media=>media.mediaType==='libraryMedia').map(({id})=>id);}
get attachmentsDomain(){const domain=super.attachmentsDomain;domain.push(['mimetype','in',IMAGE_MIMETYPES]);if(!this.props.useMediaLibrary){domain.push('|',['url','=',false],'!',['url','=ilike','/web_editor/shape/%']);}
domain.push('!',['name','=like','%.crop']);domain.push('|',['type','=','binary'],'!',['url','=like','/%/static/%']);if(!this.env.debug){const subDomain=[false];const originalId=this.props.media&&this.props.media.dataset.originalId;if(originalId){subDomain.push(originalId);}
domain.push(['original_id','in',subDomain]);}
return domain;}
async uploadFiles(files){await this.uploadService.uploadFiles(files,{resModel:this.props.resModel,resId:this.props.resId,isImage:true},(attachment)=>this.onUploaded(attachment));}
validateUrl(...args){const{isValidUrl,path}=super.validateUrl(...args);const isValidFileFormat=IMAGE_EXTENSIONS.some(format=>path.endsWith(format));return{isValidFileFormat,isValidUrl};}
isInitialMedia(attachment){if(this.props.media.dataset.originalSrc){return this.props.media.dataset.originalSrc===attachment.image_src;}
return this.props.media.getAttribute('src')===attachment.image_src;}
async fetchAttachments(limit,offset){const attachments=await super.fetchAttachments(limit,offset);const primaryColors={};for(let color=1;color<=5;color++){primaryColors[color]=getCSSVariableValue('o-color-'+color);}
return attachments.map(attachment=>{if(attachment.image_src.startsWith('/')){const newURL=new URL(attachment.image_src,window.location.origin);if(attachment.image_src.startsWith('/web_editor/shape/')){newURL.searchParams.forEach((value,key)=>{const match=key.match(/^c([1-5])$/);if(match){newURL.searchParams.set(key,primaryColors[match[1]]);}});}else{newURL.searchParams.set('height',2*this.MIN_ROW_HEIGHT);}
attachment.thumbnail_src=newURL.pathname+newURL.search;}
if(this.selectInitialMedia()&&this.isInitialMedia(attachment)){this.selectAttachment(attachment);}
return attachment;});}
async fetchLibraryMedia(offset){if(!this.state.needle){return{media:[],results:null};}
this.state.isFetchingLibrary=true;try{const response=await this.rpc('/web_editor/media_library_search',{'query':this.state.needle,'offset':offset,},{silent:true,});this.state.isFetchingLibrary=false;const media=(response.media||[]).slice(0,this.NUMBER_OF_MEDIA_TO_DISPLAY);media.forEach(record=>record.mediaType='libraryMedia');return{media,results:response.results};}catch{console.error(`Couldn't reach API endpoint.`);this.state.isFetchingLibrary=false;return{media:[],results:null};}}
async loadMore(...args){await super.loadMore(...args);if(!this.props.useMediaLibrary||this.state.searchService!=='media-library'){return;}
return this.keepLastLibraryMedia.add(this.fetchLibraryMedia(this.state.libraryMedia.length)).then(({media})=>{this.state.libraryMedia.push(...media);});}
async search(...args){await super.search(...args);if(!this.props.useMediaLibrary){return;}
if(!this.state.needle){this.state.searchService='all';}
this.state.libraryMedia=[];this.state.libraryResults=0;return this.keepLastLibraryMedia.add(this.fetchLibraryMedia(0)).then(({media,results})=>{this.state.libraryMedia=media;this.state.libraryResults=results;});}
async onClickAttachment(attachment){this.selectAttachment(attachment);if(!this.props.multiSelect){await this.props.save();}}
async onClickMedia(media){this.props.selectMedia({...media,mediaType:'libraryMedia'});if(!this.props.multiSelect){await this.props.save();}}
static async createElements(selectedMedia,{orm,rpc}){const toSave=Object.fromEntries(selectedMedia.filter(media=>media.mediaType==='libraryMedia').map(media=>[media.id,{query:media.query||'',is_dynamic_svg:!!media.isDynamicSVG,dynamic_colors:media.dynamicColors,}]));let savedMedia=[];if(Object.keys(toSave).length!==0){savedMedia=await rpc('/web_editor/save_library_media',{media:toSave});}
const selected=selectedMedia.filter(media=>media.mediaType==='attachment').concat(savedMedia).map(attachment=>{if(attachment.image_src&&attachment.image_src.startsWith('/web_editor/shape/')){const colorCustomizedURL=new URL(attachment.image_src,window.location.origin);colorCustomizedURL.searchParams.forEach((value,key)=>{const match=key.match(/^c([1-5])$/);if(match){colorCustomizedURL.searchParams.set(key,getCSSVariableValue(`o-color-${match[1]}`));}});attachment.image_src=colorCustomizedURL.pathname+colorCustomizedURL.search;}
return attachment;});return Promise.all(selected.map(async(attachment)=>{const imageEl=document.createElement('img');let src=attachment.image_src;if(!attachment.public){let accessToken=attachment.access_token;if(!accessToken){[accessToken]=await orm.call('ir.attachment','generate_access_token',[attachment.id],);}
src+=`?access_token=${encodeURIComponent(accessToken)}`;}
imageEl.src=src;imageEl.alt=attachment.description||'';return imageEl;}));}
async onImageLoaded(imgEl,attachment){this.debouncedScroll();if(attachment.mediaType==='libraryMedia'&&!imgEl.src.startsWith('blob')){await this.onLibraryImageLoaded(imgEl,attachment);}}
async onLibraryImageLoaded(imgEl,media){const mediaUrl=imgEl.src;try{const response=await fetch(mediaUrl);if(response.headers.get('content-type')==='image/svg+xml'){let svg=await response.text();const dynamicColors={};const combinedColorsRegex=new RegExp(Object.values(DEFAULT_PALETTE).join('|'),'gi');svg=svg.replace(combinedColorsRegex,match=>{const colorId=Object.keys(DEFAULT_PALETTE).find(key=>DEFAULT_PALETTE[key]===match.toUpperCase());const colorKey='c'+colorId
dynamicColors[colorKey]=getCSSVariableValue('o-color-'+colorId);return dynamicColors[colorKey];});const fileName=mediaUrl.split('/').pop();const file=new File([svg],fileName,{type:"image/svg+xml",});imgEl.src=URL.createObjectURL(file);if(Object.keys(dynamicColors).length){media.isDynamicSVG=true;media.dynamicColors=dynamicColors;}}}catch(_e){console.error('CORS is misconfigured on the API server, image will be treated as non-dynamic.');}}}
ImageSelector.mediaSpecificClasses=['img','img-fluid','o_we_custom_image'];ImageSelector.mediaSpecificStyles=[];ImageSelector.mediaExtraClasses=['rounded-circle','rounded','img-thumbnail','shadow','w-25','w-50','w-75','w-100',];ImageSelector.tagNames=['IMG'];ImageSelector.attachmentsListTemplate='web_editor.ImagesListTemplate';ImageSelector.components={...FileSelector.components,AutoResizeImage,};return __exports;});;

/* /web_editor/static/src/components/media_dialog/media_dialog.js */
odoo.define('@web_editor/components/media_dialog/media_dialog',async function(require){'use strict';let __exports={};const{useService}=require('@web/core/utils/hooks');const{useWowlService}=require('@web/legacy/utils');const{Dialog}=require('@web/core/dialog/dialog');const{Notebook}=require('@web/core/notebook/notebook');const{ImageSelector}=require("@web_editor/components/media_dialog/image_selector");const{DocumentSelector}=require("@web_editor/components/media_dialog/document_selector");const{IconSelector}=require("@web_editor/components/media_dialog/icon_selector");const{VideoSelector}=require("@web_editor/components/media_dialog/video_selector");const{Component,useState,onRendered,xml}=require("@odoo/owl");const TABS=__exports.TABS={IMAGES:{id:'IMAGES',title:"Images",Component:ImageSelector,},DOCUMENTS:{id:'DOCUMENTS',title:"Documents",Component:DocumentSelector,},ICONS:{id:'ICONS',title:"Icons",Component:IconSelector,},VIDEOS:{id:'VIDEOS',title:"Videos",Component:VideoSelector,},};const MediaDialog=__exports.MediaDialog=class MediaDialog extends Component{setup(){this.size='xl';this.contentClass='o_select_media_dialog';this.title=this.env._t("Select a media");this.rpc=useService('rpc');this.orm=useService('orm');this.notificationService=useService('notification');this.tabs=[];this.selectedMedia=useState({});this.initialIconClasses=[];this.addTabs();this.errorMessages={};this.state=useState({activeTab:this.initialActiveTab,});}
get initialActiveTab(){if(this.props.activeTab){return this.props.activeTab;}
if(this.props.media){const correspondingTab=Object.keys(TABS).find(id=>TABS[id].Component.tagNames.includes(this.props.media.tagName));if(correspondingTab){return correspondingTab;}}
return this.tabs[0].id;}
addTab(tab,additionalProps={}){this.selectedMedia[tab.id]=[];this.tabs.push({...tab,props:{...tab.props,...additionalProps,id:tab.id,resModel:this.props.resModel,resId:this.props.resId,media:this.props.media,multiImages:this.props.multiImages,selectedMedia:this.selectedMedia,selectMedia:(...args)=>this.selectMedia(...args,tab.id,additionalProps.multiSelect),save:this.save.bind(this),onAttachmentChange:this.props.onAttachmentChange,errorMessages:(errorMessage)=>this.errorMessages[tab.id]=errorMessage,},});}
addTabs(){const onlyImages=this.props.onlyImages||this.props.multiImages||(this.props.media&&this.props.media.parentElement&&(this.props.media.parentElement.dataset.oeField==='image'||this.props.media.parentElement.dataset.oeType==='image'));const noDocuments=onlyImages||this.props.noDocuments;const noIcons=onlyImages||this.props.noIcons;const noVideos=onlyImages||this.props.noVideos;if(!this.props.noImages){this.addTab(TABS.IMAGES,{useMediaLibrary:this.props.useMediaLibrary,multiSelect:this.props.multiImages,});}
if(!noDocuments){this.addTab(TABS.DOCUMENTS);}
if(!noIcons){const fonts=TABS.ICONS.Component.initFonts();this.addTab(TABS.ICONS,{fonts,});if(this.props.media&&TABS.ICONS.Component.tagNames.includes(this.props.media.tagName)){const classes=this.props.media.className.split(/\s+/);const mediaFont=fonts.find(font=>classes.includes(font.base));if(mediaFont){const selectedIcon=mediaFont.icons.find(icon=>icon.names.some(name=>classes.includes(name)));if(selectedIcon){this.initialIconClasses.push(...selectedIcon.names);this.selectMedia(selectedIcon,TABS.ICONS.id);}}}}
if(!noVideos){this.addTab(TABS.VIDEOS,{vimeoPreviewIds:this.props.vimeoPreviewIds,isForBgVideo:this.props.isForBgVideo,});}}
selectMedia(media,tabId,multiSelect){if(multiSelect){const isMediaSelected=this.selectedMedia[tabId].map(({id})=>id).includes(media.id);if(!isMediaSelected){this.selectedMedia[tabId].push(media);}else{this.selectedMedia[tabId]=this.selectedMedia[tabId].filter(m=>m.id!==media.id);}}else{this.selectedMedia[tabId]=[media];}}
async save(){if(this.errorMessages[this.state.activeTab]){this.notificationService.add(this.errorMessages[this.state.activeTab],{type:'danger',});return;}
const selectedMedia=this.selectedMedia[this.state.activeTab];const saveSelectedMedia=selectedMedia.length&&(this.state.activeTab!==TABS.ICONS.id||selectedMedia[0].initialIconChanged||!this.props.media);if(saveSelectedMedia){const elements=await TABS[this.state.activeTab].Component.createElements(selectedMedia,{rpc:this.rpc,orm:this.orm});elements.forEach(element=>{if(this.props.media){element.classList.add(...this.props.media.classList);const style=this.props.media.getAttribute('style');if(style){element.setAttribute('style',style);}
if(this.state.activeTab===TABS.IMAGES.id){if(this.props.media.dataset.shape){element.dataset.shape=this.props.media.dataset.shape;}
if(this.props.media.dataset.shapeColors){element.dataset.shapeColors=this.props.media.dataset.shapeColors;}}}
for(const otherTab of Object.keys(TABS).filter(key=>key!==this.state.activeTab)){for(const property of TABS[otherTab].Component.mediaSpecificStyles){element.style.removeProperty(property);}
element.classList.remove(...TABS[otherTab].Component.mediaSpecificClasses);const extraClassesToRemove=[];for(const name of TABS[otherTab].Component.mediaExtraClasses){if(typeof(name)==='string'){extraClassesToRemove.push(name);}else{for(const className of element.classList){if(className.match(name)){extraClassesToRemove.push(className);}}}}
element.classList.remove(...extraClassesToRemove.filter(candidateName=>{for(const name of TABS[this.state.activeTab].Component.mediaExtraClasses){if(typeof(name)==='string'){if(candidateName===name){return false;}}else{for(const className of element.classList){if(className.match(candidateName)){return false;}}}}
return true;}));}
element.classList.remove(...this.initialIconClasses);element.classList.remove('o_modified_image_to_save');element.classList.remove('oe_edited_link');element.classList.add(...TABS[this.state.activeTab].Component.mediaSpecificClasses);});if(this.props.multiImages){this.props.save(elements);}else{this.props.save(elements[0]);}}
this.props.close();}
onTabChange(tab){this.state.activeTab=tab;}}
MediaDialog.template='web_editor.MediaDialog';MediaDialog.defaultProps={useMediaLibrary:true,};MediaDialog.components={...Object.keys(TABS).map(key=>TABS[key].Component),Dialog,Notebook,};const MediaDialogWrapper=__exports.MediaDialogWrapper=class MediaDialogWrapper extends Component{setup(){this.dialogs=useWowlService('dialog');onRendered(()=>{this.dialogs.add(MediaDialog,this.props);});}}
MediaDialogWrapper.template=xml``;return __exports;});;

/* /web_editor/static/src/components/media_dialog/search_media.js */
odoo.define('@web_editor/components/media_dialog/search_media',async function(require){'use strict';let __exports={};const{useDebounced}=require('@web/core/utils/timing');const{useAutofocus}=require('@web/core/utils/hooks');const{Component,xml,useEffect,useState}=require("@odoo/owl");const SearchMedia=__exports.SearchMedia=class SearchMedia extends Component{setup(){useAutofocus();this.debouncedSearch=useDebounced(this.props.search,1000);this.state=useState({input:this.props.needle||'',});useEffect((input)=>{if(this.hasRendered){this.debouncedSearch(input);}else{this.hasRendered=true;}},()=>[this.state.input]);}}
SearchMedia.template=xml`
<div class="position-relative mw-lg-25 flex-grow-1 me-auto">
    <input type="text" class="o_we_search o_input form-control" t-att-placeholder="props.searchPlaceholder.trim()" t-model="state.input" t-ref="autofocus"/>
    <i class="oi oi-search input-group-text position-absolute end-0 top-50 me-n3 px-2 py-1 translate-middle bg-transparent border-0" title="Search" role="img" aria-label="Search"/>
</div>`;return __exports;});;

/* /web_editor/static/src/components/media_dialog/video_selector.js */
odoo.define('@web_editor/components/media_dialog/video_selector',async function(require){'use strict';let __exports={};const{useService}=require('@web/core/utils/hooks');const{throttle}=require('@web/core/utils/timing');const{qweb}=require('web.core');const{Component,useState,useRef,onMounted,onWillStart}=require("@odoo/owl");class VideoOption extends Component{}
VideoOption.template='web_editor.VideoOption';const VideoSelector=__exports.VideoSelector=class VideoSelector extends Component{setup(){this.rpc=useService('rpc');this.http=useService('http');this.PLATFORMS={youtube:'youtube',dailymotion:'dailymotion',vimeo:'vimeo',youku:'youku',};this.OPTIONS={autoplay:{label:this.env._t("Autoplay"),description:this.env._t("Videos are muted when autoplay is enabled"),platforms:[this.PLATFORMS.youtube,this.PLATFORMS.dailymotion,this.PLATFORMS.vimeo],urlParameter:'autoplay=1',},loop:{label:this.env._t("Loop"),platforms:[this.PLATFORMS.youtube,this.PLATFORMS.vimeo],urlParameter:'loop=1',},hide_controls:{label:this.env._t("Hide player controls"),platforms:[this.PLATFORMS.youtube,this.PLATFORMS.dailymotion,this.PLATFORMS.vimeo],urlParameter:'controls=0',},hide_fullscreen:{label:this.env._t("Hide fullscreen button"),platforms:[this.PLATFORMS.youtube],urlParameter:'fs=0',isHidden:()=>this.state.options.filter(option=>option.id==='hide_controls')[0].value,},hide_yt_logo:{label:this.env._t("Hide Youtube logo"),platforms:[this.PLATFORMS.youtube],urlParameter:'modestbranding=1',isHidden:()=>this.state.options.filter(option=>option.id==='hide_controls')[0].value,},hide_dm_logo:{label:this.env._t("Hide Dailymotion logo"),platforms:[this.PLATFORMS.dailymotion],urlParameter:'ui-logo=0',},hide_dm_share:{label:this.env._t("Hide sharing button"),platforms:[this.PLATFORMS.dailymotion],urlParameter:'sharing-enable=0',},};this.state=useState({options:[],src:'',urlInput:'',platform:null,vimeoPreviews:[],errorMessage:'',});this.urlInputRef=useRef('url-input');onWillStart(async()=>{if(this.props.media){const src=this.props.media.dataset.oeExpression||this.props.media.dataset.src||(this.props.media.tagName==='IFRAME'&&this.props.media.getAttribute('src'))||'';if(src){this.state.urlInput=src;await this.updateVideo();this.state.options=this.state.options.map((option)=>{const{urlParameter}=this.OPTIONS[option.id];return{...option,value:src.indexOf(urlParameter)>=0};});}}});onMounted(async()=>{await Promise.all(this.props.vimeoPreviewIds.map(async(videoId)=>{const{thumbnail_url:thumbnailSrc}=await this.http.get(`https://vimeo.com/api/oembed.json?url=http%3A//vimeo.com/${encodeURIComponent(videoId)}`);this.state.vimeoPreviews.push({id:videoId,thumbnailSrc,src:`https://player.vimeo.com/video/${encodeURIComponent(videoId)}`});}));});this.onChangeUrl=throttle((ev)=>this.updateVideo(ev.target.value),500);}
get shownOptions(){if(this.props.isForBgVideo){return[];}
return this.state.options.filter(option=>!this.OPTIONS[option.id].isHidden||!this.OPTIONS[option.id].isHidden());}
async onChangeOption(optionId){this.state.options=this.state.options.map(option=>{if(option.id===optionId){return{...option,value:!option.value};}
return option;});await this.updateVideo();}
async onClickSuggestion(src){this.state.urlInput=src;await this.updateVideo();}
async updateVideo(){if(!this.state.urlInput){this.state.src='';this.state.urlInput='';this.state.options=[];this.state.platform=null;this.state.errorMessage='';return;}
const embedMatch=this.state.urlInput.match(/(src|href)=["']?([^"']+)?/);if(embedMatch&&embedMatch[2].length>0&&embedMatch[2].indexOf('instagram')){embedMatch[1]=embedMatch[2];}
const url=embedMatch?embedMatch[1]:this.state.urlInput;const options={};if(this.props.isForBgVideo){Object.keys(this.OPTIONS).forEach(key=>{options[key]=true;});}else{for(const option of this.shownOptions){options[option.id]=option.value;}}
const{embed_url:src,platform}=await this._getVideoURLData(url,options);if(!src){this.state.errorMessage=this.env._t("The provided url is not valid");}else if(!platform){this.state.errorMessage=this.env._t("The provided url does not reference any supported video");}else{this.state.errorMessage='';}
this.props.errorMessages(this.state.errorMessage);const newOptions=[];if(platform&&platform!==this.state.platform){Object.keys(this.OPTIONS).forEach(key=>{if(this.OPTIONS[key].platforms.includes(platform)){const{label,description}=this.OPTIONS[key];newOptions.push({id:key,label,description});}});}
this.state.src=src;this.props.selectMedia({id:src,src});if(platform!==this.state.platform){this.state.platform=platform;this.state.options=newOptions;}}
async _getVideoURLData(url,options){return await this.rpc('/web_editor/video_url/data',{video_url:url,...options,});}
static createElements(selectedMedia){return selectedMedia.map(video=>{const template=document.createElement('template');template.innerHTML=qweb.render('web_editor.videoWrapper',{src:video.src});return template.content.firstChild;});}}
VideoSelector.mediaSpecificClasses=['media_iframe_video'];VideoSelector.mediaSpecificStyles=[];VideoSelector.mediaExtraClasses=[];VideoSelector.tagNames=['IFRAME','DIV'];VideoSelector.template='web_editor.VideoSelector';VideoSelector.components={VideoOption,};VideoSelector.defaultProps={vimeoPreviewIds:[],isForBgVideo:false,};return __exports;});;

/* /web_editor/static/src/components/upload_progress_toast/upload_progress_toast.js */
odoo.define('@web_editor/components/upload_progress_toast/upload_progress_toast',async function(require){'use strict';let __exports={};const{useService}=require('@web/core/utils/hooks');const{Component,useState}=require("@odoo/owl");const ProgressBar=__exports.ProgressBar=class ProgressBar extends Component{get progress(){return Math.round(this.props.progress);}}
ProgressBar.template='web_editor.ProgressBar';const UploadProgressToast=__exports.UploadProgressToast=class UploadProgressToast extends Component{setup(){this.uploadService=useService('upload');this.state=useState(this.uploadService.progressToast);}}
UploadProgressToast.template='web_editor.UploadProgressToast';UploadProgressToast.components={ProgressBar};return __exports;});;

/* /web_editor/static/src/components/upload_progress_toast/upload_service.js */
odoo.define('@web_editor/components/upload_progress_toast/upload_service',async function(require){'use strict';let __exports={};const{registry}=require('@web/core/registry');const{UploadProgressToast}=require("@web_editor/components/upload_progress_toast/upload_progress_toast");const{getDataURLFromFile}=require('web.utils');const{reactive}=require("@odoo/owl");const AUTOCLOSE_DELAY=__exports.AUTOCLOSE_DELAY=3000;const uploadService=__exports.uploadService={dependencies:['rpc'],start(env,{rpc}){let fileId=0;const progressToast=reactive({files:{},isVisible:false,});registry.category('main_components').add('UploadProgressToast',{Component:UploadProgressToast,props:{close:()=>progressToast.isVisible=false,}});const addFile=(file)=>{progressToast.files[file.id]=file;progressToast.isVisible=true;return progressToast.files[file.id];};const deleteFile=(fileId)=>{delete progressToast.files[fileId];if(!Object.keys(progressToast.files).length){progressToast.isVisible=false;}};return{get progressToast(){return progressToast;},get fileId(){return fileId;},addFile,deleteFile,incrementId(){fileId++;},uploadUrl:async(url,{resModel,resId},onUploaded)=>{const attachment=await rpc('/web_editor/attachment/add_url',{url,'res_model':resModel,'res_id':resId,});await onUploaded(attachment);},uploadFiles:async(files,{resModel,resId,isImage},onUploaded)=>{const sortedFiles=Array.from(files).sort((a,b)=>a.size-b.size);for(const file of sortedFiles){let fileSize=file.size;if(!fileSize){fileSize=null;}else if(fileSize<1024){fileSize=fileSize.toFixed(2)+" bytes";}else if(fileSize<1048576){fileSize=(fileSize/1024).toFixed(2)+" KB";}else{fileSize=(fileSize/1048576).toFixed(2)+" MB";}
const id=++fileId;file.progressToastId=id;addFile({id,name:file.name,size:fileSize,progress:0,hasError:false,uploaded:false,errorMessage:'',});}
for(const sortedFile of sortedFiles){const file=progressToast.files[sortedFile.progressToastId];const dataURL=await getDataURLFromFile(sortedFile);try{const xhr=new XMLHttpRequest();xhr.upload.addEventListener('progress',ev=>{const rpcComplete=ev.loaded/ev.total*100;file.progress=rpcComplete;});xhr.upload.addEventListener('load',function(){file.progress=100;});const attachment=await rpc('/web_editor/attachment/add_data',{'name':file.name,'data':dataURL.split(',')[1],'res_id':resId,'res_model':resModel,'is_image':!!isImage,'width':0,'quality':0,},{xhr});if(attachment.error){file.hasError=true;file.errorMessage=attachment.error;}else{file.uploaded=true;await onUploaded(attachment);}
setTimeout(()=>deleteFile(file.id),AUTOCLOSE_DELAY);}catch(error){file.hasError=true;setTimeout(()=>deleteFile(file.id),AUTOCLOSE_DELAY);throw error;}}}};},};registry.category('services').add('upload',uploadService);return __exports;});;

/* /web_editor/static/src/js/wysiwyg/dialog.js */
odoo.define('wysiwyg.widgets.Dialog',function(require){'use strict';var config=require('web.config');var core=require('web.core');var Dialog=require('web.Dialog');var _t=core._t;var WysiwygDialog=Dialog.extend({init:function(parent,options){this.options=options||{};if(config.device.isMobile){options.fullscreen=true;}
this._super(parent,_.extend({},{buttons:[{text:this.options.save_text||_t("Save"),classes:'btn-primary',click:this.save,},{text:_t("Discard"),close:true,}]},this.options));this.destroyAction='cancel';this.closeOnSave=true;var self=this;this.opened(function(){const selector=options.focusField?`input[name=${options.focusField}]`:'input:visible:first';self.$(selector).focus();self.$el.closest('.modal').addClass('o_web_editor_dialog');self.$el.closest('.modal').on('hidden.bs.modal',self.options.onClose);});this.on('closed',this,function(){self._toggleFullScreen();if(this.destroyAction){this.trigger(this.destroyAction,this.final_data||null);}});},_toggleFullScreen:function(){if(config.device.isMobile&&!this.hasFullScreen){$('#iframe_target[isMobile="true"] #web_editor-top-edit .o_fullscreen').click();}},save:function(){if(this.closeOnSave){this.destroyAction="save";this.close();}else{this.destroyAction=null;this.trigger('save',this.final_data||null);}},open:function(){this.hasFullScreen=$(window.top.document.body).hasClass('o_field_widgetTextHtml_fullscreen');this._toggleFullScreen();return this._super.apply(this,arguments);},});return WysiwygDialog;});;

/* /web_editor/static/src/js/frontend/loader.js */
odoo.define('web_editor.loader',function(require){'use strict';const{getBundle,loadBundle}=require('@web/core/assets');const exports={};async function loadWysiwyg(additionnalAssets=[]){const xmlids=['web_editor.assets_wysiwyg',...additionnalAssets];for(const xmlid of xmlids){const assets=await getBundle(xmlid);await loadBundle(assets);}}
exports.loadWysiwyg=loadWysiwyg;exports.createWysiwyg=async(parent,options={})=>{const Wysiwyg=await getWysiwygClass(options);return new Wysiwyg(parent,options.wysiwygOptions);};async function getWysiwygClass({moduleName='web_editor.wysiwyg',additionnalAssets=[]}={}){if(!(await odoo.ready(moduleName))){await loadWysiwyg(additionnalAssets);await odoo.ready(moduleName);}
return odoo.__DEBUG__.services[moduleName];}
exports.getWysiwygClass=getWysiwygClass;exports.loadFromTextarea=async(parent,textarea,options)=>{var loading=textarea.nextElementSibling;if(loading&&!loading.classList.contains('o_wysiwyg_loading')){loading=null;}
const $textarea=$(textarea);const currentOptions=Object.assign({},options);currentOptions.value=currentOptions.value||$textarea.val()||'';if(!currentOptions.value.trim()){currentOptions.value='<p><br></p>';}
const Wysiwyg=await getWysiwygClass();const wysiwyg=new Wysiwyg(parent,currentOptions);const $wysiwygWrapper=$textarea.closest('.o_wysiwyg_textarea_wrapper');const $form=$textarea.closest('form');$textarea.hide();$form.append($textarea);$wysiwygWrapper.html('');await wysiwyg.appendTo($wysiwygWrapper);$form.find('.note-editable').data('wysiwyg',wysiwyg);$form.find('.note-editable').find('img.o_we_selected_image').removeClass('o_we_selected_image');$form.on('click','button[type=submit]',(e)=>{$form.find('.note-editable').find('img.o_we_selected_image').removeClass('o_we_selected_image');$form.find('.note-editable').find('img.float-start').removeClass('float-start');$textarea.html(wysiwyg.getValue());});return wysiwyg;};return exports;});;

/* /web_editor/static/src/js/backend/QWebPlugin.js */
odoo.define('@web_editor/js/backend/QWebPlugin',async function(require){'use strict';let __exports={};const{ancestors}=require('@web_editor/js/common/wysiwyg_utils');const QWebPlugin=__exports.QWebPlugin=class QWebPlugin{constructor(options={}){this._options=options;if(this._options.editor){this._editable=this._options.editor.editable;this._document=this._options.editor.document;}else{this._editable=this._options.editable;this._document=this._options.document||window.document;}
this._editable=this._options.editable||(this._options.editor&&this._options.editor.editable);this._document=this._options.document||(this._options.editor&&this._options.editor.document)||window.document;this._tGroupCount=0;this._hideBranchingSelection=this._hideBranchingSelection.bind(this);this._makeBranchingSelection();this._clickListeners=[];}
destroy(){this._selectElWrapper.remove();for(const listener of this._clickListeners){document.removeEventListener('click',listener);}}
cleanForSave(editable){for(const node of editable.querySelectorAll('[data-oe-t-group], [data-oe-t-inline], [data-oe-t-selectable], [data-oe-t-group-active]')){node.removeAttribute('data-oe-t-group-active');node.removeAttribute('data-oe-t-group');node.removeAttribute('data-oe-t-inline');node.removeAttribute('data-oe-t-selectable');}}
sanitizeElement(subRoot){if(subRoot.nodeType!==Node.ELEMENT_NODE){return;}
if(this._options.editor){this._options.editor.observerUnactive('qweb-plugin-sanitize');}
this._fixInlines(subRoot);const demoElements=subRoot.querySelectorAll('[t-esc], [t-raw], [t-out]');for(const element of demoElements){element.setAttribute('contenteditable','false');}
this._groupQwebBranching(subRoot);if(this._options.editor){this._options.editor.observerActive('qweb-plugin-sanitize');}}
_groupQwebBranching(subRoot){const tNodes=subRoot.querySelectorAll('[t-if], [t-elif], [t-else]');const groupsEncounter=new Set();for(const node of tNodes){const parentTNode=[...node.parentElement.children];const index=parentTNode.indexOf(node);const prevNode=parentTNode[index-1];let groupId;if(prevNode&&node.previousElementSibling===prevNode&&!node.hasAttribute('t-if')){prevNode.setAttribute('data-oe-t-selectable','true');groupId=parseInt(prevNode.getAttribute('data-oe-t-group'));node.setAttribute('data-oe-t-selectable','true');}else{groupId=this._tGroupCount++;}
groupsEncounter.add(groupId);node.setAttribute('data-oe-t-group',groupId);const clickListener=e=>{e.stopImmediatePropagation();this._showBranchingSelection(node);};this._clickListeners.push(clickListener);node.addEventListener('click',clickListener);}
for(const groupId of groupsEncounter){const isOneElementActive=subRoot.querySelector(`[data-oe-t-group='${groupId}'][data-oe-t-group-active]`,);if(!isOneElementActive){subRoot.querySelector(`[data-oe-t-group='${groupId}']`).setAttribute('data-oe-t-group-active','true');}}}
_fixInlines(subRoot){const checkAllInline=el=>{return[...el.children].every(child=>{if(child.tagName==='T'){return checkAllInline(child);}else{return(child.nodeType!==Node.ELEMENT_NODE||window.getComputedStyle(child).display==='inline');}});};const tElements=subRoot.querySelectorAll('t');setTimeout(()=>{if(this._options.editor){this._options.editor.observerUnactive('qweb-plugin-checkAllInline');}
for(const tElement of tElements){if(checkAllInline(tElement)){tElement.setAttribute('data-oe-t-inline','true');}}
if(this._options.editor){this._options.editor.observerActive('qweb-plugin-checkAllInline');}});}
_makeBranchingSelection(){const document=this._options.document||window.document;this._selectElWrapper=document.createElement('div');this._selectElWrapper.classList.add('oe-qweb-select');this._selectElWrapper.innerHTML='';document.body.append(this._selectElWrapper);this._hideBranchingSelection();}
_showBranchingSelection(target){this._hideBranchingSelection();const branchingHierarchyElements=[target,...ancestors(target,this._editable)].filter(element=>element.getAttribute('data-oe-t-group-active')==='true').filter(element=>{const itemGroupId=element.getAttribute('data-oe-t-group');const groupItemsNodes=element.parentElement.querySelectorAll(`[data-oe-t-group='${itemGroupId}']`,);return groupItemsNodes.length>1;});if(!branchingHierarchyElements.length)return;const groupsActive=branchingHierarchyElements.map(node=>node.getAttribute('data-oe-t-group'),);for(const branchingElement of branchingHierarchyElements){this._selectElWrapper.prepend(this._renderBranchingSelection(branchingElement));}
const closeSelectHandler=event=>{const path=[event.target,...ancestors(event.target)];const shouldClose=!path.find(element=>element===this._selectElWrapper||groupsActive.includes(element.getAttribute('data-oe-t-group')),);if(shouldClose){this._hideBranchingSelection();document.removeEventListener('mousedown',closeSelectHandler);}};document.addEventListener('mousedown',closeSelectHandler);this._selectElWrapper.style.display='flex';this._updateBranchingSelectionPosition(branchingHierarchyElements[branchingHierarchyElements.length-1],);}
_updateBranchingSelectionPosition(target){window.addEventListener('mousewheel',this._hideBranchingSelection);const box=target.getBoundingClientRect();const selBox=this._selectElWrapper.getBoundingClientRect();this._selectElWrapper.style.left=`${window.scrollX + box.left}px`;this._selectElWrapper.style.top=`${window.scrollY + box.top - selBox.height}px`;}
_renderBranchingSelection(target){const selectEl=document.createElement('select');const groupId=parseInt(target.getAttribute('data-oe-t-group'));const groupElements=target.parentElement.querySelectorAll(`[data-oe-t-group='${groupId}']`,);for(const element of groupElements){const optionElement=document.createElement('option');if(element.hasAttribute('t-if')){optionElement.innerText='if';}else if(element.hasAttribute('t-elif')){optionElement.innerText='elif';}else if(element.hasAttribute('t-else')){optionElement.innerText='else';}
if(element.hasAttribute('data-oe-t-group-active')){optionElement.selected=true;}
selectEl.appendChild(optionElement);}
selectEl.onchange=()=>{let activeElement;for(let i=0;i<groupElements.length;i++){if(i===selectEl.selectedIndex){activeElement=groupElements[i];groupElements[i].setAttribute('data-oe-t-group-active','true');}else{groupElements[i].removeAttribute('data-oe-t-group-active');}}
this._showBranchingSelection(activeElement);};return selectEl;}
_hideBranchingSelection(){this._selectElWrapper.style.display='none';this._selectElWrapper.innerHTML=``;window.removeEventListener('mousewheel',this._hideBranchingSelection);}}
return __exports;});;

/* /web_editor/static/src/js/backend/command_category.js */
odoo.define('@web_editor/js/backend/command_category',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const commandCategoryRegistry=registry.category("command_categories");commandCategoryRegistry.add("shortcut_conflict",{},{sequence:5});return __exports;});;

/* /web_editor/static/src/js/backend/convert_inline.js */
odoo.define('@web_editor/js/backend/convert_inline',async function(require){'use strict';let __exports={};'use strict';const{getAdjacentPreviousSiblings,isBlock,rgbToHex,commonParentGet}=require("@web_editor/js/editor/odoo-editor/src/utils/utils");const RE_COL_MATCH=/(^| )col(-[\w\d]+)*( |$)/;const RE_COMMAS_OUTSIDE_PARENTHESES=/,(?![^(]*?\))/g;const RE_OFFSET_MATCH=/(^| )offset(-[\w\d]+)*( |$)/;const RE_PADDING_MATCH=/[ ]*padding[^;]*;/g;const RE_PADDING=/([\d.]+)/;const RE_WHITESPACE=/[\s\u200b]*/;const SELECTORS_IGNORE=/(^\*$|:hover|:before|:after|:active|:link|::|'|\([^(),]+[,(])/;const FONT_PROPERTIES_TO_INHERIT=['color','font-size','font-family','font-weight','font-style','text-decoration','text-transform','text-align',];const TABLE_ATTRIBUTES=__exports.TABLE_ATTRIBUTES={cellspacing:0,cellpadding:0,border:0,width:'100%',align:'center',role:'presentation',};const TABLE_STYLES=__exports.TABLE_STYLES={'border-collapse':'collapse','text-align':'inherit','font-size':'unset','line-height':'inherit',};function addTables($editable){const editable=$editable.get(0);for(const snippet of editable.querySelectorAll('.o_mail_snippet_general, .o_layout')){const table=_createTable(snippet.attributes);const row=document.createElement('tr');const col=document.createElement('td');row.appendChild(col);table.appendChild(row);for(const child of[...snippet.childNodes]){col.appendChild(child);}
snippet.before(table);snippet.remove();const childTables=[...col.children].filter(child=>child.nodeName==='TABLE');if(!childTables.length){const tableB=_createTable();const rowB=document.createElement('tr');const colB=document.createElement('td');rowB.appendChild(colB);tableB.appendChild(rowB);for(const child of[...col.childNodes]){colB.appendChild(child);}
col.appendChild(tableB);}}}
function attachmentThumbnailToLinkImg($editable){const editable=$editable.get(0);const links=[...editable.querySelectorAll(`a[href*="/web/content/"][data-mimetype]:empty`)].filter(link=>(RE_WHITESPACE.test(link.textContent)));for(const link of links){const image=document.createElement('img');image.setAttribute('src',_getStylePropertyValue(link,'background-image').replace(/(^url\(['"])|(['"]\)$)/g,''));image.setAttribute('height',Math.max(1,_getHeight(link)));image.setAttribute('width',Math.max(1,_getWidth(link)));link.prepend(image);};}
function bootstrapToTable(editable){for(const rowInColumn of[...editable.querySelectorAll('.row')].filter(row=>RE_COL_MATCH.test(row.parentElement.className))){const parentColumn=rowInColumn.parentElement;const previous=rowInColumn.previousElementSibling;if(previous&&previous.classList.contains('o_fake_table')){previous.append(rowInColumn);}else{_wrap(rowInColumn,'div','o_fake_table');}
const rowStyle=getComputedStyle(rowInColumn);const columnStyle=getComputedStyle(parentColumn);for(const side of['left','right']){const negativeMargin=+rowStyle[`margin-${side}`].replace('px','');const columnPadding=+columnStyle[`padding-${side}`].replace('px','');if(negativeMargin<0&&columnPadding>=Math.abs(negativeMargin)){parentColumn.style[`padding-${side}`]=`${columnPadding + negativeMargin}px`;rowInColumn.style[`margin-${side}`]=0;}}}
for(const masonryTopInnerContainer of editable.querySelectorAll('.s_masonry_block > .container')){masonryTopInnerContainer.style.setProperty('height','100%');}
for(const masonryGrid of editable.querySelectorAll('.o_masonry_grid_container')){masonryGrid.style.setProperty('padding',0);for(const fakeTable of[...masonryGrid.children].filter(c=>c.classList.contains('o_fake_table'))){fakeTable.style.setProperty('height',_getHeight(fakeTable)+'px');}}
for(const masonryRow of editable.querySelectorAll('.o_masonry_grid_container > .o_fake_table > .row.h-100')){masonryRow.style.removeProperty('height');masonryRow.parentElement.style.setProperty('height','100%');}
const containers=editable.querySelectorAll('.container, .container-fluid, .o_fake_table');for(const container of containers){container.setAttribute('o-temp-width',_getWidth(container));}
for(const container of[...containers].filter(n=>[...n.children].some(c=>c.classList.contains('row')))){const containerWidth=parseFloat(container.getAttribute('o-temp-width'));const table=_createTable(container.attributes);for(const child of[...container.childNodes]){table.append(child);}
table.classList.remove('container','container-fluid','o_fake_table');if(!table.className){table.removeAttribute('class');}
container.before(table);container.remove();for(const row of[...table.children].filter(child=>isBlock(child)&&!child.classList.contains('row'))){const newCol=_wrap(row,'div','col-12');_wrap(newCol,'div','row');}
for(const bootstrapRow of[...table.children].filter(c=>c.classList.contains('row'))){const tr=document.createElement('tr');for(const attr of bootstrapRow.attributes){tr.setAttribute(attr.name,attr.value);}
tr.classList.remove('row');if(!tr.className){tr.removeAttribute('class');}
for(const child of[...bootstrapRow.childNodes]){tr.append(child);}
bootstrapRow.before(tr);bootstrapRow.remove();const bootstrapColumns=[...tr.children].filter(column=>column.className&&column.className.match(RE_COL_MATCH));const flexColumns=bootstrapColumns.filter(column=>!/\d/.test(column.className.match(RE_COL_MATCH)[0]||'0'));const colTotalSize=bootstrapColumns.map(child=>_getColumnSize(child)+_getColumnOffsetSize(child)).reduce((a,b)=>a+b,0);const colSize=Math.max(1,Math.round((12-colTotalSize)/flexColumns.length));for(const flexColumn of flexColumns){flexColumn.classList.remove(flexColumn.className.match(RE_COL_MATCH)[0].trim());flexColumn.classList.add(`col-${colSize}`);}
let columnIndex=0;for(const bootstrapColumn of[...bootstrapColumns]){const offsetSize=_getColumnOffsetSize(bootstrapColumn);if(offsetSize){const newColumn=document.createElement('div');newColumn.classList.add(`col-${offsetSize}`);bootstrapColumn.classList.remove(bootstrapColumn.className.match(RE_OFFSET_MATCH)[0].trim());bootstrapColumn.before(newColumn);bootstrapColumns.splice(columnIndex,0,newColumn);columnIndex++;}
columnIndex++;}
let grid=_createColumnGrid();let gridIndex=0;let currentRow=tr.cloneNode();tr.after(currentRow);let currentCol;columnIndex=0;for(const bootstrapColumn of bootstrapColumns){const columnSize=_getColumnSize(bootstrapColumn);if(gridIndex+columnSize<12){currentCol=grid[gridIndex];_applyColspan(currentCol,columnSize,containerWidth);gridIndex+=columnSize;if(columnIndex===bootstrapColumns.length-1){_applyColspan(grid[gridIndex],12-gridIndex,containerWidth);currentRow.append(...grid.filter(td=>td.getAttribute('colspan')));}}else if(gridIndex+columnSize===12){currentCol=grid[gridIndex];_applyColspan(currentCol,columnSize,containerWidth);currentRow.append(...grid.filter(td=>td.getAttribute('colspan')));if(columnIndex!==bootstrapColumns.length-1){const previousRow=currentRow;currentRow=currentRow.cloneNode();previousRow.after(currentRow);grid=_createColumnGrid();gridIndex=0;}}else{_applyColspan(grid[gridIndex],12-gridIndex,containerWidth);currentRow.append(...grid.filter(td=>td.getAttribute('colspan')));const previousRow=currentRow;currentRow=currentRow.cloneNode();previousRow.after(currentRow);grid=_createColumnGrid();currentCol=grid[0];_applyColspan(currentCol,columnSize,containerWidth);gridIndex=columnSize;if(columnIndex===bootstrapColumns.length-1&&gridIndex<12){_applyColspan(grid[gridIndex],12-gridIndex,containerWidth);currentRow.append(...grid.filter(td=>td.getAttribute('colspan')));}}
if(currentCol){for(const attr of bootstrapColumn.attributes){if(attr.name!=='colspan'){currentCol.setAttribute(attr.name,attr.value);}}
const colMatch=bootstrapColumn.className.match(RE_COL_MATCH);currentCol.classList.remove(colMatch[0].trim());if(!currentCol.className){currentCol.removeAttribute('class');}
for(const child of[...bootstrapColumn.childNodes]){currentCol.append(child);}
_applyColspan(currentCol,+currentCol.getAttribute('colspan'),containerWidth);}
columnIndex++;}
tr.remove();}}
for(const table of editable.querySelectorAll('table')){table.removeAttribute('o-temp-width');}
const tds=[...editable.querySelectorAll('td')].filter(td=>td.children.length>1&&[...td.children].every(child=>child.nodeName==='TABLE')).reverse();for(const td of tds){const table=_createTable();const trs=[...td.children].map(child=>_wrap(child,'td')).map(wrappedChild=>_wrap(wrappedChild,'tr'));trs[0].before(table);table.append(...trs);}}
function cardToTable(editable){for(const card of editable.querySelectorAll('.card')){const table=_createTable(card.attributes);table.style.removeProperty('overflow');const cardImgTopSuperRows=[];for(const child of[...card.childNodes]){const row=document.createElement('tr');const col=document.createElement('td');if(isBlock(child)){for(const attr of child.attributes){col.setAttribute(attr.name,attr.value);}
for(const descendant of[...child.childNodes]){col.append(descendant);}
child.remove();}else if(child.nodeType===Node.TEXT_NODE){if(child.textContent.replace(RE_WHITESPACE,'').length){col.append(child);}else{continue;}}else{col.append(child);}
const subTable=_createTable();const superRow=document.createElement('tr');const superCol=document.createElement('td');row.append(col);subTable.append(row);superCol.append(subTable);superRow.append(superCol);table.append(superRow);if(child.classList&&child.classList.contains('card-img-top')){cardImgTopSuperRows.push(superRow);}}
const smallestCardImgRow=Math.min(0,...cardImgTopSuperRows.map(row=>row.clientHeight));for(const row of cardImgTopSuperRows){row.style.height=smallestCardImgRow+'px';}
card.before(table);card.remove();}}
function classToStyle($editable,cssRules){const editable=$editable.get(0);const writes=[];const nodeToRules=new Map();const rulesToProcess=[];for(const rule of cssRules){const nodes=editable.querySelectorAll(rule.selector);if(nodes.length){rulesToProcess.push(rule);}
for(const node of nodes){const nodeRules=nodeToRules.get(node);if(!nodeRules){nodeToRules.set(node,[rule]);}else{nodeRules.push(rule);}}}
_computeStyleAndSpecificityOnRules(rulesToProcess);for(const rules of nodeToRules.values()){rules.sort((a,b)=>a.specificity-b.specificity);}
for(const node of nodeToRules.keys()){const nodeRules=nodeToRules.get(node);const css=nodeRules?_getMatchedCSSRules(node,nodeRules):{};for(const styleName of node.style){if(styleName.includes('flex')||`${node.style[styleName]}`.includes('flex')){writes.push(()=>{node.style[styleName]='';});}}
let style=node.getAttribute('style')||'';style=style.replace(/!important/g,'');for(const[key,value]of Object.entries(css)){if(!(new RegExp(`(^|;)\\s*${key}`).test(style))){style=`${key}:${value};${style}`;}};if(_.isEmpty(style)){writes.push(()=>{node.removeAttribute('style');});}else{writes.push(()=>{node.setAttribute('style',style);if(node.style.width){node.setAttribute('width',node.style.width.replace('px','').trim());}});}
if(node.nodeName==='IMG'){writes.push(()=>{if(node.classList.contains('s_media_list_img')){node.style.removeProperty('height');}
if(node.style.getPropertyValue('width')==='100%'&&node.style.getPropertyValue('object-fit')===''){node.style.setProperty('object-fit','cover');}});}
if(node.nodeName==='TD'&&!node.childNodes.length){writes.push(()=>{node.appendChild(document.createTextNode('\u00A0'));});}
if(node.nodeName==='A'&&node.classList.contains('btn')&&!node.classList.contains('btn-link')&&!node.children.length){writes.push(()=>{node.before(_createMso(`<table align="center" border="0"
                    role="presentation" cellpadding="0" cellspacing="0"
                    style="border-radius: 6px; border-collapse: separate !important;">
                        <tbody>
                            <tr>
                                <td style="${node.style.cssText.replace(RE_PADDING_MATCH, '').replaceAll('"', '&quot;')}" ${
                                    node.parentElement.style.textAlign === 'center' ? 'align="center" ' : ''
                                }bgcolor="${rgbToHex(node.style.backgroundColor)}">
                    `));node.after(_createMso(`</td>
                        </tr>
                    </tbody>
                </table>`));});}else if(node.nodeName==='IMG'&&node.classList.contains('mx-auto')&&node.classList.contains('d-block')){writes.push(()=>{_wrap(node,'p','o_outlook_hack','text-align:center;margin:0');});}
writes.push(()=>{let computedStyle;for(const styleName of node.style){const styleValue=node.style.getPropertyValue(styleName);if(styleValue.includes('var(')||styleValue.includes('calc(')){computedStyle=computedStyle||getComputedStyle(node);const prop=styleValue.includes('var(')?styleValue.replace(/var\((.*)\)/,'$1'):styleName;const value=computedStyle.getPropertyValue(prop)||computedStyle.getPropertyValue(styleName);node.style.setProperty(styleName,value);}}});writes.push(()=>{const propsToConvert=FONT_PROPERTIES_TO_INHERIT.filter(prop=>node.style[prop]==='inherit');if(propsToConvert.length){const computedStyle=getComputedStyle(node);for(const prop of propsToConvert){node.style.setProperty(prop,computedStyle[prop]);}}});};writes.forEach(fn=>fn());}
function enforceTablesResponsivity(editable){const trs=[...editable.querySelectorAll('.o_mail_wrapper tr')].filter(tr=>[...tr.children].some(td=>td.classList.contains('o_converted_col'))).reverse();for(const tr of trs){const commonTable=_createTable();commonTable.style.height='100%';const commonTr=document.createElement('tr');const commonTd=document.createElement('td');commonTr.appendChild(commonTd);commonTable.appendChild(commonTr);const tds=[...tr.children].filter(child=>child.nodeName==='TD');let index=0;for(const td of tds){const width=td.style.maxWidth;const div=document.createElement('div');div.style.display='inline-block';div.style.verticalAlign='top';div.classList.add('o_stacking_wrapper');commonTd.appendChild(div);const newTable=_createTable();newTable.style.width=width;newTable.classList.add('o_stacking_wrapper');div.appendChild(newTable);const newTr=document.createElement('tr');newTable.appendChild(newTr);newTr.appendChild(td);td.style.width='100%';td.removeAttribute('width');if(index===0){div.before(_createMso(`
                    <table cellpadding="0" cellspacing="0" border="0" role="presentation" style="width: 100%;">
                        <tr>
                            <td valign="top" style="width: ${width};">`));}else{div.before(_createMso(`</td><td valign="top" style="width: ${width};">`));}
if(index===tds.length-1){div.after(_createMso(`</td></tr></table>`));}
index++;}
const topTd=document.createElement('td');topTd.appendChild(commonTable);tr.prepend(topTd);}}
function handleMasonry(editable){const masonryTrs=editable.querySelectorAll('.s_masonry_block tr');for(const tr of masonryTrs){const height=_getHeight(tr);const tds=[...tr.children].filter(child=>child.nodeName==='TD');const tdsWithTable=tds.filter(td=>[...td.children].some(child=>child.nodeName==='TABLE'));if(tdsWithTable.length){for(const tdWithTable of tdsWithTable){tdWithTable.classList.add('o_desktop_h100');tdWithTable.style.setProperty('height','100%');}
tds.forEach(td=>td.style.setProperty('height',height+'px'));}
const trSiblings=[...tr.parentElement.children].filter(child=>child.nodeName==='TR');if(trSiblings.length>1&&(tr.classList.contains('h-100')||tr.style.getPropertyValue('height')==='100%')){tr.style.setProperty('height',`${_getHeight(tr.parentElement) / trSiblings.length}px`);}}
for(const tr of masonryTrs){const height=tr.style.height.includes('px')?parseFloat(tr.style.height.replace('px','').trim()):_getHeight(tr);tr.closest('table').classList.add('o_desktop_h100');tr.classList.add('o_desktop_h100');for(const td of[...tr.children].filter(child=>child.nodeName==='TD')){td.classList.add('o_desktop_h100');td.style.setProperty('height','100%');const childrenNames=[...td.children].map(child=>child.nodeName);if(!childrenNames.includes('TABLE')){const wrapper=document.createElement('div');wrapper.style.setProperty('display','inline-block');wrapper.style.setProperty('width','100%');const tdStyle=getComputedStyle(td);wrapper.style.setProperty('color',tdStyle.color);const firstNonCommentChild=[...td.childNodes].find(child=>child.nodeType!==Node.COMMENT_NODE);let anchor;if(firstNonCommentChild){anchor=getAdjacentPreviousSiblings(firstNonCommentChild).filter(sib=>sib.nodeType!==Node.TEXT_NODE).shift();}
for(const child of[...td.childNodes].filter(child=>child.nodeType!==Node.COMMENT_NODE)){wrapper.append(child);}
anchor?anchor.after(wrapper):td.append(wrapper);const centeringSpan=document.createElement('span');centeringSpan.style.setProperty('height','100%');centeringSpan.style.setProperty('display','inline-block');centeringSpan.style.setProperty('vertical-align','middle');td.prepend(centeringSpan);if(td.style.height.includes('%')){const newHeight=height*parseFloat(td.style.height.replace('%').trim())/100;td.style.setProperty('height',newHeight+'px');td.style.setProperty('max-height',newHeight+'px');wrapper.style.setProperty('max-height',newHeight+'px');if(wrapper.childElementCount===1&&wrapper.firstElementChild.nodeName==='IMG'&&wrapper.firstElementChild.style.height==='100%'){wrapper.firstElementChild.style.setProperty('max-height',newHeight+'px');}}}}}}
function enforceImagesResponsivity(editable){for(const image of editable.querySelectorAll('td > img')){const td=image.parentElement;if(td.childElementCount===1&&(image.classList.contains('h-100')||_getStylePropertyValue(image,'height')==='100%')){td.style.setProperty('height',_getHeight(td.parentElement)+'px');image.style.setProperty('height','100%');}}
for(const image of editable.querySelectorAll('img[width="100%"][height]')){image.before(_createMso(image.outerHTML));image.classList.add('mso-hide');image.removeAttribute('height');}}
async function toInline($editable,cssRules,$iframe){$editable.removeClass('odoo-editor-editable');const editable=$editable.get(0);const iframe=$iframe&&$iframe.get(0);const wysiwyg=$editable.data('wysiwyg');const doc=editable.ownerDocument;cssRules=cssRules||wysiwyg&&wysiwyg._rulesCache;if(!cssRules){cssRules=getCSSRules(doc);if(wysiwyg){wysiwyg._rulesCache=cssRules;}}
const displaysToRestore=[];if(_isHidden(editable)){let ancestor=editable;while(ancestor&&ancestor.nodeName!=='html'&&_isHidden(ancestor)){if(_getStylePropertyValue(ancestor,'display')==='none'){displaysToRestore.push([ancestor,ancestor.style.display]);ancestor.style.setProperty('display','block');}
ancestor=ancestor.parentElement;if((!ancestor||ancestor.nodeName==='HTML')&&iframe){ancestor=iframe;}}}
for(const imgTop of editable.querySelectorAll('.card-img-top')){imgTop.style.setProperty('height',_getHeight(imgTop)+'px');}
attachmentThumbnailToLinkImg($editable);fontToImg($editable);await svgToPng($editable);for(const image of editable.querySelectorAll('img.img-fluid')){const width=_getWidth(image);const clone=image.cloneNode();clone.setAttribute('width',width);clone.style.setProperty('width',width+'px');clone.style.removeProperty('max-width');image.before(_createMso(clone.outerHTML));_hideForOutlook(image);}
classToStyle($editable,cssRules);bootstrapToTable(editable);cardToTable(editable);listGroupToTable(editable);addTables($editable);handleMasonry(editable);const rootFontSizeProperty=getComputedStyle(editable.ownerDocument.documentElement).fontSize;const rootFontSize=parseFloat(rootFontSizeProperty.replace(/[^\d\.]/g,''));normalizeRem($editable,rootFontSize);enforceImagesResponsivity(editable);enforceTablesResponsivity(editable);flattenBackgroundImages(editable);formatTables($editable);normalizeColors($editable);responsiveToStaticForOutlook(editable);for(const attributeName of['width','height']){const images=editable.querySelectorAll('img');for(const image of images){if(image.style[attributeName]!=='auto'){const value=image.getAttribute(attributeName)||(attributeName==='height'&&image.offsetHeight)||(attributeName==='width'?_getWidth(image):_getHeight(image));if(value){image.setAttribute(attributeName,value);image.style.setProperty(attributeName,value+'px');}}};};for(const centeredImage of editable.querySelectorAll('td > img.mx-auto')){if(centeredImage.parentElement.children.length===1){centeredImage.parentElement.style.setProperty('text-align','center');}}
[editable,...editable.querySelectorAll('[contenteditable]')].forEach(node=>node.removeAttribute('contenteditable'));editable.querySelectorAll('.mso-hide').forEach(_hideForOutlook);editable.querySelectorAll('[style*=font-family]').forEach(n=>(n.nodeName==='IMG'?n.style.removeProperty('font-family'):n.setAttribute('style',n.getAttribute('style').replaceAll('"','\''))));$editable.find('style').remove();editable.querySelectorAll('.o_converted_col').forEach(node=>node.classList.remove('o_converted_col'));for(const[node,displayValue]of displaysToRestore){node.style.setProperty('display',displayValue);}
$editable.addClass('odoo-editor-editable');}
function flattenBackgroundImages(editable){const backgroundImages=[...editable.querySelectorAll('*[style*=background-image]')].filter(el=>!el.closest('.mso-hide')).reverse();for(const backgroundImage of backgroundImages){const vml=_backgroundImageToVml(backgroundImage);if(vml){backgroundImage.after(_createMso(vml));backgroundImage.classList.add('mso-hide');}}}
function fontToImg($editable){const editable=$editable.get(0);const fonts=odoo.__DEBUG__.services["wysiwyg.fonts"];for(const font of editable.querySelectorAll('.fa')){let icon,content;fonts.fontIcons.find(fontIcon=>{return fonts.getCssSelectors(fontIcon.parser).find(data=>{if(font.matches(data.selector.replace(/::?before/g,''))){icon=data.names[0].split('-').shift();content=data.css.match(/content:\s*['"]?(.)['"]?/)[1];return true;}});});if(content){const color=_getStylePropertyValue(font,'color').replace(/\s/g,'');let backgroundColoredElement=font;let bg,isTransparent;do{bg=_getStylePropertyValue(backgroundColoredElement,'background-color').replace(/\s/g,'');isTransparent=bg==='transparent'||bg==='rgba(0,0,0,0)';backgroundColoredElement=backgroundColoredElement.parentElement;}while(isTransparent&&backgroundColoredElement);if(bg==='rgba(0,0,0,0)'&&isTransparent){bg='rgb(255,255,255)';}
const style=font.getAttribute('style');const width=_getWidth(font);const height=_getHeight(font);const lineHeight=_getStylePropertyValue(font,'line-height');font.style.setProperty('height','fit-content');font.style.setProperty('width','fit-content');font.style.setProperty('line-height','normal');const intrinsicWidth=_getWidth(font);const intrinsicHeight=_getHeight(font);const hPadding=width&&intrinsicWidth&&(width-intrinsicWidth)/2;const vPadding=height&&intrinsicHeight&&(height-intrinsicHeight)/2;let padding='';if(hPadding||vPadding){padding=vPadding?vPadding+'px ':'0 ';padding+=hPadding?hPadding+'px':'0';}
const image=document.createElement('img');image.setAttribute('width',intrinsicWidth);image.setAttribute('height',intrinsicHeight);image.setAttribute('src',`/web_editor/font_to_img/${content.charCodeAt(0)}/${encodeURIComponent(color)}/${encodeURIComponent(bg)}/${Math.max(1, Math.round(intrinsicWidth))}x${Math.max(1, Math.round(intrinsicHeight))}`);image.setAttribute('data-class',font.getAttribute('class'));image.setAttribute('data-style',style);image.setAttribute('style',style);image.style.setProperty('box-sizing','border-box');image.style.setProperty('line-height',lineHeight);image.style.setProperty('width',intrinsicWidth+'px');image.style.setProperty('height',intrinsicHeight+'px');image.style.setProperty('vertical-align','unset');if(!padding){image.style.setProperty('margin',_getStylePropertyValue(font,'margin'));}
const wrapper=document.createElement('span');wrapper.style.setProperty('display','inline-block');wrapper.append(image);font.before(wrapper);if(font.classList.contains('mx-auto')){wrapper.parentElement.style.textAlign='center';}
font.remove();wrapper.style.setProperty('padding',padding);const wrapperWidth=width+['left','right'].reduce((sum,side)=>(sum+(+_getStylePropertyValue(image,`margin-${side}`).replace('px','')||0)),0);wrapper.style.setProperty('width',wrapperWidth+'px');wrapper.style.setProperty('height',height+'px');wrapper.style.setProperty('vertical-align','text-bottom');wrapper.style.setProperty('background-color',image.style.backgroundColor);wrapper.setAttribute('class','oe_unbreakable '+
font.getAttribute('class').replace(new RegExp('(^|\\s+)'+icon+'(-[^\\s]+)?','gi'),''));}else{font.remove();}}}
function formatTables($editable){const editable=$editable.get(0);const writes=[];for(const table of editable.querySelectorAll('table.o_mail_snippet_general, .o_mail_snippet_general table')){const tablePaddingTop=parseFloat(_getStylePropertyValue(table,'padding-top').match(RE_PADDING)[1]);const tablePaddingRight=parseFloat(_getStylePropertyValue(table,'padding-right').match(RE_PADDING)[1]);const tablePaddingBottom=parseFloat(_getStylePropertyValue(table,'padding-bottom').match(RE_PADDING)[1]);const tablePaddingLeft=parseFloat(_getStylePropertyValue(table,'padding-left').match(RE_PADDING)[1]);const rows=[...table.querySelectorAll('tr')].filter(tr=>tr.closest('table')===table);const columns=[...table.querySelectorAll('td')].filter(td=>td.closest('table')===table);for(const column of columns){const columnsInRow=[...column.closest('tr').querySelectorAll('td')].filter(td=>td.closest('table')===table);const columnIndex=columnsInRow.findIndex(col=>col===column);const rowIndex=rows.findIndex(row=>row===column.closest('tr'));if(!rowIndex){const match=_getStylePropertyValue(column,'padding-top').match(RE_PADDING);const columnPaddingTop=match?parseFloat(match[1]):0;writes.push(()=>{column.style['padding-top']=`${columnPaddingTop + tablePaddingTop}px`;});}
if(columnIndex===columnsInRow.length-1){const match=_getStylePropertyValue(column,'padding-right').match(RE_PADDING);const columnPaddingRight=match?parseFloat(match[1]):0;writes.push(()=>{column.style['padding-right']=`${columnPaddingRight + tablePaddingRight}px`;});}
if(rowIndex===rows.length-1){const match=_getStylePropertyValue(column,'padding-bottom').match(RE_PADDING);const columnPaddingBottom=match?parseFloat(match[1]):0;writes.push(()=>{column.style['padding-bottom']=`${columnPaddingBottom + tablePaddingBottom}px`;});}
if(!columnIndex){const match=_getStylePropertyValue(column,'padding-left').match(RE_PADDING);const columnPaddingLeft=match?parseFloat(match[1]):0;writes.push(()=>{column.style['padding-left']=`${columnPaddingLeft + tablePaddingLeft}px`;});}}
writes.push(()=>{table.style.removeProperty('padding');});}
writes.forEach((fn)=>fn());for(const table of[...editable.querySelectorAll('table')].filter(n=>![...n.children].some(c=>c.nodeName==='TBODY'))){const contents=[...table.childNodes];const tbody=document.createElement('tbody');tbody.style.setProperty('vertical-align','top');table.prepend(tbody);tbody.append(...contents);}
for(const node of[...editable.querySelectorAll('*')].filter(n=>(n.style&&n.style.getPropertyValue('height')==='100%'&&(!n.parentElement.style.getPropertyValue('height')||n.parentElement.style.getPropertyValue('height').includes('%'))))){let parent=node.parentElement;let height=parent.style.getPropertyValue('height');while(parent&&height&&height.includes('%')){parent=parent.parentElement;height=parent.style.getPropertyValue('height');}
if(parent){parent.style.setProperty('height',$(parent).height());}}
for(const cell of editable.querySelectorAll('td')){const alignSelf=cell.style.alignSelf;const justifyContent=cell.style.justifyContent;if(alignSelf==='start'||justifyContent==='start'||justifyContent==='flex-start'){cell.style.verticalAlign='top';}else if(alignSelf==='center'||justifyContent==='center'){const parentCell=cell.parentElement.closest('td');const parentTable=cell.closest('table');if(parentCell){parentTable.style.height=_getHeight(parentCell)+'px';}
cell.style.verticalAlign='middle';}else if(alignSelf==='end'||justifyContent==='end'||justifyContent==='flex-end'){cell.style.verticalAlign='bottom';}}
for(const row of editable.querySelectorAll('tr')){const alignItems=row.style.alignItems;if(alignItems==='flex-start'){row.style.verticalAlign='top';}else if(alignItems==='center'){row.style.verticalAlign='middle';}else if(alignItems==='flex-end'||alignItems==='baseline'){row.style.verticalAlign='bottom';}else if(alignItems==='stretch'){const columns=[...row.querySelectorAll('td.o_converted_col')];if(columns.length>1){const commonAncestor=commonParentGet(columns[0],columns[1]);const biggestHeight=commonAncestor.clientHeight;for(const column of columns){column.style.height=biggestHeight+'px';}}}}
for(const table of editable.querySelectorAll('table')){const propsToConvert=FONT_PROPERTIES_TO_INHERIT.filter(prop=>table.style[prop]==='inherit'||!table.style[prop]);if(propsToConvert.length){for(const prop of propsToConvert){let ancestor=table;while(ancestor&&(!ancestor.style[prop]||ancestor.style[prop]==='inherit')){ancestor=ancestor.parentElement;}
if(ancestor){table.style.setProperty(prop,ancestor.style[prop]);}}}}}
function getCSSRules(doc){const cssRules=[];for(const sheet of doc.styleSheets){let rules;try{rules=sheet.rules||sheet.cssRules;}catch(e){console.log("Can't read the css rules of: "+sheet.href,e);continue;}
for(const rule of(rules||[])){const subRules=[rule];const conditionText=rule.conditionText;const minWidthMatch=conditionText&&conditionText.match(/\(min-width *: *(\d+)/);const minWidth=minWidthMatch&&+(minWidthMatch[1]||'0');if(minWidth&&minWidth>=992){let mediaRules;try{mediaRules=rule.rules||rule.cssRules;subRules.push(...mediaRules);}catch(e){console.log(`Can't read the css rules of: ${sheet.href} (${conditionText})`,e);}}
for(const subRule of subRules){const selectorText=subRule.selectorText||'';for(const selector of selectorText.split(RE_COMMAS_OUTSIDE_PARENTHESES)){if(selector&&!SELECTORS_IGNORE.test(selector)){cssRules.push({selector:selector.trim(),rawRule:subRule});if(selector==='body'){cssRules.push({selector:'.o_layout',rawRule:subRule,specificity:1});}}}}}}
return cssRules;}
function listGroupToTable(editable){for(const listGroup of editable.querySelectorAll('.list-group')){let table;if(listGroup.querySelectorAll('.list-group-item').length){table=_createTable(listGroup.attributes);}else{table=listGroup.cloneNode();for(const attr of listGroup.attributes){table.setAttribute(attr.name,attr.value);}}
for(const child of[...listGroup.childNodes]){if(child.classList&&child.classList.contains('list-group-item')){const row=document.createElement('tr');const col=document.createElement('td');for(const attr of child.attributes){col.setAttribute(attr.name,attr.value);}
col.append(...child.childNodes);col.classList.remove('list-group-item');if(!col.className){col.removeAttribute('class');}
row.append(col);table.append(row);child.remove();}else if(child.nodeName==='LI'){table.append(...child.childNodes);}else{table.append(child);}}
table.classList.remove('list-group');if(!table.className){table.removeAttribute('class');}
if(listGroup.nodeName==='TD'){listGroup.append(table);listGroup.classList.remove('list-group');if(!listGroup.className){listGroup.removeAttribute('class');}}else{listGroup.before(table);listGroup.remove();}}}
function normalizeColors($editable){const editable=$editable.get(0);for(const node of editable.querySelectorAll('[style*="rgb"]')){const rgbaMatch=node.getAttribute('style').match(/rgba?\(([\d\.]+\s*,?\s*){3,4}\)/g);for(const rgb of rgbaMatch||[]){node.setAttribute('style',node.getAttribute('style').replace(rgb,rgbToHex(rgb,node)));}}}
function normalizeRem($editable,rootFontSize=16){const editable=$editable.get(0);for(const node of editable.querySelectorAll('[style*="rem"]')){const remMatch=node.getAttribute('style').match(/[\d\.]+\s*rem/g);for(const rem of remMatch||[]){const remValue=parseFloat(rem.replace(/[^\d\.]/g,''));const pxValue=Math.round(remValue*rootFontSize*100)/100;node.setAttribute('style',node.getAttribute('style').replace(rem,pxValue+'px'));}}}
function responsiveToStaticForOutlook(editable){for(const td of editable.querySelectorAll('td.o_converted_col:not(.mso-hide)')){const tdStyle=td.getAttribute('style')||'';const msoAttributes=[...td.attributes].filter(attr=>attr.name!=='style'&&attr.name!=='width');const msoWidth=td.style.getPropertyValue('max-width');const msoStyles=tdStyle.replace(/(^| |max-)width:[^;]*;\s*/g,'');const outlookTd=document.createElement('td');for(const attribute of msoAttributes){outlookTd.setAttribute(attribute.name,td.getAttribute(attribute.name));}
if(msoWidth){outlookTd.setAttribute('width',(''+msoWidth).replace('px','').trim());outlookTd.setAttribute('style',`${msoStyles}width: ${msoWidth};`);}else{outlookTd.setAttribute('style',msoStyles);}
if(td.closest('.s_masonry_block')){outlookTd.style.padding=0;}
if(td.children.length===1&&td.firstElementChild.nodeName==='IMG'){const tdComputedStyle=getComputedStyle(td);for(const side of['left','right']){if(td.firstElementChild.style.width==='100%'){const prop=`padding-${side}`;const imagePadding=+td.firstElementChild.style[prop].replace('px','');if(imagePadding>0){const tdPadding=+tdComputedStyle[prop].replace('px','')||0;outlookTd.style[prop]=tdPadding+imagePadding+'px';}}}}
td.before(_createMso(outlookTd.outerHTML.replace('</td>','')));_hideForOutlook(td,'opening');}}
async function svgToPng($editable){for(const svg of $editable.find('img[src*=".svg"]')){await new Promise(resolve=>{svg.onload=()=>resolve();if(svg.complete){resolve();}});const image=document.createElement('img');const canvas=document.createElement('CANVAS');const width=_getWidth(svg);const height=_getHeight(svg);canvas.setAttribute('width',width);canvas.setAttribute('height',height);canvas.getContext('2d').drawImage(svg,0,0,width,height);for(const attribute of svg.attributes){image.setAttribute(attribute.name,attribute.value);}
image.setAttribute('src',canvas.toDataURL('png'));image.setAttribute('width',width);image.setAttribute('height',height);svg.before(image);svg.remove();}}
function _applyColspan(element,colspan,tableWidth){element.setAttribute('colspan',colspan);const widthPercentage=+element.getAttribute('colspan')/12;const width=Math.round(tableWidth*widthPercentage*100)/100;element.style.setProperty('max-width',width+'px');element.classList.add('o_converted_col');}
function _backgroundImageToVml(backgroundImage){const matches=backgroundImage.style.backgroundImage.match(/url\("?(.+?)"?\)/);const url=matches&&matches[1];if(url){const clone=backgroundImage.cloneNode(true);const div=document.createElement('div');div.replaceChildren(...clone.childNodes);[['fontSize',0],['height','100%'],['width','100%']].forEach(([k,v])=>div.style[k]=v);const vmlContent=document.createElement('div');vmlContent.append(div);const style=getComputedStyle(backgroundImage);for(const prop of FONT_PROPERTIES_TO_INHERIT){div.style[prop]=backgroundImage.style[prop]||style[prop];}
[...div.children].forEach(child=>child.style.setProperty('font-size',child.style.fontSize||style.fontSize));for(const prop of['background','background-image','background-repeat','background-size']){clone.style.removeProperty(prop);}
clone.style.padding=0;clone.className=clone.className.replace(/p[bt]\d+/g,'');clone.setAttribute('background',url);clone.setAttribute('valign','middle');const[width,height]=[_getWidth(backgroundImage),_getHeight(backgroundImage)];const vml=`<v:image xmlns:v="urn:schemas-microsoft-com:vml" fill="true" stroke="false" `+`style="border: 0; display: inline-block; width: ${width}px; height: ${height}px;" src="${url}"/>
        <v:rect xmlns:v="urn:schemas-microsoft-com:vml" fill="true" stroke="false" `+`style="border: 0; display: inline-block; position: absolute; width:${width}px; height:${height}px; v-text-anchor:middle;">
            <v:fill opacity="0%" color="#000000"/>
            <v:textbox inset="0,0,0,0">
                <table border="0" cellpadding="0" cellspacing="0">
                    <tr>
                        <td width="${width}" align="center" style="text-align: center;">${vmlContent.outerHTML}</td>
                    </tr>
                </table>
            </v:textbox>
        </v:rect>`;return`${clone.outerHTML.replace(/<\/[\w-]+>[\s\n]*$/, '')}${vml}</${clone.nodeName.toLowerCase()}>`;}}
function _computeSpecificity(selector){let a=0;selector=selector.replace(/#[a-z0-9_-]+/gi,()=>{a++;return'';});let b=0;selector=selector.replace(/(\.[a-z0-9_-]+)|(\[.*?\])/gi,()=>{b++;return'';});let c=0;selector=selector.replace(/(^|\s+|:+)[a-z0-9_-]+/gi,a=>{if(!a.includes(':not('))c++;return'';});return(a*100)+(b*10)+c;}
function _computeStyleAndSpecificityOnRules(cssRules){for(const cssRule of cssRules){if(!cssRule.style&&cssRule.rawRule.style){const style=_normalizeStyle(cssRule.rawRule.style);if(Object.keys(style).length){Object.assign(cssRule,{style,specificity:_computeSpecificity(cssRule.selector)});}}}}
function _createColumnGrid(){return new Array(12).fill().map(()=>document.createElement('td'));}
function _createMso(content=''){return document.createComment(`[if mso]>${content}<![endif]`)}
function _createTable(attributes=[]){const table=document.createElement('table');Object.entries(TABLE_ATTRIBUTES).forEach(([att,value])=>table.setAttribute(att,value));for(const attr of attributes){if(!(attr.name==='width'&&attr.value==='100%')){table.setAttribute(attr.name,attr.value);}}
table.style.setProperty('width','100%','important');if(table.classList.contains('o_layout')){const layoutStyles={...TABLE_STYLES};delete layoutStyles['font-size'];delete layoutStyles['line-height'];Object.entries(layoutStyles).forEach(([att,value])=>table.style[att]=value)}else{for(const styleName in TABLE_STYLES){if(!('style'in attributes&&attributes.style.value.includes(styleName+':'))){table.style[styleName]=TABLE_STYLES[styleName];}}}
return table;}
function _getColumnSize(column){const colMatch=column.className.match(RE_COL_MATCH);const colOptions=colMatch[2]&&colMatch[2].substr(1).split('-');const colSize=colOptions&&(colOptions.length===2?+colOptions[1]:+colOptions[0])||0;return colSize;}
function _getColumnOffsetSize(column){const offsetMatch=column.className.match(RE_OFFSET_MATCH);const offsetOptions=offsetMatch&&offsetMatch[2]&&offsetMatch[2].substr(1).split('-');const offsetSize=offsetOptions&&(offsetOptions.length===2?+offsetOptions[1]:+offsetOptions[0])||0;return offsetSize;}
function _getMatchedCSSRules(node,cssRules){node.matches=node.matches||node.webkitMatchesSelector||node.mozMatchesSelector||node.msMatchesSelector||node.oMatchesSelector;const styles=cssRules.map((rule)=>rule.style).filter(Boolean);if(node.style.length){const inlineStyles={};for(const styleName of node.style){inlineStyles[styleName]=node.style[styleName];}
styles.push(inlineStyles);}
const processedStyle={};for(const style of styles){for(const[key,value]of Object.entries(style)){if(!processedStyle[key]||!processedStyle[key].includes('important')||value.includes('important')){processedStyle[key]=value;}}}
for(const[key,value]of Object.entries(processedStyle)){if(value&&value.endsWith('important')){processedStyle[key]=value.replace(/\s*!important\s*$/,'');}};if(processedStyle.display==='block'&&!(node.classList&&node.classList.contains('oe-nested'))){delete processedStyle.display;}
if(!processedStyle['box-sizing']){processedStyle['box-sizing']='border-box';}
for(const info of[{name:'margin'},{name:'padding'},{name:'border',suffix:'-style',defaultValue:'none'},]){const positions=['top','right','bottom','left'];const positionalKeys=positions.map(position=>`${info.name}-${position}${info.suffix || ''}`);const styles=positionalKeys.map(key=>processedStyle[key]).filter(s=>s);const hasVariableStyle=styles.some(style=>style.includes('calc(')||style.includes('var('));const inherits=positionalKeys.some(key=>['inherit','initial'].includes((processedStyle[key]||'').trim()));if(styles.length&&!hasVariableStyle&&!inherits){const propertyName=`${info.name}${info.suffix || ''}`;processedStyle[propertyName]=positionalKeys.every(key=>processedStyle[positionalKeys[0]]===processedStyle[key])?processedStyle[propertyName]=processedStyle[positionalKeys[0]]:positionalKeys.map(key=>processedStyle[key]||(info.defaultValue||0)).join(' ');for(const prop of positionalKeys){delete processedStyle[prop];}}};if(processedStyle['border-bottom-left-radius']){processedStyle['border-radius']=processedStyle['border-bottom-left-radius'];delete processedStyle['border-bottom-left-radius'];delete processedStyle['border-bottom-right-radius'];delete processedStyle['border-top-left-radius'];delete processedStyle['border-top-right-radius'];}
for(const styleName in processedStyle){if(styleName.includes('border')&&processedStyle[styleName]==='initial'){delete processedStyle[styleName];}};if(processedStyle['text-decoration-line']){processedStyle['text-decoration']=processedStyle['text-decoration-line'];delete processedStyle['text-decoration-line'];delete processedStyle['text-decoration-color'];delete processedStyle['text-decoration-style'];delete processedStyle['text-decoration-thickness'];}
for(const styleName in processedStyle){if(styleName.includes('flex')||`${processedStyle[styleName]}`.includes('flex')){delete processedStyle[styleName];}}
return processedStyle;}
let lastComputedStyleElement;let lastComputedStyle
function _getStylePropertyValue(element,propertyName){const computedStyle=lastComputedStyleElement===element?lastComputedStyle:getComputedStyle(element)
lastComputedStyleElement=element;lastComputedStyle=computedStyle;return computedStyle[propertyName]||element.style.getPropertyValue(propertyName);}
function _getWidth(element){return parseFloat(getComputedStyle(element).width.replace('px',''))||0;}
function _getHeight(element){return parseFloat(getComputedStyle(element).height.replace('px',''))||0;}
function _hideForOutlook(node,onlyHideTag=false){if(!onlyHideTag){node.setAttribute('style',`${node.getAttribute('style') || ''} mso-hide: all;`.trim());}
node[onlyHideTag==='closing'?'append':'before'](document.createComment('[if !mso]><!'));node[onlyHideTag==='opening'?'prepend':'after'](document.createComment('<![endif]'));}
function _isHidden(element){return element.offsetParent===null;}
function _normalizeStyle(style){const normalizedStyle={};for(const styleName of style){const value=style[styleName];if(value&&!styleName.includes('animation')&&!styleName.includes('-webkit')&&_.isString(value)){const normalizedStyleName=styleName.replace(/-(.)/g,(a,b)=>b.toUpperCase());normalizedStyle[styleName]=style[normalizedStyleName];if(style.getPropertyPriority(styleName)==='important'){normalizedStyle[styleName]+=' !important';}}}
return normalizedStyle;}
function _wrap(element,wrapperTag,wrapperClass,wrapperStyle){const wrapper=document.createElement(wrapperTag);if(wrapperClass){wrapper.className=wrapperClass;}
if(wrapperStyle){wrapper.style.cssText=wrapperStyle;}
element.parentElement.insertBefore(wrapper,element);wrapper.append(element);return wrapper;}
__exports[Symbol.for("default")]={addTables:addTables,attachmentThumbnailToLinkImg:attachmentThumbnailToLinkImg,bootstrapToTable:bootstrapToTable,cardToTable:cardToTable,classToStyle:classToStyle,fontToImg:fontToImg,formatTables:formatTables,getCSSRules:getCSSRules,listGroupToTable:listGroupToTable,normalizeColors:normalizeColors,normalizeRem:normalizeRem,toInline:toInline,};return __exports;});odoo.define(`web_editor.convertInline`,async function(require){return require('@web_editor/js/backend/convert_inline')[Symbol.for("default")];});;

/* /web_editor/static/src/js/backend/field_html.js */
odoo.define('@web_editor/js/backend/field_html',async function(require){'use strict';let __exports={};'use strict';const ajax=require('web.ajax');const basic_fields=require('web.basic_fields');const core=require('web.core');const wysiwygLoader=require('web_editor.loader');const field_registry=require('web.field_registry');const{QWebPlugin}=require('@web_editor/js/backend/QWebPlugin');const{getAdjacentPreviousSiblings,getAdjacentNextSiblings,setSelection,rightPos,getRangePosition}=require("@web_editor/js/editor/odoo-editor/src/utils/utils");require('web._field_registry');require("@web/views/fields/html/html_field");var _lt=core._lt;var _t=core._t;var TranslatableFieldMixin=basic_fields.TranslatableFieldMixin;var DynamicPlaceholderFieldMixin=basic_fields.DynamicPlaceholderFieldMixin;var QWeb=core.qweb;var FieldHtml=basic_fields.DebouncedField.extend(DynamicPlaceholderFieldMixin).extend(TranslatableFieldMixin,{description:_lt("Html"),className:'oe_form_field oe_form_field_html',supportedFieldTypes:['html'],isQuickEditable:true,quickEditExclusion:['[href]',],custom_events:{wysiwyg_focus:'_onWysiwygFocus',wysiwyg_blur:'_onWysiwygBlur',wysiwyg_change:'_onChange',wysiwyg_attachment:'_onAttachmentChange',},positionModelSelector:async function(modelSelector){await this._super.apply(this,arguments);let topPosition=parseInt(modelSelector.el.style.top.replace('px',''));let leftPosition=parseInt(modelSelector.el.style.left.replace('px',''));topPosition-=this.el.offsetHeight;const position=getRangePosition(modelSelector.$el,this.wysiwyg.options.document);topPosition+=position.top;leftPosition+=position.left-29;topPosition=Math.min(topPosition,window.window.innerHeight-modelSelector.el.offsetHeight-15);leftPosition=Math.min(leftPosition,window.window.innerWidth-modelSelector.el.offsetWidth-10);modelSelector.el.style.top=topPosition+'px';modelSelector.el.style.left=leftPosition+'px';},openDynamicPlaceholder:async function(baseModel,chain=[]){let modelSelector;const onFieldChanged=(ev)=>{this.wysiwyg.odooEditor.editable.focus();if(ev.data.chain.length){let dynamicPlaceholder="object."+ev.data.chain.join('.');const defaultValue=ev.data.defaultValue;dynamicPlaceholder+=defaultValue&&defaultValue!==''?` or '''${defaultValue}'''`:'';const t=document.createElement('T');t.setAttribute('t-out',dynamicPlaceholder);this.wysiwyg.odooEditor.execCommand('insert',t);setSelection(...rightPos(t));this.wysiwyg.odooEditor.editable.focus();}
modelSelector.destroy();};const onFieldCancel=()=>{this.wysiwyg.odooEditor.editable.focus();modelSelector.destroy();};modelSelector=await this._openNewModelSelector(baseModel,chain,onFieldChanged,onFieldCancel);},willStart:async function(){this.isRendered=false;this._onUpdateIframeId='onLoad_'+_.uniqueId('FieldHtml');await this._super();if(this.nodeOptions.cssReadonly){this.cssReadonly=await ajax.loadAsset(this.nodeOptions.cssReadonly);}
if(this.nodeOptions.cssEdit||this.nodeOptions['style-inline']){this.cssEdit=await ajax.loadAsset(this.nodeOptions.cssEdit||'web_editor.assets_edit_html_field');}},destroy:function(){delete window.top[this._onUpdateIframeId];if(this.$iframe){this.$iframe.remove();}
if(this._qwebPlugin){this._qwebPlugin.destroy();}
this._super();},activate:function(options){if(this.wysiwyg){this.wysiwyg.focus();return true;}},commitChanges:async function(){if(this.mode=="readonly"||!this.isRendered){return this._super();}
var _super=this._super.bind(this);const fullClean=this.wysiwyg.cleanForSave();this._setValue(this._getValue());this._isDirty=this.wysiwyg.isDirty();await fullClean;await this.wysiwyg.saveModifiedImages(this.$content);this._setValue(this._getValue());_super();},isSet:function(){var value=this.value&&this.value.split('&nbsp;').join('').replace(/\s/g,'');return value&&value!=="<p></p>"&&value!=="<p><br></p>"&&value.match(/\S/);},getFocusableElement:function(){return this.wysiwyg&&this.wysiwyg.$editable||$();},reset:function(record,event){this._reset(record,event);var value=this.value;if(this.nodeOptions.wrapper){value=this._wrap(value);}
value=this._textToHtml(value);if(!event||event.target!==this){if(this.mode==='edit'&&this.wysiwyg){this.wysiwyg.setValue(value);}else if(this.cssReadonly){return Promise.resolve();}else{this.$content.html(value);}}
return Promise.resolve();},_getValue:function(){let value;if(!this._$codeview||this._$codeview.hasClass('d-none')){value=this.wysiwyg.getValue();}else{value=this._$codeview.val();}
if(this.nodeOptions.wrapper){return this._unWrap(value);}
return value;},_createWysiwygInstance:async function(){const Wysiwyg=await wysiwygLoader.getWysiwygClass();this.wysiwyg=new Wysiwyg(this,this._getWysiwygOptions());return this.wysiwyg.appendTo(this.$el).then(()=>{this.$content=this.wysiwyg.$editable;this._onLoadWysiwyg();this.isRendered=true;});},_getWysiwygOptions:function(){const wysiwygOptions={recordInfo:{context:this.record.getContext(this.recordParams),res_model:this.model,res_id:this.res_id,},placeholder:this.attrs&&this.attrs.placeholder,collaborationChannel:!!this.nodeOptions.collaborative&&{collaborationModelName:this.model,collaborationFieldName:this.name,collaborationResId:parseInt(this.res_id),},noAttachment:this.nodeOptions['no-attachment'],inIframe:!!this.nodeOptions.cssEdit,iframeCssAssets:this.nodeOptions.cssEdit,snippets:this.nodeOptions.snippets,value:this.value,mediaModalParams:{noVideos:'noVideos'in this.nodeOptions?this.nodeOptions.noVideos:true,res_model:this.model,res_id:this.res_id,useMediaLibrary:true,},linkForceNewWindow:true,tabsize:0,height:this.nodeOptions.height,minHeight:this.nodeOptions.minHeight,maxHeight:this.nodeOptions.maxHeight,resizable:'resizable'in this.nodeOptions?this.nodeOptions.resizable:false,editorPlugins:[QWebPlugin],};if('allowCommandImage'in this.nodeOptions){wysiwygOptions.allowCommandImage=Boolean(this.nodeOptions.allowCommandImage);}
if(this.field.sanitize_tags||(this.field.sanitize_tags===undefined&&this.field.sanitize)){wysiwygOptions.allowCommandVideo=false;}else if('allowCommandVideo'in this.nodeOptions){wysiwygOptions.allowCommandVideo=Boolean(this.nodeOptions.allowCommandVideo);}
return Object.assign({},this.nodeOptions,wysiwygOptions);},_toggleCodeView:function($codeview){this.wysiwyg.odooEditor.observerUnactive();$codeview.toggleClass('d-none');this.$content.toggleClass('d-none');if($codeview.hasClass('d-none')){this.wysiwyg.odooEditor.observerActive();this.wysiwyg.setValue($codeview.val());}else{$codeview.val(this.$content.html());this.wysiwyg.odooEditor.observerActive();}},_onAttachmentChange:function(event){if(!this.fieldNameAttachment||this.model!=='mail.compose.message'){return;}
const attachments=event.data;this.trigger_up('field_changed',{dataPointID:this.dataPointID,changes:_.object([this.fieldNameAttachment],[{operation:'ADD_M2M',ids:attachments}])});},_renderEdit:function(){if(this.nodeOptions.notEditable){return this._renderReadonly();}
var fieldNameAttachment=_.chain(this.recordData).pairs().find(function(value){return _.isObject(value[1])&&value[1].model==="ir.attachment";}).first().value();if(fieldNameAttachment){this.fieldNameAttachment=fieldNameAttachment;}
if(this.nodeOptions.cssEdit){this._createWysiwygInstance();}else{return this._createWysiwygInstance();}},_renderReadonly:function(){var self=this;var value=this._textToHtml(this.value);if(this.nodeOptions.wrapper){value=this._wrap(value);}
this.$el.empty();var resolver;var def=new Promise(function(resolve){resolver=resolve;});const externalLinkSelector=`a:not([href^="${location.origin}"]):not([href^="/"])`;if(this.nodeOptions.cssReadonly){this.$iframe=$('<iframe class="o_readonly d-none"/>');this.$iframe.appendTo(this.$el);var avoidDoubleLoad=0;this.$iframe.data('loadDef',def);window.top[this._onUpdateIframeId]=function(_avoidDoubleLoad){if(_avoidDoubleLoad!==avoidDoubleLoad){console.warn('Wysiwyg iframe double load detected');return;}
self.$content=$('#iframe_target',self.$iframe[0].contentWindow.document.body);resolver();self.trigger_up('iframe_updated',{$iframe:self.$iframe});};this.$iframe.on('load',function onLoad(){var _avoidDoubleLoad=++avoidDoubleLoad;ajax.loadAsset(self.nodeOptions.cssReadonly).then(function(asset){if(_avoidDoubleLoad!==avoidDoubleLoad){console.warn('Wysiwyg immediate iframe double load detected');return;}
var cwindow=self.$iframe[0].contentWindow;try{cwindow.document;}catch(_e){return;}
cwindow.document.open("text/html","replace").write('<!DOCTYPE html><html>'+'<head>'+'<meta charset="utf-8"/>'+'<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>\n'+'<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no"/>\n'+
_.map(asset.cssLibs,function(cssLib){return'<link type="text/css" rel="stylesheet" href="'+cssLib+'"/>';}).join('\n')+'\n'+
_.map(asset.cssContents,function(cssContent){return'<style type="text/css">'+cssContent+'</style>';}).join('\n')+'\n'+'</head>\n'+'<body class="o_in_iframe o_readonly" style="overflow: hidden;">\n'+'<div id="iframe_target">'+value+'</div>\n'+'<script type="text/javascript">'+'if (window.top.'+self._onUpdateIframeId+') {'+'window.top.'+self._onUpdateIframeId+'('+_avoidDoubleLoad+')'+'}'+'</script>\n'+'</body>'+'</html>');var height=cwindow.document.body.scrollHeight;self.$iframe.css('height',Math.max(30,Math.min(height,500))+'px');$(cwindow).on('click',function(ev){if(!ev.target.closest("[href]")){self._onClick(ev);}});for(const externalLink of cwindow.document.body.querySelectorAll(externalLinkSelector)){externalLink.setAttribute('target','_blank');externalLink.setAttribute('rel','noreferrer');}});});}else{this.$content=$('<div class="o_readonly"/>').html(value);this.$content.appendTo(this.$el);this._qwebPlugin=new QWebPlugin();this._qwebPlugin.sanitizeElement(this.$content[0]);for(const externalLink of this.$content.find(externalLinkSelector)){externalLink.setAttribute('target','_blank');externalLink.setAttribute('rel','noreferrer');}
resolver();}
def.then(function(){if(!self.hasReadonlyModifier){self.$content.on('click','ul.o_checklist > li',self._onReadonlyClickChecklist.bind(self));self.$content.on('click','.o_stars .fa-star, .o_stars .fa-star-o',self._onReadonlyClickStar.bind(self));}
if(self.$iframe){self.$iframe.removeClass('d-none');}});},_textToHtml:function(text){var value=text||"";try{$(text)[0].innerHTML;}catch(_e){if(value.match(/^\s*$/)){value='<p><br/></p>';}else{value="<p>"+value.split(/<br\/?>/).join("<br/></p><p>")+"</p>";value=value.replace(/<p><\/p>/g,'').replace('<p><p>','<p>').replace('<p><p ','<p ').replace('</p></p>','</p>');}}
return value;},_unWrap:function(html){var $wrapper=$(html).find('#wrapper');return $wrapper.length?$wrapper.html():html;},_wrap:function(html){return $(QWeb.render(this.nodeOptions.wrapper)).find('#wrapper').html(html).end().prop('outerHTML');},_onChange:function(ev){this._doDebouncedAction.apply(this,arguments);},_onKeydown:function(ev){if(ev.which===$.ui.keyCode.ENTER){ev.stopPropagation();return;}
this._super.apply(this,arguments);},_onReadonlyClickChecklist:function(ev){const self=this;if(ev.offsetX>0){return;}
ev.stopPropagation();ev.preventDefault();const checked=$(ev.target).hasClass('o_checked');let checklistId=$(ev.target).attr('id');checklistId=checklistId&&checklistId.replace('checkId-','');checklistId=parseInt(checklistId||'0');this._rpc({route:'/web_editor/checklist',params:{res_model:this.model,res_id:this.res_id,filename:this.name,checklistId:checklistId,checked:!checked,},}).then(function(value){self._setValue(value);});},_onReadonlyClickStar:function(ev){ev.stopPropagation();ev.preventDefault();const node=ev.target;const previousStars=getAdjacentPreviousSiblings(node,sib=>(sib.nodeType===Node.ELEMENT_NODE&&sib.className.includes('fa-star')));const nextStars=getAdjacentNextSiblings(node,sib=>(sib.nodeType===Node.ELEMENT_NODE&&sib.classList.contains('fa-star')));const shouldToggleOff=node.classList.contains('fa-star')&&!nextStars.length;const rating=shouldToggleOff?0:previousStars.length+1;let starsId=$(node).parent().attr('id');starsId=starsId&&starsId.replace('checkId-','');starsId=parseInt(starsId||'0');this._rpc({route:'/web_editor/stars',params:{res_model:this.model,res_id:this.res_id,filename:this.name,starsId,rating,},}).then(value=>this._setValue(value));},_onLoadWysiwyg:function(){var $button=this._renderTranslateButton();var $container;if(this.nodeOptions.cssEdit&&this.wysiwyg){$container=this.wysiwyg.$iframeBody.find('.email_designer_top_actions');}else{$container=this.$el;$button.css({'font-size':'15px',position:'absolute',top:'5px',[_t.database.parameters.direction==='rtl'?'left':'right']:odoo.debug&&this.nodeOptions.codeview?'40px':'5px',});}
$container.append($button);if(odoo.debug&&this.nodeOptions.codeview){const $codeviewButtonToolbar=$(`
                <div id="codeview-btn-group" class="btn-group">
                    <button class="o_codeview_btn btn btn-primary">
                        <i class="fa fa-code"></i>
                    </button>
                </div>
            `);this.$floatingCodeViewButton=$codeviewButtonToolbar.clone();this._$codeview=$('<textarea class="o_codeview d-none"/>');this.wysiwyg.$editable.after(this._$codeview);this._$codeview.after(this.$floatingCodeViewButton);this.wysiwyg.toolbar.$el.append($codeviewButtonToolbar);$codeviewButtonToolbar.click(()=>this._toggleCodeView(this._$codeview));this.$floatingCodeViewButton.click(()=>this._toggleCodeView(this._$codeview));}},_onWysiwygBlur:function(ev){ev.stopPropagation();this._doAction();if(ev.data.key==='TAB'){this.trigger_up('navigation_move',{direction:ev.data.shiftKey?'left':'right',});}},_onWysiwygFocus:function(ev){},});field_registry.add('html',FieldHtml);__exports[Symbol.for("default")]=FieldHtml;return __exports;});odoo.define(`web_editor.field.html`,async function(require){return require('@web_editor/js/backend/field_html')[Symbol.for("default")];});;

/* /web_editor/static/src/js/backend/html_field.js */
odoo.define('@web_editor/js/backend/html_field',async function(require){'use strict';let __exports={};const legacyEnv=require('web.commonEnv');const{ComponentAdapter}=require('web.OwlCompatibility');const{registry}=require("@web/core/registry");const{_lt}=require("@web/core/l10n/translation");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{getWysiwygClass}=require('web_editor.loader');const{QWebPlugin}=require('@web_editor/js/backend/QWebPlugin');const{TranslationButton}=require("@web/views/fields/translation_button");const{useDynamicPlaceholder}=require("@web/views/fields/dynamicplaceholder_hook");const{QWeb}=require('web.core');const ajax=require('web.ajax');const{useBus,useService,}=require("@web/core/utils/hooks");const{getAdjacentPreviousSiblings,getAdjacentNextSiblings,getRangePosition}=require('@web_editor/js/editor/odoo-editor/src/utils/utils');const{toInline}=require('web_editor.convertInline');const{loadJS}=require('@web/core/assets');const{markup,Component,useRef,useSubEnv,useState,onWillStart,onMounted,onWillUpdateProps,useEffect,onWillUnmount,}=require("@odoo/owl");const HtmlFieldWysiwygAdapterComponent=__exports.HtmlFieldWysiwygAdapterComponent=class HtmlFieldWysiwygAdapterComponent extends ComponentAdapter{setup(){super.setup();useSubEnv(legacyEnv);let started=false;onMounted(()=>{if(!started){this.props.startWysiwyg(this.widget);started=true;}});}
updateWidget(newProps){const lastValue=String(this.props.widgetArgs[0].value||'');const lastRecordInfo=this.props.widgetArgs[0].recordInfo;const lastCollaborationChannel=this.props.widgetArgs[0].collaborationChannel;const newValue=String(newProps.widgetArgs[0].value||'');const newRecordInfo=newProps.widgetArgs[0].recordInfo;const newCollaborationChannel=newProps.widgetArgs[0].collaborationChannel;if((stripHistoryIds(newValue)!==stripHistoryIds(newProps.editingValue)&&stripHistoryIds(lastValue)!==stripHistoryIds(newValue))||!_.isEqual(lastRecordInfo,newRecordInfo)||!_.isEqual(lastCollaborationChannel,newCollaborationChannel))
{this.widget.resetEditor(newValue,newProps.widgetArgs[0]);this.env.onWysiwygReset&&this.env.onWysiwygReset();}}
renderWidget(){}}
const HtmlField=__exports.HtmlField=class HtmlField extends Component{setup(){this.containsComplexHTML=this.computeContainsComplexHTML();this.sandboxedPreview=this.props.sandboxedPreview||this.containsComplexHTML;this.readonlyElementRef=useRef("readonlyElement");this.codeViewRef=useRef("codeView");this.iframeRef=useRef("iframe");this.codeViewButtonRef=useRef("codeViewButton");if(this.props.dynamicPlaceholder){this.dynamicPlaceholder=useDynamicPlaceholder();}
this.rpc=useService("rpc");this.onIframeUpdated=this.env.onIframeUpdated||(()=>{});this.state=useState({showCodeView:false,iframeVisible:false,});useBus(this.env.bus,"RELATIONAL_MODEL:WILL_SAVE_URGENTLY",()=>this.commitChanges({urgent:true}));useBus(this.env.bus,"RELATIONAL_MODEL:NEED_LOCAL_CHANGES",({detail})=>detail.proms.push(this.commitChanges()));this._onUpdateIframeId='onLoad_'+_.uniqueId('FieldHtml');onWillStart(async()=>{this.Wysiwyg=await this._getWysiwygClass();if(this.props.cssReadonlyAssetId){this.cssReadonlyAsset=await ajax.loadAsset(this.props.cssReadonlyAssetId);}
if(this.props.cssEditAssetId||this.props.isInlineStyle){await loadJS('/web_editor/static/lib/html2canvas.js');this.cssEditAsset=await ajax.loadAsset(this.props.cssEditAssetId||'web_editor.assets_edit_html_field');}});this._lastRecordInfo={res_model:this.props.record.resModel,res_id:this.props.record.resId,};onWillUpdateProps((newProps)=>{if(!newProps.readonly&&!this.sandboxedPreview&&this.state.iframeVisible){this.state.iframeVisible=false;}
const newRecordInfo={res_model:newProps.record.resModel,res_id:newProps.record.resId,};if(!_.isEqual(this._lastRecordInfo,newRecordInfo)){this.currentEditingValue=undefined;}
this._lastRecordInfo=newRecordInfo;});useEffect(()=>{(async()=>{if(this._qwebPlugin){this._qwebPlugin.destroy();}
if(this.props.readonly||(!this.state.showCodeView&&this.sandboxedPreview)){if(this.showIframe){await this._setupReadonlyIframe();}else if(this.readonlyElementRef.el){this._qwebPlugin=new QWebPlugin();this._qwebPlugin.sanitizeElement(this.readonlyElementRef.el);retargetLinks(this.readonlyElementRef.el);const hasReadonlyModifiers=Boolean(this.props.record.isReadonly(this.props.fieldName));if(!hasReadonlyModifiers){const $el=$(this.readonlyElementRef.el);$el.off('.checklistBinding');$el.on('click.checklistBinding','ul.o_checklist > li',this._onReadonlyClickChecklist.bind(this));$el.on('click.checklistBinding','.o_stars .fa-star, .o_stars .fa-star-o',this._onReadonlyClickStar.bind(this));}}}else{const codeViewEl=this._getCodeViewEl();if(codeViewEl){codeViewEl.value=this.props.value;}}})();});onWillUnmount(()=>{if(this._qwebPlugin){this._qwebPlugin.destroy();}
if(this.resizerHandleObserver){this.resizerHandleObserver.disconnect();}});}
computeContainsComplexHTML(){const domParser=new DOMParser();const parsedOriginal=domParser.parseFromString(this.props.value||'','text/html');return!!parsedOriginal.head.innerHTML.trim();}
get markupValue(){return markup(this.props.value);}
get showIframe(){return(this.sandboxedPreview&&!this.state.showCodeView)||(this.props.readonly&&this.props.cssReadonlyAssetId);}
get wysiwygOptions(){let dynamicPlaceholderOptions={};if(this.props.dynamicPlaceholder){dynamicPlaceholderOptions={powerboxCommands:[{category:this.env._t('Marketing Tools'),name:this.env._t('Dynamic Placeholder'),priority:10,description:this.env._t('Insert personalized content'),fontawesome:'fa-magic',callback:()=>{this.wysiwygRangePosition=getRangePosition(document.createElement('x'),this.wysiwyg.options.document||document);const baseModel=this.props.record.data.mailing_model_real||this.props.record.data.model;if(baseModel){setTimeout(async()=>{await this.dynamicPlaceholder.open(this.wysiwyg.$editable[0],baseModel,{validateCallback:this.onDynamicPlaceholderValidate.bind(this),closeCallback:this.onDynamicPlaceholderClose.bind(this),positionCallback:this.positionDynamicPlaceholder.bind(this),});});}},}],powerboxFilters:[this._filterPowerBoxCommands.bind(this)],}}
return{value:this.props.value,autostart:false,onAttachmentChange:this._onAttachmentChange.bind(this),onWysiwygBlur:this._onWysiwygBlur.bind(this),...this.props.wysiwygOptions,...dynamicPlaceholderOptions,recordInfo:{res_model:this.props.record.resModel,res_id:this.props.record.resId,},collaborationChannel:this.props.isCollaborative&&{collaborationModelName:this.props.record.resModel,collaborationFieldName:this.props.fieldName,collaborationResId:parseInt(this.props.record.resId),},mediaModalParams:{...this.props.wysiwygOptions.mediaModalParams,res_model:this.props.record.resModel,res_id:this.props.record.resId,},fieldId:this.props.id,};}
_filterPowerBoxCommands(commands){let selectionIsInForbidenSnippet=false;if(this.wysiwyg&&this.wysiwyg.odooEditor){const selection=this.wysiwyg.odooEditor.document.getSelection();selectionIsInForbidenSnippet=this.wysiwyg.closestElement(selection.anchorNode,'div[data-snippet="s_cover"], div[data-snippet="s_masonry_block"]');}
return selectionIsInForbidenSnippet?commands.filter((o)=>o.title!=="Dynamic Placeholder"):commands;}
get translationButtonWrapperStyle(){return`
            font-size: 15px;
            position: absolute;
            right: ${this.props.codeview ? '40px' : '5px'};
            top: 5px;
        `;}
getEditingValue(){const codeViewEl=this._getCodeViewEl();if(codeViewEl){return codeViewEl.value;}else{if(this.wysiwyg){return this.wysiwyg.getValue();}else{return null;}}}
async updateValue(){const value=this.getEditingValue();const lastValue=(this.props.value||"").toString();if(value!==null&&!(!lastValue&&stripHistoryIds(value)==="<p><br></p>")&&stripHistoryIds(value)!==stripHistoryIds(lastValue)){this.props.setDirty(false);this.currentEditingValue=value;await this.props.update(value);}}
async startWysiwyg(wysiwyg){this.wysiwyg=wysiwyg;await this.wysiwyg.startEdition();if(this.props.codeview){const $codeviewButtonToolbar=$(`
                <div id="codeview-btn-group" class="btn-group">
                    <button class="o_codeview_btn btn btn-primary">
                        <i class="fa fa-code"></i>
                    </button>
                </div>
            `);this.wysiwyg.toolbar.$el.append($codeviewButtonToolbar);$codeviewButtonToolbar.click(this.toggleCodeView.bind(this));}
this.wysiwyg.odooEditor.addEventListener("historyStep",()=>this.props.setDirty(this._isDirty()));this.isRendered=true;}
toggleCodeView(){this.state.showCodeView=!this.state.showCodeView;if(this.wysiwyg){this.wysiwyg.odooEditor.observerUnactive('toggleCodeView');if(this.state.showCodeView){this.wysiwyg.odooEditor.toolbarHide();const value=this.wysiwyg.getValue();this.props.update(value);}else{this.wysiwyg.odooEditor.observerActive('toggleCodeView');}}
if(!this.state.showCodeView){const $codeview=$(this.codeViewRef.el);const value=$codeview.val();this.props.update(value);}}
onDynamicPlaceholderValidate(chain,defaultValue){if(chain){let dynamicPlaceholder="object."+chain.join('.');dynamicPlaceholder+=defaultValue&&defaultValue!==''?` or '''${defaultValue}'''`:'';const t=document.createElement('T');t.setAttribute('t-out',dynamicPlaceholder);this.wysiwyg.odooEditor.execCommand('insert',t);this.wysiwyg.odooEditor.sanitize(t);}}
onDynamicPlaceholderClose(){this.wysiwyg.focus();}
positionDynamicPlaceholder(popover,position){let topPosition=this.wysiwygRangePosition.top;let leftPosition=this.wysiwygRangePosition.left-14;popover.style.top=topPosition+'px';popover.style.left=leftPosition+'px';}
async commitChanges({urgent}={}){if(this._isDirty()||urgent){let saveModifiedImagesPromise,toInlinePromise;if(this.wysiwyg){this.wysiwyg.odooEditor.observerUnactive('commitChanges');saveModifiedImagesPromise=this.wysiwyg.saveModifiedImages();if(this.props.isInlineStyle){toInlinePromise=this._toInline();}}
if(urgent){await this.updateValue();}
if(this.wysiwyg){await saveModifiedImagesPromise;if(this.props.isInlineStyle){await toInlinePromise;}
this.wysiwyg.odooEditor.observerActive('commitChanges');}
if(owl.status(this)!=='destroyed'){await this.updateValue();}}}
_isDirty(){const strippedPropValue=stripHistoryIds(String(this.props.value));const strippedEditingValue=stripHistoryIds(this.getEditingValue());return!this.props.readonly&&(strippedPropValue||'<p><br></p>')!==strippedEditingValue;}
_getCodeViewEl(){return this.state.showCodeView&&this.codeViewRef.el;}
async _setupReadonlyIframe(){const iframeTarget=this.sandboxedPreview?this.iframeRef.el.contentDocument.documentElement:this.iframeRef.el.contentDocument.querySelector('#iframe_target');if(this.iframePromise&&iframeTarget){if(iframeTarget.innerHTML!==this.props.value){iframeTarget.innerHTML=this.props.value;retargetLinks(iframeTarget);}
return this.iframePromise;}
this.iframePromise=new Promise((resolve)=>{let value=this.props.value;if(this.props.wrapper){value=this._wrap(value);}
let avoidDoubleLoad=0;window.top[this._onUpdateIframeId]=(_avoidDoubleLoad)=>{if(_avoidDoubleLoad!==avoidDoubleLoad){console.warn('Wysiwyg iframe double load detected');return;}
resolve();this.state.iframeVisible=true;this.onIframeUpdated();};this.iframeRef.el.addEventListener('load',async()=>{const _avoidDoubleLoad=++avoidDoubleLoad;if(_avoidDoubleLoad!==avoidDoubleLoad){console.warn('Wysiwyg immediate iframe double load detected');return;}
const cwindow=this.iframeRef.el.contentWindow;try{cwindow.document;}catch(_e){return;}
if(!this.sandboxedPreview){cwindow.document.open("text/html","replace").write('<!DOCTYPE html><html>'+'<head>'+'<meta charset="utf-8"/>'+'<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>\n'+'<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no"/>\n'+'</head>\n'+'<body class="o_in_iframe o_readonly" style="overflow: hidden;">\n'+'<div id="iframe_target"></div>\n'+'</body>'+'</html>');}
if(this.props.cssReadonlyAssetId){const asset=await ajax.loadAsset(this.props.cssReadonlyAssetId);for(const cssLib of asset.cssLibs){const link=cwindow.document.createElement('link');link.setAttribute('type','text/css');link.setAttribute('rel','stylesheet');link.setAttribute('href',cssLib);cwindow.document.head.append(link);}
for(const cssContent of asset.cssContents){const style=cwindow.document.createElement('style');style.setAttribute('type','text/css');const textNode=cwindow.document.createTextNode(cssContent);style.append(textNode);cwindow.document.head.append(style);}}
if(!this.sandboxedPreview){const iframeTarget=cwindow.document.querySelector('#iframe_target');iframeTarget.innerHTML=value;const script=cwindow.document.createElement('script');script.setAttribute('type','text/javascript');const scriptTextNode=document.createTextNode(`if (window.top.${this._onUpdateIframeId}) {`+`window.top.${this._onUpdateIframeId}(${_avoidDoubleLoad})`+`}`);script.append(scriptTextNode);cwindow.document.body.append(script);}else{cwindow.document.documentElement.innerHTML=value;}
const height=cwindow.document.body.scrollHeight;this.iframeRef.el.style.height=Math.max(30,Math.min(height,500))+'px';retargetLinks(cwindow.document.body);if(this.sandboxedPreview){this.state.iframeVisible=true;this.onIframeUpdated();resolve();}});this.iframeRef.el.after(this.iframeRef.el);});return this.iframePromise;}
_wrap(html){return $(QWeb.render(this.props.wrapper)).find('#wrapper').html(html).end().prop('outerHTML');}
_unWrap(html){const $wrapper=$(html).find('#wrapper');return $wrapper.length?$wrapper.html():html;}
async _toInline(){const $editable=this.wysiwyg.getEditable();this.wysiwyg.odooEditor.sanitize(this.wysiwyg.odooEditor.editable);const html=this.wysiwyg.getValue();const $odooEditor=$editable.closest('.odoo-editor-editable');$odooEditor.removeClass('odoo-editor-editable');$editable.html(html);await toInline($editable,this.cssRules,this.wysiwyg.$iframe);$odooEditor.addClass('odoo-editor-editable');this.wysiwyg.setValue($editable.html());this.wysiwyg.odooEditor.sanitize(this.wysiwyg.odooEditor.editable);}
async _getWysiwygClass(){return getWysiwygClass();}
_onAttachmentChange(attachment){if(!(this.props.record.fieldNames.includes('attachment_ids')&&this.props.record.resModel==='mail.compose.message')){return;}
this.props.record.update(_.object(['attachment_ids'],[{operation:'ADD_M2M',ids:attachment}]));}
_onWysiwygBlur(){if(!this.props.isInlineStyle){this.commitChanges();}}
async _onReadonlyClickChecklist(ev){if(ev.offsetX>0){return;}
ev.stopPropagation();ev.preventDefault();const checked=$(ev.target).hasClass('o_checked');let checklistId=$(ev.target).attr('id');checklistId=checklistId&&checklistId.replace('checkId-','');checklistId=parseInt(checklistId||'0');const value=await this.rpc('/web_editor/checklist',{res_model:this.props.record.resModel,res_id:this.props.record.resId,filename:this.props.fieldName,checklistId:checklistId,checked:!checked,});if(value){this.props.update(value);}}
async _onReadonlyClickStar(ev){ev.stopPropagation();ev.preventDefault();const node=ev.target;const previousStars=getAdjacentPreviousSiblings(node,sib=>(sib.nodeType===Node.ELEMENT_NODE&&sib.className.includes('fa-star')));const nextStars=getAdjacentNextSiblings(node,sib=>(sib.nodeType===Node.ELEMENT_NODE&&sib.classList.contains('fa-star')));const shouldToggleOff=node.classList.contains('fa-star')&&!nextStars.length;const rating=shouldToggleOff?0:previousStars.length+1;let starsId=$(node).parent().attr('id');starsId=starsId&&starsId.replace('checkId-','');starsId=parseInt(starsId||'0');const value=await this.rpc('/web_editor/stars',{res_model:this.props.record.resModel,res_id:this.props.record.resId,filename:this.props.fieldName,starsId,rating,});if(value){this.props.update(value);}}}
HtmlField.template="web_editor.HtmlField";HtmlField.components={TranslationButton,HtmlFieldWysiwygAdapterComponent,};HtmlField.defaultProps={dynamicPlaceholder:false,setDirty:()=>{},};HtmlField.props={...standardFieldProps,isTranslatable:{type:Boolean,optional:true},placeholder:{type:String,optional:true},fieldName:{type:String,optional:true},codeview:{type:Boolean,optional:true},isCollaborative:{type:Boolean,optional:true},dynamicPlaceholder:{type:Boolean,optional:true,default:false},cssReadonlyAssetId:{type:String,optional:true},cssEditAssetId:{type:String,optional:true},isInlineStyle:{type:Boolean,optional:true},sandboxedPreview:{type:Boolean,optional:true},wrapper:{type:String,optional:true},wysiwygOptions:{type:Object},};HtmlField.displayName=_lt("Html");HtmlField.supportedTypes=["html"];HtmlField.extractProps=({attrs,field})=>{const wysiwygOptions={placeholder:attrs.placeholder,noAttachment:attrs.options['no-attachment'],inIframe:Boolean(attrs.options.cssEdit),iframeCssAssets:attrs.options.cssEdit,iframeHtmlClass:attrs.iframeHtmlClass,snippets:attrs.options.snippets,mediaModalParams:{noVideos:'noVideos'in attrs.options?attrs.options.noVideos:true,useMediaLibrary:true,},linkForceNewWindow:true,tabsize:0,height:attrs.options.height,minHeight:attrs.options.minHeight,maxHeight:attrs.options.maxHeight,resizable:'resizable'in attrs.options?attrs.options.resizable:false,editorPlugins:[QWebPlugin],};if('collaborative'in attrs.options){wysiwygOptions.collaborative=attrs.options.collaborative;}
if('style-inline'in attrs.options){wysiwygOptions.inlineStyle=Boolean(attrs.options['style-inline']);}
if('allowCommandImage'in attrs.options){wysiwygOptions.allowCommandImage=Boolean(attrs.options.allowCommandImage);}
if(field.sanitize_tags||(field.sanitize_tags===undefined&&field.sanitize)){wysiwygOptions.allowCommandVideo=false;}else if('allowCommandVideo'in attrs.options){wysiwygOptions.allowCommandVideo=Boolean(attrs.options.allowCommandVideo);}
return{isTranslatable:field.translate,fieldName:field.name,codeview:Boolean(odoo.debug&&attrs.options.codeview),sandboxedPreview:Boolean(attrs.options.sandboxedPreview),placeholder:attrs.placeholder,isCollaborative:attrs.options.collaborative,cssReadonlyAssetId:attrs.options.cssReadonly,dynamicPlaceholder:attrs.options.dynamic_placeholder,cssEditAssetId:attrs.options.cssEdit,isInlineStyle:attrs.options['style-inline'],wrapper:attrs.options.wrapper,wysiwygOptions,};};registry.category("fields").add("html",HtmlField,{force:true});function stripHistoryIds(value){return value&&value.replace(/\sdata-last-history-steps="[^"]*?"/,'')||value;}
const retargetLinks=(container)=>{for(const link of container.querySelectorAll('a')){link.setAttribute('target','_blank');link.setAttribute('rel','noreferrer');}}
return __exports;});;

/* /web_kanban_gauge/static/src/gauge_field.js */
odoo.define('@web_kanban_gauge/gauge_field',async function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{loadJS}=require("@web/core/assets");const{registry}=require("@web/core/registry");const{formatFloat}=require("@web/views/fields/formatters");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,onWillStart,useEffect,useRef}=require("@odoo/owl");const GaugeField=__exports.GaugeField=class GaugeField extends Component{setup(){this.chart=null;this.canvasRef=useRef("canvas");onWillStart(()=>loadJS("/web/static/lib/Chart/Chart.js"));useEffect(()=>{this.renderChart();return()=>{if(this.chart){this.chart.destroy();}};});}
get formattedValue(){return formatFloat(this.props.value,{humanReadable:true,decimals:1});}
renderChart(){const gaugeValue=this.props.value;let maxValue=Math.max(gaugeValue,this.props.record.data[this.props.maxValueField]);let maxLabel=maxValue;if(gaugeValue===0&&maxValue===0){maxValue=1;maxLabel=0;}
const config={type:"doughnut",data:{datasets:[{data:[gaugeValue,maxValue-gaugeValue],backgroundColor:["#1f77b4","#dddddd"],label:this.props.title,},],},options:{circumference:Math.PI,rotation:-Math.PI,responsive:true,tooltips:{displayColors:false,callbacks:{label:function(tooltipItems){if(tooltipItems.index===0){return _t("Value: ")+gaugeValue;}
return _t("Max: ")+maxLabel;},},},title:{display:true,text:this.props.title,padding:4,},layout:{padding:{bottom:5,},},maintainAspectRatio:false,cutoutPercentage:70,},};this.chart=new Chart(this.canvasRef.el,config);}}
GaugeField.template="web.GaugeField";GaugeField.props={...standardFieldProps,maxValueField:{type:String},title:{type:String},};GaugeField.extractProps=({attrs,field})=>{return{maxValueField:attrs.options.max_field,title:attrs.options.title||field.string,};};registry.category("fields").add("gauge",GaugeField);return __exports;});;

/* /web_kanban_gauge/static/src/js/kanban_gauge.js */
odoo.define('web_kanban_gauge.widget',function(require){"use strict";var AbstractField=require('web.AbstractField');var core=require('web.core');var field_registry=require('web.field_registry');var utils=require('web.utils');var _t=core._t;var GaugeWidget=AbstractField.extend({className:"oe_gauge",jsLibs:['/web/static/lib/Chart/Chart.js',],_render:function(){var val=this.value;if(_.isArray(JSON.parse(val))){val=JSON.parse(val);}
var gauge_value=_.isArray(val)&&val.length?val[val.length-1].value:val;if(this.nodeOptions.gauge_value_field){gauge_value=this.recordData[this.nodeOptions.gauge_value_field];}
var max_value=this.nodeOptions.max_value||100;if(this.nodeOptions.max_field){max_value=this.recordData[this.nodeOptions.max_field];}
max_value=Math.max(gauge_value,max_value);var title=this.nodeOptions.title||this.field.string;var maxLabel=max_value;if(gauge_value===0&&max_value===0){max_value=1;maxLabel=0;}
var config={type:'doughnut',data:{datasets:[{data:[gauge_value,max_value-gauge_value],backgroundColor:["#1f77b4","#dddddd"],label:title}],},options:{circumference:Math.PI,rotation:-Math.PI,responsive:true,tooltips:{displayColors:false,callbacks:{label:function(tooltipItems){if(tooltipItems.index===0){return _t('Value: ')+gauge_value;}
return _t('Max: ')+maxLabel;},},},title:{display:true,text:title,padding:4,},layout:{padding:{bottom:5}},maintainAspectRatio:false,cutoutPercentage:70,}};this.$canvas=$('<canvas/>');this.$el.empty();this.$el.append(this.$canvas);this.$el.attr('style',this.nodeOptions.style);this.$el.css({position:'relative'});var context=this.$canvas[0].getContext('2d');this.chart=new Chart(context,config);var humanValue=utils.human_number(gauge_value,1);var $value=$('<span class="o_gauge_value">').text(humanValue);$value.css({'text-align':'center',position:'absolute',left:0,right:0,bottom:'6px','font-weight':'bold'});this.$el.append($value);},});field_registry.add("gauge",GaugeWidget);return GaugeWidget;});;

/* /web_tour/static/src/debug/debug_manager.js */
odoo.define('@web_tour/debug/debug_manager',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const ToursDialog=require("@web_tour/debug/tour_dialog_component")[Symbol.for("default")];const utils=require("web_tour.utils");__exports.disableTours=disableTours;function disableTours({env}){if(!env.services.user.isSystem){return null;}
const activeTours=env.services.tour.getActiveTours();if(activeTours.length===0){return null;}
return{type:"item",description:env._t("Disable Tours"),callback:async()=>{const tourNames=activeTours.map(tour=>tour.name);await env.services.orm.call("web_tour.tour","consume",[tourNames]);for(const tourName of tourNames){browser.localStorage.removeItem(utils.get_debugging_key(tourName));}
browser.location.reload();},sequence:50,};}
__exports.startTour=startTour;function startTour({env}){if(!env.services.user.isSystem){return null;}
return{type:"item",description:env._t("Start Tour"),callback:async()=>{env.services.dialog.add(ToursDialog);},sequence:60,};}
registry.category("debug").category("default").add("web_tour.startTour",startTour).add("web_tour.disableTours",disableTours);return __exports;});;

/* /web_tour/static/src/debug/tour_dialog_component.js */
odoo.define('@web_tour/debug/tour_dialog_component',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{Dialog}=require("@web/core/dialog/dialog");const{_lt}=require("@web/core/l10n/translation");const{Component}=require("@odoo/owl");const ToursDialog=__exports[Symbol.for("default")]=class ToursDialog extends Component{setup(){this.tourService=useService("tour");this.onboardingTours=this.tourService.getOnboardingTours();this.testingTours=this.tourService.getTestingTours();}
_onStartTour(ev){this.tourService.reset(ev.target.dataset.name);this.props.close();}
_onTestTour(ev){this.tourService.run(ev.target.dataset.name);this.props.close();}}
ToursDialog.template="web_tour.ToursDialog";ToursDialog.components={Dialog};ToursDialog.title=_lt("Tours");return __exports;});;

/* /web_tour/static/src/services/tour_service.js */
odoo.define('@web_tour/services/tour_service',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const tourManager=require("web_tour.tour");const tourService=__exports.tourService={start(){function _getAllTourMap(){return tourManager.tours;}
function _getActiveTourMap(){return Object.fromEntries(Object.entries(_getAllTourMap()).filter(([key,value])=>!tourManager.consumed_tours.includes(key)));}
function _fromTourMapToArray(tourMap){return Object.values(tourMap).sort((t1,t2)=>{return t1.sequence-t2.sequence||(t1.name<t2.name?-1:1);});}
function getAllTours(){return _fromTourMapToArray(_getAllTourMap());}
function getActiveTours(){return _fromTourMapToArray(_getActiveTourMap());}
function getOnboardingTours(){return getAllTours().filter((t)=>!t.test);}
function getTestingTours(){return getAllTours().filter((t)=>t.test);}
function run(tourName){return tourManager.run(tourName);}
function reset(tourName){return tourManager.reset(tourName);}
return{getAllTours,getActiveTours,getOnboardingTours,getTestingTours,run,reset,};},};registry.category("services").add("tour",tourService);return __exports;});

                    /*******************************************
                    *  Templates                               *
                    *******************************************/

                    odoo.define('web.assets_backend.bundle.xml', function(require){
                        'use strict';
                        const { loadXML } = require('@web/core/assets');
                        const templates = `<?xml version="1.0" encoding="UTF-8"?>
<templates xml:space="preserve">
<t t-name="web.ActionSwiper" owl="1">
        <t t-if="props.onRightSwipe || props.onLeftSwipe">
            <div class="o_actionswiper" t-on-touchend="_onTouchEndSwipe" t-on-touchmove="_onTouchMoveSwipe" t-on-touchstart="_onTouchStartSwipe" t-ref="root">
                <div class="o_actionswiper_overflow_container position-relative overflow-hidden">
                    <div class="o_actionswiper_target_container" t-ref="targetContainer" t-att-style="state.containerStyle" t-att-class="{ o_actionswiper_swiping: state.isSwiping }">
                        <t t-slot="default"/>
                        <t t-if="localizedProps.onRightSwipe and (localizedProps.onRightSwipe.icon or localizedProps.onRightSwipe.bgColor)">
                            <div t-att-style="'max-width: ' + swipedDistance + 'px;'" class="o_actionswiper_right_swipe_area position-absolute overflow-hidden w-100 h-100 d-flex align-items-center justify-content-center rounded-end" t-att-class="localizedProps.onRightSwipe.bgColor">
                                <span><i class="fa fa-2x" t-att-class="localizedProps.onRightSwipe.icon"/></span>
                            </div>
                        </t>
                        <t t-if="localizedProps.onLeftSwipe and (localizedProps.onLeftSwipe.icon or localizedProps.onLeftSwipe.bgColor)">
                            <div t-att-style="'max-width: ' + -swipedDistance + 'px;'" class="o_actionswiper_left_swipe_area position-absolute overflow-hidden w-100 h-100 d-flex align-items-center justify-content-center rounded-start" t-att-class="localizedProps.onLeftSwipe.bgColor">
                                <span><i class="fa fa-2x" t-att-class="localizedProps.onLeftSwipe.icon"/></span>
                            </div>
                        </t>
                    </div>
                </div>
            </div>
        </t>
        <t t-else="">
            <t t-slot="default"/>
        </t>
    </t>
<t t-name="web.AutoComplete" owl="1">
        <div class="o-autocomplete dropdown" t-ref="root">
            <input type="text" t-att-id="props.id" class="o-autocomplete--input o_input" autocomplete="off" t-att-placeholder="props.placeholder" t-model="state.value" t-on-blur="onInputBlur" t-on-click.stop="onInputClick" t-on-change="onInputChange" t-on-input="onInput" t-on-keydown="onInputKeydown" t-ref="input"/>
            <t t-if="isOpened and hasOptions">
                <ul class="o-autocomplete--dropdown-menu dropdown-menu ui-widget ui-autocomplete show" t-on-mousedown.prevent="" t-ref="sourcesList">
                    <t t-foreach="sources" t-as="source" t-key="source.id">
                        <t t-if="source.isLoading">
                            <li class="o-autocomplete--dropdown-item ui-menu-item">
                                <a href="#" class="dropdown-item ui-menu-item-wrapper">
                                    <i class="fa fa-spin fa-circle-o-notch"/> <t t-esc="source.placeholder"/>
                                </a>
                            </li>
                        </t>
                        <t t-else="">
                            <t t-foreach="source.options" t-as="option" t-key="option.id">
                                <li class="o-autocomplete--dropdown-item ui-menu-item" t-att-class="option.classList" t-on-mouseenter="() =&gt; this.onOptionMouseEnter([source_index, option_index])" t-on-mouseleave="() =&gt; this.onOptionMouseLeave([source_index, option_index])" t-on-click="() =&gt; this.onOptionClick([source_index, option_index])">
                                    <a href="#" class="dropdown-item ui-menu-item-wrapper text-truncate" t-att-class="{ 'ui-state-active': isActiveSourceOption([source_index, option_index]) }">
                                        <t t-if="source.optionTemplate">
                                            <t t-call="{{ source.optionTemplate }}"/>
                                        </t>
                                        <t t-else="">
                                            <t t-esc="option.label"/>
                                        </t>
                                    </a>
                                </li>
                            </t>
                        </t>
                    </t>
                </ul>
            </t>
        </div>
    </t>

<t t-name="web.CheckBox" owl="1">
    <div class="o-checkbox form-check" t-attf-class="{{ props.slots ? 'form-check' : '' }}" t-att-class="props.className" t-on-click="onClick" t-ref="root">
        <input t-att-id="props.id or id" type="checkbox" class="form-check-input" t-att-disabled="props.disabled" t-att-checked="props.value" t-att-name="props.name" t-on-change="onChange"/>
        <label t-att-for="props.id or id" class="form-check-label">
            <t t-slot="default"/>
        </label>
    </div>
</t>

<t t-name="web.ColorList" owl="1">
        <div class="o_colorlist d-flex flex-wrap align-items-center mw-100 gap-2" aria-atomic="true" t-ref="colorlist">
            <t t-if="!props.forceExpanded and !state.isExpanded">
                <button t-on-click="onToggle" role="menuitem" t-att-title="colors[props.selectedColor]" t-att-data-color="props.selectedColor" t-att-aria-label="colors[props.selectedColor]" t-attf-class="btn p-0 o_colorlist_toggler o_colorlist_item_color_{{ props.selectedColor }}"/>
            </t>
            <t t-else="" t-foreach="props.colors" t-as="colorId" t-key="colorId">
                <button t-on-click.prevent.stop="() =&gt; this.onColorSelected(colorId)" role="menuitem" t-att-title="colors[colorId]" t-att-data-color="colorId" t-att-aria-label="colors[colorId]" t-attf-class="btn p-0 o_colorlist_item_color_{{ colorId }} {{ colorId === props.selectedColor ? 'o_colorlist_selected' : '' }}"/>
            </t>
        </div>
    </t>

<t t-name="web.DefaultCommandItem" owl="1">
    <div class="o_command_default d-flex align-items-center justify-content-between px-4 py-2 cursor-pointer">
      <t t-slot="name"/>
      <t t-slot="focusMessage"/>
    </div>
  </t>

  <t t-name="web.HotkeyCommandItem" owl="1">
    <div class="o_command_hotkey d-flex align-items-center justify-content-between px-4 py-2 cursor-pointer">
      <t t-slot="name"/>
      <span>
        <t t-foreach="getKeysToPress(props)" t-as="key" t-key="key_index">
          <kbd t-out="key" class="d-inline-block px-3 py-1"/>
          <span t-if="!key_last"> + </span>
        </t>
      </span>
    </div>
  </t>

<t t-name="web.CommandPalette" owl="1">
    <Dialog header="false" footer="false" size="'md'" contentClass="'o_command_palette mt-5'">
      <div t-ref="root">
        <div class="o_command_palette_search input-group mb-2 px-4 py-3 border-bottom">
          <span t-if="state.namespace !== 'default'" class="o_namespace d-flex align-items-center me-1" t-out="state.namespace"/>
          <input class="form-control border-0 p-0" type="text" data-allow-hotkeys="true" t-att-value="state.searchValue" t-ref="autofocus" t-att-placeholder="state.placeholder" t-on-input="onSearchInput" t-on-keydown="onKeyDown"/>
          <div class="input-group-text border-0 bg-transparent">
              <i t-att-title="state.placeholder" role="img" t-att-aria-label="state.placeholder" class="oi oi-search"/>
          </div>
        </div>

        <div t-ref="listbox" class="o_command_palette_listbox position-relative overflow-auto">
          <div t-if="!state.commands.length" class="o_command_palette_listbox_empty px-4 py-3 fst-italic" t-out="state.emptyMessage"/>
          <t t-if="!isFuzzySearch" t-foreach="commandsByCategory" t-as="category" t-key="category.keyId">
            <div class="o_command_category px-0">
              <t t-foreach="category.commands" t-as="command" t-key="command.keyId">
                <t t-set="commandIndex" t-value="state.commands.indexOf(command)"/>
                <div t-attf-id="o_command_{{commandIndex}}" class="o_command" t-att-class="{ focused: state.selectedCommand === command }" t-on-click="(event) =&gt; this.onCommandClicked(event, commandIndex)" t-on-mouseenter="() =&gt; this.onCommandMouseEnter(commandIndex)" t-on-close="() =&gt; this.props.closeMe()">
                  <a t-att-href="command.href">
                    <t t-component="command.Component || DefaultCommandItem" name="command.name" searchValue="state.searchValue" t-props="command.props" executeCommand="() =&gt; this.executeCommand(command)">
                      <t t-set-slot="name">
                        <span class="o_command_name text-ellipsis" t-att-title="command.name">
                          <t t-foreach="command.splitName" t-as="name" t-key="name_index">
                            <b t-if="name_index % 2" t-out="name" class="text-primary"/>
                            <t t-else="" t-out="name"/>
                          </t>
                        </span>
                      </t>
                      <t t-set-slot="focusMessage">
                          <small t-if="!isMobileOS and command.href and state.selectedCommand === command" class="o_command_focus text-muted"><kbd>⏎</kbd> to open, <kbd><t t-if="isMacOS">CMD</t><t t-else="">CTRL</t></kbd>+<kbd>⏎</kbd> to open in new tab</small>
                      </t>
                    </t>
                  </a>
                </div>
              </t>
            </div>

            <hr class="my-2 mx-0" t-if="!category_last"/>
          </t>
        </div>

        <div t-if="state.FooterComponent" class="o_command_palette_footer mt-2 px-4 py-2 border-top bg-100 text-muted">
          <t t-component="state.FooterComponent" switchNamespace="(namespace) =&gt; this.debounceSearch(namespace.concat(this.state.searchValue))"/>
        </div>
      </div>
    </Dialog>
  </t>

<t t-name="web.ConfirmationDialog" owl="1">
    <Dialog size="'md'" title="props.title" modalRef="modalRef">
      <p t-out="props.body" style="white-space: pre-wrap;"/>
      <t t-set-slot="footer" owl="1">
        <button class="btn btn-primary" t-on-click="_confirm" t-esc="props.confirmLabel"/>
        <button t-if="props.cancel" class="btn btn-secondary" t-on-click="_cancel" t-esc="props.cancelLabel"/>
      </t>
    </Dialog>
  </t>

  <t t-name="web.AlertDialog" owl="1">
    <Dialog size="'sm'" title="props.title" contentClass="props.contentClass">
      <p t-out="props.body" style="white-space: pre-wrap;"/>
      <t t-set-slot="footer" owl="1">
        <button class="btn btn-primary" t-on-click="_confirm" t-esc="props.confirmLabel"/>
        <button t-if="props.cancel" class="btn btn-secondary" t-on-click="_cancel" t-esc="props.cancelLabel"/>
      </t>
    </Dialog>
  </t>

<t t-name="web.DatePicker" owl="1">
        <div class="o_datepicker" aria-atomic="true" t-att-data-target-input="'#' + datePickerId" t-ref="root">
            <input type="text" t-ref="input" t-att-id="props.inputId" class="o_datepicker_input o_input datetimepicker-input" t-att-name="props.name" t-att-placeholder="props.placeholder" t-att-readonly="props.readonly" autocomplete="off" t-on-change="onInputChange" t-on-input="onInputInput" t-on-keydown="onInputKeydown"/>
            <input type="hidden" t-ref="hiddenInput" t-att-id="datePickerId"/>
            <span t-if="props.warn_future and state.warning" class="fa fa-exclamation-triangle text-danger o_tz_warning o_datepicker_warning" data-tooltip="This date is on the future. Make sure it is what you expected."/>
            <span class="o_datepicker_button"/>
        </div>
    </t>

<t t-name="web.DebugMenu" owl="1">
        <Dropdown class="'o_debug_manager'" beforeOpen="getElements" position="'bottom-end'" togglerClass="\`o-dropdown--narrow \${env.inDialog?'btn btn-link':''}\`">
            <t t-set-slot="toggler">
                <i class="fa fa-bug"/>
            </t>
            <t t-foreach="elements" t-as="element" t-key="element_index">
                <DropdownItem t-if="element.type == 'item'" onSelected="element.callback" href="element.href">
                    <t t-esc="element.description"/>
                </DropdownItem>
                <div t-if="element.type == 'separator'" role="separator" class="dropdown-divider"/>
                <t t-if="element.type == 'component'" t-component="element.Component" t-props="element.props"/>
            </t>
        </Dropdown>
    </t>

<t t-name="web.DebugMenu.SetDefaultDialog" owl="1">
        <Dialog title="title">
            <table style="width: 100%">
                <tr>
                    <td>
                        <label for="formview_default_fields" class="oe_label oe_align_right">
                            Default:
                        </label>
                    </td>
                    <td class="oe_form_required">
                        <select id="formview_default_fields" class="o_input" t-model="state.fieldToSet">
                            <option value=""/>
                            <option t-foreach="defaultFields" t-as="field" t-att-value="field.name" t-key="field.name">
                                <t t-esc="field.string"/> = <t t-esc="field.displayed"/>
                            </option>
                        </select>
                    </td>
                </tr>
                <tr t-if="conditions.length">
                    <td>
                        <label for="formview_default_conditions" class="oe_label oe_align_right">
                            Condition:
                        </label>
                    </td>
                    <td>
                        <select id="formview_default_conditions" class="o_input" t-model="state.condition">
                            <option value=""/>
                            <option t-foreach="conditions" t-as="cond" t-att-value="cond.name + '=' + cond.value" t-key="cond.name">
                                <t t-esc="cond.string"/>=<t t-esc="cond.displayed"/>
                            </option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <input type="radio" id="formview_default_self" value="self" name="scope" t-model="state.scope"/>
                        <label for="formview_default_self" class="oe_label" style="display: inline;">
                            Only you
                        </label>
                        <br/>
                        <input type="radio" id="formview_default_all" value="all" name="scope" t-model="state.scope"/>
                        <label for="formview_default_all" class="oe_label" style="display: inline;">
                            All users
                        </label>
                    </td>
                </tr>
            </table>
            <t t-set-slot="footer">
                <button class="btn btn-secondary" t-on-click="props.close">Close</button>
                <button class="btn btn-secondary" t-on-click="saveDefault">Save default</button>
            </t>
        </Dialog>
    </t>

    <t t-name="web.DebugMenu.GetMetadataDialog" owl="1">
        <Dialog title="title">
            <table class="table table-sm table-striped">
                <tr>
                    <th>ID:</th>
                    <td><t t-esc="state.id"/></td>
                </tr>
                <tr>
                    <th>XML ID:</th>
                    <td>
                        <t t-if="state.xmlids.length &gt; 1">
                            <t t-foreach="state.xmlids" t-as="imd" t-key="imd['xmlid']">
                                <div t-att-class="&quot;p-0 &quot; + (imd[&quot;xmlid&quot;] === state.xmlid ? &quot;fw-bolder &quot; : &quot;&quot;) + (imd[&quot;noupdate&quot;] === true ? &quot;fst-italic &quot; : &quot;&quot;)" t-esc="imd['xmlid']"/>
                            </t>
                        </t>
                        <t t-elif="state.xmlid" t-esc="state.xmlid"/>
                        <t t-else="">
                            / <a t-on-click="onClickCreateXmlid"> (create)</a>
                        </t>
                    </td>
                </tr>
                <tr>
                    <th>No Update:</th>
                    <td>
                        <t t-esc="state.noupdate"/>
                        <t t-if="state.xmlid">
                            <a t-on-click="toggleNoupdate"> (change)</a>
                        </t>
                    </td>
                </tr>
                <tr>
                    <th>Creation User:</th>
                    <td><t t-esc="state.creator"/></td>
                </tr>
                <tr>
                    <th>Creation Date:</th>
                    <td><t t-esc="state.createDate"/></td>
                </tr>
                <tr>
                    <th>Latest Modification by:</th>
                    <td><t t-esc="state.lastModifiedBy"/></td>
                </tr>
                <tr>
                    <th>Latest Modification Date:</th>
                    <td><t t-esc="state.writeDate"/></td>
                </tr>
            </table>
        </Dialog>
    </t>
<t t-name="web.DebugMenu.ProfilingItem" owl="1">
        <DropdownItem class="o_debug_profiling_item_wrapper">
            <div class="o_debug_profiling_item d-flex justify-content-between">
                <div class="align-self-center">
                    <div t-if="profiling.state.isEnabled" class="alert alert-info py-2 me-3">Recording...</div>
                    <span class="o_profiling_switch">
                        <span class="form-check form-switch" t-on-click.stop.prevent="() =&gt; this.profiling.toggleProfiling()">
                            <input type="checkbox" class="form-check-input" id="enable_profiling" t-att-checked="profiling.state.isEnabled"/>
                            <label class="form-check-label">Enable profiling</label>
                        </span>
                    </span>
                    <t t-if="profiling.state.isEnabled">
                        <span class="o_profiling_switch form-check form-switch mt-2" t-on-click.stop.prevent="() =&gt; this.profiling.toggleCollector('sql')">
                            <input type="checkbox" class="form-check-input" id="profile_sql" t-att-checked="profiling.isCollectorEnabled('sql')"/>
                            <label class="form-check-label" for="profile_sql">Record sql</label>
                        </span>
                        <span class="o_profiling_switch form-check form-switch mt-2" t-on-click.stop.prevent="() =&gt; this.profiling.toggleCollector('traces_async')">
                            <input type="checkbox" class="form-check-input" id="profile_traces_async" t-att-checked="profiling.isCollectorEnabled('traces_async')"/>
                            <label class="form-check-label" for="profile_traces_async">Record traces</label>
                        </span>
                        <div t-if="profiling.isCollectorEnabled('traces_async')" class="input-group input-group-sm mt-2" t-on-click.stop.prevent="">
                            <div class="input-group-text">Interval</div>
                            <select class="profile_param form-select" t-on-change="(ev) =&gt; this.changeParam('traces_async_interval', ev)">
                                <t t-set="interval" t-value="profiling.state.params.traces_async_interval"/>
                                <option value="">Default</option>
                                <option value="0.001" t-att-selected="interval === '0.001'">0.001</option>
                                <option value="0.01" t-att-selected="interval === '0.01'">0.01</option>
                                <option value="0.1" t-att-selected="interval === '0.1'">0.1</option>
                                <option value="1" t-att-selected="interval === '1'">1</option>
                            </select>
                        </div>
                        <span t-if="profiling.isCollectorEnabled('sql') || profiling.isCollectorEnabled('traces_async')" class="o_profiling_switch form-check form-switch mt-2" t-on-click.stop.prevent="(ev) =&gt; this.toggleParam('execution_context_qweb', ev)">
                            <input type="checkbox" class="form-check-input" id="profile_execution_context_qweb" t-att-checked="!!profiling.state.params.execution_context_qweb"/>
                            <label class="form-check-label" for="profile_execution_context_qweb">Add qweb directive context</label>
                        </span>
                        <span class="o_profiling_switch form-check form-switch mt-2" t-on-click.stop.prevent="() =&gt; this.profiling.toggleCollector('qweb')">
                            <input type="checkbox" class="form-check-input" id="profile_qweb" t-att-checked="profiling.isCollectorEnabled('qweb')"/>
                            <label class="form-check-label" for="profile_qweb">Record qweb</label>
                        </span>
                    </t>
                </div>
                <a href="#" t-on-click.prevent="openProfiles" t-attf-class="btn btn-light align-self-baseline {{profiling.state.isEnabled ? 'py-2' : ''}}">
                    <i class="o_open_profiling oi oi-launch"/>
                </a>
            </div>
        </DropdownItem>
    </t>

<t t-name="web.ProfilingQwebView" owl="1">
    <div class="oe_form_field o_ace_view_editor oe_ace_open o_profiling_qweb_view">
        <div class="o_select_view_profiling" t-ref="selector">
            <a role="button" class="dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false" href="#"><MenuItem view="state.view" t-if="state.view"/></a>
            <div class="dropdown-menu" role="menu">
                <t t-foreach="viewObjects" t-as="view" t-key="view_index">
                    <a role="menuitem" href="#" t-att-data-id="view.id" t-on-click.prevent="_onSelectView">
                        <MenuItem view="view"/>
                    </a>
                </t>
            </div>
        </div>
        <div class="ace-view-editor" t-ref="ace"/>
        <small class="text-muted">
            It is possible that the "t-call" time does not correspond to the overall time of the
            template. Because the global time (in the drop down) does not take into account the
            duration which is not in the rendering (look for the template, read, inheritance,
            compilation...). During rendering, the global time also takes part of the time to make
            the profile as well as some part not logged in the function generated by the qweb.
        </small>
    </div>
</t>
<t t-name="web.ProfilingQwebView.menuitem" owl="1">
    <div class="o_delay"><t t-if="props.view.delay" t-esc="props.view.delay"/> ms</div>
    <div class="o_query"><t t-if="props.view.delay" t-esc="props.view.query"/> query</div>
    <t t-esc="props.view.display_name"/>
    <div class="o_key text-muted">(<t t-esc="props.view.id"/>, <t t-esc="props.view.key"/>)</div>
</t>
<t t-name="web.ProfilingQwebView.hover" owl="1">
    <div class="o_info o_detail">
        <div class="o_delay"><t t-esc="delay"/> <span>ms</span></div>
        <div class="o_query"><t t-esc="query"/> <span>query</span></div>
    </div>
</t>
<t t-name="web.ProfilingQwebView.info" owl="1">
    <div class="o_info">
        <div t-if="displayDetail" class="o_more">
            <span>*</span>
            <table class="o_detail">
                <thead>
                    <tr><th/><th>ms</th><th>query</th></tr>
                </thead>
                <tbody>
                    <tr t-foreach="groups" t-as="directive" t-key="directive_index">
                        <td><t t-esc="directive"/></td>
                        <td><t t-esc="groups[directive].delays.join(' ')"/></td>
                        <td><t t-esc="groups[directive].querys.join(' ')"/></td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="o_delay"><t t-esc="delay"/></div>
        <div class="o_query"><t t-esc="query"/></div>
    </div>
</t>

<t t-name="web.ProfilingSystrayItem" owl="1">
        <div class="d-flex align-items-center">
            <i class="fa fa-circle text-danger o_debug_recording"/>
        </div>
    </t>

<t t-name="web.Dialog" owl="1">
        <div class="o_dialog" t-att-id="id" t-att-class="{ o_inactive_modal: !data.isActive }">
            <div role="dialog" class="modal d-block" tabindex="-1" t-att-class="{ o_technical_modal: props.technical, o_modal_full: isFullscreen }" t-ref="modalRef">
                <div class="modal-dialog" t-attf-class="modal-{{props.size}}">
                    <div class="modal-content" t-att-class="props.contentClass">
                        <header t-if="props.header" class="modal-header">
                            <t t-slot="header" close="data.close" isFullscreen="isFullscreen">
                                <t t-call="web.Dialog.header">
                                    <t t-set="close" t-value="data.close"/>
                                    <t t-set="fullscreen" t-value="isFullscreen"/>
                                </t>
                            </t>
                        </header>

                        <footer t-if="props.footer" class="modal-footer justify-content-around justify-content-sm-start flex-wrap gap-1" style="order:2">
                            <t t-slot="footer" close="data.close">
                                <button class="btn btn-primary o-default-button" t-on-click="data.close">
                                    <t>Ok</t>
                                </button>
                            </t>
                        </footer>
                        <main class="modal-body" t-attf-class="{{ props.bodyClass }} {{ !props.withBodyPadding ? 'p-0': '' }}">
                            <t t-slot="default" close="data.close"/>
                        </main>
                    </div>
                </div>
            </div>
        </div>
    </t>

    <t t-name="web.Dialog.header" owl="1">
        <t t-if="fullscreen">
            <button class="btn fa fa-arrow-left" data-bs-dismiss="modal" aria-label="Close" t-on-click="close"/>
        </t>
        <h4 class="modal-title text-break" t-att-class="{ 'me-auto': fullscreen }">
            <t t-esc="props.title"/>
        </h4>
        <t t-if="!fullscreen">
            <button type="button" class="btn-close" aria-label="Close" tabindex="-1" t-on-click="close"/>
        </t>
    </t>
<t t-name="web._DomainSelector" owl="1">
        <t t-set="tree" t-value="buildTree()"/>
        <t t-if="tree">
            <DomainSelectorRootNode value="props.value" node="tree" readonly="props.readonly" resModel="props.resModel" isDebugMode="props.isDebugMode" debugValue="props.debugValue" className="props.className"/>
        </t>
        <t t-else="">
            <div t-att-class="props.className">This domain is not supported.</div>
        </t>
    </t>

<t t-name="web.DomainSelectorBranchNode" owl="1">
        <div class="o_domain_node o_domain_tree" t-ref="root">
            <div class="o_domain_tree_header o_domain_selector_row">
                <t t-if="!props.readonly">
                    <DomainSelectorControlPanel node="props.node" onHoverDeleteNodeBtn.bind="onHoverDeleteNodeBtn" onHoverInsertLeafNodeBtn.bind="onHoverInsertLeafNodeBtn" onHoverInsertBranchNodeBtn.bind="onHoverInsertBranchNodeBtn"/>
                </t>
                <DomainSelectorBranchOperator node="props.node" readonly="props.readonly"/>
                <span class="ml4">of:</span>
            </div>
            <div class="o_domain_node_children_container">
                <t t-foreach="props.node.operands" t-as="subNode" t-key="subNode.id">
                    <t t-if="subNode.type === 'branch'">
                        <DomainSelectorBranchNode t-props="{ ...props, node: subNode }"/>
                    </t>
                    <t t-elif="subNode.type === 'leaf'">
                        <DomainSelectorLeafNode t-props="{ ...props, node: subNode }"/>
                    </t>
                </t>
            </div>
        </div>
    </t>

<t t-name="web.DomainSelectorBranchOperator" owl="1">
        <t t-if="!props.readonly">
            <div class="d-inline-flex o_domain_tree_operator_selector" aria-atomic="true">
                <Dropdown togglerClass="'btn btn-link btn-sm btn-primary py-0 px-1 o_domain_tree_operator_caret'" showCaret="props.showCaret">
                    <t t-set-slot="toggler">
                            <t t-if="props.node.operator === '&amp;'">all</t>
                            <t t-elif="props.node.operator === '|'">any</t>
                            <t t-elif="props.node.operator === '!'">none</t>
                    </t>
                    <DropdownItem onSelected="() =&gt; this.onOperatorSelected('&amp;')">all</DropdownItem>
                    <DropdownItem onSelected="() =&gt; this.onOperatorSelected('|')">any</DropdownItem>
                </Dropdown>
            </div>
        </t>
        <t t-else="">
            <strong>
                <t t-if="props.node.operator === '&amp;'">all</t>
                <t t-elif="props.node.operator === '|'">any</t>
                <t t-elif="props.node.operator === '!'">none</t>
            </strong>
        </t>
    </t>

<t t-name="web.DomainSelectorControlPanel" owl="1">
        <div class="o_domain_node_control_panel" role="toolbar" aria-label="Domain node">
            <button class="btn btn-link text-danger o_domain_delete_node_button" title="Delete node" aria-label="Delete node" t-on-click="deleteNode" t-on-mouseenter="onEnterDeleteNodeBtn" t-on-mouseleave="onLeaveDeleteNodeBtn">
                <i class="fa fa-times"/>
            </button>
            <button class="btn o_domain_add_node_button" title="Add node" aria-label="Add node" t-on-click="() =&gt; this.insertNode('leaf')" t-on-mouseenter="onEnterInsertLeafNodeBtn" t-on-mouseleave="onLeaveInsertLeafNodeBtn">
                <i class="fa fa-plus-circle"/>
            </button>
            <button class="btn o_domain_add_node_button" title="Add branch" aria-label="Add branch" data-branch="1" t-on-click="() =&gt; this.insertNode('branch')" t-on-mouseenter="onEnterInsertBranchNodeBtn" t-on-mouseleave="onLeaveInsertBranchNodeBtn">
                <i class="fa fa-ellipsis-h"/>
            </button>
        </div>
    </t>

<t t-name="web.DomainSelectorLeafNode" owl="1">
        <div class="o_domain_node o_domain_leaf o_domain_selector_row" t-ref="root">
            <t t-if="props.readonly">
                <div class="o_domain_leaf_info">
                    <ModelFieldSelector fieldName="props.node.operands[0].toString()" resModel="props.resModel" readonly="props.readonly" isDebugMode="props.isDebugMode"/>
                    <t t-if="typeof props.node.operands[1] === 'string'">
                        <span class="o_domain_leaf_operator"> <t t-esc="displayedOperator"/></span>
                        <span class="o_domain_leaf_value text-primary"> "<t t-esc="props.node.operands[1]"/>"</span>
                    </t>
                    <t t-elif="typeof props.node.operands[1] === 'number'">
                        <span class="o_domain_leaf_operator"> <t t-esc="displayedOperator"/></span>
                        <span class="o_domain_leaf_value text-primary"> <t t-esc="props.node.operands[1]"/></span>
                    </t>
                    <t t-elif="typeof props.node.operands[1] === 'boolean'">
                        is
                        <t t-if="(props.node.operator === '=' and props.node.operands[1] === false) or (props.node.operator === '!=' and props.node.operands[1] === true)">
                            not
                        </t>
                        set
                    </t>
                    <t t-elif="Array.isArray(props.node.operands[1])">
                        <span class="o_domain_leaf_operator"> <t t-esc="displayedOperator"/></span>
                        <t t-foreach="props.node.operands[1]" t-as="value" t-key="value_index">
                            <span class="o_domain_leaf_value text-primary"> "<t t-esc="value"/>"</span>
                            <t t-if="!value_last"> or </t>
                        </t>
                    </t>
                </div>
            </t>
            <t t-else="">
                <DomainSelectorControlPanel node="props.node" onHoverDeleteNodeBtn.bind="onHoverDeleteNodeBtn" onHoverInsertLeafNodeBtn.bind="onHoverInsertLeafNodeBtn" onHoverInsertBranchNodeBtn.bind="onHoverInsertBranchNodeBtn"/>
                <div class="o_domain_leaf_edition">
                    <ModelFieldSelector fieldName="props.node.operands[0].toString()" resModel="props.resModel" readonly="props.readonly" update="(name) =&gt; this.onFieldChange(name)" isDebugMode="props.isDebugMode"/>
                    <t t-set="field" t-value="getFieldComponent(fieldInfo.type)"/>
                    <t t-if="field">
                        <div>
                            <select class="o_domain_leaf_operator_select o_input text-truncate pe-1" t-on-change="onOperatorChange">
                                <t t-foreach="getOperators(field)" t-as="operator" t-key="operator.value">
                                    <option t-att-value="operator_index" t-att-selected="operator.matches({ fieldInfo, operator: props.node.operator, value: props.node.operands[1] })" t-esc="operator.label"/>
                                </t>
                            </select>
                        </div>
                        <t t-if="!isValueHidden">
                            <t t-component="field" t-key="fieldInfo.type" field="fieldInfo" operator="getOperatorInfo(props.node.operator)" value="props.node.operands[1]" update="(changes) =&gt; props.node.update(changes)"/>
                        </t>
                    </t>
                </div>
            </t>
        </div>
    </t>

<t t-name="web.DomainSelectorRootNode" owl="1">
        <div class="o_domain_node o_domain_tree o_domain_selector" aria-atomic="true" t-attf-class="{{ props.className }} {{ props.readonly ? 'o_read_mode' : 'o_edit_mode'}}">
            <t t-if="!hasNode">
                <span>Match <strong>all records</strong></span>
                <t t-if="!props.readonly">
                    <button class="btn btn-sm btn-primary o_domain_add_first_node_button ms-1" t-on-click="() =&gt; this.insertNode('leaf')">
                        <i class="fa fa-plus"/> Add filter
                    </button>
                </t>
            </t>
            <t t-else="">
                <t t-if="node.type === 'leaf'">
                    Match records with the following rule:
                    <div class="o_domain_node_children_container">
                        <DomainSelectorLeafNode t-props="{ ...props, node }"/>
                    </div>
                </t>
                <t t-else="">
                    <span>Match records with </span>
                    <DomainSelectorBranchOperator node="node" readonly="props.readonly" showCaret="true"/>
                    <span> of the following rules:</span>
                    <div class="o_domain_node_children_container">
                        <t t-foreach="node.operands" t-as="subNode" t-key="subNode.id">
                            <t t-if="subNode.type === 'branch'">
                                <DomainSelectorBranchNode t-props="{ ...props, node: subNode }"/>
                            </t>
                            <t t-elif="subNode.type === 'leaf'">
                                <DomainSelectorLeafNode t-props="{ ...props, node: subNode }"/>
                            </t>
                        </t>
                    </div>
                </t>
            </t>
            <t t-if="props.isDebugMode and !props.readonly">
                <label class="o_domain_debug_container">
                    <span class="small"># Code editor</span>
                    <textarea type="text" class="o_domain_debug_input" t-att-value="props.debugValue or props.value" t-on-change="onChange"/>
                </label>
            </t>
        </div>
    </t>

<t t-name="web.DomainSelectorBooleanField" owl="1">
        <div class="o_ds_value_cell">
            <select class="o_input" t-on-change="onChange">
                <option value="1" t-att-selected="props.value">set (true)</option>
                <option value="0" t-att-selected="!props.value">not set (false)</option>
            </select>
        </div>
    </t>

<t t-name="web.DomainSelectorDateTimeField" owl="1">
        <div class="o_ds_value_cell">
            <t t-component="component" date="deserializedValue" onDateTimeChanged.bind="onChange"/>
        </div>
    </t>

<t t-name="web.DomainSelectorDefaultField" owl="1">
        <div class="o_ds_value_cell">
            <DomainSelectorFieldInput t-props="props"/>
        </div>
    </t>

<t t-name="web.DomainSelectorFieldInput" owl="1">
        <input type="text" class="o_input o_domain_leaf_value_input" t-att-value="props.value" t-on-change="onChange"/>
    </t>

<t t-name="web.DomainSelectorFieldInputWithTags" owl="1">
        <div class="o_ds_value_cell">
            <div class="o_domain_leaf_value_input">
                <t t-foreach="props.value" t-as="tag" t-key="tag_index">
                    <span class="badge rounded-pill">
                        <t t-esc="tag"/> <i class="o_domain_leaf_value_remove_tag_button fa fa-times" role="img" aria-label="Remove tag" title="Remove tag" t-on-click="() =&gt; this.removeTag(tag_index)"/>
                    </span>
                </t>
            </div>
            <div class="o_domain_leaf_value_tags">
                <input type="text" class="o_input" placeholder="Add new value" t-ref="input"/>
                <button class="btn btn-sm btn-primary fa fa-plus o_domain_leaf_value_add_tag_button" aria-label="Add tag" title="Add tag" t-on-click="onBtnClick"/>
            </div>
        </div>
    </t>

<t t-name="web.DomainSelectorNumberField" owl="1">
        <div class="o_ds_value_cell">
            <DomainSelectorFieldInput t-props="props"/>
        </div>
    </t>

<t t-name="web.DomainSelectorRelationField" owl="1">
        <div class="o_ds_value_cell">
            <DomainSelectorFieldInput t-props="props"/>
        </div>
    </t>

<t t-name="web.DomainSelectorSelectionField" owl="1">
        <div class="o_ds_value_cell">
            <t t-if="props.operator.category === 'in'">
                <input type="text" class="o_input o_domain_leaf_value_input" t-att-value="formattedValue" t-on-change="onChangeMulti"/>
            </t>
            <t t-else="">
                <select class="o_input o_domain_leaf_value_input" t-on-change="onChange">
                    <t t-foreach="props.field.selection" t-as="option" t-key="option[0]">
                        <option t-att-value="option[0]" t-att-selected="option[0] === props.value" t-esc="option[1]"/>
                    </t>
                </select>
            </t>
        </div>
    </t>

<t t-name="web.DomainSelectorTextField" owl="1">
        <t t-if="props.operator.category === 'in'">
            <DomainSelectorFieldInputWithTags t-props="props"/>
        </t>
        <t t-else="">
            <div class="o_ds_value_cell">
                <DomainSelectorFieldInput t-props="props"/>
            </div>
        </t>
    </t>

<t t-name="web.DomainSelectorDialog" owl="1">
        <Dialog title="dialogTitle">
            <DomainSelector t-props="domainSelectorProps"/>
            <t t-set-slot="footer">
                <t t-if="props.readonly">
                    <button class="btn btn-secondary" t-on-click="() =&gt; props.close()">Close</button>
                </t>
                <t t-else="">
                    <button class="btn btn-primary" t-on-click="onSave">Save</button>
                    <button class="btn btn-secondary" t-on-click="onDiscard">Discard</button>
                </t>
            </t>
        </Dialog>
    </t>

<t t-name="web.Dropdown" owl="1">
    <div class="o-dropdown dropdown" t-att-class="props.class" t-attf-class="         {{ directionCaretClass || ''}}         {{ state.open ? 'show' : ''}}         {{ !showCaret ? 'o-dropdown--no-caret' : '' }}       " t-ref="root">
      <button t-if="props.toggler !== 'parent'" class="dropdown-toggle" t-attf-class="           {{props.togglerClass || ''}}           {{parentDropdown ? 'dropdown-item' : ''}}         " t-on-click.stop="onTogglerClick" t-on-mouseenter="onTogglerMouseEnter" t-att-title="props.title" t-att-data-hotkey="props.hotkey" t-att-data-tooltip="props.tooltip" t-att-tabindex="props.skipTogglerTabbing ? -1 : 0" t-att-aria-expanded="state.open ? 'true' : 'false'" t-ref="togglerRef">
        <t t-slot="toggler"/>
      </button>
      <div t-if="state.open" class="o-dropdown--menu dropdown-menu d-block" t-att-class="props.menuClass" role="menu" t-ref="menuRef">
        <t t-slot="default"/>
      </div>
    </div>
  </t>

<t t-name="web.DropdownItem" owl="1">
    <t t-tag="props.href ? 'a' : 'span'" t-att-href="props.href" class="dropdown-item" t-att-class="props.class" role="menuitem" t-on-click.stop="onClick" t-att-title="props.title" t-att-data-hotkey="props.hotkey" t-att="dataAttributes" tabindex="0">
      <t t-slot="default"/>
    </t>
  </t>

<t t-name="web.RainbowMan" owl="1">
        <div class="o_reward position-absolute top-0 bottom-0 start-0 end-0 w-100 h-100" t-att-class="{ o_reward_fading: state.isFading }" t-on-animationend="onAnimationEnd">
            <svg class="o_reward_rainbow_man position-absolute top-0 bottom-0 start-0 end-0 m-auto overflow-visible" viewBox="0 0 400 400">
                <defs>
                    <radialGradient id="o_reward_gradient_bg" cx="200" cy="200" r="200" gradientUnits="userSpaceOnUse">
                        <stop offset="0.3" stop-color="#edeff4"/>
                        <stop offset="1" stop-color="#edeff4" stop-opacity="0"/>
                    </radialGradient>
                    <symbol id="o_reward_star">
                        <path d="M33 15.9C26.3558 13.6951 21.1575 8.4597 19 1.8 19 1.2477 18.5523.8 18 .8 17.4477.8 17 1.2477 17 1.8 14.6431 8.6938 9.0262 13.9736 2 15.9 1.3649 15.9.85 16.4149.85 17.05.85 17.6851 1.3649 18.2 2 18.2 8.6215 20.3845 13.8155 25.5785 16 32.2 16 32.7523 16.4477 33.2 17 33.2 17.5523 33.2 18 32.7523 18 32.2 20.3569 25.3062 25.9738 20.0264 33 18.1 33.6351 18.1 34.15 17.5851 34.15 16.95 34.15 16.3149 33.6351 15.8 33 15.8" fill="#FFFFFF"/>
                    </symbol>
                    <symbol id="o_reward_thumb">
                        <path d="M10 52C6 51 3 48 3 44 2 42 3 39 5 38 3 36 2 34 2 32 2 29 3 27 5 26 3 24 2 21 2 19 2 15 7 12 10 12L23 12C23 11 23 11 23 11L23 10C23 8 24 6 25 4 27 2 29 2 31 2 33 2 35 2 36 4 38 5 39 7 39 10L39 38C39 41 37 45 35 47 32 50 28 51 25 52L10 52 10 52Z" fill="#FBFBFC"/>
                        <polygon fill="#ECF1FF" points="25 11 25 51 5 52 5 12"/>
                        <path d="M31 0C28 0 26 1 24 3 22 5 21 7 21 10L10 10C8 10 6 11 4 12 2 14 1 16 1 19 1 21 1 24 2 26 1 27 1 29 1 32 1 34 1 36 2 38 1 40 0 42 1 45 1 50 5 53 10 54L25 54C29 54 33 52 36 49 39 46 41 42 41 38L41 10C41 4 36 0 31 0M31 4C34 4 37 6 37 10L37 38C37 41 35 44 33 46 31 48 28 49 25 50L10 50C7 49 5 47 5 44 4 41 6 38 9 37L9 37C6 37 5 35 5 32 5 28 6 26 9 26L9 26C6 26 5 22 5 19 5 16 8 14 11 14L23 14C24 14 25 12 25 11L25 10C25 7 28 4 31 4" fill="#A1ACBA"/>
                    </symbol>
                </defs>
                <rect width="400" height="400" fill="url(#o_reward_gradient_bg)"/>
                <g transform="translate(47 45) scale(0.9)" class="o_reward_rainbow">
                    <path d="M270,170a100,100,0,0,0-200,0" class="o_reward_rainbow_line" stroke="#FF9E80" stroke-linecap="round" stroke-width="21" fill="none" stroke-dasharray="600 600" stroke-dashoffset="-600"/>
                    <path d="M290,170a120,120,0,0,0-240,0" class="o_reward_rainbow_line" stroke="#FFE57F" stroke-linecap="round" stroke-width="21" fill="none" stroke-dasharray="600 600" stroke-dashoffset="-600"/>
                    <path d="M310,170a140,140,0,0,0-280,0" class="o_reward_rainbow_line" stroke="#80D8FF" stroke-linecap="round" stroke-width="21" fill="none" stroke-dasharray="600 600" stroke-dashoffset="-600"/>
                    <path d="M330,170a160,160,0,0,0-320,0" class="o_reward_rainbow_line" stroke="#C794BA" stroke-linecap="round" stroke-width="21" fill="none" stroke-dasharray="600 600" stroke-dashoffset="-600"/>
                </g>
                <g transform="translate(80 125)">
                    <use href="#o_reward_star" transform-origin="center" class="o_reward_box o_reward_star_01"/>
                </g>
                <g transform="translate(140 75)">
                    <use href="#o_reward_star" transform-origin="center" class="o_reward_box o_reward_star_02"/>
                </g>
                <g transform="translate(230 90)">
                    <use href="#o_reward_star" transform-origin="center" class="o_reward_box o_reward_star_03"/>
                </g>
                <g transform="translate(275 120)">
                    <use href="#o_reward_star" transform-origin="center" class="o_reward_box o_reward_star_04"/>
                </g>
                <g class="o_reward_face_group o_reward_box" transform-origin="center top">
                    <g class="o_reward_shadow_container o_reward_box">
                        <ellipse class="o_reward_shadow o_reward_box" cx="200" cy="105%" rx="100" ry="6" fill="#000" opacity="0.25" transform-origin="center"/>
                    </g>
                    <g class="o_reward_face_wrap o_reward_box" transform-origin="center">
                        <image class="o_reward_face" x="132" y="125" width="136" height="136" t-attf-href="{{props.imgUrl}}"/>
                    </g>
                    <g transform="translate(258 174)">
                        <use href="#o_reward_thumb" class="o_reward_box o_reward_thumbup" transform-origin="center"/>
                    </g>
                </g>
            </svg>
            <div class="o_reward_rainbow_man o_reward_msg_container position-absolute top-0 bottom-0 start-0 end-0 m-auto">
                <div class="o_reward_face_group h-100 w-75 mx-auto">
                    <svg viewBox="0 0 42 60" preserveAspectRatio="xMinYMax meet" width="37" height="65%" class="overflow-visible position-relative ms-5">
                        <g class="o_reward_box">
                            <use href="#o_reward_thumb" x="-60%" y="0" transform="rotate(-90) scale(1 -1)" transform-origin="center"/>
                        </g>
                    </svg>
                    <div class="o_reward_msg mx-4">
                        <div class="o_reward_msg_card">
                            <div class="o_reward_msg_content text-muted px-3 py-4 bg-white d-inline-block border border-light border-top-0">
                                <t t-if="!props.Component">
                                    <t t-out="props.message"/>
                                </t>
                                <t t-else="" t-component="props.Component" t-props="props.props"/>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </t>
<t t-name="web.WarningDialog" owl="1">
      <Dialog title="title">
        <div role="alert" class="o_dialog_warning">
          <p t-esc="message" style="white-space: pre-wrap;"/>
        </div>
      </Dialog>
    </t>

    <t t-name="web.RedirectWarningDialog" owl="1">
      <Dialog title="title">
        <div role="alert">
          <p t-esc="message" style="white-space: pre-wrap;"/>
        </div>
        <t t-set-slot="footer">
          <button class="btn btn-primary" t-on-click="onClick" t-esc="buttonText"/>
          <button class="btn btn-secondary" t-on-click="props.close">Cancel</button>
        </t>
      </Dialog>
    </t>

    <t t-name="web.Error504Dialog" owl="1">
      <Dialog title="this.constructor.title">
        <div role="alert">
            <p style="white-space: pre-wrap;">
            The operation was interrupted. This usually means that the current operation is taking too much time.
            </p>
        </div>
      </Dialog>
    </t>

    <t t-name="web.SessionExpiredDialog" owl="1">
      <Dialog title="this.constructor.title">
        <div role="alert">
          <p style="white-space: pre-wrap;">
            Your Odoo session expired. The current page is about to be refreshed.
          </p>
        </div>
        <t t-set-slot="footer">
          <button class="btn btn-primary" t-on-click="onClick">Ok</button>
        </t>
      </Dialog>
    </t>

    <t t-name="web.ErrorDialog" owl="1">
      <Dialog contentClass="'o_dialog_error'" title="this.constructor.title">
        <div class="alert alert-warning clearfix" role="alert">
            <div class="float-end ml8 btn-group-vertical">
                <button class="btn btn-primary" t-on-click="onClickClipboard">
                    <i class="fa fa-clipboard mr8"/><t>Copy the full error to clipboard</t>
                </button>
            </div>
            <p><b>An error occurred</b></p>
            <p>Please use the copy button to report the error to your support service.</p>
        </div>


        <button class="btn btn-link" t-on-click="() =&gt; { state.showTraceback = !state.showTraceback }">See details</button>
        <div t-if="state.showTraceback and (props.name or props.message)" class="alert alert-info bg-100 clearfix" role="alert">
          <code t-if="props.name" t-esc="props.name"/>
          <p t-if="props.message" t-esc="props.message"/>
        </div>
        <div t-if="state.showTraceback" class="alert alert-danger o_error_detail" role="alert">
            <pre t-esc="traceback or props.traceback"/>
        </div>
      </Dialog>
    </t>

<t t-name="web.FileInput" owl="1">
        <span class="o_file_input" t-att-class="{ 'd-none': props.hidden }" aria-atomic="true">
            <span t-if="!props.hidden" class="o_file_input_trigger" t-on-click.prevent="onTriggerClicked">
                <t t-slot="default">
                    <button class="btn btn-primary">Choose File</button>
                </t>
            </span>
            <input type="file" name="ufile" class="o_input_file d-none" t-att-multiple="props.multiUpload" t-att-accept="props.acceptedFileExtensions" t-ref="file-input" t-on-change="onFileInputChange"/>
        </span>
    </t>

<t t-name="web.FileUploadProgressBar" owl="1">
        <div class="position-absolute top-0 start-0 h-100 w-100">
            <div class="o-file-upload-progress-bar-value h-100" t-ref="bar" t-att-style="'width: ' + (this.props.fileUpload.progress * 100) + '%;'"/>
            <span class="position-absolute top-0 end-0 cursor-pointer o-file-upload-progress-bar-abort fa fa-times-circle" title="Cancel Upload" aria-label="Cancel Upload" t-on-click.stop.prevent="onCancel"/>
        </div>
    </t>
<t t-name="web.FileUploadProgressContainer" owl="1">
        <t t-foreach="Object.values(props.fileUploads)" t-as="fileUpload" t-key="fileUpload.id">
            <t t-if="!props.shouldDisplay || props.shouldDisplay(fileUpload)" t-component="props.Component" fileUpload="fileUpload" selector="props.selector"/>
        </t>
    </t>
<t t-name="web.FileUploadProgressKanbanRecord" owl="1">
        <t t-set="progressTexts" t-value="getProgressTexts()"/>
        <div class="o_kanban_record d-flex flex-grow-1 flex-md-shrink-1 flex-shrink-0">
            <div class="o_kanban_progress_card o_kanban_attachment position-relative p-0 cursor-pointer">
                <div class="o_kanban_image">
                    <div class="o_kanban_image_wrapper">
                        <div class="o_image o_image_thumbnail" t-att-data-mimetype="props.fileUpload.type"/>
                    </div>
                </div>
                <div class="o_kanban_details">
                    <div class="o_kanban_details_wrapper">
                        <div t-att-title="props.fileUpload.title" t-att-aria-label="props.fileUpload.title" class="o_kanban_record_title">
                            <span t-esc="props.fileUpload.title"/>
                        </div>
                        <div class="o_kanban_record_body"/>
                        <div class="o_kanban_record_bottom">
                            <div class="oe_kanban_bottom_left">
                                <div class="o_file_upload_progress_text_left" t-esc="progressTexts.left"/>
                            </div>
                            <div class="oe_kanban_bottom_right">
                                <span class="o_file_upload_progress_text_right" t-esc="progressTexts.right"/>
                            </div>
                        </div>
                    </div>
                </div>
                <FileUploadProgressBar fileUpload="props.fileUpload"/>
            </div>
        </div>
    </t>

    <t t-name="web.FileUploadProgressDataRow" owl="1">
        <t t-set="progressTexts" t-value="getProgressTexts()"/>
        <div class="o_data_row o_list_progress_card position-relative align-middle p-0">
            <span class="o_file_upload_upload_title" t-esc="props.fileUpload.title"/>
            <span class="o_file_upload_progress_text_left" t-esc="progressTexts.left"/>
            <span class="o_file_upload_progress_text_right" t-esc="progressTexts.right"/>
            <FileUploadProgressBar fileUpload="props.fileUpload"/>
        </div>
    </t>

<t t-name="web._ModelFieldSelector" owl="1">
        <div class="o_field_selector" aria-atomic="true" t-att-class="props.readonly ? 'o_read_mode' : 'o_edit_mode o_input'" t-on-click="onFieldSelectorClick">
            <div class="o_field_selector_value" tabindex="0">
                <t t-foreach="chain" t-as="node" t-key="node_index">
                    <t t-if="node.field">
                        <t t-if="!node_first">
                            <i class="fa fa-chevron-right" role="img" aria-label="Followed by" title="Followed-by"/>
                        </t>
                        <span class="o_field_selector_chain_part">
                            <t t-esc="node.field.string"/>
                        </span>
                    </t>
                </t>
            </div>
            <t t-if="!fieldNameChain.length">
                <div class="o_field_selector_controls" tabindex="0">
                    <i role="alert" class="fa fa-exclamation-triangle o_field_selector_warning" title="Invalid field chain" aria-label="Invalid field chain"/>
                </div>
            </t>
        </div>
    </t>

<t t-name="web.ModelFieldSelectorPopover" owl="1">
        <div class="o_field_selector_popover" t-on-keydown="onInputKeydown" tabindex="0">
            <div class="o_field_selector_popover_header text-center">
                <t t-if="chain.length &gt; 1">
                    <i class="fa fa-arrow-left o_field_selector_popover_option o_field_selector_prev_page" title="Previous" role="img" aria-label="Previous" t-on-click="onPreviousBtnClick"/>
                </t>
                <t t-if="isDefaultValueVisible">
                    <div class="o_field_selector_title">Default value</div>
                </t>
                <t t-else="">
                    <div class="o_field_selector_title" t-out="currentFieldName"/>
                </t>
                <i class="fa fa-times o_field_selector_popover_option o_field_selector_close" title="Close" role="img" aria-label="Close" t-on-click="props.close"/>
                <t t-if="props.showSearchInput &amp;&amp; !isDefaultValueVisible">
                    <div class="o_field_selector_search mt-2">
                        <input type="text" placeholder="Search..." class="o_input" t-att-value="searchValue" t-on-input="onSearch" t-ref="autofocus"/>
                    </div>
                </t>
                <t t-if="isDefaultValueVisible">
                    <div class="o_field_selector_default_value_input mt-2">
                        <input type="text" placeholder="Type a default text or press ENTER" class="o_input" t-att-value="defaultValue" t-on-input="onDefaultValue" t-ref="autofocusDefaultValue"/>
                    </div>
                </t>
            </div>
            <div class="o_field_selector_popover_body">
                <ul class="o_field_selector_page" t-if="!isDefaultValueVisible">
                    <t t-foreach="fieldKeys" t-as="fieldKey" t-key="fieldKey">
                        <t t-set="field" t-value="fields[fieldKey]"/>
                        <t t-if="field.searchable and props.filter(field)">
                            <li t-on-click="() =&gt; this.onFieldSelected({ ...field, name: fieldKey })" t-att-data-name="fieldKey" t-attf-class="o_field_selector_item #{fieldKey === currentActiveField and ' active' or ''}">
                                <t t-out="field.string"/>
                                <div t-if="props.isDebugMode" class="text-muted o_field_selector_item_title"><t t-out="fieldKey"/> (<t t-out="field.type"/>)</div>
                                <t t-if="field.relation and props.followRelations">
                                    <i class="fa fa-chevron-right o_field_selector_relation_icon" role="img" aria-label="Relation to follow" title="Relation to follow"/>
                                </t>
                            </li>
                        </t>
                    </t>
                </ul>
                <ul class="o_field_selector_page" t-if="isDefaultValueVisible">
                    <li class="o_field_selector_item" t-on-click="() =&gt; this.selectDefaultValue(defaultValue !== '')">
                        <t t-if="defaultValue === ''">
                            <div class="text-muted o_field_selector_item_title">Default text is used when no values are set</div>
                        </t>
                        <t t-else="">
                            <div class="text-muted o_field_selector_item_title">As a default text when no value are set</div>
                        </t>
                    </li>
                </ul>
            </div>
            <t t-if="props.isDebugMode">
                <div class="o_field_selector_popover_footer">
                    <input type="text" class="o_input o_field_selector_debug" t-att-value="fullFieldName" t-on-change="onFieldNameChange"/>
                </div>
            </t>
        </div>
    </t>

<t t-name="web.ModelSelector" owl="1">
        <div class="o_sp_input_dropdown" t-ref="autocomplete_container">
            <input t-if="env.isSmall" type="text" class="o_input" readonly="" t-att-id="props.id" t-att-value="props.value"/>
            <AutoComplete t-else="" id="props.id" value="props.value || ''" sources="sources" placeholder="placeholder" autoSelect="props.autoSelect" onSelect.bind="onSelect"/>
            <a role="button" class="o_dropdown_button" draggable="false"/>
        </div>
    </t>
<t t-name="web.Notebook" owl="1">
        <div t-attf-class="o_notebook d-flex w-100 {{ props.orientation === 'horizontal' ? 'horizontal flex-column' : 'vertical flex-row' }} {{ props.className }}" t-if="state.currentPage">
            <div class="o_notebook_headers" t-att-class="{ 'm-0': props.orientation === 'vertical' }">
                <ul t-attf-class="nav nav-tabs {{ props.orientation === 'horizontal' ? 'flex-row flex-nowrap' : 'flex-column p-0' }}">
                    <li t-foreach="navItems" t-as="navItem" t-key="navItem[0]" class="nav-item flex-nowrap cursor-pointer" t-if="navItem[1].isVisible">
                        <a class="nav-link" t-attf-class="{{ navItem[0] === state.currentPage ? 'active' : '' }} {{ props.orientation === 'vertical' ? 'p-3 rounded-0' : '' }} {{ navItem[1].className }}" t-att-name="navItem[1].name" t-on-click.prevent="() =&gt; this.activatePage(navItem[0])" href="#" role="tab" tabindex="0" t-esc="navItem[1].title"/>
                    </li>
                </ul>
            </div>
            <div class="o_notebook_content tab-content">
                <div class="tab-pane active" t-ref="activePane">
                    <t t-if="page" t-component="page.Component" t-key="state.currentPage" t-props="page.props"/>
                    <t t-else="" t-slot="{{ state.currentPage }}"/>
                </div>
            </div>
        </div>
    </t>

<t t-name="web.NotificationWowl" owl="1">
        <div t-attf-class="o_notification {{props.className}} border border-{{props.type}} bg-white mb-2 position-relative" role="alert" aria-live="assertive" aria-atomic="true">
            <strong t-if="props.title" t-attf-class="o_notification_title d-block text-{{props.type}} py-2 ps-3 pe-5" t-out="props.title"/>
            <button type="button" class="o_notification_close btn" aria-label="Close" t-on-click="props.close">
                <i class="oi oi-close"/>
            </button>
            <div t-attf-class="o_notification_body ps-3 pe-5 py-2">
                <div t-if="props.message" class="me-auto o_notification_content" t-out="props.message"/>
                <div t-if="props.buttons.length" class="mt-2 o_notification_buttons">
                    <button t-foreach="props.buttons" t-as="button" type="button" t-key="button_index" t-attf-class="btn {{button.primary ? 'btn-primary' : 'btn-link'}}" t-on-click="button.onClick">
                    <t t-if="button.icon">
                        <i t-if="button.icon.indexOf('fa-') === 0" role="img" t-att-aria-label="button.name" t-att-title="button.name" t-attf-class="fa fa-fw o_button_icon {{button.icon}}"/>
                        <img t-else="" t-att-src="button.icon" t-att-alt="button.name"/>
                    </t>
                    <span t-esc="button.name"/>
                </button>
                </div>
            </div>
        </div>
    </t>

<t t-name="web.Pager" owl="1">
        <nav class="o_pager align-items-center d-flex gap-2" aria-label="Pager">
            <span class="o_pager_counter" t-on-click.stop="">
                <t t-if="state.isEditing">
                    <input type="text" class="o_pager_value o_input d-inline-block w-auto text-end mb-n1" size="7" t-ref="autofocus" t-att-value="value" t-on-blur="onInputBlur" t-on-change="onInputChange" t-on-keydown.stop="onInputKeydown"/>
                </t>
                <t t-else="">
                    <span class="o_pager_value d-inline-block border-bottom border-transparent mb-n1" t-esc="value" t-on-click="onValueClick"/>
                </t>
                <span> / </span>
                <t t-if="props.updateTotal">
                    <span class="o_pager_limit o_pager_limit_fetch" t-att-class="{ 'disabled': state.isDisabled }" t-on-click.stop="updateTotal"><t t-esc="props.total"/>+</span>
                </t>
                <t t-else="">
                    <span class="o_pager_limit" t-esc="props.total"/>
                </t>
            </span>
            <span class="btn-group" aria-atomic="true">

                <button type="button" class="fa fa-chevron-left btn btn-secondary o_pager_previous px-2 rounded-start" aria-label="Previous" data-tooltip="Previous" tabindex="-1" t-att-data-hotkey="props.withAccessKey ? 'p' : false" t-att-disabled="state.isDisabled or isSinglePage" t-on-click.stop="() =&gt; this.navigate(-1)"/>
                <button type="button" class="fa fa-chevron-right btn btn-secondary o_pager_next px-2 rounded-end" aria-label="Next" data-tooltip="Next" tabindex="-1" t-att-data-hotkey="props.withAccessKey ? 'n' : false" t-att-disabled="state.isDisabled or isSinglePage" t-on-click.stop="() =&gt; this.navigate(1)"/>
            </span>
        </nav>
    </t>

<t t-name="web.PopoverWowl" owl="1">
        <div role="tooltip" class="o_popover popover mw-100 shadow-sm" t-att-class="props.popoverClass" t-ref="popper" t-att-popover-id="props.id">
            <div class="popover-arrow"/>
            <t t-slot="default"/>
        </div>
    </t>

<t t-name="web.sign_svg_text" name="SVG Signature Text" owl="1">
        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" t-att-width="width" t-att-height="height">
            <defs>
                <style type="text/css">
                    @font-face {
                        font-family: "font";
                        src: url(data:font/ttf;base64,<t t-esc="font"/>) format("woff");
                        font-weight: normal;
                        font-style: normal;
                    }
                </style>
            </defs>

            <text t-esc="text" x="50%" t-att-y="height * 4 / 5" t-att-font-size="height * 4 / 5" t-att-textLength="width * 4 / 5 * (type === 'signature' ? Math.min(1, text.length / 7) : 1)" t-att-lengthAdjust="'spacing' + (type === 'signature' ? 'AndGlyphs' : '')" t-attf-style="font-family:'font'; stroke: none; fill: {{color}};" text-anchor="middle"/>
        </svg>
    </t>


    <t t-name="web.NameAndSignature" owl="1">
        <div class="o_web_sign_name_and_signature">
            <div t-if="!props.noInputName" class="o_web_sign_name_group">
                <label class="col-form-label" t-att-for="'o_web_sign_name_input_' + htmlId">Full Name</label>
                <input type="text" name="signer" t-att-id="'o_web_sign_name_input_' + htmlId" class="o_web_sign_name_input form-control" t-on-input="onInputSignName" t-att-value="props.signature.name" t-ref="signNameInput" placeholder="Type your name to sign" required=""/>
            </div>


            <div t-if="state.showSignatureArea" class="o_web_sign_signature_group bg-white card mt-3" style="overflow: hidden;">
                <div class="card-header">
                    <div class="row g-0">
                        <div t-if="!props.noInputName or defaultName" class="col-auto">
                            <a role="button" href="#" t-on-click.prevent="() =&gt; this.setMode('auto')" t-attf-class="o_web_sign_auto_button me-2 btn btn-light {{ state.signMode === 'auto' ? 'active': '' }}">
                                Auto
                            </a>
                        </div>
                        <div class="col-auto">
                            <a role="button" href="#" t-on-click.prevent="() =&gt; this.setMode('draw')" t-attf-class="o_web_sign_draw_button me-2 btn btn-light {{ state.signMode === 'draw' ? 'active': '' }}">
                                Draw
                            </a>
                        </div>
                        <div class="col-auto">
                            <a role="button" href="#" t-on-click.prevent="() =&gt; this.setMode('load')" t-attf-class="o_web_sign_load_button me-2 btn btn-light {{ state.signMode === 'load' ? 'active': '' }}">
                                Load
                            </a>
                        </div>
                        <div t-if="state.signMode === 'draw'" t-attf-class="o_web_sign_draw_clear col-auto ms-auto">
                            <a role="button" href="#" t-on-click.prevent="onClickSignDrawClear" class="btn btn-link">
                                Clear
                            </a>
                        </div>

                        <Dropdown t-if="state.signMode === 'auto'" class="'o_web_sign_auto_select_style col-auto ms-auto'" togglerClass="'btn btn-link'">
                            <t t-set-slot="toggler">
                                    Style
                            </t>
                            <t t-foreach="fonts" t-as="font" t-key="font_index">
                                <DropdownItem onSelected="() =&gt; this.onSelectFont(font_index)">
                                    <img class="img-fluid" t-att-src="getSVGTextFont(font)"/>
                                </DropdownItem>
                            </t>
                        </Dropdown>

                        <div t-if="state.signMode === 'load'" class="o_web_sign_load_file col-auto">
                            <input t-ref="signInputLoad" type="file" role="button" name="files[]" class="btn btn-link py-0" t-on-change="onChangeSignLoadInput"/>
                        </div>
                    </div>
                </div>

                <div class="o_signature_stroke position-absolute"/>

                <div t-if="state.showSignatureArea" t-ref="signature" t-att-style="signatureStyle" class="o_web_sign_signature p-0 bg-transparent position-relative"/>

                <div t-if="loadIsInvalid" t-attf-class="o_web_sign_load_invalid card-footer d-none">
                    <div class="alert alert-danger mb-0" role="alert">
                        This file is invalid. Please select an image.
                    </div>
                </div>
            </div>
        </div>
    </t>
<t t-name="web.SignatureDialog" owl="1">
      <Dialog title="title">
         <div>
            <NameAndSignature t-props="nameAndSignatureProps"/>
            <div class="mt16 small">By clicking Adopt &amp; Sign, I agree that the chosen signature/initials will be a valid electronic representation of my hand-written signature/initials for all purposes when it is used on documents, including legally binding contracts.</div>
        </div>
        <t t-set-slot="footer">
          <button class="btn btn-primary" t-att-disabled="signature.isSignatureEmpty" t-on-click="onClickConfirm">Adopt &amp; Sign</button>
          <button class="btn btn-secondary" t-on-click="props.close">Cancel</button>
        </t>
      </Dialog>
    </t>

<t t-name="web.Tooltip" owl="1">
        <div class="o-tooltip px-2 py-1">
            <t t-if="props.template" t-call="{{props.template}}" t-call-context="{ env, ...props.info }"/>
            <small t-else="" t-esc="props.tooltip"/>
        </div>
    </t>

<t t-name="web.ActionMenus" owl="1">
        <div class="o_cp_action_menus">
            <Dropdown t-if="printItems.length" class="'d-inline-block'" togglerClass="'btn btn-light'" hotkey="'shift+u'">
                <t t-set-slot="toggler">
                    <i class="me-md-1 fa fa-print"/>
                    <span class="o_dropdown_title">Print</span>
                </t>
                <t t-foreach="printItems" t-as="item" t-key="item.key">
                    <DropdownItem class="'o_menu_item'" onSelected="() =&gt; this.onItemSelected(item)">
                        <t t-esc="item.description"/>
                    </DropdownItem>
                </t>
            </Dropdown>

            <Dropdown t-if="actionItems.length" class="'d-inline-block'" togglerClass="'btn btn-light'" hotkey="'u'">
                <t t-set-slot="toggler">
                    <i class="me-md-1 fa fa-cog"/>
                    <span class="o_dropdown_title">Action</span>
                </t>
                <t t-foreach="actionItems" t-as="item" t-key="item.key">
                    <t t-if="item.Component" t-component="item.Component" t-props="item.props"/>
                    <DropdownItem t-else="" class="'o_menu_item'" onSelected="() =&gt; this.onItemSelected(item)">
                        <t t-esc="item.description"/>
                    </DropdownItem>
                </t>
            </Dropdown>
        </div>
    </t>

<t t-name="web.ComparisonMenu" owl="1">
        <Dropdown class="'o_comparison_menu btn-group'" togglerClass="'btn btn-light'">
            <t t-set-slot="toggler">
                <i class="me-1" t-att-class="icon"/>
                <span class="o_dropdown_title">Comparison</span>
            </t>
            <t t-foreach="items" t-as="item" t-key="item.id">
                <DropdownItem class="{ o_menu_item: true, selected: item.isActive }" checked="item.isActive" parentClosingMode="'none'" t-esc="item.description" onSelected="() =&gt; this.onComparisonSelected(item.id)"/>
            </t>
        </Dropdown>
    </t>

<t t-name="web.ControlPanel" owl="1">
        <div class="o_control_panel" t-ref="root">
            <t t-if="env.isSmall">
                <t t-call="web.ControlPanel.Small"/>
            </t>
            <t t-else="">
                <t t-call="web.ControlPanel.Regular"/>
            </t>
        </div>
    </t>

    <t t-name="web.ControlPanel.Regular" owl="1">
        <div t-if="display['top']" class="o_cp_top">
            <div class="o_cp_top_left">
                <t t-slot="control-panel-top-left" t-if="display['top-left']">
                    <t t-call="web.Breadcrumbs" t-if="!env.config.noBreadcrumbs"/>
                </t>
            </div>
            <div class="o_cp_top_right">
                <t t-slot="control-panel-top-right" t-if="display['top-right']">
                    <SearchBar/>
                </t>
            </div>
        </div>
        <div t-if="display['bottom']" class="o_cp_bottom">
            <div class="o_cp_bottom_left" t-on-keydown="onBottomLeftKeydown">
                <t t-slot="control-panel-bottom-left-buttons" t-if="display['bottom-left'] and display['bottom-left-buttons']"/>
                <t t-slot="control-panel-bottom-left" t-if="display['bottom-left']"/>
            </div>
            <div t-if="display['bottom-right']" class="o_cp_bottom_right">
                <t t-slot="control-panel-bottom-right">
                    <div class="btn-group o_search_options position-static" role="search">
                        <t t-foreach="searchMenus" t-as="menu" t-key="menu.key">
                            <t t-component="menu.Component"/>
                        </t>
                    </div>
                </t>

                <div t-if="pagerProps and pagerProps.total &gt; 0" class="o_cp_pager" role="search">
                    <Pager t-props="pagerProps"/>
                </div>

                <t t-if="env.config.viewSwitcherEntries.length &gt; 1">
                    <nav class="btn-group o_cp_switch_buttons">
                        <t t-foreach="env.config.viewSwitcherEntries" t-as="view" t-key="view.type">
                            <button class="btn btn-light o_switch_view " t-attf-class="o_{{view.type}} {{view.icon}} {{view.active ? 'active' : ''}}" t-att-data-tooltip="view.name" t-on-click="() =&gt; this.onViewClicked(view.type)"/>
                        </t>
                    </nav>
                </t>
            </div>
        </div>
    </t>

    <t t-name="web.ControlPanel.Small" owl="1">
        <div t-if="display['top']" class="o_cp_top">
            <t t-if="display['top-left'] and !state.showSearchBar">
                <t t-slot="control-panel-top-left">
                    <t t-call="web.Breadcrumbs.Small"/>
                </t>
            </t>
            <t t-if="display['top-right']">
                <button type="button" class="o_enable_searchview btn btn-link" t-att-class="state.showSearchBar ? 'fa fa-arrow-left' : 'oi oi-search'" t-on-click="() =&gt; state.showSearchBar = !state.showSearchBar"/>
                <t t-if="state.showSearchBar or !display['top-left']">
                    <t t-slot="control-panel-top-right">
                        <SearchBar class="o_searchview_quick"/>
                        <button type="button" class="o_toggle_searchview_full btn fa fa-filter" t-on-click="() =&gt; this.openSearchDialog()"/>
                    </t>
                </t>
            </t>
        </div>
        <div t-if="display['bottom']" class="o_cp_bottom">
            <div t-if="display['bottom-left']" class="o_cp_bottom_left">
                <t t-slot="control-panel-bottom-left-buttons" t-if="display['bottom-left-buttons']"/>
                <t t-slot="control-panel-bottom-left"/>
            </div>
            <div t-if="display['bottom-right']" class="o_cp_bottom_right">
                <div t-if="pagerProps and pagerProps.total &gt; 0" class="o_cp_pager" role="search">
                    <Pager t-props="pagerProps"/>
                </div>

                <t t-if="env.config.viewSwitcherEntries.length &gt; 1">
                    <nav class="btn-group o_cp_switch_buttons">
                        <t t-set="view" t-value="env.config.viewSwitcherEntries.find((v) =&gt; v.active)"/>

                        <Dropdown position="'bottom-end'" menuClass="'d-inline-flex'" togglerClass="'btn btn-link'">
                            <t t-set-slot="toggler">
                                <i class="fa-lg o_switch_view" t-attf-class="o_{{view.type}} {{view.icon}} {{view.active ? 'active' : ''}}"/>
                            </t>
                            <t t-foreach="env.config.viewSwitcherEntries" t-as="view" t-key="view.type">
                                <button class="btn btn-light fa-lg o_switch_view" t-attf-class="o_{{view.type}} {{view.icon}} {{view.active ? 'active' : ''}}" t-att-data-tooltip="view.name" t-on-click="() =&gt; this.onViewClicked(view.type)"/>
                            </t>
                        </Dropdown>
                    </nav>
                </t>
                <t t-slot="control-panel-bottom-right"/>
            </div>
        </div>
    </t>

    <t t-name="web.ControlPanelSearchDialog" owl="1">
        <Dialog>
            <div class="o_searchview o_mobile_search">
                <div class="o_mobile_search_header">
                    <button type="button" class="o_mobile_search_button btn" t-on-click="() =&gt; this.props.close()">
                        <i class="fa fa-arrow-left"/>
                        <strong class="ms-2">FILTER</strong>
                    </button>
                    <button type="button" class="o_mobile_search_button btn" t-on-click="() =&gt; env.searchModel.clearQuery()">
                        CLEAR
                    </button>
                </div>
                <div class="o_mobile_search_content">
                    <t t-if="props.display['top-right']">
                        <t t-slot="control-panel-top-right">
                            <SearchBar/>
                        </t>
                    </t>
                    <t t-if="props.display['bottom-right']">
                        <t t-slot="control-panel-bottom-right">
                            <div class="o_mobile_search_filter o_search_options">
                                <t t-foreach="props.searchMenus" t-as="menu" t-key="menu.key">
                                    <t t-component="menu.Component"/>
                                </t>
                            </div>
                        </t>
                    </t>
                </div>
                <button type="button" class="btn btn-primary o_mobile_search_footer" t-on-click="() =&gt; this.props.close()">
                    SEE RESULT
                </button>
            </div>
        </Dialog>
    </t>

    <t t-name="web.Breadcrumbs" owl="1">
        <ol class="breadcrumb">
            <t t-foreach="breadcrumbs" t-as="breadcrumb" t-key="breadcrumb.jsId">
                <t t-set="isPenultimate" t-value="breadcrumb_index === breadcrumbs.length - 2"/>
                <li t-if="!breadcrumb_last" class="breadcrumb-item" t-att-data-hotkey="isPenultimate and 'b'" t-att-class="{ o_back_button: isPenultimate}" t-on-click.prevent="() =&gt; this.onBreadcrumbClicked(breadcrumb.jsId)">
                    <a href="#">
                        <t t-if="breadcrumb.name" t-esc="breadcrumb.name"/>
                        <em t-else="" class="text-warning">Unnamed</em>
                    </a>
                </li>
                <li t-else="" class="breadcrumb-item active d-flex align-items-center">
                    <span class="text-truncate" t-if="breadcrumb.name" t-esc="breadcrumb.name"/>
                    <em t-else="" class="text-warning">Unnamed</em>
                    <t t-slot="control-panel-status-indicator"/>
                </li>
            </t>
        </ol>
    </t>

    <t t-name="web.Breadcrumbs.Small" owl="1">
        <ol class="breadcrumb">
            <t t-if="breadcrumbs.length &gt; 1">
                <t t-set="breadcrumb" t-value="breadcrumbs[breadcrumbs.length - 2]"/>
                <li class="breadcrumb-item o_back_button btn btn-secondary" t-on-click.prevent="() =&gt; this.onBreadcrumbClicked(breadcrumb.jsId)"/>
            </t>
            <li t-if="breadcrumbs.length &gt; 0" class="breadcrumb-item active">
                <t t-set="breadcrumb" t-value="breadcrumbs[breadcrumbs.length - 1]"/>
                <t t-if="breadcrumb.name" t-esc="breadcrumb.name"/>
                <em t-else="" class="text-warning">Unnamed</em>
            </li>
        </ol>
    </t>

<t t-name="web.CustomFavoriteItem" owl="1">
        <Dropdown class="'o_add_favorite'">
            <t t-set-slot="toggler">
                Save current search
            </t>
            <div class="px-3 py-2">
                <input type="text" class="o_input" t-ref="description" t-model.trim="state.description" t-on-keydown="onInputKeydown"/>
                <CheckBox value="state.isDefault" onChange.bind="onDefaultCheckboxChange">
                    Use by default
                </CheckBox>
                <CheckBox value="state.isShared" onChange.bind="onShareCheckboxChange">
                    Share with all users
                </CheckBox>
            </div>
            <div class="px-3 py-2">
                <button class="o_save_favorite btn btn-primary" t-on-click="saveFavorite">
                    Save
                </button>
            </div>
        </Dropdown>
    </t>

<t t-name="web.FavoriteMenu" owl="1">
        <Dropdown class="'o_favorite_menu btn-group'" togglerClass="'btn btn-light'">
            <t t-set-slot="toggler">
                <i class="me-1" t-att-class="icon"/>
                <span class="o_dropdown_title">Favorites</span>
            </t>
            <t t-set="currentGroup" t-value="null"/>
            <t t-foreach="items" t-as="item" t-key="item.id or item.key">
                <t t-if="currentGroup !== null and currentGroup !== item.groupNumber">
                    <div role="separator" class="dropdown-divider"/>
                </t>
                <t t-if="item.type ==='favorite'">
                    <DropdownItem class="{ o_menu_item: true, selected: item.isActive }" checked="item.isActive" parentClosingMode="'none'" onSelected="() =&gt; this.onFavoriteSelected(item.id)">
                        <span class="d-flex p-0 align-items-center justify-content-between">
                            <t t-esc="item.description"/>
                            <i class="ms-1 o_icon_right fa fa-trash-o" title="Delete item" t-on-click.stop="() =&gt; this.openConfirmationDialog(item.id)"/>
                        </span>
                    </DropdownItem>
                </t>
                <t t-else="">
                    <t t-component="item.Component"/>
                </t>
                <t t-set="currentGroup" t-value="item.groupNumber"/>
            </t>
        </Dropdown>
    </t>

<t t-name="web.CustomFilterItem" owl="1">
        <Dropdown class="'o_add_custom_filter_menu'">
            <t t-set-slot="toggler">
                Add Custom Filter
            </t>
            <t t-foreach="conditions" t-as="condition" t-key="condition_index">
                <div class=" o_filter_condition dropdown-item-text position-relative">
                    <t t-set="fieldType" t-value="fields[condition.field].type"/>
                    <t t-set="selectedOperator" t-value="OPERATORS[FIELD_TYPES[fieldType]][condition.operator]"/>
                    <span t-if="!condition_first" class="o_or_filter">or</span>
                    <select class="o_input o_generator_menu_field" t-on-change="ev =&gt; this.onFieldSelect(condition, ev)">
                        <option t-foreach="fields" t-as="field" t-key="field_index" t-att-value="field.name" t-att-selected="field_index === condition.field" t-esc="field.string"/>
                    </select>
                    <select class="o_input o_generator_menu_operator" t-on-change="ev =&gt; this.onOperatorSelect(condition, ev)">
                        <option t-foreach="OPERATORS[FIELD_TYPES[fieldType]]" t-as="operator" t-key="operator_index" t-att-value="operator.symbol" t-att-selected="operator_index === condition.operator" t-esc="operator.description"/>
                    </select>
                    <span t-if="!('value' in selectedOperator)" class="o_generator_menu_value">
                        <t t-if="fieldType === 'date'">
                            <DatePicker date="condition.value[0]" onDateTimeChanged="date =&gt; this.onDateTimeChanged(condition, 0, date)"/>
                            <DatePicker t-if="selectedOperator.symbol === 'between'" date="condition.value[1]" onDateTimeChanged="date =&gt; this.onDateTimeChanged(condition, 1, date)"/>
                        </t>
                        <t t-elif="fieldType === 'datetime'">
                            <DateTimePicker date="condition.value[0]" onDateTimeChanged="date =&gt; this.onDateTimeChanged(condition, 0, date)"/>
                            <DateTimePicker t-if="selectedOperator.symbol === 'between'" date="condition.value[1]" onDateTimeChanged="date =&gt; this.onDateTimeChanged(condition, 1, date)"/>
                        </t>
                        <select t-elif="fieldType === 'selection'" class="o_input" t-on-change="ev =&gt; this.onValueChange(condition, ev)">
                            <option t-foreach="fields[condition.field].selection" t-as="option" t-key="option_index" t-att-value="option[0]" t-esc="option[1]"/>
                        </select>

                        <input t-elif="fieldType === 'float'" class="o_input" step="0.01" t-att-type="DECIMAL_POINT === '.' ? 'number' : 'text'" t-attf-title="Number using {{ DECIMAL_POINT }} as decimal separator." t-attf-pattern="[0-9]+([\\\\{{ DECIMAL_POINT }}][0-9]+)?" t-att-value="condition.displayedValue" t-on-change="ev =&gt; this.onValueChange(condition, ev)"/>
                        <input t-elif="['integer', 'id'].includes(fieldType)" class="o_input" step="1" type="number" t-att-value="condition.displayedValue" t-on-change="ev =&gt; this.onValueChange(condition, ev)"/>
                        <input t-else="" type="text" class="o_input" t-att-value="condition.displayedValue" t-on-change="ev =&gt; this.onValueChange(condition, ev)"/>
                    </span>
                    <i t-if="conditions.length gt 1" class="fa fa-trash-o o_generator_menu_delete" role="image" aria-label="Delete" title="Delete" t-on-click="() =&gt; this.onRemoveCondition(condition_index)"/>
                </div>
            </t>
            <div class="px-3 py-2">
                <button type="button" class="btn btn-primary o_apply_filter me-2" t-on-click="onApply">
                    Apply
                </button>
                <button type="button" class="btn btn-secondary o_add_condition" t-on-click.stop="addNewCondition">
                    <i class="fa fa-plus-circle"/>
                    <t>Add a condition</t>
                </button>
            </div>
        </Dropdown>
    </t>

<t t-name="web.FilterMenu" owl="1">
        <Dropdown class="'o_filter_menu btn-group ' + props.class" togglerClass="'btn btn-light'">
            <t t-set-slot="toggler">
                <i class="me-1" t-att-class="icon"/>
                <span class="o_dropdown_title">Filters</span>
            </t>
            <t t-set="currentGroup" t-value="null"/>
            <t t-foreach="items" t-as="item" t-key="item.id">
                <t t-if="currentGroup !== null and currentGroup !== item.groupNumber">
                    <div class="dropdown-divider" role="separator"/>
                </t>
                <t t-if="item.options">
                    <Dropdown togglerClass="'o_menu_item' + (item.isActive ? ' selected' : '')">
                        <t t-set-slot="toggler">
                            <t t-esc="item.description"/>
                        </t>
                        <t t-set="subGroup" t-value="null"/>
                        <t t-foreach="item.options" t-as="option" t-key="option.id">
                            <t t-if="subGroup !== null and subGroup !== option.groupNumber">
                                <div class="dropdown-divider" role="separator"/>
                            </t>
                            <DropdownItem class="{ o_item_option: true, selected: option.isActive }" t-esc="option.description" checked="option.isActive" parentClosingMode="'none'" onSelected="() =&gt; this.onFilterSelected({ itemId: item.id, optionId: option.id })"/>
                            <t t-set="subGroup" t-value="option.groupNumber"/>
                        </t>
                    </Dropdown>
                </t>
                <t t-else="">
                    <DropdownItem class="{ o_menu_item: true, selected: item.isActive }" checked="item.isActive" parentClosingMode="'none'" t-esc="item.description" onSelected="() =&gt; this.onFilterSelected({ itemId: item.id })"/>
                </t>
                <t t-set="currentGroup" t-value="item.groupNumber"/>
            </t>
            <t t-if="items.length">
                <div role="separator" class="dropdown-divider"/>
            </t>
            <CustomFilterItem/>
        </Dropdown>
    </t>

<t t-name="web.CustomGroupByItem" owl="1">
        <Dropdown class="'o_add_custom_group_menu'">
            <t t-set-slot="toggler">
                Add Custom Group
            </t>
            <div class="px-3 py-2">
                <select class="w-100 o_input" t-model="state.fieldName">
                    <option t-foreach="props.fields" t-as="field" t-key="field.name" t-att-value="field.name" t-esc="field.string"/>
                </select>
            </div>
            <div class="px-3 py-2">
                <button class="btn btn-primary w-100" t-on-click="() =&gt; props.onAddCustomGroup(state.fieldName)">
                    Apply
                </button>
            </div>
        </Dropdown>
    </t>

<t t-name="web.GroupByMenu" owl="1">
        <Dropdown class="'o_group_by_menu btn-group'" togglerClass="'btn btn-light'" t-props="dropdownProps">
            <t t-set-slot="toggler">
                <i class="me-1" t-att-class="icon"/>
                <span class="o_dropdown_title">Group By<t t-if="props.showCaretDown"> <i class="fa fa-caret-down ms-1"/></t></span>
            </t>
            <t t-set="currentGroup" t-value="null"/>
            <t t-foreach="items" t-as="item" t-key="item.id">
                <t t-if="currentGroup !== null and currentGroup !== item.groupNumber">
                    <div class="dropdown-divider" role="separator"/>
                </t>
                <t t-if="item.options">
                    <Dropdown togglerClass="'o_menu_item' + (item.isActive ? ' selected' : '')">
                        <t t-set-slot="toggler">
                            <t t-esc="item.description"/>
                        </t>
                        <t t-set="subGroup" t-value="null"/>
                        <t t-foreach="item.options" t-as="option" t-key="option.id">
                            <t t-if="subGroup !== null and subGroup !== option.groupNumber">
                                <div class="dropdown-divider" role="separator"/>
                            </t>
                            <DropdownItem class="{ o_item_option: true, selected: option.isActive }" checked="option.isActive ? true : false" parentClosingMode="'none'" t-esc="option.description" onSelected="() =&gt; this.onGroupBySelected({ itemId: item.id, optionId: option.id})"/>
                            <t t-set="subGroup" t-value="option.groupNumber"/>
                        </t>
                    </Dropdown>
                </t>
                <t t-else="">
                    <DropdownItem class="{ o_menu_item: true, selected: item.isActive }" checked="item.isActive" parentClosingMode="'none'" t-esc="item.description" onSelected="() =&gt; this.onGroupBySelected({ itemId: item.id })"/>
                </t>
                <t t-set="currentGroup" t-value="item.groupNumber"/>
            </t>
            <t t-if="!hideCustomGroupBy and fields.length">
                <div t-if="items.length" role="separator" class="dropdown-divider"/>
                <CustomGroupByItem fields="fields" onAddCustomGroup.bind="onAddCustomGroup"/>
            </t>
        </Dropdown>
    </t>

<t t-name="web.Layout" owl="1">
        <t t-if="env.inDialog" t-portal="'#' + env.dialogId + ' .modal-footer'">
            <t t-slot="layout-buttons"/>
        </t>
        <t t-component="components.ControlPanel" slots="controlPanelSlots" t-if="display.controlPanel" display="display.controlPanel"/>
        <t t-component="components.Banner" t-if="display.banner"/>
        <div t-ref="content" class="o_content" t-attf-class="{{props.className}}" t-att-class="{ o_component_with_search_panel: display.searchPanel }">
            <t t-component="components.SearchPanel" t-if="display.searchPanel"/>
            <t t-slot="default" contentRef="contentRef"/>
        </div>
    </t>

<t t-name="web.SearchBar.Facets" owl="1">
        <t t-foreach="env.searchModel.facets" t-as="facet" t-key="facet_index">
            <div class="o_searchview_facet" role="img" aria-label="search" tabindex="0" t-on-keydown="ev =&gt; this.onFacetKeydown(facet, facet_index, ev)">
                <t t-if="facet.icon">
                    <span t-attf-class="o_searchview_facet_label {{ facet.icon }}"/>
                </t>
                <t t-else="">
                    <span class="o_searchview_facet_label" t-esc="facet.title"/>
                </t>
                <div class="o_facet_values border-start-0">
                    <t t-foreach="facet.values" t-as="facetValue" t-key="facetValue_index">
                        <t t-if="!facetValue_first">
                            <span class="o_facet_values_sep" t-esc="facet.separator"/>
                        </t>
                        <span class="o_facet_value" t-esc="facetValue"/>
                    </t>
                </div>
                <i class="o_facet_remove oi oi-close btn btn-link opacity-50 opacity-100-hover text-900" role="img" aria-label="Remove" title="Remove" t-on-click="() =&gt; this.onFacetRemove(facet)"/>
            </div>
        </t>
    </t>

    <t t-name="web.SearchBar.Input" owl="1">
        <input type="text" class="o_searchview_input" accesskey="Q" placeholder="Search..." role="searchbox" t-ref="autofocus" t-on-keydown="onSearchKeydown" t-on-input="onSearchInput"/>
    </t>

    <t t-name="web.SearchBar.Items" owl="1">
        <ul class="dropdown-menu o_searchview_autocomplete dropdown-menu show" role="menu">
            <t t-foreach="items" t-as="item" t-key="item.id">
                <li class="o_menu_item dropdown-item" t-att-class="{ o_indent: item.isChild, focus: item_index === state.focusedIndex}" t-att-id="item.id" t-on-click="() =&gt; this.selectItem(item)" t-on-mousemove="() =&gt; this.onItemMousemove(item_index)">
                    <t t-if="item.isParent">
                        <a class="o_expand" href="#" t-on-click.stop.prevent="() =&gt; this.toggleItem(item, !item.isExpanded)">
                            <i t-attf-class="fa fa-caret-{{ item.isExpanded ? 'down' : 'right' }}"/>
                        </a>
                    </t>
                    <a href="#" t-on-click.prevent="">
                        <t t-if="item.isChild">
                            <t t-esc="item.label"/>
                        </t>
                        <t t-else="">
                            Search <b t-esc="item.searchItemDescription"/> <t t-esc="item.preposition"/>: <b class="fst-italic text-primary" t-esc="item.label"/>
                        </t>
                    </a>
                </li>
            </t>
        </ul>
    </t>

    <t t-name="web.SearchBar" owl="1">
        <div class="o_cp_searchview d-flex flex-grow-1" role="search" t-ref="root">
            <div class="o_searchview pb-1 align-self-center border-bottom flex-grow-1" role="search" aria-autocomplete="list">
                <i class="o_searchview_icon oi oi-search" role="img" aria-label="Search..." title="Search..."/>
                <div class="o_searchview_input_container">
                    <t t-call="web.SearchBar.Facets"/>
                    <t t-call="web.SearchBar.Input"/>
                    <t t-if="items.length">
                        <t t-call="web.SearchBar.Items"/>
                    </t>
                </div>
            </div>
        </div>
    </t>

<t t-name="web.SearchDropdownItem" owl="1">
    <t t-tag="props.href ? 'a' : 'span'" t-att-href="props.href" class="dropdown-item" t-att-class="props.class" role="menuitemcheckbox" t-on-click.stop="onClick" t-att-title="props.title" t-att-data-hotkey="props.hotkey" t-att="dataAttributes" tabindex="0" t-att-aria-checked="props.checked ? 'true' : 'false'">
      <t t-slot="default"/>
    </t>
  </t>

<t t-name="web.SearchPanel" owl="1">
    <t t-if="env.isSmall">
        <t t-call="web.SearchPanel.Small"/>
    </t>
    <t t-else="">
        <t t-call="web.SearchPanel.Regular"/>
    </t>
</t>

<t t-name="web.SearchPanelContent" owl="1">
    <div class="o_search_panel flex-grow-0 flex-shrink-0 border-end pe-2 pb-5 ps-4 h-100 bg-view overflow-auto" t-att-class="env.searchModel.searchPanelInfo.className" t-ref="root">
        <section t-foreach="sections" t-as="section" t-key="section.id" t-attf-class="o_search_panel_section o_search_panel_{{ section.type }}">
            <header class="o_search_panel_section_header pt-4 pb-2 text-uppercase cursor-default">
                <i t-attf-class="fa {{ section.icon }} o_search_panel_section_icon {{!section.color &amp;&amp; section.type == 'filter' ? 'text-warning' : !section.color ? 'text-odoo': ''}} me-2" t-att-style="section.color and ('color: ' + section.color)"/>
                <b t-esc="section.description"/>
            </header>
            <div t-if="section.errorMsg" class="alert alert-warning">
                <span><t t-esc="section.errorMsg"/></span>
            </div>
            <ul t-else="" class="list-group d-block o_search_panel_field">
                <t t-if="section.type === 'category'" t-call="{{ constructor.subTemplates.category }}">
                    <t t-set="values" t-value="section.rootIds"/>
                </t>
                <t t-elif="section.groups">
                    <li t-foreach="section.sortedGroupIds" t-as="groupId" t-key="groupId" class="o_search_panel_filter_group list-group-item p-0 border-0" t-att-class="groupId_last? 'mb-0' : 'mb-3'">

                        <t t-set="_section" t-value="section"/>
                        <t t-set="group" t-value="section.groups.get(groupId)"/>
                        <header class="o_search_panel_group_header pb-1">
                            <div class="form-check w-100">

                                <input type="checkbox" class="form-check-input" t-attf-id="{{ section.id }}_input_{{ groupId }})" t-on-click="() =&gt; this.toggleFilterGroup(section.id, group)"/>
                                <label t-attf-for="{{ section.id }}_input_{{ groupId }})" class="o_search_panel_label form-check-label d-flex align-items-center justify-content-between w-100 o_cursor_pointer" t-att-class="{ o_with_counters: group.enableCounters }" t-att-title="group.tooltip or false">
                                    <span class="o_search_panel_label_title text-truncate">
                                        <span t-if="group.hex_color" class="me-1" t-attf-style="color: {{ group.hex_color }};">●</span>
                                        <t t-esc="group.name"/>
                                    </span>
                                </label>
                            </div>
                        </header>
                        <ul class="list-group d-block">
                            <t t-call="{{ constructor.subTemplates.filtersGroup }}">
                                <t t-set="values" t-value="group.values"/>
                                <t t-set="isChildList" t-value="true"/>

                                <t t-set="section" t-value="_section"/>
                            </t>
                        </ul>
                    </li>
                    <ul t-if="section.groups.get(false)" class="list-group d-block">
                        <t t-call="{{ constructor.subTemplates.filtersGroup }}">
                            <t t-set="group" t-value="section.groups.get(false)"/>
                            <t t-set="values" t-value="group.values"/>

                            <t t-set="section" t-value="section"/>
                        </t>
                    </ul>
                </t>
                <t t-else="" t-call="{{ constructor.subTemplates.filtersGroup }}">
                    <t t-set="values" t-value="section.values"/>
                </t>
            </ul>
        </section>
    </div>
</t>

<t t-name="web.SearchPanel.Regular" owl="1">
    <div class="o_search_panel flex-grow-0 flex-shrink-0 border-end pe-2 pb-5 ps-4 h-100 bg-view overflow-auto" t-att-class="env.searchModel.searchPanelInfo.className" t-ref="root">
        <section t-foreach="sections" t-as="section" t-key="section.id" t-attf-class="o_search_panel_section o_search_panel_{{ section.type }}">
            <header class="o_search_panel_section_header pt-4 pb-2 text-uppercase cursor-default">
                <i t-attf-class="fa {{ section.icon }} o_search_panel_section_icon {{!section.color &amp;&amp; section.type == 'filter' ? 'text-warning' : !section.color ? 'text-odoo': ''}} me-2" t-att-style="section.color and ('color: ' + section.color)"/>
                <b t-esc="section.description"/>
            </header>
            <div t-if="section.errorMsg" class="alert alert-warning">
                <span><t t-esc="section.errorMsg"/></span>
            </div>
            <ul t-else="" class="list-group d-block o_search_panel_field">
                <t t-if="section.type === 'category'" t-call="{{ constructor.subTemplates.category }}">
                    <t t-set="values" t-value="section.rootIds"/>
                </t>
                <t t-elif="section.groups">
                    <li t-foreach="section.sortedGroupIds" t-as="groupId" t-key="groupId" class="o_search_panel_filter_group list-group-item p-0 border-0" t-att-class="groupId_last? 'mb-0' : 'mb-3'">

                        <t t-set="_section" t-value="section"/>
                        <t t-set="group" t-value="section.groups.get(groupId)"/>
                        <header class="o_search_panel_group_header pb-1">
                            <div class="form-check w-100">

                                <input type="checkbox" class="form-check-input" t-attf-id="{{ section.id }}_input_{{ groupId }})" t-on-click="() =&gt; this.toggleFilterGroup(section.id, group)"/>
                                <label t-attf-for="{{ section.id }}_input_{{ groupId }})" class="o_search_panel_label form-check-label d-flex align-items-center justify-content-between w-100 o_cursor_pointer" t-att-class="{ o_with_counters: group.enableCounters }" t-att-title="group.tooltip or false">
                                    <span class="o_search_panel_label_title text-truncate">
                                        <span t-if="group.hex_color" class="me-1" t-attf-style="color: {{ group.hex_color }};">●</span>
                                        <t t-esc="group.name"/>
                                    </span>
                                </label>
                            </div>
                        </header>
                        <ul class="list-group d-block">
                            <t t-call="{{ constructor.subTemplates.filtersGroup }}">
                                <t t-set="values" t-value="group.values"/>
                                <t t-set="isChildList" t-value="true"/>

                                <t t-set="section" t-value="_section"/>
                            </t>
                        </ul>
                    </li>
                    <ul t-if="section.groups.get(false)" class="list-group d-block">
                        <t t-call="{{ constructor.subTemplates.filtersGroup }}">
                            <t t-set="group" t-value="section.groups.get(false)"/>
                            <t t-set="values" t-value="group.values"/>

                            <t t-set="section" t-value="section"/>
                        </t>
                    </ul>
                </t>
                <t t-else="" t-call="{{ constructor.subTemplates.filtersGroup }}">
                    <t t-set="values" t-value="section.values"/>
                </t>
            </ul>
        </section>
    </div>
</t>

<t t-name="web.SearchPanel.Small" owl="1">
    <t t-if="state.showMobileSearch">
        <t t-portal="'body'">
            <div class="o_search_panel o_searchview o_mobile_search" t-ref="root">
                <div class="o_mobile_search_header">
                    <button type="button" class="o_mobile_search_button btn" t-on-click="() =&gt; state.showMobileSearch = false">
                        <i class="fa fa-arrow-left"/>
                        <strong class="ms-2">FILTER</strong>
                    </button>
                </div>
                <div class="o_mobile_search_content">
                    <t t-call="web.SearchPanelContent"/>
                </div>
                <button type="button" class="btn btn-primary o_mobile_search_footer" t-on-click.stop="() =&gt; state.showMobileSearch = false">
                    <t>SEE RESULT</t>
                </button>
            </div>
        </t>
    </t>

    <t t-else="">
        <button class="o_search_panel o_search_panel_summary btn w-100 overflow-visible" t-on-click="() =&gt; state.showMobileSearch = true" t-ref="root">
            <t t-set="categories" t-value="getCategorySelection()"/>
            <t t-set="filters" t-value="getFilterSelection()"/>
            <div class="d-flex align-items-center">
                <i class="fa fa-fw fa-filter"/>
                <div class="o_search_panel_current_selection text-truncate ms-2 me-auto">
                    <t t-if="!categories.length and !filters.length">All</t>
                    <t t-else="">
                        <t t-foreach="categories" t-as="category" t-key="category.id">
                            <span class="o_search_panel_category me-1">
                                <i t-if="category.icon" t-attf-class="o_search_panel_section_icon fa {{ category.icon }} me-1" t-att-style="category.color and ('color: ' + category.color)"/>
                                <t t-esc="category.values.join('/')"/>
                            </span>
                        </t>
                        <t t-foreach="filters" t-as="filter" t-key="filter.id">
                            <span class="o_search_panel_filter me-1">
                                <i t-if="filter.icon" t-attf-class="o_search_panel_section_icon fa {{ filter.icon }} me-1" t-att-style="filter.color and ('color: ' + filter.color)"/>
                                <t t-esc="filter.values.join(', ')"/>
                            </span>
                        </t>
                    </t>
                </div>
            </div>
        </button>
    </t>
</t>

<t t-name="web.SearchPanel.Category" owl="1">
    <t t-foreach="values" t-as="valueId" t-key="valueId">
        <t t-set="value" t-value="section.values.get(valueId)"/>
        <li class="o_search_panel_category_value list-group-item py-1 o_cursor_pointer border-0" t-att-class="isChildList ? 'o_treeEntry ps-4 pe-0' : 'ps-0 pe-2'">
            <header class="list-group-item list-group-item-action d-flex align-items-center p-0 border-0" t-att-class="{'active text-900 fw-bold': state.active[section.id] === valueId}" t-on-click="() =&gt; this.toggleCategory(section, value)">
                <div class="o_search_panel_label d-flex align-items-center overflow-hidden w-100 o_cursor_pointer mb-0" t-att-class="{'o_with_counters': section.enableCounters }">
                    <button class="o_toggle_fold btn p-0 flex-shrink-0 text-center">
                        <i t-if="value.childrenIds.length" class="fa" t-att-class="{                                 'fa-caret-down' : state.expanded[section.id][valueId],                                 'fa-caret-right ms-1':  !state.expanded[section.id][valueId]                             }"/>
                    </button>
                    <span class="o_search_panel_label_title text-truncate" t-att-class="{'fw-bold' : value.bold}" t-esc="value.display_name" t-att-data-tooltip="value.display_name"/>
                </div>
                <small t-if="section.enableCounters and value.__count gt 0" class="o_search_panel_counter text-muted mx-2 fw-bold" t-esc="value.__count"/>
            </header>
            <ul t-if="value.childrenIds.length and state.expanded[section.id][valueId]" class="list-group d-block">
                <t t-call="{{ constructor.subTemplates.category }}">
                    <t t-set="values" t-value="value.childrenIds"/>
                    <t t-set="isChildList" t-value="true"/>
                </t>
            </ul>
        </li>
    </t>
</t>

<t t-name="web.SearchPanel.FiltersGroup" owl="1">
    <li t-foreach="[...values.keys()]" t-as="valueId" t-key="valueId" class="o_search_panel_filter_value list-group-item p-0 mb-1 border-0 o_cursor_pointer" t-att-class="{ 'ps-2' : isChildList }">
        <t t-set="value" t-value="values.get(valueId)"/>
        <div class="form-check w-100">
            <input type="checkbox" t-attf-id="{{ section.id }}_input_{{ valueId }}" t-att-checked="state.active[section.id][valueId]" class="form-check-input" t-on-click="ev =&gt; this.toggleFilterValue(section.id, valueId, ev)"/>
            <label class="o_search_panel_label form-check-label d-flex align-items-center justify-content-between w-100 o_cursor_pointer" t-attf-for="{{ section.id }}_input_{{ valueId }}" t-att-title="(group and group.tooltip) or false">
                <span class="o_search_panel_label_title text-truncate" t-esc="value.display_name"/>
                <span t-if="section.enableCounters and value.__count gt 0" class="o_search_panel_counter text-muted mx-2 small" t-esc="value.__count"/>
            </label>
        </div>
    </li>
</t>

<t t-name="web.WithSearch" owl="1">
    <t t-slot="default" context="searchModel.context" domain="searchModel.domain" groupBy="searchModel.groupBy" orderBy="searchModel.orderBy" comparison="searchModel.comparison" display="searchModel.display"/>
  </t>

<t t-name="web.CalendarCommonPopover" owl="1">
        <t t-if="env.isSmall">
            <Dialog title="props.record.title">
                <t t-call="{{ constructor.subTemplates.body }}"/>
                <t t-set-slot="footer">
                    <t t-call="{{ constructor.subTemplates.footer }}"/>
                </t>
            </Dialog>
        </t>
        <t t-else="">
            <t t-call="{{ constructor.subTemplates.popover }}"/>
        </t>
    </t>

    <t t-name="web.CalendarCommonPopover.popover" owl="1">
        <div class="card-header d-flex justify-content-between py-2 pe-2">
            <h4 class="p-0 pt-1">
                <span class="popover-header border-0" t-esc="props.record.title"/>
            </h4>
            <span class="o_cw_popover_close ms-4 mt-2 me-2" t-on-click.stop="() =&gt; props.close()">
                <i class="fa fa-close"/>
            </span>
        </div>
        <div class="o_cw_body">
            <t t-call="{{ constructor.subTemplates.body }}"/>
            <div class="card-footer border-top" t-att-class="{ 'o_footer_shrink': !isEventEditable and !isEventDeletable }">
                <t t-call="{{ constructor.subTemplates.footer }}"/>
            </div>
        </div>
    </t>

    <t t-name="web.CalendarCommonPopover.body" owl="1">
        <ul class="list-group list-group-flush">
            <li t-if="date" class="list-group-item">
                <i class="fa fa-fw fa-calendar-o"/>
                <b class="text-capitalize" t-esc="date"/> <small t-if="dateDuration"><b t-esc="\`(\${dateDuration})\`"/></small>
            </li>
            <li t-if="time" class="list-group-item">
                <i class="fa fa-fw fa-clock-o"/>
                <b t-esc="time"/> <small t-if="timeDuration"><b t-esc="\`(\${timeDuration})\`"/></small>
            </li>
        </ul>
        <ul class="list-group list-group-flush o_cw_popover_fields_secondary">
            <Record resModel="props.model.resModel" resId="props.record.id" fields="props.model.fields" activeFields="props.model.popoverFields" mode="'readonly'" initialValues="props.record.rawRecord" t-slot-scope="slot">
                <t t-foreach="slot.record.fieldNames" t-as="fieldName" t-key="fieldName">
                    <t t-if="!slot.record.isInvisible(fieldName)">
                        <t t-set="fieldInfo" t-value="props.model.popoverFields[fieldName]"/>
                        <li class="list-group-item flex-shrink-0 d-flex flex-wrap align-items-center" t-att-class="fieldInfo.rawAttrs.class">
                            <strong class="me-2">
                                <t t-if="fieldInfo.options.icon">
                                    <b>
                                        <i t-att-class="fieldInfo.options.icon"/>
                                    </b>
                                </t>
                                <t t-else="">
                                    <t t-esc="fieldInfo.string"/>:
                                </t>
                            </strong>
                            <div class="flex-grow-1">
                                <Field name="fieldName" record="slot.record" fieldInfo="fieldInfo" type="fieldInfo.widget"/>
                            </div>
                        </li>
                    </t>
                </t>
            </Record>
        </ul>
    </t>

    <t t-name="web.CalendarCommonPopover.footer" owl="1">
        <t t-if="isEventEditable">
            <a href="#" class="btn btn-primary o_cw_popover_edit" t-on-click="onEditEvent">Edit</a>
        </t>
        <t t-if="isEventDeletable">
            <a href="#" class="btn btn-secondary o_cw_popover_delete ms-2" t-on-click="onDeleteEvent">Delete</a>
        </t>
    </t>

<t t-name="web.CalendarCommonRenderer" owl="1">
        <div class="o_calendar_widget" t-ref="fullCalendar"/>
    </t>

    <t t-name="web.CalendarCommonRenderer.event" owl="1">
        <div class="fc-content">
            <t t-if="!isTimeHidden">
                <span class="fc-time" t-esc="startTime"/>
                <t> </t>
            </t>
            <div class="o_event_title" t-esc="title"/>
        </div>
    </t>

<t t-name="web.CalendarController" owl="1">
        <div t-att-class="className" t-ref="root">
            <Layout className="model.useSampleModel ? 'o_view_sample_data' : ''" display="props.display">
                <t t-set-slot="layout-buttons">
                    <t t-call="{{ props.buttonTemplate }}"/>
                </t>

                <div class="o_calendar_container">
                    <MobileFilterPanel t-if="env.isSmall" t-props="mobileFilterPanelProps"/>
                    <t t-if="showCalendar" t-component="props.Renderer" t-props="rendererProps"/>
                    <div t-if="showSideBar" class="o_calendar_sidebar_container d-md-block">
                        <div class="o_calendar_sidebar">
                            <DatePicker t-if="!env.isSmall" t-props="datePickerProps"/>
                            <FilterPanel t-props="filterPanelProps"/>
                        </div>
                    </div>
                </div>
            </Layout>
        </div>
    </t>

    <t t-name="web.CalendarController.controlButtons" owl="1">
        <div class="o_calendar_buttons">
            <span t-if="!env.isSmall" class="o_calendar_navigation_buttons me-1">
                <button class="btn btn-primary o_calendar_button_prev" title="Previous" aria-label="Previous" t-on-click.stop="() =&gt; this.setDate('previous')">
                    <i class="fa fa-arrow-left"/>
                </button>
                <button class="btn btn-primary mx-1 o_calendar_button_today" t-on-click.stop="() =&gt; this.setDate('today')">
                    Today
                </button>
                <button class="btn btn-primary o_calendar_button_next" title="Next" aria-label="Next" t-on-click.stop="() =&gt; this.setDate('next')">
                    <i class="fa fa-arrow-right"/>
                </button>
            </span>
            <span class="o_calendar_scale_buttons">
                <Dropdown class="'btn-group'" togglerClass="'btn btn-secondary scale_button_selection text-uppercase'" hotkey="'v'" showCaret="true">
                    <t t-set-slot="toggler">
                        <t t-esc="scaleLabels[model.scale]"/>
                    </t>
                    <t t-foreach="model.scales" t-as="scale" t-key="scale">
                        <DropdownItem class="\`o_calendar_button_\${scale} btn btn-secondary text-uppercase\`" hotkey="scale[0]" onSelected="() =&gt; this.setScale(scale)">
                            <t t-esc="scaleLabels[scale]"/>
                        </DropdownItem>
                    </t>
                </Dropdown>
            </span>
            <button t-if="env.isSmall" class="o_cp_today_button btn btn-sm btn-link" t-on-click="() =&gt; this.setDate('today')">
                <span class="fa-stack o_calendar_button_today">
                    <i class="fa fa-calendar-o fa-stack-2x" role="img" aria-label="Today" title="Today"/>
                    <strong class="o_calendar_text fa-stack-1x" t-esc="getTodayDay()"/>
                </span>
            </button>
        </div>
    </t>

<t t-name="web.CalendarRenderer" owl="1">
        <div class="o_calendar_renderer">
            <ActionSwiper t-props="actionSwiperProps">
                <t t-component="calendarComponent" t-props="props" t-key="calendarKey"/>
            </ActionSwiper>
        </div>
    </t>

<t t-name="web.CalendarYearPopover" owl="1">
        <t t-if="env.isSmall">
            <Dialog title="dialogTitle">
                <t t-call="{{ constructor.subTemplates.body }}"/>
                <t t-set-slot="footer">
                    <t t-call="{{ constructor.subTemplates.footer }}"/>
                </t>
            </Dialog>
        </t>
        <t t-else="">
            <t t-call="{{ constructor.subTemplates.popover }}"/>
        </t>
    </t>

    <t t-name="web.CalendarYearPopover.popover" owl="1">
        <div class="position-absolute" style="top: 0; right: 0.5rem;">
            <span class="o_cw_popover_close" t-on-click.stop="() =&gt; props.close()">
                <i class="fa fa-close small"/>
            </span>
        </div>
        <div class="o_cw_body popover-body">
            <t t-call="{{ constructor.subTemplates.body }}"/>
            <div t-if="props.model.canCreate" class="mt-2">
                <t t-call="{{ constructor.subTemplates.footer }}"/>
            </div>
        </div>
    </t>

    <t t-name="web.CalendarYearPopover.body" owl="1">
        <t t-foreach="recordGroups" t-as="recordGroup" t-key="recordGroup.title">
            <div class="fw-bold mt-2" t-esc="recordGroup.title"/>
            <t t-foreach="recordGroup.records" t-as="record" t-key="record.id">
                <t t-call="{{ constructor.subTemplates.record }}"/>
            </t>
        </t>
    </t>

    <t t-name="web.CalendarYearPopover.footer" owl="1">
        <t t-if="props.model.canCreate">
            <a href="#" class="btn-link o_cw_popover_create" t-on-click.prevent="onCreateButtonClick">
                <i class="fa fa-plus"/>
                Create
            </a>
        </t>
        <t t-else="">
            <button class="btn btn-primary o-default-button" t-on-click="props.close">
                <t>Ok</t>
            </button>
        </t>
    </t>

    <t t-name="web.CalendarYearPopover.record" owl="1">
        <a href="#" t-on-click.prevent="() =&gt; this.onRecordClick(record)" t-attf-style="{{ getRecordStyle(record) }}" t-attf-class="o_cw_popover_link btn-link d-block {{ getRecordClass(record) }}" t-att-data-id="record.id" t-att-data-title="record.title">
            <t t-if="record.startHour"><t t-esc="record.startHour"/> </t>
            <t t-esc="record.title"/>
        </a>
    </t>

<t t-name="web.CalendarYearRenderer" owl="1">
        <div class="o_calendar_widget" t-ref="root">
            <div class="fc-view-container">
                <div class="fc fc-dayGridYear-view">
                    <t t-foreach="months" t-as="month" t-key="month">
                        <div class="fc-month-container">
                            <div class="fc-month" t-ref="fullCalendar-{{ month }}"/>
                        </div>
                    </t>
                </div>
            </div>
        </div>
    </t>

<t t-name="web.CalendarFilterPanel" owl="1">
        <t t-foreach="props.model.filterSections" t-as="section" t-key="section.fieldName">
            <t t-if="section.filters.length gt 0">
                <div class="o_calendar_filter" t-att-class="{'o-calendar-filter-panel--section-collapsed': isSectionCollapsed(section)}" t-att-data-name="section.fieldName">
                    <t t-if="section.label">
                        <div class="d-flex">
                            <div class="o_calendar_filter_items_checkall me-2" data-value="section">
                                <t t-set="filterId" t-value="nextFilterId"/>
                                <input type="checkbox" name="select-all" class="position-absolute" t-attf-id="o_calendar_filter_{{filterId}}" t-att-checked="isAllActive(section)" t-on-change="(ev) =&gt; this.onAllFilterInputChange(section, ev)"/>
                                <label class="d-flex align-items-center m-0" t-attf-for="o_calendar_filter_{{filterId}}">
                                    <span class="o_cw_filter_input_bg o_calendar_filter_all">
                                        <i class="fa fa-check position-relative"/>
                                    </span>
                                </label>
                            </div>

                            <t t-if="section.canCollapse">
                                <div class="justify-content-between align-items-center h5" type="button" t-on-click.stop.prevent="() =&gt; this.toggleSection(section, ev)">
                                    <span class="o_cw_filter_label" t-esc="section.label"/>
                                    <i class="o_cw_filter_collapse_icon fa" t-attf-class="fa-chevron-{{ isSectionCollapsed(section) ? 'left' : 'down' }}"/>
                                </div>
                            </t>
                            <t t-else="">
                                <h5 class="o_cw_filter_label" t-esc="section.label"/>
                            </t>
                        </div>
                    </t>
                    <Transition visible="!isSectionCollapsed(section)" name="'o-section-slide'" leaveDuration="350" t-slot-scope="transition">
                        <div class="o_calendar_filter_items" t-att-class="transition.className">
                            <t t-foreach="getSortedFilters(section)" t-as="filter" t-key="filter.value">
                                <t t-set="filterId" t-value="nextFilterId"/>
                                <t t-call="{{ constructor.subTemplates.filter }}"/>
                            </t>
                        </div>
                    </Transition>
                    <t t-if="section.canAddFilter">
                        <AutoComplete t-props="getAutoCompleteProps(section)"/>
                    </t>
                </div>
            </t>
        </t>
    </t>

    <t t-name="web.CalendarFilterPanel.filter" owl="1">
        <div class="o_calendar_filter_item w-100 position-relative mb-2" t-att-class="getFilterColor(filter)" t-att-data-value="filter.value" t-on-mouseenter="(ev) =&gt; this.onFilterMouseEnter(section, filter, ev)" t-on-mouseleave="() =&gt; this.onFilterMouseLeave(section, filter)">
            <input type="checkbox" name="selection" class="position-absolute" t-attf-id="o_calendar_filter_item_{{filterId}}" t-att-checked="filter.active" t-on-change="(ev) =&gt; this.onFilterInputChange(section, filter, ev)"/>
            <label class="d-flex align-items-start m-0" t-attf-for="o_calendar_filter_item_{{filterId}}">
                <span class="o_cw_filter_input_bg align-items-start d-flex flex-shrink-0 justify-content-center position-relative me-1 o_beside_avatar" t-att-style="filter.colorIndex and typeof filter.colorIndex !== 'number' ? \`border-color: \${filter.colorIndex}; background-color: \${filter.colorIndex};\` : ''">
                    <i class="fa fa-check position-relative"/>
                </span>
                <t t-if="section.hasAvatar and filter.hasAvatar">
                    <img class="o_cw_filter_avatar flex-shrink-0 me-1" t-attf-src="/web/image/{{ section.avatar.model }}/{{ filter.value }}/{{ section.avatar.field }}" alt="Avatar"/>
                </t>
                <t t-elif="filter.type === 'all'">
                    <i class="o_cw_filter_avatar fa fa-users fa-fw flex-shrink-0 me-1" role="img" aria-label="Avatar" title="Avatar"/>
                </t>
                <span class="o_cw_filter_title text-truncate flex-grow" t-esc="filter.label"/>
            </label>
            <t t-if="filter.canRemove">
                <button class="o_remove btn bg-white text-700 py-0 px-2" role="img" title="Remove this favorite from the list" aria-label="Remove this favorite from the list" t-on-click="() =&gt; this.onFilterRemoveBtnClick(section, filter)">
                    <i class="fa fa-times"/>
                </button>
            </t>
        </div>
    </t>

    <t t-name="web.CalendarFilterPanel.tooltip" owl="1">
        <div class="card">
            <h6 class="text-center card-header" t-esc="props.filter.label"/>
            <div class="card-body">
                <img t-attf-src="/web/image/{{ props.section.avatar.model }}/{{ props.filter.value }}/{{ props.section.avatar.field }}" class="mx-auto"/>
            </div>
        </div>
    </t>

<t t-name="web.CalendarMobileFilterPanel" owl="1">
        <div class="o_other_calendar_panel d-flex align-items-center" t-on-click="props.toggleSideBar">
            <i class="fa fa-fw fa-filter me-3"/>
            <div class="o_filter me-auto d-flex overflow-auto">
                <t t-foreach="props.model.filterSections" t-as="section" t-key="section.fieldName">
                    <t t-if="section.filters.length gt 0">
                        <span class="text-nowrap fw-bold text-uppercase me-1" t-esc="section.label"/>

                        <t t-foreach="getSortedFilters(section)" t-as="filter" t-key="filter.value">
                            <span t-if="filter.active" class="d-flex align-items-center text-nowrap ms-1 me-2">
                                <span t-att-class="getFilterColor(filter)">⬤</span>
                                <span class="ms-1 fw-bold text-nowrap" t-esc="filter.label"/>
                            </span>
                        </t>
                    </t>
                </t>
            </div>
            <i t-attf-class="fa fa-fw fa-caret-{{caretDirection}} ms-2"/>
        </div>
    </t>

<t t-name="web.CalendarQuickCreate" owl="1">
        <Dialog size="'sm'" title="dialogTitle">
            <div class="o-calendar-quick-create mb-3">
                <label for="title" class="col-form-label o_form_label">
                    Meeting Subject:
                </label>
                <input type="text" class="o_input o_required_modifier o-calendar-quick-create--input" name="title" t-ref="title" t-on-keyup="onInputKeyup" t-att-value="props.title"/>
            </div>
            <t t-set-slot="footer">
                <button class="btn btn-primary o-calendar-quick-create--create-btn" t-on-click="onCreateBtnClick">
                    Create
                </button>
                <button class="btn btn-secondary o-calendar-quick-create--edit-btn" t-on-click="onEditBtnClick">
                    Edit
                </button>
                <button class="btn btn-secondary o-calendar-quick-create--cancel-btn" t-on-click="onCancelBtnClick">
                    Cancel
                </button>
            </t>
        </Dialog>
    </t>

<t t-name="web.AceField" owl="1">

        <div class="o_field_widget oe_form_field o_ace_view_editor oe_ace_open">
            <div class="ace-view-editor" t-ref="editor"/>
        </div>
    </t>

<t t-name="web.AttachmentImageField" owl="1">
        <div class="o_attachment_image">
            <img t-if="props.value" t-attf-src="/web/image/{{ props.value[0] }}?unique=1" t-att-title="props.value[1]" alt="Image"/>
        </div>
    </t>

<t t-name="web.BadgeField" owl="1">
        <span t-if="props.value" class="badge rounded-pill" t-att-class="classFromDecoration" t-esc="formattedValue"/>
    </t>

<t t-name="web.BadgeSelectionField" owl="1">
        <t t-if="props.readonly">
            <span t-esc="string" t-att-raw-value="value"/>
        </t>
        <t t-else="">
            <t t-foreach="options" t-as="option" t-key="option[0]">
                <span class="o_selection_badge" t-att-class="{ active: value === option[0] }" t-att-value="stringify(option[0])" t-esc="option[1]" t-on-click="() =&gt; this.onChange(option[0])"/>
            </t>
        </t>
    </t>

<t t-name="web.BinaryField" owl="1">
        <t t-if="!props.readonly">
            <t t-if="props.value">
                <div class="w-100 d-inline-flex">
                    <FileUploader acceptedFileExtensions="props.acceptedFileExtensions" file="{ data: props.value, name: fileName }" onUploaded.bind="update">
                        <t t-if="props.record.resId">
                            <button class="btn btn-secondary fa fa-download" data-tooltip="Download" aria-label="Download" t-on-click="onFileDownload"/>
                        </t>
                        <t t-set-slot="toggler">
                            <input type="text" class="o_input" t-att-value="fileName" readonly="readonly"/>
                            <button class="btn btn-secondary fa fa-pencil o_select_file_button" data-tooltip="Edit" aria-label="Edit"/>
                        </t>
                        <button class="btn btn-secondary fa fa-trash o_clear_file_button" data-tooltip="Clear" aria-label="Clear" t-on-click="() =&gt; this.update({})"/>
                    </FileUploader>
                </div>
            </t>
            <t t-else="">
                <label class="o_select_file_button btn btn-primary">
                    <FileUploader acceptedFileExtensions="props.acceptedFileExtensions" onUploaded.bind="update">
                        <t t-set-slot="toggler">
                            Upload your file
                        </t>
                    </FileUploader>
                </label>
            </t>
        </t>
        <t t-elif="props.record.resId and props.value">
            <a class="o_form_uri" href="#" t-on-click.prevent="onFileDownload">
                <span class="fa fa-download me-2"/>
                <t t-if="state.fileName" t-esc="state.fileName"/>
            </a>
        </t>
    </t>

<t t-name="web.BooleanField" owl="1">
        <CheckBox id="props.id" value="props.value or false" className="'d-inline-block'" disabled="isReadonly" onChange.bind="onChange"/>
    </t>

<t t-name="web.BooleanFavoriteField" owl="1">
        <div class="o_favorite" t-on-click.prevent.stop="() =&gt; props.update(!props.value)">
            <a href="#">
                <i class="fa" role="img" t-att-class="props.value ? 'fa-star' : 'fa-star-o'" t-att-title="props.value ? 'Remove from Favorites' : 'Add to Favorites'" t-att-aria-label="props.value ? 'Remove from Favorites' : 'Add to Favorites'"/>
                <t t-if="!props.noLabel"> <t t-esc="props.value ? 'Remove from Favorites' : 'Add to Favorites'"/></t>
            </a>
        </div>
    </t>

<t t-name="web.BooleanToggleField" owl="1">
        <CheckBox id="props.id" value="props.value or false" className="'o_field_boolean o_boolean_toggle form-switch'" disabled="isReadonly" onChange.bind="onChange">
            ​ 
        </CheckBox>
    </t>

<t t-name="web.ListBooleanToggleField" owl="1">
        <div t-on-click="onClick">
            <t t-call="web.BooleanToggleField"/>
        </div>
    </t>

<t t-name="web.CharField" owl="1">
        <t t-if="props.readonly">
            <span t-esc="formattedValue"/>
        </t>
        <t t-else="">
            <input class="o_input" t-att-class="{'o_field_translate': props.isTranslatable}" t-att-id="props.id" t-att-type="props.isPassword ? 'password' : 'text'" t-att-autocomplete="props.autocomplete or (props.isPassword ? 'new-password' : 'off')" t-att-maxlength="props.maxLength &gt; 0 and props.maxLength" t-att-placeholder="props.placeholder" t-ref="input"/>
            <t t-if="props.isTranslatable">
                <TranslationButton fieldName="props.name" record="props.record"/>
            </t>
        </t>
    </t>

<t t-name="web.ColorField" owl="1">
        <div class="o_field_color d-flex" t-att-class="{ 'o_field_cursor_disabled': isReadonly }" t-attf-style="background: #{state.color or 'url(/web/static/img/transparent.png)'}">
            <input t-on-click.stop="" class="w-100 h-100 opacity-0" type="color" t-att-value="state.color" t-att-disabled="isReadonly" t-on-input="(ev) =&gt; this.state.color = ev.target.value" t-on-change="(ev) =&gt; this.props.update(ev.target.value)"/>
        </div>
    </t>

<t t-name="web.ColorPickerField" owl="1">
        <ColorList canToggle="canToggle" colors="constructor.RECORD_COLORS" forceExpanded="isExpanded" onColorSelected.bind="switchColor" selectedColor="props.value || 0"/>
    </t>

<t t-name="web.CopyButton" owl="1">
        <button class="text-nowrap" t-ref="button" t-attf-class="btn btn-sm btn-primary o_clipboard_button {{ props.className || '' }}" t-on-click.stop="onClick">
            <span class="fa fa-clipboard mx-1"/>
            <span t-esc="props.copyText"/>
        </button>
    </t>

<t t-name="web.CopyClipboardField" owl="1">
        <div class="d-grid rounded-2 overflow-hidden">
            <Field t-props="props"/>
            <CopyButton t-if="props.value" className="copyButtonClassName" content="props.value" copyText="copyText" successText="successText"/>
        </div>
    </t>

    <t t-name="web.CopyClipboardButtonField" owl="1">
        <CopyButton t-if="props.value" className="copyButtonClassName" content="props.value" copyText="copyText" successText="successText"/>
    </t>

<t t-name="web.DateField" owl="1">
        <t t-if="props.readonly">
            <span t-esc="formattedValue"/>
        </t>
        <t t-else="">
            <DatePicker t-props="props.pickerOptions" date="date" inputId="props.id" placeholder="props.placeholder" onDateTimeChanged="(date) =&gt; this.onDateTimeChanged(date)" onInput.bind="onDatePickerInput" onUpdateInput.bind="onUpdateInput"/>
        </t>
    </t>

<t t-name="web.DateRangeField" owl="1">
        <t t-if="props.readonly">
            <t t-esc="formattedValue"/>
        </t>
        <t t-else="">
            <input class="o_input" style="width:100% !important" t-ref="root" type="text" t-att-id="props.id" t-att-value="formattedValue" t-att-placeholder="props.placeholder" t-on-change="onChangeInput"/>
        </t>
    </t>

<t t-name="web.DateTimeField" owl="1">
        <t t-if="props.readonly">
            <span t-esc="formattedValue"/>
        </t>
        <t t-else="">
            <DateTimePicker t-props="props.pickerOptions" date="props.value" inputId="props.id" placeholder="props.placeholder" onDateTimeChanged="(datetime) =&gt; this.onDateTimeChanged(datetime)" onInput.bind="onDatePickerInput" onUpdateInput.bind="onUpdateInput"/>
        </t>
    </t>

<t t-name="web.DomainField" owl="1">
        <div t-att-class="{ o_inline_mode: !props.editInDialog }">
            <t t-if="getResModel(props)">
                <DomainSelector resModel="getResModel(props)" value="displayedDomain || '[]'" readonly="props.readonly or props.editInDialog" update.bind="update" isDebugMode="!!env.debug" debugValue="props.value || '[]'" className="props.readonly ? 'o_read_mode' : 'o_edit_mode'"/>
                <div class="o_field_domain_panel">
                    <t t-if="state.recordCount !== null">
                        <i class="fa fa-arrow-right" role="img" aria-label="Domain" title="Domain"/>
                        <t t-if="state.isValid and isValidDomain">
                            <button class="btn btn-sm btn-secondary o_domain_show_selection_button" type="button" t-on-click.stop="onButtonClick">
                                <t t-esc="state.recordCount"/> record(s)
                            </button>
                        </t>
                        <t t-else="">
                            <span class="text-warning" role="alert">
                                <i class="fa fa-exclamation-triangle" role="img" aria-label="Warning" title="Warning"/> Invalid domain
                            </span>
                        </t>
                        <t t-if="!!env.debug and !props.readonly">
                            <button class="btn btn-sm btn-icon fa fa-refresh o_refresh_count" role="img" aria-label="Refresh" title="Refresh" t-on-click="() =&gt; this.loadCount(props)"/>
                        </t>
                    </t>
                    <t t-else="">
                        <i class="fa fa-circle-o-notch fa-spin" role="img" aria-label="Loading" title="Loading"/>
                    </t>

                    <t t-if="props.editInDialog and !props.readonly">
                        <button class="btn btn-sm btn-primary o_field_domain_dialog_button" t-on-click.prevent="onEditDialogBtnClick">Edit Domain</button>
                    </t>
                </div>
            </t>
            <t t-else="">
                <div>Select a model to add a filter.</div>
            </t>
        </div>
    </t>

<t t-name="web.EmailField" owl="1">
        <t t-if="props.readonly">
            <div class="d-grid">
                <a class="o_form_uri o_text_overflow" t-on-click.stop="" t-att-href="props.value ? 'mailto:'+props.value : undefined" t-esc="props.value || ''"/>
            </div>
        </t>
        <t t-else="">
            <div class="d-inline-flex w-100">
                <input class="o_input" t-att-id="props.id" type="email" t-att-placeholder="props.placeholder" t-att-required="props.required" t-ref="input"/>
            </div>
        </t>
    </t>

    <t t-name="web.FormEmailField" owl="1">
        <t t-if="props.readonly">
            <div class="d-grid">
                <a class="o_form_uri o_text_overflow" t-on-click.stop="" t-att-href="props.value ? 'mailto:'+props.value : undefined" t-esc="props.value || ''"/>
            </div>
        </t>
        <t t-else="">
            <div class="d-inline-flex w-100">
                <input class="o_input" t-att-id="props.id" type="email" t-att-placeholder="props.placeholder" t-att-required="props.required" t-ref="input"/>
            <a t-if="props.value" t-att-href="'mailto:'+props.value" class="ms-3 d-inline-flex align-items-center">
                <i class="fa fa-envelope" data-tooltip="Send Email" aria-label="Send Email"/>
            </a>
            </div>
        </t>
    </t>

    <t t-name="web.Field" owl="1">
        <div t-att-name="props.name" t-att-class="classNames" t-att-style="props.style" t-att-data-tooltip-template="tooltip and 'web.FieldTooltip'" t-att-data-tooltip-info="tooltip">
            <t t-component="FieldComponent" t-props="fieldComponentProps"/>
        </div>
    </t>

<t t-name="web.FieldTooltip" owl="1">

        <p t-if="field.help" class="o-tooltip--help" role="tooltip">
            <t t-esc="field.help"/>
        </p>

        <ul class="o-tooltip--technical" t-if="debug" role="tooltip">
            <li data-item="field" t-if="field and field.name">
                <span class="o-tooltip--technical--title">Field:</span>
                <t t-esc="field.name"/>
            </li>
            <li data-item="object" t-if="resModel">
                <span class="o-tooltip--technical--title">Model:</span>
                <t t-esc="resModel"/>
            </li>
            <t t-if="field">
                <li t-if="field.type" data-item="type">
                    <span class="o-tooltip--technical--title">Type:</span>
                    <t t-esc="field.type"/>
                </li>
                <li t-if="field.widget" data-item="widget">
                    <span class="o-tooltip--technical--title">Widget:</span>
                    <t t-if="field.widgetDescription" t-esc="field.widgetDescription"/>
                    <t t-if="field.widget">
                        (<t t-esc="field.widget"/>)
                    </t>
                </li>
                <li t-if="field.context" data-item="context">
                    <span class="o-tooltip--technical--title">Context:</span>
                    <t t-esc="field.context"/>
                </li>
                <li t-if="field.domain" data-item="domain">
                    <span class="o-tooltip--technical--title">Domain:</span>
                    <t t-esc="field.domain"/>
                </li>
                <li t-if="field.modifiers" data-item="modifiers">
                    <span class="o-tooltip--technical--title">Modifiers:</span>
                    <t t-esc="field.modifiers"/>
                </li>
                <li t-if="field.default" data-item="default">
                    <span class="o-tooltip--technical--title">Default:</span>
                    <t t-esc="field.default"/>
                </li>
                <li t-if="field.changeDefault" data-item="changeDefault">
                    <span class="o-tooltip--technical--title">Change default:</span>
                    Yes
                </li>
                <li t-if="field.relation" data-item="relation">
                    <span class="o-tooltip--technical--title">Relation:</span>
                    <t t-esc="field.relation"/>
                </li>
                <li t-if="field.selection" data-item="selection">
                    <span class="o-tooltip--technical--title">Selection:</span>
                    <ul class="o-tooltip--technical">
                        <li t-foreach="field.selection" t-as="option" t-key="option_index">
                            [<t t-esc="option[0]"/>]
                            <t t-if="option[1]"> - </t>
                            <t t-esc="option[1]"/>
                        </li>
                    </ul>
                </li>
            </t>
        </ul>
    </t>

<t t-name="web.FileUploader" owl="1">
        <t t-if="state.isUploading">Uploading...</t>
        <span t-else="" t-on-click.prevent="onSelectFileButtonClick" style="display:contents">
            <t t-slot="toggler"/>
        </span>
        <t t-slot="default"/>
        <input type="file" t-att-name="props.inputName" t-ref="fileInput" t-attf-class="o_input_file o_hidden {{ props.fileUploadClass or '' }}" t-att-multiple="props.multiUpload ? 'multiple' : false" t-att-accept="props.acceptedFileExtensions or '*'" t-on-change="onFileChange"/>
    </t>

<t t-name="web.FloatField" owl="1">
        <span t-if="props.readonly" t-esc="formattedValue"/>
        <input t-else="" t-att-id="props.id" t-ref="numpadDecimal" t-att-placeholder="props.placeholder" t-att-type="props.inputType" inputmode="decimal" class="o_input" t-att-step="props.step"/>
    </t>

<t t-name="web.FloatFactorField" owl="1">
        <FloatField t-props="floatFieldProps"/>
    </t>

<t t-name="web.FloatTimeField" owl="1">
        <span t-if="props.readonly" t-esc="formattedValue"/>
        <input t-else="" t-att-id="props.id" t-att-type="props.inputType" t-ref="numpadDecimal" t-att-placeholder="props.placeholder" class="o_input"/>
    </t>

<t t-name="web.FloatToggleField" owl="1">
        <span t-if="props.readonly and !props.disableReadOnly" t-esc="formattedValue"/>
        <button t-else="" class="o_field_float_toggle" t-on-click="onChange"><t t-esc="formattedValue"/></button>
    </t>

<t t-name="web.FontSelectionField" owl="1">
        <t t-if="props.readonly">
            <span t-esc="string" t-att-raw-value="props.value" t-attf-style="font-family:{{ props.value }};"/>
        </t>
        <t t-else="">
            <select class="o_input" t-on-change="onChange" t-attf-style="font-family:{{ props.value }};">
                <option t-att-selected="false === value" t-att-value="stringify(false)" t-esc="this.props.placeholder || ''" t-attf-style="{{ isRequired ? 'display:none' : '' }}"/>
                <t t-foreach="options" t-as="option" t-key="option[0]">
                    <option t-att-selected="option[0] === value" t-att-value="stringify(option[0])" t-esc="option[1]" t-attf-style="font-family:{{ option[1] }};"/>
                </t>
            </select>
        </t>
    </t>

<t t-name="web.HandleField" owl="1">
        <span class="o_row_handle fa fa-sort ui-sortable-handle" t-on-click.stop=""/>
    </t>

<t t-name="web.HtmlField" owl="1">
        <t t-if="props.readonly">
            <span t-out="props.value or ''"/>
        </t>
        <t t-else="" t-call="web.TextField"/>
    </t>

<t t-name="web.IframeWrapperField" owl="1">
        <div class="o_preview_iframe_wrapper">
            <iframe src="about:blank" class="o_preview_iframe" t-ref="iframe"/>
        </div>
    </t>

<t t-name="web.ImageField" owl="1">
        <div class="d-inline-block position-relative opacity-trigger-hover">
            <div t-attf-class="position-absolute d-flex justify-content-between w-100 bottom-0 opacity-0 opacity-100-hover {{isMobile ? 'o_mobile_controls' : ''}}" aria-atomic="true" t-att-style="sizeStyle">
                <t t-if="!props.readonly">
                    <FileUploader acceptedFileExtensions="props.acceptedFileExtensions" t-key="props.record.resId" onUploaded.bind="onFileUploaded" type="'image'">
                        <t t-set-slot="toggler">
                            <button class="o_select_file_button btn btn-light border-0 rounded-circle m-1 p-1" data-tooltip="Edit" aria-label="Edit">
                                <i class="fa fa-pencil fa-fw"/>
                            </button>
                        </t>
                        <button t-if="props.value and state.isValid" class="o_clear_file_button btn btn-light border-0 rounded-circle m-1 p-1" data-tooltip="Clear" aria-label="Clear" t-on-click="onFileRemove">
                            <i class="fa fa-trash-o fa-fw"/>
                        </button>
                    </FileUploader>
                </t>
            </div>
            <img class="img img-fluid w-100" alt="Binary file" t-att-src="this.getUrl(props.previewImage or props.name)" t-att-name="props.name" t-att-height="props.height" t-att-width="props.width" t-att-style="sizeStyle" t-on-error.stop="onLoadFailed" t-att-data-tooltip-template="hasTooltip and tooltipAttributes.template" t-att-data-tooltip-info="hasTooltip and tooltipAttributes.info" t-att-data-tooltip-delay="hasTooltip and props.zoomDelay"/>
        </div>
    </t>

    <t t-name="web.ImageZoomTooltip" owl="1">
        <div class="o_image_zoom">
            <img t-att-src="url"/>
        </div>
    </t>

<t t-name="web.ImageUrlField" owl="1">
        <img t-if="props.value" class="img img-fluid" alt="Image" t-att-src="state.src" t-att-border="props.readonly ? 0 : 1" t-att-name="props.name" t-att-height="props.height" t-att-width="props.width" t-att-style="sizeStyle" t-on-error="onLoadFailed"/>
    </t>

<t t-name="web.IntegerField" owl="1">
        <span t-if="props.readonly" t-esc="formattedValue"/>
        <input t-ref="numpadDecimal" t-att-id="props.id" t-att-type="props.inputType" t-att-placeholder="props.placeholder" inputmode="numeric" t-else="" class="o_input" t-att-step="props.step"/>
    </t>

<t t-name="web.JournalDashboardGraphField" owl="1">
        <div class="o_dashboard_graph" t-att-class="props.className" t-attf-class="o_graph_{{ props.graphType }}chart">
            <canvas t-ref="canvas"/>
        </div>
    </t>

<t t-name="web.LabelSelectionField" owl="1">
        <span t-attf-class="badge text-bg-{{className}} " t-esc="string" t-att-raw-value="props.value"/>
    </t>

<t t-name="web.Many2ManyBinaryField" owl="1">
        <div t-attf-class="oe_fileupload {{props.className ? props.className : ''}}" aria-atomic="true">
            <div class="o_attachments">
                <t t-foreach="files" t-as="file" t-key="file_index">
                   <t t-call="Many2ManyBinaryField.attachment_preview"/>
                </t>
            </div>
            <div t-if="!props.readonly" class="oe_add">
                <FileInput acceptedFileExtensions="props.acceptedFileExtensions" multiUpload="true" onUpload.bind="onFileUploaded" resModel="props.record.resModel" resId="props.record.data.id or 0">
                    <button class="btn btn-secondary o_attach" data-tooltip="Attach">
                        <span class="fa fa-paperclip" aria-label="Attach"/> <t t-esc="props.uploadText"/>
                    </button>
                </FileInput>
            </div>
        </div>
    </t>

<t t-name="Many2ManyBinaryField.attachment_preview" owl="1">
    <t t-set="editable" t-value="!props.readonly"/>
    <div t-attf-class="o_attachment o_attachment_many2many #{ editable ? 'o_attachment_editable' : '' } #{upload ? 'o_attachment_uploading' : ''}" t-att-title="file.name">
        <div class="o_attachment_wrap">
            <t t-set="ext" t-value="getExtension(file)"/>
            <div class="o_image_box float-start" t-att-data-tooltip="'Download ' + file.name">
                <a t-att-href="getUrl(file.id)" aria-label="Download" download="">
                    <span class="o_image o_hover" t-att-data-mimetype="file.mimetype" t-att-data-ext="ext" role="img"/>
                </a>
            </div>

            <div class="caption">
                <a class="ml4" t-att-data-tooltip="'Download ' + file.name" t-att-href="getUrl(file.id)" download=""><t t-esc="file.name"/></a>
            </div>
            <div class="caption small">
                <a class="ml4 small text-uppercase" t-att-href="getUrl(file.id)"><b><t t-esc="ext"/></b></a>
                <div t-if="editable" class="progress o_attachment_progress_bar">
                    <div class="progress-bar progress-bar-striped active" style="width: 100%">Uploading</div>
                </div>
            </div>

            <div class="o_attachment_uploaded"><i class="text-success fa fa-check" role="img" aria-label="Uploaded" title="Uploaded"/></div>
            <div t-if="editable" class="o_attachment_delete" t-on-click.stop="() =&gt; this.onFileRemove(file.id)"><span class="text-white" role="img" aria-label="Delete" title="Delete">×</span></div>
        </div>
    </div>
</t>

<t t-name="web.Many2ManyCheckboxesField" owl="1">
        <div aria-atomic="true">
            <t t-foreach="items" t-as="item" t-key="item[0]">
                <div>
                    <CheckBox value="isSelected(item)" disabled="props.readonly" onChange="(ev) =&gt; this.onChange(item[0], ev)">
                        <t t-esc="item[1]"/>
                    </CheckBox>
                </div>
            </t>
        </div>
    </t>

<t t-name="web.KanbanMany2ManyTagsField" owl="1">
        <TagsList className="'o_kanban_tags'" tags="tags" displayBadge="false"/>
    </t>
<t t-name="web.Many2ManyTagsField" owl="1">
        <div class="o_field_tags d-inline-flex flex-wrap" t-att-class="{'o_tags_input o_input': !props.readonly}">
            <TagsList tags="tags"/>
            <div t-if="showM2OSelectionField" class="o_field_many2many_selection d-inline-flex w-100" t-on-keydown="onAutoCompleteKeydown" t-ref="autoComplete">
                <Many2XAutocomplete id="props.id" placeholder="tags.length ? '' : props.placeholder" resModel="props.relation" autoSelect="true" fieldString="string" activeActions="activeActions" update="update" quickCreate="activeActions.create ? quickCreate : null" context="context" getDomain.bind="getDomain" isToMany="true" nameCreateField="props.nameCreateField"/>
            </div>
        </div>
    </t>

    <t t-name="web.Many2ManyTagsFieldColorListPopover" owl="1">
        <div class="o_tag_popover m-2">
            <ColorList colors="props.colors" forceExpanded="true" onColorSelected="(id) =&gt; props.switchTagColor(id, props.tag)"/>
            <CheckBox className="'pt-2'" value="props.tag.colorIndex === 0" onChange.alike="(isChecked) =&gt; props.onTagVisibilityChange(isChecked, props.tag)">Hide in kanban</CheckBox>
        </div>
    </t>

<t t-name="web.TagsList" owl="1">
        <t t-foreach="visibleTags" t-as="tag" t-key="tag.id or tag_index">
            <span t-attf-class="{{\`o_tag_color_\${ tag.colorIndex or 0 } \${props.displayBadge ? 'badge rounded-pill' : ''}\`}} o_tag d-inline-flex align-items-center" tabindex="-1" t-att-data-color="tag.colorIndex" t-att-title="tag.text" t-on-click="(ev) =&gt; tag.onClick and tag.onClick(ev)" t-on-keydown="tag.onKeydown">
                <img t-if="tag.img" t-att-src="tag.img" class="o_m2m_avatar rounded-circle" t-att-class="tag.className"/>
                <div t-if="props.displayBadge and props.displayText" class="o_tag_badge_text" t-esc="tag.text"/>
                <t t-elif="props.displayText">
                    <span/>
                    <div t-esc="tag.text"/>
                </t>
                <a tabIndex="-1" t-if="tag.onDelete" t-on-click.stop.prevent="(ev) =&gt; tag.onDelete and tag.onDelete(ev)" href="#" class="fa fa-times o_delete" title="Delete" aria-label="Delete"/>
            </span>
        </t>
        <span t-if="props.tags and otherTags.length" class="o_m2m_avatar_empty rounded-circle text-center fw-bold" data-tooltip-template="web.TagsList.Tooltip" data-tooltip-position="right" t-att-data-tooltip-info="tooltipInfo">
            <span t-if="otherTags.length &gt; 9" t-esc="'9+'"/>
            <span t-else="" t-esc="'+' + otherTags.length"/>
        </span>
    </t>

    <t t-name="web.TagsList.Tooltip" owl="1">
        <t t-foreach="tags" t-as="tag" t-key="tag.id">
            <div t-esc="tag.text"/>
        </t>
    </t>

<t t-name="web.Many2ManyTagsAvatarField" owl="1">
        <div class="o_field_tags d-inline-flex flex-wrap mw-100" t-att-class="{'o_tags_input o_input': !props.readonly}">
            <TagsList tags="tags" itemsVisible="itemsVisible"/>
            <div t-if="showM2OSelectionField" class="o_field_many2many_selection d-inline-flex w-100" t-on-keydown="onAutoCompleteKeydown" t-ref="autoComplete">
                <Many2XAutocomplete id="props.id" placeholder="tags.length ? '' : props.placeholder" resModel="props.relation" autoSelect="true" fieldString="props.string" activeActions="activeActions" update="update" quickCreate="activeActions.create ? quickCreate : null" context="context" getDomain.bind="getDomain" isToMany="true"/>
            </div>
        </div>
    </t>

<t t-name="web.Many2OneField.CreateConfirmationDialog" owl="1">
        <Dialog title="title" size="'md'">
            <div>
                Create <strong t-esc="props.value"/> as a new <t t-esc="props.name"/>?
            </div>
            <t t-set-slot="footer">
                <button class="btn btn-primary" t-on-click="onCreate">Create</button>
                <button class="btn" t-on-click="() =&gt; props.close()">Discard</button>
            </t>
        </Dialog>
    </t>

    <t t-name="web.Many2OneField" owl="1">
        <t t-if="props.readonly">
            <t t-if="!props.canOpen">
                <span>
                    <span t-esc="displayName"/>
                    <t t-foreach="extraLines" t-as="extraLine" t-key="extraLine_index">
                        <br/>
                        <span t-esc="extraLine"/>
                    </t>
                </span>
            </t>
            <t t-else="">
                <a t-if="props.value" t-attf-class="o_form_uri #{classFromDecoration}" t-att-href="props.value ? \`#id=\${props.value[0]}&amp;model=\${relation}\` : '#'" t-on-click.prevent="onClick">
                    <span t-esc="displayName"/>
                    <t t-foreach="extraLines" t-as="extraLine" t-key="extraLine_index">
                        <br/>
                        <span t-esc="extraLine"/>
                    </t>
                </a>
            </t>
        </t>
        <t t-else="">
            <div class="o_field_many2one_selection">
                <Many2XAutocomplete t-props="Many2XAutocompleteProps"/>
                <t t-if="hasExternalButton">
                    <button type="button" class="btn btn-secondary fa o_external_button" t-att-class="(props.openTarget === 'current' and !env.inDialog )? 'fa-arrow-right' : 'fa-external-link'" tabindex="-1" draggable="false" aria-label="Internal link" data-tooltip="Internal link" t-on-click="onExternalBtnClick"/>
                </t>
                <button t-if="hasBarcodeButton" t-on-click="onBarcodeBtnClick" type="button" class="btn ms-3 o_barcode" tabindex="-1" draggable="false" aria-label="Scan barcode" title="Scan barcode" data-tooltip="Scan barcode"/>
            </div>
            <div class="o_field_many2one_extra">
                <t t-foreach="extraLines" t-as="extraLine" t-key="extraLine_index">
                    <br t-if="!extraLine_first"/>
                    <span t-esc="extraLine"/>
                </t>
            </div>
        </t>
    </t>

<t t-name="web.Many2OneAvatarField" owl="1">
        <div class="d-flex" t-att-data-tooltip="props.value[1]">
            <span class="o_m2o_avatar">
                <span t-if="props.value === false and !props.readonly" class="o_m2o_avatar_empty"/>
                <img t-if="props.value !== false" t-attf-src="/web/image/{{relation}}/{{props.value[0]}}/avatar_128"/>
            </span>
            <Many2OneField t-props="props" canOpen="!props.readonly"/>
        </div>
    </t>

<t t-name="web.MonetaryField" owl="1">
        <span t-if="props.readonly" t-esc="formattedValue"/>
        <div class="text-nowrap d-inline-flex w-100 align-items-baseline" t-else="">
            <span t-if="!props.hideSymbol and currency" t-out="currencySymbol"/>
            <input t-ref="numpadDecimal" t-att-id="props.id" t-att-type="props.inputType" t-att-placeholder="props.placeholder" class="o_input flex-grow-1 flex-shrink-1"/>
        </div>
    </t>

<t t-name="web.PdfViewerField" owl="1">
        <t t-if="!props.readonly">
            <div class="o_form_pdf_controls">
                <t t-if="props.value">
                    <FileUploader acceptedFileExtensions="'.pdf'" file="{ data: props.value, name: fileName }" onUploaded.bind="onFileUploaded">
                        <t t-set-slot="toggler">
                            <button class="btn btn-secondary fa fa-pencil o_select_file_button" data-tooltip="Edit" aria-label="Edit"/>
                        </t>
                        <button class="btn btn-secondary fa fa-trash o_clear_file_button" data-tooltip="Clear" aria-label="Clear" t-on-click="onFileRemove"/>
                    </FileUploader>
                </t>
                <t t-else="">
                    <label class="o_select_file_button btn btn-primary">
                        <FileUploader acceptedFileExtensions="'.pdf'" onUploaded.bind="onFileUploaded">
                            <t t-set-slot="toggler">
                                Upload your file
                            </t>
                        </FileUploader>
                    </label>
                </t>
            </div>
        </t>
        <t t-if="props.value">
            <iframe class="o_pdfview_iframe" alt="PDF file" t-att-src="url" t-att-name="props.name" t-on-error="onLoadFailed"/>
        </t>
    </t>

<t t-name="web.PercentPieField" owl="1">
        <div class="o_pie">
            <div class="o_mask" t-attf-class="{{transform.value &gt;= 360 ? 'o_full' : ''}}" t-attf-style="transform: rotate({{transform.left}}deg)"/>
            <div class="o_mask" t-attf-class="{{transform.value &gt;= 180 ? 'o_full' : ''}}" t-attf-style="transform: rotate({{transform.right}}deg)"/>
            <div class="o_pie_value">
                <span t-esc="formattedValue"/>
            </div>
        </div>
        <span t-esc="props.string"/>
    </t>

<t t-name="web.PercentageField" owl="1">
        <t t-if="props.readonly">
            <span t-esc="formattedValue"/>
        </t>
        <t t-else="">
            <div class="d-flex">
                <input t-ref="numpadDecimal" t-attf-class="o_input" t-att-placeholder="props.placeholder" type="text" inputmode="decimal"/>
                <span>%</span>
            </div>
        </t>
    </t>

<t t-name="web.PhoneField" owl="1">
        <div class="o_phone_content d-inline-flex w-100">
            <t t-if="props.readonly">
                <a t-if="props.value" class="o_form_uri" t-att-href="phoneHref" t-esc="props.value"/>
            </t>
            <t t-else="">
                <input class="o_input" t-att-id="props.id" type="tel" t-att-placeholder="props.placeholder" t-ref="input"/>
            </t>
        </div>
    </t>

    <t t-name="web.FormPhoneField" owl="1">
        <div class="o_phone_content d-inline-flex w-100">
            <t t-if="props.readonly">
                <a t-if="props.value" class="o_form_uri" t-att-href="phoneHref" t-esc="props.value"/>
            </t>
            <t t-else="">
                <input class="o_input" t-att-id="props.id" type="tel" t-att-placeholder="props.placeholder" t-ref="input"/>
            <a t-if="props.value" t-att-href="phoneHref" class="o_phone_form_link ms-3 d-inline-flex align-items-center">
                <i class="fa fa-phone"/><small class="fw-bold ms-1">Call</small>
            </a>
            </t>
        </div>
    </t>

    <t t-name="web.PriorityField" owl="1">
        <div class="o_priority" role="radiogroup" name="priority" aria-label="Priority">
            <t t-foreach="options" t-as="value" t-key="value">
                <t t-if="!value_first">
                    <t t-if="isReadonly">
                        <span class="o_priority_star fa" role="radio" t-att-class="value_index lte index ? 'fa-star' : 'fa-star-o'" t-att-tabindex="value_index === state.index ? 0 : -1" t-att-data-tooltip="getTooltip(value[1])" t-att-aria-checked="value_index lte index" t-att-aria-label="value[1]"/>
                    </t>
                    <t t-else="">
                        <a href="#" class="o_priority_star fa" role="radio" t-att-class="value_index lte index ? 'fa-star' : 'fa-star-o'" t-att-tabindex="value_index === state.index ? 0 : -1" t-att-data-tooltip="getTooltip(value[1])" t-att-aria-checked="value_index lte index" t-att-aria-label="value[1]" t-on-click.prevent.stop="() =&gt; this.onStarClicked(value[0])" t-on-mouseenter="() =&gt; state.index = value_index" t-on-mouseleave="() =&gt; state.index = -1"/>
                    </t>
                </t>
            </t>
        </div>
    </t>

<t t-name="web.ProgressBarField" owl="1">
        <div class="o_progressbar w-100 d-flex align-items-center" t-ref="numpadDecimal">
            <div t-if="props.title" class="o_progressbar_title text-nowrap pe-1"><t t-esc="props.title"/></div>
            <div class="o_progress align-middle overflow-hidden" aria-valuemin="0" t-att-aria-valuemax="state.maxValue" t-att-aria-valuenow="state.currentValue">
                <div t-attf-class="{{ state.currentValue &gt; state.maxValue ? 'bg-secondary' : 'bg-primary' }} h-100" t-att-style="'width: min(' + 100 * state.currentValue / state.maxValue + '%, 100%)'"/>
            </div>
            <div class="o_progressbar_value d-flex">
                <t t-if="isPercentage">
                    <input t-if="isEditable and props.isCurrentValueEditable" t-ref="currentValue" class="o_input h-100 text-center" type="text" inputmode="decimal" t-att-value="formatCurrentValue() or ''" t-att-required="props.required" t-on-change="onCurrentValueChange" t-on-input="onCurrentValueInput" t-on-focus="onInputFocus" t-on-blur="onInputBlur"/>
                    <span t-else="" class="mx-1" t-esc="formatCurrentValue(true)"/>
                    <span>%</span>
                </t>
                <t t-else="">
                    <input t-if="isEditable and props.isCurrentValueEditable" t-ref="currentValue" class="o_input h-100 text-center" type="text" inputmode="decimal" t-att-value="formatCurrentValue()" t-on-change="onCurrentValueChange" t-on-input="onCurrentValueInput" t-on-focus="onInputFocus" t-on-blur="onInputBlur"/>
                    <span t-else="" class="mx-1" t-esc="formatCurrentValue(true)"/>
                    /
                    <input t-if="isEditable and props.isMaxValueEditable" t-ref="maxValue" class="o_input h-100 text-center" type="text" inputmode="decimal" t-att-value="formatMaxValue()" t-on-change="onMaxValueChange" t-on-input="onMaxValueInput" t-on-focus="onInputFocus" t-on-blur="onInputBlur"/>
                    <span t-else="" class="mx-1" t-esc="formatMaxValue(true)"/>
                </t>
            </div>
        </div>
    </t>

<t t-name="web.KanbanPropertiesField" owl="1">
        <div t-ref="properties" class="w-100">
            <div class="o_kanban_property_field d-inline-flex flex-column justify-content-center align-items-start w-100 my-1" t-foreach="propertiesList" t-as="propertyConfiguration" t-key="propertyConfiguration.name" t-if="(propertyConfiguration.value || ['integer', 'float'].includes(propertyConfiguration.type)) &amp;&amp; propertyConfiguration.view_in_kanban">
                <div class="mw-100 text-truncate">
                    <PropertyValue id="generateUniqueDomID()" canChangeDefinition="state.canChangeDefinition" comodel="propertyConfiguration.comodel || ''" context="context" domain="propertyConfiguration.domain || '[]'" readonly="props.readonly" selection="propertyConfiguration.selection" string="propertyConfiguration.string" tags="propertyConfiguration.tags" type="propertyConfiguration.type" value="propertyConfiguration.value" onChange.bind="() =&gt; {}" onTagsChange.bind="() =&gt; {}"/>
                </div>
            </div>
        </div>
    </t>
<t t-name="web.PropertiesField" owl="1">
        <div t-ref="properties" class="row align-items-start">
            <t t-foreach="groupedPropertiesList" t-as="propertiesListGroup" t-key="propertiesListGroup_index">
                <div class="o_inner_group grid col-lg-6">
                    <div t-foreach="propertiesListGroup" t-as="propertyConfiguration" t-key="propertyConfiguration.name" class="o_property_field d-sm-contents mb-3" t-att-property-name="propertyConfiguration.name">
                        <t t-set="domId" t-value="generateUniqueDomID()"/>
                        <label t-attf-class="o_field_property_label o_form_label text-break {{state.movedPropertyName === propertyConfiguration.name ? 'o_property_field_highlight' : ''}} d-flex align-items-center" t-att-for="domId">
                            <b t-if="propertyConfiguration.string &amp;&amp; propertyConfiguration.string.length" t-out="propertyConfiguration.string" class="text-900"/>
                            <i t-else="" class="o_field_property_empty_label">
                                New Property
                            </i>
                            <i t-if="state.canChangeDefinition &amp;&amp; !props.readonly" class="o_field_property_open_popover fa fa-pencil ms-2" t-on-click="(event) =&gt; this.onPropertyEdit(event, propertyConfiguration.name)"/>
                        </label>
                        <div class="o_property_field_value">
                            <PropertyValue id="domId" canChangeDefinition="state.canChangeDefinition" checkDefinitionWriteAccess.bind="checkDefinitionWriteAccess ? checkDefinitionWriteAccess : () =&gt; {}" comodel="propertyConfiguration.comodel || ''" context="context" domain="propertyConfiguration.domain || '[]'" readonly="props.readonly" selection="propertyConfiguration.selection" string="propertyConfiguration.string" tags="propertyConfiguration.tags" type="propertyConfiguration.type" value="propertyConfiguration.value" onChange.bind="(value) =&gt; this.onPropertyValueChange(propertyConfiguration.name, value)" onTagsChange.bind="(newTags, newValue) =&gt; this.onTagsChange(propertyConfiguration.name, newTags, newValue)"/>
                        </div>
                    </div>
                    <div t-if="propertiesList.length % props.columns === propertiesListGroup_index" t-attf-class="o_field_property_add {{props.columns !== 1 ? 'g-col-2' : ''}}">
                        <button t-if="!props.readonly &amp;&amp; state.canChangeDefinition" class="btn btn-light text-muted text-break m-0" t-on-click="onPropertyCreate">
                            <i class="fa fa-plus"/>
                            Add a Property
                        </button>
                    </div>
                </div>
            </t>

        </div>
    </t>
<t t-name="web.PropertyDefinition" owl="1">
        <div class="o_field_property_definition o_field_widget d-block" t-ref="propertyDefinition">
            <div class="o_field_property_definition_header d-flex flex-row align-items-center justify-content-between m-3">
                <h6 t-if="props.readonly" t-out="state.propertyDefinition.string" class="text-truncate"/>
                <input t-else="" class="o_input px-2 me-3" type="text" required="" placeholder="Property Name" t-model="state.propertyDefinition.string" t-on-change="onPropertyLabelChange" t-on-keypress="onPropertyLabelKeypress"/>
                <div class="d-flex flex-row me-3">
                    <button t-attf-class="btn btn-link p-0 m-0 me-2 {{this.isFirst ? 'disabled' : ''}}" t-on-click="() =&gt; this.onPropertyMove('up')">
                        <i class="fa fa-chevron-up"/>
                    </button>
                    <button t-attf-class="btn btn-link p-0 m-0 {{this.isLast ? 'disabled' : ''}}" t-on-click="() =&gt; this.onPropertyMove('down')">
                        <i class="fa fa-chevron-down"/>
                    </button>
                    <button t-if="!props.readonly &amp;&amp; props.canChangeDefinition" class="btn text-danger p-0 float-end o_field_property_definition_delete ms-3" title="Remove Property" t-on-click="props.onDelete">
                        <i class="fa fa-trash"/> Delete
                    </button>
                </div>
            </div>
            <table class="m-3">
                <tr>
                    <td class="align-top pe-2">
                        <label t-att-for="getUniqueDomID('type')">
                            <b>Field Type</b>
                        </label>
                    </td>
                    <td class="o_field_property_definition_type">
                        <div t-if="props.readonly" class="d-flex align-items-center">
                            <img class="me-3" t-attf-src="/web/static/src/views/fields/properties/icons/{{state.propertyDefinition.type}}.png"/>
                            <span t-out="state.typeLabel"/>
                        </div>
                        <Dropdown t-else="" title="state.typeLabel" togglerClass="'btn btn-link d-flex p-0 w-100'">
                            <t t-set-slot="toggler">
                                <div class="o_input_dropdown w-100 o_field_property_dropdown">
                                    <img t-attf-src="/web/static/src/views/fields/properties/icons/{{state.propertyDefinition.type}}.png"/>
                                    <input type="text" class="dropdown text-start w-100 o_input py-1" t-att-id="getUniqueDomID('type')" t-att-value="state.typeLabel" readonly=""/>
                                    <a role="button" class="o_dropdown_button"/>
                                </div>
                            </t>
                            <t t-foreach="availablePropertyTypes" t-as="option" t-key="option[0]">
                                <DropdownItem onSelected.bind="() =&gt; this.onPropertyTypeChange(option[0])">
                                    <div class="d-flex align-items-center">
                                        <img class="me-2" t-attf-src="/web/static/src/views/fields/properties/icons/{{option[0]}}.png"/>
                                        <span t-out="option[1]"/>
                                    </div>
                                </DropdownItem>
                            </t>
                        </Dropdown>
                    </td>
                </tr>

                <tr t-if="state.propertyDefinition.type === 'selection'">
                    <td class="o_td_label align-top pe-2">
                        <b>Values</b>
                    </td>
                    <td>
                        <PropertyDefinitionSelection readonly="props.readonly || !props.canChangeDefinition" canChangeDefinition="props.canChangeDefinition" default="state.propertyDefinition.default || ''" options="state.propertyDefinition.selection || []" onOptionsChange.bind="onSelectionOptionChange" onDefaultOptionChange.bind="onDefaultChange"/>
                    </td>
                </tr>
                <tr t-if="state.propertyDefinition.type === 'tags'">
                    <td class="o_td_label align-top">
                        <label t-att-for="getUniqueDomID('tags')">
                            <b>Tags</b>
                        </label>
                    </td>
                    <td>
                        <PropertyTags id="getUniqueDomID('tags')" selectedTags="propertyTagValues" tags="state.propertyDefinition.tags || []" readonly="props.readonly" canChangeTags="props.canChangeDefinition" checkDefinitionWriteAccess.bind="props.checkDefinitionWriteAccess ? props.checkDefinitionWriteAccess : () =&gt; {}" deleteAction="'tags'" onTagsChange.bind="onTagsChange"/>
                    </td>
                </tr>
                <tr t-if="state.propertyDefinition.type === 'many2one' || state.propertyDefinition.type === 'many2many'" class="o_field_property_definition_model">
                    <td class="o_td_label align-top pe-2">
                        <label t-att-for="getUniqueDomID('model')">
                            <b>Model</b>
                        </label>
                    </td>
                    <td>
                        <span t-if="props.readonly">
                            <t t-if="state.resModelDescription" t-out="state.resModelDescription"/>
                        </span>
                        <ModelSelector t-else="" id="getUniqueDomID('model')" value="state.resModelDescription" onModelSelected.bind="onModelChange"/>
                    </td>
                </tr>
                <tr t-if="(state.propertyDefinition.type === 'many2one' || state.propertyDefinition.type === 'many2many')                     &amp;&amp; state.propertyDefinition.comodel &amp;&amp; state.propertyDefinition.comodel.length">
                    <td class="o_td_label align-top pe-2">
                        <b>Domain</b>
                    </td>
                    <td>
                        <DomainSelector resModel="state.propertyDefinition.comodel" value="state.propertyDefinition.domain || '[]'" readonly="props.readonly" update.bind="onDomainChange" isDebugMode="!!env.debug" className="props.readonly ? 'o_read_mode d-inline-block me-2' : 'o_edit_mode d-inline-block me-2'"/>
                        <div t-if="state.matchingRecordsCount !== undefined" class="d-inline-block">
                            <i class="fa fa-arrow-right" role="img" title="Domain"/>
                            <button class="btn btn-sm btn-secondary" type="button" t-on-click.stop="onButtonDomainClick">
                                <t t-out="state.matchingRecordsCount"/> record(s)
                            </button>
                        </div>
                    </td>
                </tr>
                <tr t-if="!['tags', 'selection'].includes(state.propertyDefinition.type)                     &amp;&amp; (!['many2one', 'many2many'].includes(state.propertyDefinition.type)                     || (state.propertyDefinition.comodel &amp;&amp; state.propertyDefinition.comodel.length))" class="o_field_property_definition_value">
                    <td class="o_td_label align-top pe-2">
                        <label t-att-for="getUniqueDomID('default')">
                            <b t-if="state.propertyDefinition.type === 'boolean'">
                                Default State
                            </b>
                            <b t-else="">
                                Default Value
                            </b>
                        </label>
                    </td>
                    <td>
                        <PropertyValue id="getUniqueDomID('default')" readonly="props.readonly" canChangeDefinition="props.canChangeDefinition" type="state.propertyDefinition.type" string="state.propertyDefinition.string" value="state.propertyDefinition.default" comodel="state.propertyDefinition.comodel || ''" domain="state.propertyDefinition.domain || '[]'" context="props.context" onChange.bind="onDefaultChange"/>
                    </td>
                </tr>
                <tr t-if="!props.hideKanbanOption" class="o_field_property_definition_kanban">
                    <td class="o_td_label align-top pe-2">
                        <label t-att-for="getUniqueDomID('kanban')">
                            <b>View In Kanban</b>
                        </label>
                    </td>
                    <td>
                        <CheckBox id="getUniqueDomID('kanban')" value="props.propertyDefinition.view_in_kanban" disabled="props.readonly" onChange.bind="onViewInKanbanChange"/>
                    </td>
                </tr>
            </table>
        </div>
    </t>
<t t-name="web.PropertyDefinitionSelection" owl="1">
        <div class="d-flex flex-column o_field_property_selection" t-ref="propertyDefinitionSelection">
            <div class="w-100">
                <div t-foreach="optionsVisible" t-as="option" t-key="option[0]" class="w-100 card d-flex flex-row align-items-center justify-content-between my-2 px-3 rounded o_field_property_selection_option">
                    <span t-if="props.readonly" t-out="option[1]"/>
                    <input t-else="" class="o_input" type="text" placeholder="Option Name" t-att-value="option[1]" t-on-change="(event) =&gt; this.onOptionChange(event, option_index)" t-on-blur="(event) =&gt; this.onOptionBlur(event, option_index)" t-on-keydown="(event) =&gt; this.onOptionKeyDown(event, option_index)"/>
                    <button class="btn btn-link text-secondary p-0 m-0" title="Select Default" t-on-click="() =&gt; this.onOptionSetDefault(option_index)">
                        <i t-att-class="option[0] === props.default ? 'fa fa-star' : 'fa fa-star-o'"/>
                    </button>
                    <button t-if="!props.readonly" class="btn btn-link p-0 m-0 ms-2" title="Remove Property" t-on-click="() =&gt; this.onOptionDelete(option_index)">
                        <i class="text-danger fa fa-times"/>
                    </button>
                </div>
                <button t-if="!props.readonly" class="btn btn-link btn-sm" t-on-click="onOptionCreate" t-ref="addButton">
                    <i class="fa fa-plus"/>
                    Add a Value
                </button>
            </div>
        </div>
    </t>
<t t-name="web.PropertyTags" owl="1">

        <div t-attf-class="o_field_property_tag o_field_widget o_field_many2many_tags d-flex align-items-center {{props.readonly ? 'readonly' : ''}}">
            <TagsList tags="tagListItems" displayBadge="displayBadge" className="props.canChangeTags ? '' : 'o_field_property_tag_readonly' "/>
            <div t-if="!props.readonly" class="o_field_property_dropdown_menu o_input_dropdown mt-2">
                <AutoComplete id="props.id" value="''" sources="autocompleteSources" onSelect.bind="({value}) =&gt; this.onOptionSelected(value)" resetOnSelect="true"/>
                <a role="button" class="o_dropdown_button" draggable="false"/>
            </div>
        </div>
    </t>
    <t t-name="web.PropertyTagsColorListPopover" owl="1">
        <div class="o_tag_popover m-2">
            <ColorList colors="props.colors" forceExpanded="true" onColorSelected.bind="(id) =&gt; props.switchTagColor(id, props.tag)"/>
        </div>
    </t>
<t t-name="web.PropertyValue" owl="1">
        <t t-if="props.readonly &amp;&amp; !['boolean', 'many2one', 'many2many', 'tags'].includes(props.type)">
            <span t-if="displayValue" t-out="displayValue"/>
        </t>
        <t t-else="">
            <t t-if="props.type === 'boolean'">
                <CheckBox id="props.id" value="propertyValue" disabled="props.readonly" onChange.bind="onValueChange"/>
            </t>
            <t t-elif="props.type === 'datetime'">
                <DateTimePicker inputId="props.id" date="propertyValue" onDateTimeChanged.bind="onValueChange"/>
            </t>
            <t t-elif="props.type === 'date'">
                <DatePicker inputId="props.id" date="propertyValue" onDateTimeChanged.bind="onValueChange"/>
            </t>
            <t t-elif="props.type === 'integer'">
                <input t-att-id="props.id" class="o_input o_field_property_input" type="text" t-att-value="displayValue" t-on-change="(event) =&gt; this.onValueChange(event.target.value)"/>
            </t>
            <t t-elif="props.type === 'float'">
                <input t-att-id="props.id" class="o_input o_field_property_input" type="text" t-att-value="displayValue" t-on-change="(event) =&gt; this.onValueChange(event.target.value)"/>
            </t>
            <t t-elif="props.type === 'selection'">
                <select class="o_input" t-on-change="event =&gt; this.onValueChange(event.target.value)" t-att-id="props.id">
                    <option t-att-value="false"/>
                    <t t-foreach="props.selection || []" t-as="option" t-key="option[0]">
                        <option t-att-selected="option[0] === propertyValue" t-att-value="option[0]" t-out="option[1]"/>
                    </t>
                </select>
            </t>
            <t t-elif="props.type === 'tags'">
                <PropertyTags id="props.id" selectedTags="propertyValue" tags="props.tags || []" deleteAction="'value'" readonly="props.readonly" canChangeTags="props.canChangeDefinition" checkDefinitionWriteAccess.bind="props.checkDefinitionWriteAccess ? props.checkDefinitionWriteAccess : () =&gt; {}" onValueChange.bind="onValueChange" onTagsChange.bind="props.onTagsChange"/>
            </t>
            <div t-elif="props.type === 'many2one'" t-attf-class="d-flex flex-row align-items-center o_field_property_many2one_value {{showAvatar ? 'avatar' : ''}}">
                <t t-if="props.comodel">
                    <t t-set="hasAccess" t-value="!propertyValue || propertyValue[1]"/>
                    <img t-if="showAvatar &amp;&amp; propertyValue[0] &amp;&amp; hasAccess" t-attf-src="/web/image/{{props.comodel}}/{{propertyValue[0]}}/avatar_128" class="rounded-circle me-1"/>
                    <t t-if="props.readonly || !hasAccess">
                        <a t-if="clickableRelational || !hasAccess" t-attf-class="o_form_uri {{propertyValue &amp;&amp; propertyValue[1] ? '' : 'disabled'}}" t-att-href="propertyValue[0] ? \`#id=\${propertyValue[0]}&amp;model=\${props.comodel}\` : '#'" t-on-click.prevent="onMany2oneClick">
                            <t t-if="hasAccess" t-out="propertyValue[1]"/>
                            <t t-else="">No Access</t>
                        </a>
                        <span t-else="" t-out="propertyValue &amp;&amp; propertyValue[1] || ''"/>
                    </t>
                    <Many2XAutocomplete t-else="" t-key="props.id + '_' + props.comodel + '_' + props.string" value="propertyValue[1] || ''" id="props.id" resModel="props.comodel" autoSelect="true" fieldString="props.string" update.bind="onValueChange" context="props.context" getDomain.bind="() =&gt; propertyDomain" quickCreate.bind="onQuickCreate" activeActions="{ create: true, createEdit: true, write: true }"/>
                    <button t-if="!props.readonly &amp;&amp; propertyValue &amp;&amp; propertyValue[0] &amp;&amp; hasAccess" type="button" class="btn btn-secondary fa fa-arrow-right o_external_button o_properties_external_button py-0" tabindex="-1" draggable="false" aria-label="Internal link" data-tooltip="Internal link" t-on-click="onExternalLinkClick"/>
                </t>
            </div>
            <t t-elif="props.type === 'many2many'">
                <div t-if="props.comodel" class="o_field_property_many2many_value d-flex flex-row ms-0 pe-1 w-100 flex-wrap" t-attf-class="o_field_widget o_field_many2many_tags {{showAvatar ? 'avatar' : ''}} {{props.readonly ? 'readonly' : ''}}">

                    <TagsList tags="propertyValue"/>
                    <Many2XAutocomplete t-if="!props.readonly" t-key="props.id + '_' + props.comodel + '_' + props.string" id="props.id" resModel="props.comodel" autoSelect="true" fieldString="props.string" update.bind="onValueChange" context="props.context" getDomain.bind="() =&gt; propertyDomain" quickCreate.bind="onQuickCreate" activeActions="{ create: true, createEdit: true, write: true }" isToMany="true"/>
                </div>
            </t>
            <t t-else="">
                <input class="o_input" t-att-id="props.id" type="text" t-att-value="propertyValue || ''" t-on-change="(event) =&gt; this.onValueChange(event.target.value)"/>
            </t>
        </t>
    </t>
<t t-name="web.RadioField" owl="1">
        <div role="radiogroup" t-attf-class="o_{{ props.orientation }}" t-att-aria-label="string">
            <t t-foreach="items" t-as="item" t-key="item[0]">
                <div class="form-check o_radio_item" aria-atomic="true">
                    <input type="radio" class="form-check-input o_radio_input" t-att-checked="item[0] === value" t-att-disabled="props.readonly" t-att-name="id" t-att-data-value="item[0]" t-att-data-index="item_index" t-att-id="\`\${id}_\${item[0]}\`" t-on-change="() =&gt; this.onChange(item)"/>
                    <label class="form-check-label o_form_label" t-att-for="\`\${id}_\${item[0]}\`" t-esc="item[1]"/>
                </div>
            </t>
        </div>
    </t>

<t t-name="web.ReferenceField" owl="1">
        <div class="o_row">
            <t t-if="!props.readonly and !props.hideModelSelector">
                <select class="o_input" t-att-tabindex="relation ? '-1': 0" t-on-change="(ev) =&gt; this.updateModel(ev.target.value || false)">
                    <option/>
                    <t t-foreach="selection" t-as="option" t-key="option[0]">
                        <option t-att-value="option[0]" t-att-selected="option[0] === relation" t-esc="option[1]"/>
                    </t>
                </select>
            </t>
            <t t-if="relation">
                <Many2OneField t-props="m2oProps"/>
            </t>
        </div>
    </t>

<t t-name="web.X2ManyFieldDialog" owl="1">
    <Dialog title="title" withBodyPadding="false" modalRef="modalRef" contentClass="'o_form_view'">
        <FormRenderer record="record" fields="archInfo.fields" archInfo="archInfo"/>
        <t t-set-slot="footer">
            <t t-if="footerArchInfo">
                <FormRenderer record="record" archInfo="footerArchInfo"/>
            </t>
            <t t-else="">
                <t t-if="record.isInEdition">
                    <t t-if="canCreate">
                        <button class="btn btn-primary o_form_button_save" t-on-click="save" data-hotkey="c">Save &amp; Close</button>
                        <button class="btn btn-primary o_form_button_save_new" t-on-click="saveAndNew" data-hotkey="n">Save &amp; New</button>
                    </t>
                    <t t-else="">
                        <button class="btn btn-primary o_form_button_save" t-on-click="save" data-hotkey="c">Save</button>
                    </t>
                    <button class="btn btn-secondary o_form_button_cancel" t-on-click="discard" data-hotkey="j">Discard</button>

                    <t t-if="props.delete">
                        <button class="btn btn-secondary o_btn_remove" t-on-click="remove" data-hotkey="k">
                            <t t-if="props.deleteButtonLabel" t-out="props.deleteButtonLabel"/>
                            <t t-else="">Remove</t>
                        </button>
                    </t>
                </t>
                <t t-else="">
                    <button class="btn btn-primary o_form_button_cancel" t-on-click="() =&gt; this.props.close()" data-hotkey="j">Close</button>
                </t>
            </t>
        </t>
    </Dialog>
</t>

<t t-name="web.Many2XAutocomplete" owl="1">
    <div class="o_input_dropdown" t-ref="autocomplete_container">
        <input t-if="env.isSmall" type="text" t-att-id="props.id" class="o_input" readonly="" t-att-placeholder="props.placeholder" t-att-value="props.value" t-on-click="onSearchMore" t-on-barcode-search="onBarcodeSearch"/>
        <AutoComplete t-else="" value="props.value" id="props.id" placeholder="props.placeholder" sources="sources" autoSelect="props.autoSelect" onSelect.bind="onSelect" onInput.bind="onInput" onChange.bind="onChange"/>
        <a role="button" class="o_dropdown_button" draggable="false"/>
    </div>
</t>

<t t-name="web.RemainingDaysField" owl="1">
        <t t-if="props.readonly">
            <t t-set="days" t-value="diffDays"/>
            <t t-set="formatted" t-value="formattedValue"/>
            <div t-att-class="{                     'fw-bold': days !== null and days lte 0,                     'text-danger': days !== null and days lt 0,                     'text-warning': days !== null and days === 0,                 }" t-att-title="formatted">
                <t t-esc="diffString"/>
            </div>
        </t>
        <t t-else="">
            <div>
                <t t-component="pickerComponent" date="props.value or false" onDateTimeChanged.bind="onDateTimeChanged"/>
            </div>
        </t>
    </t>

<t t-name="web.SelectionField" owl="1">
        <t t-if="props.readonly">
            <span t-esc="string" t-att-raw-value="value"/>
        </t>
        <t t-else="">
            <select class="o_input pe-3" t-on-change="onChange" t-att-id="props.id">
                <option t-att-selected="false === value" t-att-value="stringify(false)" t-esc="this.props.placeholder || ''" t-attf-style="{{ isRequired ? 'display:none' : '' }}"/>
                <t t-foreach="options" t-as="option" t-key="option[0]">
                    <option t-att-selected="option[0] === value" t-att-value="stringify(option[0])" t-esc="option[1]"/>
                </t>
            </select>
        </t>
    </t>

<t t-name="web.SignatureField" owl="1">
        <t t-if="props.value">
            <img class="o_signature img img-fluid" alt="Binary file" t-att-src="this.getUrl" t-att-name="props.name" t-att-style="sizeStyle" t-on-click="onClickSignature" t-on-error.stop="onLoadFailed"/>
        </t>
        <t t-else="">
            <div class="o_signature o_signature_empty" t-att-style="sizeStyle" t-on-click="onClickSignature">
                <svg t-on-error.stop="onLoadFailed"/>
                <p>SIGNATURE</p>
            </div>
        </t>
    </t>

<t t-name="web.StatInfoField" owl="1">
        <span class="o_stat_info o_stat_value" t-esc="formattedValue"/>
        <span t-if="!props.noLabel" class="o_stat_text" t-esc="label"/>
    </t>

<t t-name="web.StateSelectionField" owl="1">
        <t t-if="isReadonly">
            <button class="d-flex align-items-center btn fw-normal p-0">
                <span t-attf-class="o_status {{ statusColor(currentValue) }} "/>
                <span t-if="showLabel" class="o_status_label ms-1" t-esc="label"/>
            </button>
        </t>
        <t t-else="">
            <Dropdown tooltip="label" togglerClass="'btn btn-link d-flex p-0'">
                <t t-set-slot="toggler">
                    <div class="d-flex align-items-center">
                        <span t-attf-class="o_status {{ statusColor(currentValue) }} "/>
                        <span t-if="showLabel" class="o_status_label ms-1" t-esc="label"/>
                    </div>
                </t>
                <t t-foreach="availableOptions" t-as="option" t-key="option[0]">
                    <DropdownItem onSelected="() =&gt; props.update(option[0], { save: props.autosave })">
                        <div class="d-flex align-items-center">
                            <span t-attf-class="o_status {{ statusColor(option[0]) }} "/>
                            <span class="ms-2" t-esc="option[1]"/>
                        </div>
                    </DropdownItem>
                </t>
            </Dropdown>
        </t>
    </t>

<t t-name="web.StatusBarField" owl="1">
        <div class="o_statusbar_status">
            <t t-set="items" t-value="computeItems()"/>

            <t t-if="items.folded.length">
                <button type="button" class="btn dropdown-toggle text-uppercase" t-att-class="{ 'o_arrow_button': !env.isSmall, 'btn-primary': env.isSmall }">
                    <Dropdown toggler="'parent'">
                        <t t-foreach="items.folded" t-as="item" t-key="item.id">
                            <DropdownItem class="getDropdownItemClassNames(item)" onSelected="() =&gt; this.selectItem(item)">
                                <t t-esc="item.name"/>
                            </DropdownItem>
                        </t>
                    </Dropdown>
                    <t t-if="env.isSmall">
                        <t t-esc="currentName"/>
                    </t>
                    <t t-else="">More</t>
                </button>
            </t>

            <t t-foreach="items.unfolded.reverse()" t-as="item" t-key="item.id">
                <t t-if="item.isSelected">
                    <button type="button" class="btn o_arrow_button_current o_arrow_button disabled text-uppercase" disabled="disabled" role="radio" aria-label="Current state" aria-checked="true" aria-current="step" t-att-disabled="props.isDisabled" t-att-data-value="item.id" t-esc="item.name"/>
                </t>
                <t t-elif="props.isDisabled">
                    <button type="button" class="btn o_arrow_button disabled text-uppercase" disabled="disabled" role="radio" aria-label="Not active state" aria-checked="false" t-att-disabled="props.isDisabled" t-att-data-value="item.id" t-esc="item.name"/>
                </t>
                <t t-else="">
                    <button type="button" class="btn o_arrow_button text-uppercase" role="radio" aria-label="Not active state, click to change it" aria-checked="false" t-att-data-value="item.id" t-esc="item.name" t-on-click="() =&gt; this.selectItem(item)"/>
                </t>
            </t>
        </div>
    </t>

<t t-name="web.TextField" owl="1">
        <t t-if="props.readonly">
            <span t-esc="props.value or ''"/>
        </t>
        <t t-else="">
            <div t-ref="div">
                <textarea class="o_input" t-att-class="{'o_field_translate': props.isTranslatable}" t-att-id="props.id" t-att-placeholder="props.placeholder" t-att-rows="rowCount" t-on-input="onInput" t-ref="textarea"/>
                <t t-if="props.isTranslatable">
                    <TranslationButton fieldName="props.name" record="props.record"/>
                </t>
            </div>
        </t>
    </t>

<t t-name="web.TimezoneMismatchField" owl="1">
        <t t-if="props.readonly">
            <span t-esc="string" t-att-raw-value="value"/>
        </t>
        <t t-else="">
            <select class="o_input pe-3" t-on-change="onChange" t-att-id="props.id">
                <option t-att-selected="false === value" t-att-value="stringify(false)" t-esc="this.props.placeholder || ''" t-attf-style="{{ isRequired ? 'display:none' : '' }}"/>
                <t t-foreach="options" t-as="option" t-key="option[0]">
                    <option t-att-selected="option[0] === value" t-att-value="stringify(option[0])" t-esc="option[1]"/>
                </t>
            </select>
        </t>
            <span t-if="mismatch" class="o_tz_warning fa fa-exclamation-triangle position-static align-self-center m-0 ms-2" t-att-title="mismatchTitle"/>
    </t>

<t t-name="web.TranslationButton" owl="1">
        <t t-if="isMultiLang">
            <span class="o_field_translate btn btn-link" t-on-click.prevent="onClick">
                <t t-esc="lang"/>
            </span>
        </t>
    </t>

<t t-name="web.TranslationDialog" owl="1">
        <Dialog title="title">
            <div class="o_translation_dialog">
                <t t-foreach="terms" t-as="term" t-key="term.id">
                    <div class="row">
                        <div class="col-12" t-att-class="{ o_language_current: term.lang === user.lang }" t-attf-class="col-lg-{{ props.showSource ? 2 : 3 }}">
                            <t t-esc="term.langName"/>
                        </div>
                        <t t-if="props.showSource">
                            <div class="col-12 col-lg-3 source">
                                <t t-esc="term.source"/>
                            </div>
                        </t>
                        <div class="col-12 translation" t-attf-class="col-lg-{{ props.showSource ? 7 : 9 }}">
                            <t t-if="props.isText">
                                <textarea class="o_field_text o_field_translate o_field_widget o_input" t-att-value="term.value" t-att-data-id="term.id" t-att-rows="props.showSource ? 2 : 5" t-on-change="(ev) =&gt; this.updatedTerms[term.id] = ev.target.value"/>
                            </t>
                            <t t-else="">
                                <input type="text" class="o_field_char o_input" t-att-value="term.value" t-att-data-id="term.id" t-on-change="(ev) =&gt; this.updatedTerms[term.id] = ev.target.value"/>
                            </t>
                        </div>
                    </div>
                </t>
            </div>
            <t t-set-slot="footer">
                <button class="btn btn-primary" t-on-click="onSave">Save</button>
                <button class="btn" t-on-click="props.close">Discard</button>
            </t>
        </Dialog>
    </t>

<t t-name="web.UrlField" owl="1">
        <t t-if="props.readonly">
            <a class="o_field_widget o_form_uri" t-on-click.stop="" t-att-href="formattedHref" t-esc="props.text || props.value || ''" target="_blank"/>
        </t>
        <t t-else="">
            <div class="d-inline-flex w-100">
                <input class="o_input" t-att-id="props.id" type="text" t-att-placeholder="props.placeholder" t-att-required="props.required" t-ref="input"/>
            </div>
        </t>
    </t>

    <t t-name="web.FormUrlField" owl="1">
        <t t-if="props.readonly">
            <a class="o_field_widget o_form_uri" t-on-click.stop="" t-att-href="formattedHref" t-esc="props.text || props.value || ''" target="_blank"/>
        </t>
        <t t-else="">
            <div class="d-inline-flex w-100">
                <input class="o_input" t-att-id="props.id" type="text" t-att-placeholder="props.placeholder" t-att-required="props.required" t-ref="input"/>
            <a t-if="props.value" t-att-href="formattedHref" class="ms-3 d-inline-flex align-items-center" target="_blank">
                <i class="fa fa-globe" data-tooltip="Go to URL" aria-label="Go to URL"/>
            </a>
            </div>
        </t>
    </t>

    <t t-name="web.ListX2ManyField" owl="1">
       <t t-esc="formattedValue"/>
    </t>

<t t-name="web.X2ManyField" owl="1">
        <div t-attf-class="o_field_x2many o_field_x2many_{{viewMode}}">
            <div class="o_x2m_control_panel">
                <t t-if="displayAddButton">
                    <div class="o_cp_buttons" role="toolbar" aria-label="Control panel buttons" t-ref="buttons">
                        <div>
                            <button type="button" class="btn btn-secondary o-kanban-button-new" title="Create record" accesskey="c" t-on-click="() =&gt; this.onAdd()">
                                <t t-esc="addButtonText"/>
                            </button>
                        </div>
                    </div>
                </t>
                <div class="o_cp_pager" role="search">
                    <Pager t-if="props.value.count &gt; props.value.limit" t-props="pagerProps"/>
                </div>
            </div>
            <ListRenderer t-if="viewMode === 'list'" t-props="rendererProps"/>
            <KanbanRenderer t-elif="viewMode" t-props="rendererProps"/>
        </div>
    </t>

<t t-name="web.Form.ButtonBox" owl="1">
    <t t-set="allButtons" t-value="getButtons()"/>
    <t t-set="visibleButtons" t-value="allButtons['visible']"/>
    <t t-set="additionalButtons" t-value="allButtons['additional']"/>
    <div class="o-form-buttonbox oe_button_box position-relative text-end" t-attf-class="{{ visibleButtons.length &gt;= getMaxButtons() ? 'o_full' : 'o_not_full'}} {{this.props.class}}">
        <t t-slot="{{ button_value }}" t-foreach="visibleButtons" t-as="button" t-key="button_value"/>
        <t t-if="additionalButtons.length">
            <Dropdown togglerClass="'btn btn-light o_button_more border-0 border-start border-bottom'" menuClass="'o_dropdown_more position-absolute start-0 top-100 w-100 p-0 border-0'" class="'oe_stat_button btn position-relative p-0 border-0'">
                <t t-set-slot="toggler"><span>More</span></t>
                <DropdownItem t-foreach="additionalButtons" t-as="button" t-key="button_value" class="'d-flex flex-column p-0'">
                    <t t-slot="{{ button_value }}"/>
                </DropdownItem>
            </Dropdown>
        </t>
    </div>
</t>

<t t-name="web.FormControlPanel" owl="1">
        <div class="o_control_panel" t-ref="root">
            <div t-if="display['top']" class="o_cp_top" t-att-class="{ 'flex-wrap': env.isSmall }">
                <div class="o_cp_top_left d-flex flex-grow-1 align-items-center" t-att-class="{ 'w-100': env.isSmall }">
                    <t t-if="display['top-left']">
                        <t t-slot="control-panel-breadcrumb">
                            <t t-if="env.isSmall">
                                <t t-call="web.Breadcrumbs.Small" t-if="!env.config.noBreadcrumbs"/>
                            </t>
                            <t t-else="">
                                <t t-call="web.Breadcrumbs" t-if="!env.config.noBreadcrumbs"/>
                            </t>
                        </t>
                    </t>
                </div>
                <div class="o_cp_bottom_right w-auto flex-shrink-0 justify-content-between align-items-center" t-att-class="{ 'flex-grow-1' : env.isSmall }">
                    <t t-if="env.isSmall">
                        <t t-slot="control-panel-status-indicator"/>
                    </t>
                    <t t-slot="control-panel-action-menu" t-if="display['bottom-left']"/>
                    <div t-if="pagerProps and pagerProps.total &gt; 0" class="o_cp_pager" role="search">
                        <Pager t-props="pagerProps"/>
                    </div>
                    <t t-slot="control-panel-create-button"/>
                </div>
            </div>
        </div>
    </t>

<t t-name="web.FormView" owl="1">
        <div t-att-class="className" t-ref="root">
            <div class="o_form_view_container">
                <Layout className="model.useSampleModel ? 'o_view_sample_data' : ''" display="display">
                    <t t-set-slot="layout-buttons">
                        <t t-if="footerArchInfo and env.inDialog">
                            <t t-component="props.Renderer" record="model.root" Compiler="props.Compiler" archInfo="footerArchInfo" enableViewButtons.bind="enableButtons" disableViewButtons.bind="disableButtons"/>
                        </t>
                        <t t-else="">
                            <t t-call="{{ props.buttonTemplate }}"/>
                        </t>
                    </t>
                    <t t-set-slot="control-panel-action-menu">
                        <t t-if="props.info.actionMenus">
                            <ActionMenus getActiveIds="() =&gt; model.root.isVirtual ? [] : [model.root.resId]" context="props.context" items="getActionMenuItems()" isDomainSelected="model.root.isDomainSelected" resModel="model.root.resModel" domain="props.domain" onActionExecuted="() =&gt; model.load({ resId: model.root.resId, resIds: model.root.resIds })" shouldExecuteAction.bind="shouldExecuteAction"/>
                        </t>
                    </t>
                    <t t-set-slot="control-panel-status-indicator">
                        <t t-if="canEdit">
                            <FormStatusIndicator model="model" discard.bind="discard" save.bind="saveButtonClicked" isDisabled="state.isDisabled" fieldIsDirty="state.fieldIsDirty"/>
                        </t>
                    </t>
                    <t t-set-slot="control-panel-create-button">
                        <t t-if="canCreate">
                            <button type="button" class="btn btn-outline-primary o_form_button_create" data-hotkey="c" t-on-click.stop="create" t-att-disabled="state.isDisabled">New</button>
                        </t>
                    </t>
                    <t t-component="props.Renderer" record="model.root" Compiler="props.Compiler" archInfo="archInfo" setFieldAsDirty.bind="setFieldAsDirty" enableViewButtons.bind="enableButtons" disableViewButtons.bind="disableButtons" onNotebookPageChange.bind="onNotebookPageChange" activeNotebookPages="props.state and props.state.activeNotebookPages"/>
                </Layout>
            </div>
        </div>
    </t>

    <t t-name="web.FormView.Buttons" owl="1">
        <div class="o_cp_buttons" role="toolbar" aria-label="Main actions" t-ref="cpButtons">
            <div t-if="model.root.isInEdition" class="o_form_buttons_edit">
                <button type="button" class="btn btn-primary o_form_button_save" data-hotkey="s" t-on-click.stop="() =&gt; this.saveButtonClicked({closable: true})">
                    Save
                </button>
                <button type="button" class="btn btn-secondary o_form_button_cancel" data-hotkey="j" t-on-click.stop="discard">
                    Discard
                </button>
                <button t-if="props.removeRecord" class="btn btn-secondary o_form_button_remove" t-on-click="props.removeRecord" data-hotkey="x">
                    Remove
                </button>
            </div>
            <div t-elif="canCreate" class="o_form_buttons_view">
                <button type="button" class="btn btn-secondary o_form_button_create" data-hotkey="c" t-on-click.stop="create">
                    New
                </button>
            </div>
        </div>
    </t>
<t t-name="web.FormErrorDialog" owl="1">
        <Dialog header="false" size="'md'" contentClass="'o_form_error_dialog'">
            <div role="alert" class="o_dialog_warning">
                <h1 class="text-danger">Oh snap!</h1>
                <p t-esc="message" style="white-space: pre-wrap;"/>
            </div>
            <t t-set-slot="footer">
                <button class="btn btn-primary" t-on-click="stay">Stay here</button>
                <button class="btn btn-secondary" t-on-click="discard">Discard changes</button>
            </t>
        </Dialog>
    </t>

<t t-name="web.Form.OuterGroup" owl="1">
    <div class="o_group row align-items-start" t-attf-class="{{ allClasses }}" t-att-style="props.style">
        <t t-slot="title" t-if="props.slots and props.slots.title"/>
        <t t-foreach="getItems()" t-as="item" t-key="item_index">
            <span class="o_newline" t-if="item.newline"/>
            <t t-slot="{{ item.name }}" className="item.colspan !== props.maxCols ? 'col-lg-' + item.size : ''"/>
        </t>
    </div>
</t>

<t t-name="web.Form.InnerGroup" owl="1">
    <div t-attf-class="{{ allClasses }}" class="o_inner_group grid" t-att-style="props.style">
        <div t-if="props.slots and props.slots.title" t-attf-class="g-col-sm-{{ props.maxCols }}">
            <t t-slot="title"/>
        </div>
        <div t-foreach="getRows()" t-as="row" t-key="row_index" class="o_wrap_field d-flex d-sm-contents flex-column mb-3 mb-sm-0" t-if="row.isVisible">
            <t t-foreach="row" t-as="cell" t-key="cell_index">

                <t t-if="cell.subType === 'item_component'">
                    <t t-call="web.Form.InnerGroup.ItemComponent"><t t-set="cell" t-value="cell"/></t>
                </t>

                <t t-else="">
                    <div class="o_cell flex-grow-1 flex-sm-grow-0" t-attf-style="{{ cell.itemSpan &gt; 1 ? 'grid-column: span ' + cell.itemSpan + ';' : '' }}{{ cell.width ? 'width: ' + cell.width + '%' + ';' : '' }}" t-attf-class="{{ cell.subType === 'label' ? 'o_wrap_label w-100 text-break text-900' : null }}" t-if="cell.isVisible">
                        <t t-slot="{{ cell.name }}"/>
                    </div>
                </t>

            </t>
        </div>
    </div>
</t>

<t t-name="web.Form.InnerGroup.ItemComponent" owl="1">
    <t t-if="cell.props.fieldInfo.FieldComponent.name !== 'BooleanField'">
        <div class="o_cell o_wrap_label flex-grow-1 flex-sm-grow-0 w-100 text-break text-900">
            <t t-component="cell.Component" t-if="cell.isVisible" t-props="cell.props"/>
        </div>
        <div class="o_cell o_wrap_input flex-grow-1 flex-sm-grow-0 text-break" t-attf-style="{{ cell.itemSpan -1 &gt; 1 ? 'grid-column: span ' + (cell.itemSpan -1) + ';' : '' }}{{ cell.width ? 'width: ' + cell.width + '%' + ';' : '' }}">
            <t t-slot="{{ cell.name }}"/>
        </div>
    </t>
    <t t-else="">
        <div class="o_wrap_field_boolean d-flex flex-wrap d-sm-contents flex-sm-nowrap">
            <div class="o_cell o_wrap_label flex-sm-grow-0 text-break text-900">
                <t t-component="cell.Component" t-if="cell.isVisible" t-props="cell.props"/>
            </div>
            <div class="o_cell o_wrap_input order-first flex-sm-grow-0 order-sm-0" t-attf-style="{{ cell.itemSpan -1 &gt; 1 ? 'grid-column: span ' + (cell.itemSpan -1) + ';' : '' }}">
                <t t-slot="{{ cell.name }}"/>
            </div>
        </div>
    </t>
</t>

<t t-name="web.FormLabel" owl="1">
        <label class="o_form_label" t-att-for="props.id" t-att-class="className">
            <t t-esc="props.string"/><sup class="text-info p-1" t-if="hasTooltip" t-att="{'data-tooltip-template': 'web.FieldTooltip', 'data-tooltip-info': tooltipInfo, 'data-tooltip-touch-tap-to-show': 'true'}">?</sup>
        </label>
    </t>

<t t-name="web.FormStatusIndicator" owl="1">
        <div class="o_form_status_indicator d-md-flex ms-md-1" t-att-class="{ o_form_status_indicator_new_record: props.model.root.isVirtual }">
            <div class="o_form_status_indicator_buttons d-flex" t-att-class="{ invisible: !(props.model.root.isVirtual or displayButtons) }">
                <button type="button" class="o_form_button_save btn btn-light py-0" t-att-disabled="props.isDisabled" data-hotkey="s" t-on-click.stop="save" data-tooltip="Save manually" aria-label="Save manually">
                    <i class="fa fa-cloud-upload fa-fw"/>
                </button>
                <button type="button" class="o_form_button_cancel btn btn-light py-0" t-att-disabled="props.isDisabled" data-hotkey="j" t-on-click.stop="discard" data-tooltip="Discard changes" aria-label="Discard changes">
                    <i class="fa fa-undo fa-fw"/>
                </button>
            </div>
            <span t-if="!props.model.root.isVirtual and indicatorMode === 'invalid'" class="text-danger small ms-2" data-tooltip="Correct issues to save, or discard changes">
                <i class="fa fa-warning"/>
                Unable to save
            </span>
        </div>
    </t>
<t t-name="web.StatusBarButtons" owl="1">
        <div class="o_statusbar_buttons d-flex align-items-center align-content-around flex-wrap">
            <t t-set="slots" t-value="visibleSlotNames"/>
            <t t-if="env.isSmall and slots.length &gt; 1">
                <Dropdown togglerClass="'btn btn-primary'" showCaret="true">
                    <t t-set-slot="toggler">Action</t>
                    <t t-foreach="slots" t-as="slot" t-key="slot">
                        <DropdownItem class="'o_statusbar_button_dropdown_item'">
                            <t t-slot="{{ slot }}"/>
                        </DropdownItem>
                    </t>
                </Dropdown>
            </t>
            <t t-else="">
                <t t-foreach="slots" t-as="slot" t-key="slot">
                    <t t-slot="{{ slot }}"/>
                </t>
            </t>
        </div>
    </t>

<t t-name="web.GraphView.Buttons" owl="1">
        <div class="btn-group" role="toolbar" aria-label="Main actions">
            <t t-call="web.ReportViewMeasures">
                <t t-set="measures" t-value="model.metaData.measures"/>
                <t t-set="activeMeasures" t-value="[model.metaData.measure]"/>
            </t>
        </div>
        <div class="btn-group" role="toolbar" aria-label="Change graph">
            <button class="btn btn-light fa fa-bar-chart o_graph_button" data-tooltip="Bar Chart" aria-label="Bar Chart" data-mode="bar" t-on-click="() =&gt; this.onModeSelected('bar')" t-att-class="{ active: model.metaData.mode === 'bar' }"/>
            <button class="btn btn-light fa fa-line-chart o_graph_button" data-tooltip="Line Chart" aria-label="Line Chart" data-mode="line" t-on-click="() =&gt; this.onModeSelected('line')" t-att-class="{ active: model.metaData.mode === 'line' }"/>
            <button class="btn btn-light fa fa-pie-chart o_graph_button" data-tooltip="Pie Chart" aria-label="Pie Chart" data-mode="pie" t-on-click="() =&gt; this.onModeSelected('pie')" t-att-class="{ active: model.metaData.mode === 'pie' }"/>
        </div>
        <div t-if="model.metaData.mode === 'bar'" class="btn-group" role="toolbar" aria-label="Change graph">
            <button class="btn btn-light fa fa-database o_graph_button" data-tooltip="Stacked" aria-label="Stacked" t-on-click="toggleStacked" t-att-class="{ active: model.metaData.stacked }"/>
        </div>
        <div t-if="model.metaData.mode === 'line'" class="btn-group" role="toolbar" aria-label="Change graph">
            <button class="btn btn-light fa fa-database o_graph_button" data-tooltip="Stacked" aria-label="Stacked" t-on-click="toggleStacked" t-att-class="{ active: model.metaData.stacked }"/>
            <button class="btn btn-light fa fa-signal o_graph_button" data-tooltip="Cumulative" aria-label="Cumulative" t-on-click="toggleCumulated" t-att-class="{ active: model.metaData.cumulated }"/>
        </div>
        <div t-if="model.metaData.mode !== 'pie' and model.metaData.domains.length === 1" class="btn-group" role="toolbar" aria-label="Sort graph" name="toggleOrderToolbar">
            <button class="btn btn-light fa fa-sort-amount-desc o_graph_button" data-tooltip="Descending" aria-label="Descending" t-on-click="() =&gt; this.toggleOrder('DESC')" t-att-class="{ active: model.metaData.order === 'DESC' }"/>
            <button class="btn btn-light fa fa-sort-amount-asc o_graph_button" data-tooltip="Ascending" aria-label="Ascending" t-on-click="() =&gt; this.toggleOrder('ASC')" t-att-class="{ active: model.metaData.order === 'ASC' }"/>
        </div>
    </t>

    <t t-name="web.GraphView" owl="1">
        <div t-att-class="props.className" t-ref="root">
            <Layout className="model.useSampleModel ? 'o_view_sample_data' : ''" display="props.display">
                <t t-set-slot="layout-buttons">
                    <t t-call="{{ props.buttonTemplate }}"/>
                </t>
                <t t-if="model.data">
                    <t t-if="model.useSampleModel and props.info.noContentHelp" t-call="web.ActionHelper">
                        <t t-set="noContentHelp" t-value="props.info.noContentHelp"/>
                    </t>
                    <t t-component="props.Renderer" model="model" onGraphClicked.bind="onGraphClicked"/>
                </t>
                <t t-else="" t-call="web.NoContentHelper">
                    <t t-set="title">Invalid data</t>
                    <t t-set="description">Pie chart cannot mix positive and negative numbers. Try to change your domain to only display positive results</t>
                </t>
            </Layout>
        </div>
    </t>

<t t-name="web.GraphRenderer.CustomTooltip" owl="1">
        <div class="o_graph_custom_tooltip popover show p-2 pe-none mw-100">
            <table class="overflow-hidden m-0">
                <thead>
                    <tr>
                        <th class="o_measure align-baseline border-0" t-esc="measure"/>
                    </tr>
                </thead>
                <tbody>
                    <tr t-foreach="tooltipItems" t-as="tooltipItem" t-key="tooltipItem_index">
                        <td>
                            <span class="o_square badge p-2 rounded-0 align-middle me-2" t-attf-style="background-color: {{ tooltipItem.boxColor }}"> </span>
                            <span class="o_label text-truncate d-inline-block align-middle" t-attf-style="max-width: {{ maxWidth }}" t-esc="tooltipItem.label"/>
                        </td>
                        <td class="o_value ps-2 text-end fw-bolder">
                            <t t-esc="tooltipItem.value"/>
                            <t t-if="mode === 'pie' and tooltipItem.percentage">
                                (<t t-esc="tooltipItem.percentage"/>%)
                            </t>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </t>

    <t t-name="web.GraphRenderer" owl="1">
        <div t-att-class="'o_graph_renderer o_renderer h-100 ' + props.class" t-ref="root">
            <div class="o_graph_canvas_container h-100 position-relative" t-ref="container">
                <canvas t-ref="canvas"/>
            </div>
        </div>
    </t>

<t t-name="web.KanbanAnimatedNumber" owl="1">
        <div class="o_kanban_counter_side ms-2 text-900 text-nowrap" t-att-class="state.value !== props.value and props.animationClass" t-att-title="props.title">
            <t t-slot="prefix"/>
            <span t-if="props.currency and props.currency.position === 'before'" t-esc="props.currency.symbol" class="ms-1"/>
            <b t-esc="format(state.value)"/>
            <span t-if="props.currency and props.currency.position === 'after'" t-esc="props.currency.symbol" class="ms-1"/>
        </div>
    </t>

<t t-name="web.KanbanExamplesNotebookTemplate" owl="1">
        <div t-if="props.description" class="o_kanban_examples_description" t-out="props.description"/>
        <div class="o_kanban_examples d-flex p-2">
            <t t-foreach="columns" t-as="column" t-key="column.title">
                <div class="o_kanban_examples_group flex-grow-1 m-3">
                    <h6><b t-esc="column.title"/></h6>
                    <div t-foreach="column.records" t-as="record" t-key="record.id" class="o_kanban_examples_ghost p-2 border bg-white" t-att-class="{ 'o_collapse': record_index &gt; 0 }">
                        <div class="o_ghost_content pb-3 bg-300"/>
                        <div class="o_ghost_content o_ghost_tag d-inline-block w-50 mt-3 pb-3 bg-300"/>
                        <span class="ms-2" t-if="record.bullet" t-out="record.bullet"/>
                    </div>
                </div>
            </t>
        </div>
    </t>


    <t t-name="web.KanbanColumnExamplesDialog" owl="1">
        <Dialog contentClass="'o_kanban_examples_dialog'" title="this.constructor.title">
            <Notebook orientation="'vertical'" pages="pages" onPageUpdate.bind="onPageUpdate"/>
            <t t-set-slot="footer">
                <button class="btn btn-primary" t-on-click="applyExamples" t-esc="props.applyExamplesText"/>
                <button class="btn btn-secondary" t-on-click="props.close">Close</button>
            </t>
        </Dialog>
    </t>

<t t-name="web.KanbanColumnQuickCreate" owl="1">
        <div class="o_column_quick_create flex-shrink-0 flex-grow-1 flex-md-grow-0" t-ref="root">
            <div t-if="props.folded" class="o_quick_create_folded m-3 text-nowrap fw-bold opacity-75 opacity-100-hover" t-on-click="unfold">
                <button class="o_kanban_add_column btn btn-outline-secondary w-100">
                    <i class="fa fa-plus me-2" role="img" aria-label="Add column" title="Add column"/><t t-out="relatedFieldName"/>
                </button>
            </div>
            <div t-else="" class="o_quick_create_unfolded pt-3 px-2 pb-2">
                <div class="o_kanban_header top-0 pb-3">
                    <div class="input-group">
                        <input type="text" class="form-control o_input bg-transparent fs-4" t-attf-placeholder="{{ relatedFieldName }}..." t-ref="autofocus" t-model.trim="state.columnTitle" t-on-focus="() =&gt; state.hasInputFocused = true" t-on-blur="() =&gt; state.hasInputFocused = false"/>
                        <span class="input-group-append">
                            <button class="btn btn-primary o_kanban_add" type="button" t-on-click="validate">
                                Add
                            </button>
                        </span>
                    </div>
                    <small t-if="!env.isSmall and state.hasInputFocused" class="o_discard_msg text-muted float-end">
                        Esc to discard
                    </small>
                    <t t-if="canShowExamples and !env.isSmall">
                        <button type="button" class="btn btn-link o_kanban_examples p-0" t-on-click="showExamples">See examples</button>
                    </t>
                </div>
                <div t-foreach="[,,,]" t-as="i" t-key="i_index" class="o_kanban_muted_record mt-3 py-5 bg-300"/>
            </div>
        </div>
    </t>

<t t-name="web.KanbanView" owl="1">
        <div t-att-class="className" t-ref="root">
            <Layout className="model.useSampleModel ? 'o_view_sample_data' : ''" display="props.display">
                <t t-set-slot="layout-buttons">
                    <t t-call="{{ props.buttonTemplate }}"/>
                </t>
                <t t-component="props.Renderer" list="model.root" archInfo="props.archInfo" Compiler="props.Compiler" readonly="true" forceGlobalClick="props.forceGlobalClick" openRecord.bind="openRecord" noContentHelp="props.info.noContentHelp"/>

            </Layout>
        </div>
    </t>

    <t t-name="web.KanbanView.Buttons" owl="1">
        <div t-if="props.showButtons" class="o_cp_buttons d-flex align-items-baseline" role="toolbar" aria-label="Main actions">
            <t t-if="canCreate">
                <button type="button" class="btn btn-primary o-kanban-button-new" accesskey="c" t-on-click="() =&gt; this.createRecord(null)" data-bounce-button="">
                    New
                </button>
            </t>
        </div>
    </t>

<t t-name="web.KanbanCoverImageDialog" owl="1">
        <Dialog title="'Set a Cover Image'" size="'lg'">
            <div t-if="attachments.length" class="o_kanban_cover_container bg-100">
                <t t-foreach="attachments" t-as="attachment" t-key="attachment.id">
                    <div class="o_kanban_cover_image position-relative d-inline-block m-2 border bg-white o_cursor_pointer" t-att-class="{                         'o_selected border-primary': state.selectedAttachmentId === attachment.id,                     }">
                        <img t-attf-src="/web/image/{{attachment.id}}?unique=1" class="position-absolute start-0 end-0 top-0 bottom-0 mw-100 mh-100 m-auto" alt="Attachment" t-on-click="() =&gt; this.selectAttachment(attachment, false)" t-on-dblclick="() =&gt; this.selectAttachment(attachment, true)"/>
                    </div>
                </t>
            </div>
            <t t-else="">There is no available image to be set as cover.</t>
            <FileInput t-if="state.selectFile" acceptedFileExtensions="'image/*'" autoOpen="true" hidden="true" onUpload.bind="onUpload" resModel="props.record.resModel" resId="props.record.resId"/>
            <t t-set-slot="footer" t-slot-scope="dialog">
                <button t-if="attachments.length" class="btn btn-primary" t-on-click="setCover" t-att-disabled="!state.selectedAttachmentId">
                    Select
                </button>
                <button class="btn btn-primary" t-on-click="uploadImage">
                    Upload and Set
                </button>
                <button t-if="coverId" class="btn btn-secondary" t-on-click="removeCover">
                    Remove Cover Image
                </button>
                <button class="btn btn-secondary" t-on-click="dialog.close">
                    Discard
                </button>
            </t>
        </Dialog>
    </t>

<t t-name="web.KanbanRecord" owl="1">
        <div role="article" t-att-class="getRecordClasses()" t-att-data-id="props.canResequence and props.record.id" t-att-tabindex="props.record.model.useSampleModel ? -1 : 0" t-on-click="onGlobalClick" t-ref="root">
            <t t-call="{{ templates[this.constructor.KANBAN_BOX_ATTRIBUTE] }}"/>
        </div>
    </t>
<t t-name="web.KanbanRecordQuickCreate" owl="1">
        <div class="o_kanban_quick_create o_field_highlight shadow" t-att-class="{ o_disabled: state.disabled, 'w-100 mx-0': props.listIsGrouped }" t-ref="root">
            <FormRenderer class="'o_form_view o_xxs_form_view p-0'" record="props.record" archInfo="props.archInfo"/>
            <div class="d-flex flex-wrap justify-content-end gap-1">
                <button class="btn btn-primary o_kanban_add me-1" t-on-click="() =&gt; this.validate('add')">
                    Add
                </button>
                <button class="btn btn-primary o_kanban_edit me-1" t-on-click="() =&gt; this.validate('edit')">
                    Edit
                </button>
                <span class="flex-grow-1"/>
                <button class="btn btn-secondary o_kanban_cancel text-600" t-on-click="() =&gt; this.cancel(true)">
                    <i class="fa fa-trash"/>
                </button>
            </div>
        </div>
    </t>

<t t-name="web.KanbanRenderer" owl="1">
        <div class="o_kanban_renderer o_renderer d-flex" t-attf-class="{{ props.list.isGrouped ? 'o_kanban_grouped align-content-stretch' : 'o_kanban_ungrouped align-content-start flex-wrap justify-content-start' }} {{ props.archInfo.className or '' }}" t-ref="root">
            <t t-foreach="getGroupsOrRecords()" t-as="groupOrRecord" t-key="groupOrRecord.key">
                <t t-if="groupOrRecord.group">
                    <t t-set="group" t-value="groupOrRecord.group"/>
                    <div class="o_kanban_group flex-shrink-0 flex-grow-1 flex-md-grow-0" t-att-class="getGroupClasses(group)" t-att-data-id="(canResequenceRecords or canResequenceGroups) and group.id" t-on-click="(ev) =&gt; this.onGroupClick(group, ev)">
                        <div class="o_kanban_header top-0" t-attf-class="{{ !env.isSmall and group.isFolded ? 'pt-3' : 'py-3' }}">
                            <div class="o_kanban_header_title position-relative d-flex align-items-center lh-lg text-900">
                                <span t-att="tooltipAttributes(group)" class="o_column_title flex-grow-1 d-inline-block mw-100 text-truncate fs-4 fw-bold align-top" t-att-class="{ 'overflow-visible': !env.isSmall and group.isFolded }" t-esc="getGroupName(group)"/>
                                <t t-if="env.isSmall or !group.isFolded">
                                    <Dropdown class="'o_kanban_config'" togglerClass="'btn p-0 border-0'">
                                        <t t-set-slot="toggler">
                                            <i class="fa fa-gear fa-stack d-block text-center text-700 small opacity-50 opacity-100-hover cursor-pointer" role="img" aria-label="Settings" title="Settings"/>
                                        </t>
                                        <DropdownItem t-if="!env.isSmall" class="{                                                 'o_kanban_toggle_fold': true,                                                 'disabled': props.list.model.useSampleModel,                                             }" onSelected="() =&gt; this.toggleGroup(group)">
                                            Fold
                                        </DropdownItem>
                                        <t t-if="canEditGroup(group)">
                                            <DropdownItem class="'o_column_edit'" onSelected="() =&gt; this.editGroup(group)">
                                                Edit Stage
                                            </DropdownItem>
                                        </t>
                                        <t t-if="canDeleteGroup(group)">
                                            <DropdownItem class="'o_column_delete'" onSelected="() =&gt; this.deleteGroup(group)">
                                                Delete
                                            </DropdownItem>
                                        </t>
                                        <t t-if="canArchiveGroup(group)">
                                            <DropdownItem class="'o_column_archive_records'" onSelected="() =&gt; this.archiveGroup(group)">
                                                Archive All
                                            </DropdownItem>
                                            <DropdownItem class="'o_column_unarchive_records'" onSelected="() =&gt; this.unarchiveGroup(group)">
                                                Unarchive All
                                            </DropdownItem>
                                        </t>
                                    </Dropdown>
                                    <button t-if="canQuickCreate()" class="o_kanban_quick_add btn p-0 border-0 fs-6 shadow-none" t-on-click="() =&gt; this.quickCreate(group)">
                                        <i class="fa fa-plus fa-stack d-block small text-end text-700 opacity-50 opacity-100-hover cursor-pointer" role="img" aria-label="Quick add" title="Quick add"/>
                                    </button>
                                </t>
                                <button t-else="" class="o_column_unfold btn btn-link d-block mt-0 mt-md-2 p-0 border-0 small text-center text-700 cursor-pointer">
                                    <i class="fa fa-arrows-h" role="img" aria-label="Unfold" title="Unfold"/>
                                </button>
                            </div>
                            <div t-if="(env.isSmall or !group.isFolded) and group.progressBars.length" class="o_kanban_counter position-relative d-flex align-items-center justify-content-between" t-att-class="{ 'opacity-25': !group.count }">
                                <div class="o_kanban_counter_progress progress w-75 bg-300">
                                    <t t-set="maxWidth" t-value="100 - Math.max(0, group.progressBars.filter(x =&gt; x.count &gt; 0).length - 1) * 5"/>
                                    <t t-foreach="group.progressBars" t-as="progressBar" t-key="progressBar.value">
                                        <t t-set="progressWidth" t-value="Math.max(5, progressBar.count / (group.count or 1) * 100)"/>
                                        <div t-if="progressBar.count" role="progressbar" class="progress-bar o_bar_has_records cursor-pointer" t-att-class="{ 'progress-bar-animated progress-bar-striped': group.progressValue.active === progressBar.value, 'border border-white': !group.isFolded and group.hasActiveProgressValue }" t-attf-class="bg-{{ progressBar.color }}" t-attf-style="width: {{ Math.min(progressWidth, maxWidth) }}%;;" aria-valuemin="0" t-att-aria-valuemax="group.count" t-att-aria-valuenow="progressBar.count" t-attf-data-tooltip="{{ progressBar.count }} {{ progressBar.string }}" data-tooltip-delay="0" t-on-click="() =&gt; group.filterProgressValue(progressBar.value)"/>
                                    </t>
                                </div>
                                <t t-set="aggregate" t-value="getGroupAggregate(group)"/>
                                <KanbanAnimatedNumber value="aggregate.value" title="aggregate.title" duration="1000" currency="aggregate.currency" animationClass="aggregate.value &gt; 999 ? 'o_kanban_grow' : 'o_kanban_grow_huge'"/>
                            </div>
                        </div>
                        <t t-if="!group.isFolded">
                            <t t-if="props.list.quickCreateInfo and group.quickCreateRecord">
                                <KanbanRecordQuickCreate record="group.quickCreateRecord" archInfo="props.list.quickCreateInfo" onCancel="force =&gt; group.cancelQuickCreate(force)" onValidate="mode =&gt; this.validateQuickCreate(mode, group)" listIsGrouped="props.list.isGrouped"/>
                            </t>
                            <t t-foreach="group.list.records" t-as="record" t-key="record.id">
                                <KanbanRecord archInfo="props.archInfo" Compiler="props.Compiler" canResequence="canResequenceRecords" forceGlobalClick="props.forceGlobalClick" group="group" list="props.list" openRecord="props.openRecord" readonly="props.readonly" record="record" templates="props.archInfo.templateDocs"/>
                            </t>
                            <t t-set="unloadedCount" t-value="getGroupUnloadedCount(group)"/>
                            <div t-if="unloadedCount &gt; 0" class="o_kanban_load_more">
                                <button class="btn btn-outline-primary w-100 mt-4" t-on-click="() =&gt; this.loadMore(group)">Load more... (<t t-out="unloadedCount"/> remaining)</button>
                            </div>
                        </t>
                        <t t-elif="env.isSmall">
                            <t t-set="unloadedCount" t-value="getGroupUnloadedCount(group)"/>
                            <div t-if="unloadedCount &gt; 0" class="o_kanban_load_more">
                                <button class="btn btn-outline-primary w-100 mt-4" t-on-click="() =&gt; this.toggleGroup(group)">Load more... (<t t-out="unloadedCount"/> remaining)</button>
                            </div>
                        </t>
                    </div>
                </t>
                <t t-else="">
                    <KanbanRecord archInfo="props.archInfo" Compiler="props.Compiler" canResequence="canResequenceRecords" forceGlobalClick="props.forceGlobalClick" list="props.list" openRecord="props.openRecord" readonly="props.readonly" record="groupOrRecord.record" templates="props.archInfo.templateDocs"/>
                </t>
            </t>
            <t t-if="props.list.isGrouped">
                <t t-if="canCreateGroup()">
                    <KanbanColumnQuickCreate folded="state.columnQuickCreateIsFolded" onFoldChange="folded =&gt; state.columnQuickCreateIsFolded = props.list.groups.length &gt; 0 and folded" onValidate="name =&gt; props.list.createGroup(name)" exampleData="exampleData" groupByField="props.list.groupByField"/>

                    <div t-if="props.list.groups.length === 0" class="o_kanban_example_background_container d-flex opacity-50">
                        <div class="o_kanban_example_background flex-grow-1">
                            <div class="o_kanban_examples d-flex p-2">
                                <div t-foreach="ghostColumns" t-as="column" t-key="column.name" class="o_kanban_examples_group flex-grow-1 m-3">
                                    <h6><b t-esc="column.name"/></h6>
                                    <div t-foreach="column.cards" t-as="card" t-key="card_index" class="o_kanban_examples_ghost d-flex flex-wrap justify-content-between mb-3 p-2 border bg-white">
                                        <div class="o_ghost_content w-100 pb-3 bg-300"/>
                                        <div class="o_ghost_content o_ghost_tag d-inline-block w-50 mt-3 pb-3 bg-300"/>
                                        <span class="mt-2 rounded-circle bg-300">
                                            <img class="o_ghost_avatar" src="/base/static/img/avatar.png" alt="Avatar"/>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </t>
            </t>
            <t t-else="">

                <div t-foreach="[,,,,,,]" t-as="i" t-key="i_index" class="o_kanban_record o_kanban_ghost flex-grow-1 flex-md-shrink-1 flex-shrink-0 my-0"/>
            </t>
            <t t-if="showNoContentHelper">
                <t t-if="props.noContentHelp" t-call="web.ActionHelper">
                    <t t-set="noContentHelp" t-value="props.noContentHelp"/>
                </t>
                <t t-else="" t-call="web.NoContentHelper"/>
            </t>
        </div>
    </t>

    <t t-name="web.KanbanColorPicker" owl="1">
        <ul class="oe_kanban_colorpicker">
            <t t-foreach="props.colors" t-as="color" t-key="color">
                <li role="menuitem" t-on-click="() =&gt; this.selectColor(color_index)" t-att-title="color" t-att-aria-label="color">
                    <a href="#" t-attf-class="oe_kanban_color_{{ color_index }}"/>
                </li>
            </t>
        </ul>
    </t>

    <t t-name="web.KanbanGroupTooltip" owl="1">
        <div>
            <t t-foreach="entries" t-as="entry" t-key="entry_index">
                <t t-esc="entry.title"/>
                <br/>
                <t t-esc="entry.value"/>
                <br t-if="!field_last"/>
            </t>
        </div>
    </t>

    <t t-name="web.KanbanDropdownMenuWrapper" owl="1">
        <div t-on-click="onClick" style="display:contents">
            <t t-slot="default"/>
        </div>
    </t>

<t t-name="web.ListView.ConfirmationModal" owl="1">
        <Dialog size="'md'" title="props.title">
            <main role="alert">
                <p>
                    <t t-if="props.isDomainSelected">This update will only consider the records of the current page.<br/><br/></t>
                    <t t-if="props.nbRecords != props.nbValidRecords">
                        Among the <t t-esc="props.nbRecords"/> selected records,
                        <t t-esc="props.nbValidRecords"/> are valid for this update.<br/>
                    </t>
                    Are you sure you want to perform the following update on those <t t-esc="props.nbValidRecords"/> records ?
                </p>
                <div class="table-responsive">
                    <table class="o_modal_changes">
                        <tbody>
                            <t t-foreach="props.fields" t-as="field" t-key="field_index">
                                <tr>
                                    <td>Field:</td>
                                    <td><t t-esc="field.label"/></td>
                                </tr>
                                <tr>
                                    <td>Update to:</td>
                                    <td style="pointer-events: none;">
                                        <Field name="field.name" record="props.record" type="field.widget" readonly="true" fieldInfo="props.fieldNodes[field.name]"/>
                                    </td>
                                </tr>
                            </t>
                        </tbody>
                    </table>
                </div>
            </main>
            <t t-set-slot="footer" owl="1">
                <button class="btn btn-primary" t-on-click="_confirm" t-ref="autofocus">
                Ok
                </button>
                <button t-if="props.cancel" class="btn btn-secondary" t-on-click="_cancel">
                Cancel
                </button>
            </t>
        </Dialog>
    </t>

<t t-name="web.ListView" owl="1">
        <div t-att-class="className" t-ref="root">
            <Layout className="model.useSampleModel ? 'o_view_sample_data' : ''" display="display">
                <t t-set-slot="layout-buttons">
                    <t t-if="env.isSmall and nbSelected">
                        <t t-call="web.ListView.Selection"/>
                    </t>
                    <t t-else="">
                        <div class="o_cp_buttons" role="toolbar" aria-label="Control panel buttons" t-ref="buttons">
                            <t t-call="{{ props.buttonTemplate }}"/>
                        </div>
                    </t>
                </t>
                <t t-set-slot="control-panel-bottom-left">
                    <t t-if="props.info.actionMenus and model.root.selection.length">
                        <ActionMenus getActiveIds="() =&gt; model.root.selection.map((r) =&gt; r.resId)" context="props.context" domain="props.domain" items="getActionMenuItems()" isDomainSelected="model.root.isDomainSelected" resModel="model.root.resModel" onActionExecuted="() =&gt; model.load()"/>
                    </t>
                </t>
                <t t-component="props.Renderer" list="model.root" activeActions="activeActions" archInfo="archInfo" allowSelectors="props.allowSelectors" editable="editable" openRecord.bind="openRecord" noContentHelp="props.info.noContentHelp" onAdd.bind="createRecord"/>
            </Layout>
        </div>
    </t>

    <t t-name="web.ListView.Buttons" owl="1">
        <div class="o_list_buttons d-flex" role="toolbar" aria-label="Main actions">
            <t t-if="props.showButtons">
                <t t-if="model.root.editedRecord">
                    <button type="button" class="btn btn-primary o_list_button_save" data-hotkey="s" t-on-click.stop="onClickSave">
                        Save
                    </button>
                    <button type="button" class="btn btn-secondary o_list_button_discard" data-hotkey="j" t-on-click="onClickDiscard" t-on-mousedown="onMouseDownDiscard">
                        Discard
                    </button>
                </t>
                <t t-elif="activeActions.create">
                    <button type="button" class="btn btn-primary o_list_button_add" data-hotkey="c" t-on-click="onClickCreate" data-bounce-button="">
                        New
                    </button>
                </t>
                <t t-if="nbTotal and !nbSelected and activeActions.exportXlsx and isExportEnable and !env.isSmall">
                    <button type="button" class="btn btn-secondary fa fa-download o_list_export_xlsx" data-tooltip="Export All" aria-label="Export All" t-on-click="onDirectExportData"/>
                </t>
            </t>
            <t t-if="nbSelected">
                <t t-foreach="archInfo.headerButtons" t-as="button" t-key="button.id">
                    <ListViewHeaderButton list="model.root" clickParams="button.clickParams" defaultRank="button.defaultRank" domain="props.domain" icon="button.icon" string="button.string" title="button.title"/>
                </t>
                <t t-if="!env.isSmall">
                    <t t-call="web.ListView.Selection"/>
                </t>
            </t>
        </div>
    </t>

    <t t-name="web.ListView.Selection" owl="1">
        <div class="o_list_selection_box alert alert-info d-inline-flex align-items-center ps-0 px-lg-2 py-0 mb-0 ms-0 ms-md-2" role="alert">
            <t t-if="env.isSmall">
                <button class="btn btn-link py-0 o_discard_selection" t-on-click="discardSelection">
                    <span class="fa-2x">×</span>
                </button>
            </t>
            <span t-if="isDomainSelected">All <span class="font-monospace" t-esc="nbTotal"/> selected</span>
            <t t-else="">
                <span class="font-monospace me-1" t-esc="nbSelected"/> selected
                <a t-if="isPageSelected and nbTotal &gt; nbSelected" href="#" class="o_list_select_domain ms-2 btn btn-sm btn-info px-2 py-1 border-0 fw-normal" t-on-click="onSelectDomain">
                    <i class="fa fa-arrow-right"/> Select all <span class="font-monospace" t-esc="nbTotal"/>
                </a>
            </t>
        </div>
    </t>

<t t-name="web.ListRenderer" owl="1">
        <div class="o_list_renderer o_renderer table-responsive" t-attf-class="{{ props.archInfo.className or '' }}" tabindex="-1" t-ref="root">
            <t t-if="showNoContentHelper" t-call="web.ActionHelper">
                <t t-set="noContentHelp" t-value="props.noContentHelp"/>
            </t>
            <table t-attf-class="o_list_table table table-sm table-hover position-relative mb-0 {{props.list.isGrouped ? 'o_list_table_grouped' : 'o_list_table_ungrouped table-striped'}}" t-ref="table">
                <thead>
                    <tr>
                        <th t-if="hasSelectors" class="o_list_record_selector o_list_controller align-middle pe-1 cursor-pointer" tabindex="-1" t-on-keydown.synthetic="(ev) =&gt; this.onCellKeydown(ev)" t-on-click.stop="toggleSelection">
                            <CheckBox disabled="!canSelectRecord" value="selectAll" className="'d-flex'" onChange.bind="toggleSelection"/>
                        </th>
                        <t t-foreach="state.columns" t-as="column" t-key="column.id">
                            <th t-if="column.type === 'field'" t-att-data-name="column.name" t-att-class="getColumnClass(column) + ' opacity-trigger-hover'" t-on-mouseenter="ev =&gt; this.onHoverSortColumn(ev, column)" t-on-mouseleave="ev =&gt; this.onHoverSortColumn(ev, column)" t-on-mouseup="onColumnTitleMouseUp" t-on-click="() =&gt; this.onClickSortColumn(column)" t-on-keydown.synthetic="(ev) =&gt; this.onCellKeydown(ev)" t-att-data-tooltip-template="isDebugMode ? 'web.FieldTooltip' : false" t-att-data-tooltip-info="isDebugMode ? makeTooltip(column) : false" data-tooltip-delay="1000" tabindex="-1">
                                <t t-if="column.hasLabel and column.widget !== 'handle'">
                                <t t-set="isNumeric" t-value="isNumericColumn(column)"/>
                                    <div t-att-class="{'d-flex': true, 'flex-row-reverse': shouldReverseHeader(column)}">
                                        <span class="d-block min-w-0 text-truncate flex-grow-1" t-att-class="isNumeric ? 'o_list_number_th' : ''" t-esc="column.label"/>
                                        <i t-att-class="getSortableIconClass(column)"/>
                                    </div>
                                    <span t-if="!isEmpty" class="o_resize position-absolute top-0 end-0 bottom-0 ps-1 bg-black-25 opacity-0 opacity-50-hover z-index-1" t-on-mousedown.stop.prevent="onStartResize"/>
                                </t>
                            </th>
                            <th t-else="" t-on-keydown.synthetic="(ev) =&gt; this.onCellKeydown(ev)" t-att-class="{o_list_button: column.type === 'button_group'}"/>
                        </t>
                        <th t-if="displayOptionalFields or activeActions.onDelete" t-on-keydown.synthetic="(ev) =&gt; this.onCellKeydown(ev)" class="o_list_controller o_list_actions_header" style="width: 32px; min-width: 32px">
                            <Dropdown t-if="displayOptionalFields" class="'o_optional_columns_dropdown text-center border-top-0'" togglerClass="'btn p-0'" skipTogglerTabbing="true" position="'bottom-end'">
                                <t t-set-slot="toggler">
                                    <i class="o_optional_columns_dropdown_toggle oi oi-fw oi-settings-adjust"/>
                                </t>

                                <t t-foreach="getOptionalFields" t-as="field" t-key="field_index">
                                    <DropdownItem parentClosingMode="'none'" onSelected="() =&gt; this.toggleOptionalField(field.name)">
                                        <CheckBox onChange="() =&gt; this.toggleOptionalField(field.name)" value="field.value" name="field.name">
                                            <t t-esc="field.label"/> <t t-if="env.debug" t-esc="' (' + field.name + ')'"/>
                                        </CheckBox>
                                    </DropdownItem>
                                </t>
                            </Dropdown>
                        </th>
                    </tr>
                </thead>
                <tbody class="ui-sortable">
                    <t t-call="{{ constructor.rowsTemplate }}">
                        <t t-set="list" t-value="props.list"/>
                    </t>
                </tbody>
                <tfoot t-on-click="() =&gt; props.list.unselectRecord(true)" class="o_list_footer cursor-default" t-att-class="{o_sample_data_disabled: props.list.model.useSampleModel}">
                    <tr>
                        <td t-if="hasSelectors"/>
                        <t t-foreach="state.columns" t-as="column" t-key="column.id">
                            <t t-set="aggregate" t-value="aggregates[column.name]"/>
                            <td t-if="aggregate" class="o_list_number" t-att-data-tooltip="aggregate.help">
                                <t t-esc="aggregate.value"/>
                            </td>
                            <td t-else=""/>
                        </t>
                        <td t-if="displayOptionalFields or activeActions.onDelete"/>
                    </tr>
                </tfoot>
            </table>
        </div>
    </t>

    <t t-name="web.ListRenderer.Rows" owl="1">
        <t t-if="!list.isGrouped">
            <t t-foreach="list.records" t-as="record" t-key="record.id">
                <t t-call="{{ constructor.recordRowTemplate }}"/>
            </t>
            <tr t-if="displayRowCreates">
                <td t-if="withHandleColumn"/>
                <td t-att-colspan="withHandleColumn ? nbCols - 1 : nbCols" class="o_field_x2many_list_row_add" t-on-keydown.synthetic="(ev) =&gt; this.onCellKeydown(ev, null)">
                    <t t-foreach="creates" t-as="create" t-key="create_index">
                        <a t-if="create.type === 'create'" href="#" role="button" t-att-class="create_index !== 0 ? 'ml16' : ''" t-att-tabindex="props.list.editedRecord ? '-1' : '0'" t-on-click.stop.prevent="() =&gt; this.add({ context: create.context })">
                            <t t-esc="create.string"/>
                        </a>
                        <ViewButton t-if="create.type === 'button'" className="\`\${create.className} \${create_index !== 0 ? 'ml16' : ''}\`" clickParams="create.clickParams" icon="create.icon" record="props.list" string="create.string" title="create.title" tabindex="props.list.editedRecord ? '-1' : '0'"/>
                    </t>
                </td>
            </tr>
            <t t-if="!props.list.isGrouped">
                <tr t-foreach="getEmptyRowIds" t-as="emptyRowId" t-key="emptyRowId">
                    <td t-att-colspan="nbCols">​</td>
                </tr>
            </t>
        </t>
        <t t-else="">
            <t t-foreach="list.groups" t-as="group" t-key="group.id">
                <t t-call="{{ constructor.groupRowTemplate }}"/>
                <t t-if="!group.isFolded">
                    <t t-call="{{ constructor.rowsTemplate }}">
                        <t t-set="list" t-value="group.list"/>
                    </t>
                    <tr t-if="!group.list.isGrouped and props.editable and canCreate">
                        <td t-if="hasSelectors"/>
                        <td t-att-colspan="hasSelector ? nbCols - 1 : nbCols" class="o_group_field_row_add">
                            <a href="#" role="button" t-on-click.stop.prevent="() =&gt; group.createRecord({}, props.editable === 'top')" t-on-keydown.synthetic="(ev) =&gt; this.onCellKeydown(ev)">
                                Add a line
                            </a>
                        </td>
                    </tr>
                </t>
            </t>
        </t>
    </t>

    <t t-name="web.ListRenderer.GroupRow" owl="1">
        <tr t-attf-class="{{group.count &gt; 0 ? 'o_group_has_content' : ''}} o_group_header {{!group.isFolded ? 'o_group_open' : ''}} cursor-pointer" t-on-click="() =&gt; this.toggleGroup(group)">
            <th t-on-keydown.synthetic="(ev) =&gt; this.onCellKeydown(ev, group)" tabindex="-1" t-attf-class="o_group_name fs-6 fw-bold {{!group.isFolded ? 'text-900' : 'text-700'}}" t-att-colspan="getGroupNameCellColSpan(group)">
                <div class="d-flex">
                    <span t-attf-class="o_group_caret fa fa-fw {{group.isFolded ? 'fa-caret-right' : 'fa-caret-down' }} me-1" t-attf-style="--o-list-group-level: {{getGroupLevel(group)}}"/>
                    <t t-esc="getGroupDisplayName(group)"/> (<t t-esc="group.count"/>)
                    <div t-if="(groupByButtons[group.groupByField.name] and !group.isFolded)" class="o_group_buttons">
                        <t t-foreach="groupByButtons[group.groupByField.name]" t-as="button" t-key="button.id">
                            <t t-if="!evalModifier(button.modifiers.invisible, group.record)">
                                <t t-if="button.clickParams.type === 'edit'">
                                    <button t-att-title="button.title" class="btn" t-on-click="() =&gt; this.editGroupRecord(group)" tabindex="-1">
                                        <i t-attf-class="fa fa-fw {{button.icon}} o_button_icon"/>
                                    </button>
                                </t>
                                <t t-else="">
                                    <ViewButton className="button.className" clickParams="button.clickParams" icon="button.icon" record="group.record" string="button.string" title="button.title" tabindex="'-1'"/>
                                </t>
                            </t>
                        </t>
                    </div>
                    <div t-if="showGroupPager(group)" class="ms-auto">
                        <Pager t-props="getGroupPagerProps(group)"/>
                    </div>
                </div>
            </th>
            <td t-on-keydown.synthetic="(ev) =&gt; this.onCellKeydown(ev, group)" t-foreach="getAggregateColumns(group)" t-as="column" t-key="column.id" t-att-class="{'o_list_number': column.type === 'field'}">
                <t t-if="column.type === 'field'" t-esc="formatAggregateValue(group, column)"/>
            </td>
            <t t-set="groupPagerColspan" t-value="getGroupPagerCellColspan(group)"/>
            <th t-on-keydown.synthetic="(ev) =&gt; this.onCellKeydown(ev, group)" t-if="groupPagerColspan &gt; 0" t-att-colspan="groupPagerColspan"/>
        </tr>
    </t>

    <t t-name="web.ListRenderer.RecordRow" owl="1">
        <tr class="o_data_row" t-att-class="getRowClass(record)" t-att-data-id="record.id" t-on-click.capture="(ev) =&gt; this.onClickCapture(record, ev)" t-on-mouseover.capture="(ev) =&gt; this.ignoreEventInSelectionMode(ev)" t-on-mouseout.capture="(ev) =&gt; this.ignoreEventInSelectionMode(ev)" t-on-mouseenter.capture="(ev) =&gt; this.ignoreEventInSelectionMode(ev)" t-on-touchstart="(ev) =&gt; this.onRowTouchStart(record, ev)" t-on-touchend="() =&gt; this.onRowTouchEnd(record)" t-on-touchmove="() =&gt; this.onRowTouchMove(record)">
            <td t-on-keydown.synthetic="(ev) =&gt; this.onCellKeydown(ev, group, record)" t-if="hasSelectors" class="o_list_record_selector" t-on-click.stop="() =&gt; this.toggleRecordSelection(record)" tabindex="-1">
                <CheckBox disabled="!canSelectRecord" value="record.selected" onChange.alike="() =&gt; this.toggleRecordSelection(record)"/>
            </td>
            <t t-foreach="getColumns(record)" t-as="column" t-key="column.id">
                <t t-if="column.type === 'field'">
                    <t t-set="isInvisible" t-value="evalModifier(column.modifiers.invisible, record)"/>
                    <td t-on-keydown.synthetic="(ev) =&gt; this.onCellKeydown(ev, group, record)" class="o_data_cell cursor-pointer" t-att-class="getCellClass(column, record)" t-att-name="column.name" t-att-colspan="column.colspan" t-att-data-tooltip="!isInvisible ? getCellTitle(column, record) : false" data-tooltip-delay="1000" t-on-click="(ev) =&gt; this.onCellClicked(record, column, ev)" tabindex="-1">
                        <t t-if="!isInvisible">
                            <t t-if="canUseFormatter(column, record)" t-out="getFormattedValue(column, record)"/>
                            <Field t-else="" name="column.name" record="record" type="column.widget" class="getFieldClass(column)" fieldInfo="props.archInfo.fieldNodes[column.name]" setDirty="(isDirty) =&gt; this.setDirty(isDirty)"/>
                        </t>
                    </td>
                </t>
                <t t-if="column.type === 'button_group'">
                    <td t-on-keydown.synthetic="(ev) =&gt; this.onCellKeydown(ev, group, record)" class="o_data_cell cursor-pointer" t-att-class="getCellClass(column, record)" t-on-click="(ev) =&gt; this.onButtonCellClicked(record, column, ev)" tabindex="-1">
                        <t t-foreach="column.buttons" t-as="button" t-key="button.id">
                            <ViewButton t-if="!evalModifier(button.modifiers.invisible, record)" className="button.className" clickParams="button.clickParams" defaultRank="button.defaultRank" disabled="button.disabled" icon="button.icon" record="record" string="button.string" title="button.title" tabindex="props.list.editedRecord ? '-1' : '0'" onClick="isX2Many and record.isVirtual ? displaySaveNotification.bind(this) : ''"/>
                        </t>
                    </td>
                </t>
                <t t-if="column.type === 'widget'">
                    <td class="o_data_cell" t-att-class="getCellClass(column, record)">
                        <Widget t-props="column.props" record="record"/>
                    </td>
                </t>
            </t>

            <t t-set="useUnlink" t-value="'unlink' in activeActions"/>
            <t t-set="hasX2ManyAction" t-value="isX2Many and (useUnlink ? activeActions.unlink : activeActions.delete)"/>
            <t t-if="displayOptionalFields or hasX2ManyAction">
                <t t-if="hasX2ManyAction">
                    <td class="o_list_record_remove text-center" t-on-keydown.synthetic="(ev) =&gt; this.onCellKeydown(ev, group, record)" t-on-click.stop="() =&gt; this.onDeleteRecord(record)" tabindex="-1">
                        <button class="fa" t-att-class="{                                 'fa-trash-o': !useUnlink and activeActions.delete,                                 'fa-times': useUnlink and activeActions.unlink,                             }" name="delete" aria-label="Delete row" tabindex="-1"/>
                    </td>
                </t>
                <td t-else="" tabindex="-1"/>
            </t>
        </tr>
    </t>

<t t-name="web.ActionHelper" owl="1">
        <div class="o_view_nocontent">
            <div class="o_nocontent_help">
                <t t-out="noContentHelp"/>
            </div>
        </div>
    </t>

    <t t-name="web.NoContentHelper" owl="1">
        <div class="o_view_nocontent" role="alert">
            <div class="o_nocontent_help">
                <p class="o_view_nocontent_empty_folder">
                    <t t-if="title" t-esc="title"/>
                    <t t-else="">No data to display</t>
                </p>
                <p>
                <t t-if="description" t-esc="description"/>
                <t t-else="">Try to add some records, or make sure that there is no
                    active filter in the search bar.</t>
                </p>
            </div>
        </div>
    </t>

<t t-name="web.PivotView.Buttons" owl="1">
        <div class="btn-group" role="toolbar" aria-label="Main actions">
            <t t-call="web.ReportViewMeasures">
                <t t-set="measures" t-value="model.metaData.measures"/>
                <t t-set="activeMeasures" t-value="model.metaData.activeMeasures"/>
            </t>
        </div>
        <div class="btn-group" role="toolbar" aria-label="Pivot settings">
            <t t-set="noDataDisplayed" t-value="!model.hasData() || !model.metaData.activeMeasures.length"/>
            <button class="btn btn-secondary fa fa-exchange o_pivot_flip_button" t-on-click="onFlipButtonClicked" data-tooltip="Flip axis" aria-label="Flip axis" t-attf-disabled="{{noDataDisplayed ? 'disabled' : false}}"/>
            <button class="btn btn-secondary fa fa-arrows o_pivot_expand_button" t-on-click="onExpandButtonClicked" data-tooltip="Expand all" aria-label="Expand all" t-attf-disabled="{{noDataDisplayed ? 'disabled' : false}}"/>
            <button class="btn btn-secondary fa fa-download o_pivot_download" t-on-click="onDownloadButtonClicked" data-tooltip="Download xlsx" aria-label="Download xlsx" t-attf-disabled="{{noDataDisplayed ? 'disabled' : false}}"/>
        </div>
    </t>

    <t t-name="web.PivotView" owl="1">
        <div t-att-class="props.className" t-ref="root">
            <Layout className="model.useSampleModel ? 'o_view_sample_data' : ''" display="props.display">
                <t t-set-slot="layout-buttons">
                    <t t-call="{{ props.buttonTemplate }}"/>
                </t>
                <t t-set="displayNoContent" t-value="                     props.info.noContentHelp !== false and (                         !(model.hasData() and model.metaData.activeMeasures.length) or                         model.useSampleModel                     )"/>
                <t t-if="displayNoContent">
                    <t t-if="props.info.noContentHelp" t-call="web.ActionHelper">
                        <t t-set="noContentHelp" t-value="props.info.noContentHelp"/>
                    </t>
                    <t t-else="" t-call="web.NoContentHelper"/>
                </t>
                <t t-if="model.hasData() and model.metaData.activeMeasures.length">
                    <t t-component="props.Renderer" model="model" onCellClicked="cell =&gt; this.onOpenView(cell)"/>
                </t>
            </Layout>
        </div>
    </t>

<t t-name="web.PivotRenderer" owl="1">
        <div class="o_pivot table-responsive">

            <table class="table-hover table table-sm table-bordered table-borderless bg-view" t-att-class="{ o_enable_linking: !model.metaData.disableLinking }" t-ref="table">
                <thead>
                    <tr t-foreach="table.headers" t-as="row" t-key="'header_' + row_index" class="border-top-0">
                        <t t-foreach="row" t-as="cell" t-key="'header_row_' + cell_index">
                            <t t-if="cell.measure" t-call="web.PivotMeasure"/>
                            <t t-elif="cell.isLeaf !== undefined" t-call="web.PivotHeader">
                                <t t-set="isXAxis" t-value="true"/>
                            </t>
                            <th t-else="" t-att-colspan="cell.width" t-att-rowspan="cell.height" class="fw-normal border-start-0"/>
                        </t>
                    </tr>
                </thead>
                <tbody>
                    <tr t-foreach="table.rows" t-as="row" t-key="'row_' + row_index">
                        <t t-call="web.PivotHeader">
                            <t t-set="isXAxis" t-value="false"/>
                            <t t-set="cell" t-value="row"/>
                        </t>
                        <t t-foreach="row.subGroupMeasurements" t-as="cell" t-key="'row_cell_' + cell_index">
                            <td class="o_pivot_cell_value text-end bg-100" t-att-class="{                                     o_empty: cell.value === undefined,                                     'cursor-pointer': cell.value !== undefined,                                     'fw-bold': cell.isBold,                                 }" t-on-click="() =&gt; this.onCellClicked(cell)" t-on-mouseover="onMouseEnter" t-on-mouseout="onMouseLeave">
                                <t t-if="cell.value !== undefined">
                                    <div t-if="cell.originIndexes.length &gt; 1" class="o_variation" t-att-class="{                                              'o_positive text-success': cell.value &gt; 0,                                              'o_negative text-danger': cell.value &lt; 0,                                              o_null: cell.value === 0,                                         }" t-esc="getFormattedVariation(cell)"/>
                                    <div t-elif="model.metaData.measures[cell.measure].type === 'boolean'" class="o_value">
                                        <CheckBox disabled="true" value="cell.value"/>
                                    </div>
                                    <div t-else="1" class="o_value" t-esc="getFormattedValue(cell)"/>
                                </t>
                            </td>
                        </t>
                    </tr>
                </tbody>
            </table>
        </div>
    </t>

    <t t-name="web.PivotHeader" owl="1">
        <th class="text-nowrap cursor-pointer fw-normal user-select-none border-start-0" t-att-colspan="isXAxis ? cell.width : undefined" t-att-rowspan="isXAxis ? cell.height : undefined" t-att-class="{                 o_pivot_header_cell_closed: cell.isLeaf,                 o_pivot_header_cell_opened: !cell.isLeaf,             }" t-attf-style="{{                 isXAxis                     ? undefined                     : l10n.direction === 'ltr'                         ? 'padding-left: ' + getPadding(cell) + 'px;'                         : 'padding-right: ' + getPadding(cell) + 'px;'             }}" t-att-data-tooltip="cell.label" t-attf-data-tooltip-position="{{ l10n.direction === 'ltr' ? 'right' : 'left' }}" t-on-click.prevent="() =&gt; this.onHeaderClick(cell, isXAxis ? 'col' : 'row')">
            <t t-if="cell.isLeaf and !cell.isFolded">
                <PivotGroupByMenu toggler="'parent'" position="isXAxis ? 'bottom-start' : 'bottom-end'" cell="cell" customGroupBys="model.metaData.customGroupBys" showActiveItems="false" onItemSelected="(payload) =&gt; this.onGroupBySelected(isXAxis ? 'col' : 'row', payload)" onAddCustomGroupBy="fieldName =&gt; this.onAddCustomGroupBy(isXAxis ? 'col' : 'row', cell.groupId, fieldName)"/>
            </t>
            <span t-if="l10n.direction === 'rtl'" t-esc="cell.title"/>
            <i t-attf-class="fa fa-{{ cell.isLeaf ? 'plus-square' : 'minus-square-o' }} me-1"/>
            <span t-if="l10n.direction === 'ltr'" t-esc="cell.title"/>
        </th>
    </t>

    <t t-name="web.PivotMeasure" owl="1">
        <th class="text-muted text-center text-nowrap fw-normal" t-att-colspan="cell.width" t-att-rowspan="cell.height" t-att-class="{                 'o_pivot_origin_row cursor-pointer user-select-none': cell.originIndexes,                 'o_pivot_measure_row cursor-pointer user-select-none': !cell.originIndexes,                 o_pivot_sort_order_asc: cell.order === 'asc',                 o_pivot_sort_order_desc: cell.order === 'desc',             }" t-on-click.prevent="() =&gt; this.onMeasureClick(cell)" t-on-mouseover="onMouseEnter" t-on-mouseout="onMouseLeave">
            <t t-esc="cell.title"/>
            <i t-if="cell.order === 'asc' || cell.order ==='desc'" t-attf-class="fa fa-caret-{{ cell.order === 'asc' ? 'up' : 'down' }} ms-1"/>
        </th>
    </t>

<t t-name="web.View" owl="1">
      <WithSearch t-props="withSearchProps" t-slot-scope="search">
        <t t-component="Controller" t-on-click="handleActionLinks" t-props="componentProps" context="search.context" domain="search.domain" groupBy="search.groupBy" orderBy="search.orderBy" comparison="search.comparison" display="search.display"/>
      </WithSearch>
  </t>

  <t t-name="web.ReportViewMeasures" owl="1">
    <Dropdown togglerClass="'btn btn-primary'">
            <t t-set-slot="toggler">
                Measures <i class="fa fa-caret-down ms-1"/>
            </t>
            <t t-foreach="measures" t-as="measure" t-key="measure_value.name">
                <div t-if="!measure_first and measure == '__count'" role="separator" class="dropdown-divider"/>
                <DropdownItem class="{ o_menu_item: true, selected: activeMeasures.includes(measure) }" parentClosingMode="'none'" t-esc="measures[measure].string" onSelected="() =&gt; this.onMeasureSelected({ measure: measure_value.name })"/>
            </t>
        </Dropdown>
  </t>
<t t-name="views.ViewButton" owl="1">
    <t t-tag="props.tag" t-att="props.attrs" t-att-id="props.id" t-att-class="getClassName()" t-att-disabled="disabled" t-att-name="props.clickParams.name" t-att-special="props.clickParams.special" t-att-href="props.tag === 'a' and '#'" t-att-style="props.style" t-att-type="clickParams.type" t-att-data-tooltip-template="hasBigTooltip ? 'views.ViewButtonTooltip' : false" t-att-data-tooltip-info="hasBigTooltip ? tooltip : false" t-att-data-tooltip="hasSmallToolTip ? props.title : false" t-att-tabindex="props.tabindex" t-on-click.stop="onClick">
      <t t-if="icon" t-tag="icon.tag" t-att-class="icon.class" t-att-src="icon.src"/>
      <t t-slot="contents"><span t-if="props.string" t-esc="props.string"/></t>
    </t>
  </t>

  <t t-name="views.ViewButtonTooltip" owl="1">
      <t t-if="debug || button.help">
        <div class="o-tooltip--string" t-if="debug || button.string" role="tooltip">
            <t t-if="debug">
                Button
                <t t-if="button.string">: </t>
                <t t-if="!button.string"> (no string)</t>
            </t>
            <t t-esc="button.string"/>
        </div>
        <p t-if="button.title" class="o-tooltip--help" role="tooltip">
            <t t-esc="button.title"/>
        </p>
        <p t-if="button.help" class="o-tooltip--help" role="tooltip">
            <t t-esc="button.help"/>
        </p>
        <ul t-if="debug" class="o-tooltip--technical" role="tooltip">
            <li data-item="object">
                <span class="o-tooltip--technical--title">Object:</span>
                <t t-esc="model"/>
            </li>
            <li t-if="button.context" data-item="context">
                <span class="o-tooltip--technical--title">Context:</span>
                <t t-esc="button.context || context"/>
            </li>
            <li t-if="button.modifiers" data-item="modifiers">
                <span class="o-tooltip--technical--title">Modifiers:</span>
                <t t-esc="button.modifiers"/>
            </li>
            <li t-if="button.special" data-item="special">
                <span class="o-tooltip--technical--title">Special:</span>
                <t t-esc="button.special"/>
            </li>
            <t t-set="button_type" t-value="button.type"/>
            <li t-if="button_type" data-item="button_type">
                <span class="o-tooltip--technical--title">Button Type:</span>
                <t t-esc="button_type"/>
            </li>
            <li t-if="button_type === 'object'" data-item="button_method">
                <span class="o-tooltip--technical--title">Method:</span>
                <t t-esc="button.name"/>
            </li>
            <li t-if="button_type === 'action'" data-item="button_action">
                <span class="o-tooltip--technical--title">Action ID:</span>
                <t t-esc="button.name"/>
            </li>
        </ul>
      </t>
  </t>
<t t-name="web.DeleteExportListDialog" owl="1">
        <Dialog title="'Confirmation'" size="'md'">
            <div t-esc="props.text"/>
            <t t-set-slot="footer">
                <button class="btn btn-primary" t-on-click="onDelete">Delete</button>
                <button class="btn btn-secondary" t-on-click="() =&gt; props.close()">Cancel</button>
            </t>
        </Dialog>
    </t>

    <t t-name="web.ExportDataItem" owl="1">
        <div t-att-data-field_id="props.field.id" t-attf-class="o_export_tree_item cursor-pointer position-relative ps-4 {{ state.subfields.length ? 'o_expanded mb-2' : '' }} {{ props.field.parent ? '' : 'pe-3'}}" role="treeitem" t-on-click.stop="() =&gt; this.toggleItem(props.field.id, true)" t-on-dblclick="() =&gt; this.onDoubleClick(props.field.id)">
            <div t-attf-class="o_tree_column d-flex align-items-center {{ props.field.required ? 'fw-bolder' : ''}}">
                <span t-if="props.isFieldExpandable(props.field.id)" t-attf-class="ms-n3 float-start o_expand_parent small fa {{ state.subfields.length ? 'fa-chevron-down' : 'fa-chevron-right' }}" role="img" aria-label="Show sub-fields" title="Show sub-fields"/>
                <span t-if="props.isDebug and props.field.id" class="overflow-hidden w-100" t-esc="\`\${props.field.string} (\${props.field.id})\`"/>
                <span t-else="" class="overflow-hidden w-100" t-esc="props.field.string"/>
                <span title="Select field" t-attf-class="fa fa-plus float-end m-1 o_add_field {{ isFieldSelected(props.field.id) ? 'o_inactive opacity-25' : '' }}" t-on-click.stop="(ev) =&gt; !this.isFieldSelected(this.props.field.id) and this.props.onAdd(this.props.field.id)"/>
            </div>
                <t t-foreach="state.subfields" t-as="field" t-key="field.id">
                    <ExportDataItem t-props="props" field="field"/>
                </t>
        </div>
    </t>

    <t t-name="web.ExportDataDialog" owl="1">
        <Dialog contentClass="'o_export_data_dialog'" title="title" size="'lg'">
            <div class="row w-100">
                <div class="o_left_panel col-12 col-md-6 h-100 d-flex flex-column flex-nowrap">
                    <div class="o_import_compat">
                        <CheckBox className="'o_import_compat'" id="'o-update-data'" value="state.isCompatible" onChange.bind="onToggleCompatibleExport">
                            I want to update data (import-compatible export)
                        </CheckBox>
                    </div>
                    <h4 class="mt-3">Available fields</h4>
                    <input t-ref="search" type="search" class="form-control mb-3 o_export_search_input" id="o-export-search-filter" placeholder="Search" t-on-input="onSearch"/>
                    <div class="o_left_field_panel h-100 overflow-auto border">
                        <div class="o_field_tree_structure">
                            <t t-if="fieldsAvailable">
                                <t t-foreach="rootFields" t-as="field" t-key="field.id + '_' + state.search.length">
                                    <ExportDataItem exportList="state.exportList" field="field" filterSubfields.bind="filterSubfields" isFieldExpandable.bind="isFieldExpandable" isDebug="isDebug" isExpanded="state.search.length &gt; 0" loadFields.bind="loadFields" onAdd.bind="onAddItemExportList"/>
                                </t>
                            </t>
                            <h3 t-else="" class="text-center text-muted mt-5 o_no_match">No match found.</h3>
                        </div>
                    </div>
                </div>
                <div t-attf-class="o_right_panel col-12 col-md-6 {{ state.isSmall ? 'h-50' : 'h-100' }} d-flex flex-column flex-nowrap mt-3 mt-md-0">
                    <div class="o_export_format">
                        <strong>Export Format:</strong>
                        <t t-foreach="availableFormats" t-as="format" t-key="format.tag">
                            <div class="radio form-check-inline ps-5">
                                <input t-att-id="'o_radio' + format.tag" type="radio" t-att-checked="format.tag === availableFormats[state.selectedFormat].tag" name="o_export_format_name" t-att-value="format.tag" class="form-check-input" t-on-change="setFormat"/>
                                <label class="form-check-label ms-1" t-att-for="'o_radio' + format.tag" t-esc="format.label"/>
                            </div>
                        </t>
                    </div>
                    <div class="mt-3">
                        <h4>Fields to export</h4>
                    </div>
                    <div class="o_exported_lists">
                        <div class="input-group mb-3">
                            <t t-if="state.templateId === 'new_template'">
                                <label class="pt-2 mb-0 fw-bold">Save as: </label>
                                <input t-ref="exportList" class="form-control ms-4 o_save_list_name" t-att-placeholder="newTemplateText"/>
                            </t>
                            <t t-else="">
                                <label class="pt-2 mb-0 fw-bold">Template: </label>
                                <select class="form-select ms-4 o_exported_lists_select" t-on-change="onChangeExportList">
                                    <option/>
                                    <t t-foreach="templates" t-as="template" t-key="template.id">
                                        <option t-att-value="template.id" t-esc="template.name or 'undefined'" t-att-selected="state.templateId === template.id"/>
                                    </t>
                                    <option class="fst-italic" value="new_template">New template </option>
                                </select>
                            </t>
                            <t t-if="state.isEditingTemplate">
                                <button t-if="state.templateId === 'new_template'" type="button" class="btn btn-secondary ms-1 o_save_list_btn" t-on-click.stop="onSaveExportTemplate">
                                    <i class="fa fa-floppy-o"/>
                                </button>
                                <button type="button" class="btn btn-secondary ms-1 o_cancel_list_btn" t-on-click.stop="onCancelExportTemplate">
                                    <i t-attf-class="fa {{ state.templateId === 'new_template' ? 'fa-times' : 'fa-undo' }}"/>
                                </button>
                            </t>
                            <t t-else="">
                                <button t-if="state.templateId" type="button" class="btn btn-secondary ms-1 o_delete_exported_list" t-on-click.stop="onDeleteExportTemplate">
                                    <i class="fa fa-trash"/>
                                </button>
                            </t>
                        </div>
                    </div>
                    <div class="o_right_field_panel h-100 px-2 overflow-auto border">
                        <ul class="o_fields_list list-unstyled" t-ref="draggable">
                            <t t-foreach="state.exportList" t-as="field" t-key="field.id">
                                <li t-attf-class="o_export_field {{ state.isSmall ? '' : 'o_export_field_sortable' }}" t-att-data-field_id="field.id">
                                    <span t-if="!state.isSmall" class="fa fa-sort o_sort_field mx-1" t-attf-style="opacity:{{ state.exportList.length === 1 ? 0 : 1 }}"/>
                                    <span t-esc="isDebug and field.id ? \`\${field.string} (\${field.id})\` : field.string"/>
                                    <span class="fa fa-trash m-1 pe-2 float-end o_remove_field cursor-pointer" t-att-title="removeFieldText" t-on-click.stop="() =&gt; this.onRemoveItemExportList(field.id)"/>
                                </li>
                            </t>
                        </ul>
                    </div>
                </div>
            </div>
            <t t-set-slot="footer">
                <button class="btn btn-primary o_select_button" data-hotkey="v" t-on-click.stop="onClickExportButton">Export</button>
                <button class="btn o_form_button_cancel" t-att-class="(props.disableMultipleSelection &amp;&amp; props.noCreate) ? 'btn-primary' : 'btn-secondary'" data-hotkey="z" t-on-click.stop="props.close">Close</button>
            </t>
        </Dialog>
    </t>

<t t-name="web.FormViewDialog" owl="1">
    <Dialog size="props.size" title="props.title" withBodyPadding="false" modalRef="modalRef">
      <View t-props="viewProps"/>
      <t t-set-slot="footer">
        <t t-if="props.preventEdit and props.preventCreate">
          <button class="btn btn-primary" t-on-click="() =&gt; props.close()">Close</button>
        </t>
        <t t-else="">
          <button class="btn btn-primary o-default-button" t-on-click="() =&gt; props.close()">Ok</button>
        </t>
      </t>
    </Dialog>
  </t>

  <t t-name="web.FormViewDialog.ToMany.buttons" owl="1">
        <div class="o_cp_buttons" role="toolbar" aria-label="Main actions" t-ref="cpButtons">
            <div t-if="model.root.isInEdition" class="o_form_buttons_edit">
                <button class="btn btn-primary o_form_button_save" t-on-click="saveButtonClicked" data-hotkey="c">Save &amp; Close</button>
      <button class="btn btn-primary o_form_button_save_new" t-on-click="() =&gt; this.saveButtonClicked({saveAndNew: true})" data-hotkey="n">Save &amp; New</button>
    <button type="button" class="btn btn-secondary o_form_button_cancel" data-hotkey="j" t-on-click.stop="discard">
                    Discard
                </button>
                <button t-if="props.removeRecord" class="btn btn-secondary o_form_button_remove" t-on-click="props.removeRecord" data-hotkey="x">
                    Remove
                </button>
            </div>
            <div t-elif="canCreate" class="o_form_buttons_view">
                <button type="button" class="btn btn-secondary o_form_button_create" data-hotkey="c" t-on-click.stop="create">
                    New
                </button>
            </div>
        </div>
    </t>
<t t-name="web.FormViewDialog.ToOne.buttons" owl="1">
        <div class="o_cp_buttons" role="toolbar" aria-label="Main actions" t-ref="cpButtons">
            <div t-if="model.root.isInEdition" class="o_form_buttons_edit">
                <button class="btn btn-primary o_form_button_save" t-on-click="saveButtonClicked" data-hotkey="c">Save &amp; Close</button>
    <button type="button" class="btn btn-secondary o_form_button_cancel" data-hotkey="j" t-on-click.stop="discard">
                    Discard
                </button>
                <button t-if="props.removeRecord" class="btn btn-secondary o_form_button_remove" t-on-click="props.removeRecord" data-hotkey="x">
                    Remove
                </button>
            </div>
            <div t-elif="canCreate" class="o_form_buttons_view">
                <button type="button" class="btn btn-secondary o_form_button_create" data-hotkey="c" t-on-click.stop="create">
                    New
                </button>
            </div>
        </div>
    </t>
<t t-name="web.SelectCreateDialog" owl="1">
        <Dialog title="props.title" withBodyPadding="false">
            <t t-set-slot="header" t-slot-scope="scope">
                <t t-call="web.Dialog.header">
                    <t t-set="close" t-value="scope.close"/>
                    <t t-set="fullscreen" t-value="scope.isFullscreen"/>
                </t>
                <button t-if="this.canUnselect" class="btn o_clear_button" t-on-click="() =&gt; this.unselect()">Clear</button>
            </t>
            <View t-props="viewProps"/>
            <t t-set-slot="footer">
                <t t-if="props.multiSelect">
                    <button class="btn btn-primary o_select_button" t-att-disabled="state.resIds.length === 0" data-hotkey="v" t-on-click="() =&gt; this.select(state.resIds)">
                        Select
                    </button>
                </t>
                <t t-if="!props.noCreate">
                    <button class="btn btn-primary o_create_button" data-hotkey="c" t-on-click="createEditRecord">New</button>
                </t>
                <button class="btn o_form_button_cancel" t-att-class="(!props.multiSelect &amp;&amp; props.noCreate) ? 'btn-primary' : 'btn-secondary'" data-hotkey="z" t-on-click="() =&gt; this.props.close()">Close</button>
            </t>
        </Dialog>
    </t>

<t t-name="web.AttachDocument" owl="1">
        <button t-attf-class="btn o_attachment_button #{props.highlight ? 'btn-primary' : 'btn-secondary'}" t-on-click="() =&gt; this.triggerUpload()">
            <span class="o_attach_document" t-esc="props.string"/>
        </button>
    </t>

<t t-name="web.Ribbon" owl="1">
        <div class="ribbon ribbon-top-right">
            <span t-att-class="classes" t-att-title="props.title">
                <t t-esc="props.text"/>
            </span>
        </div>
    </t>

<t t-name="web.SignatureWidget" owl="1">
        <button t-attf-class="btn o_sign_button #{props.highlight ? 'btn-primary' : 'btn-secondary'}" t-on-click="onClickSignature">
            <span class="o_sign_label" t-esc="props.string"/>
        </button>
    </t>

<t t-name="web.WeekDays" owl="1">
        <div class="o_recurrent_weekdays border mt-2 mb-2">
            <table class="table table-responsive mb-0">
                <tr>
                    <t t-foreach="weekdays" t-as="day" t-key="day">
                        <th class="text-center border fw-bold">
                            <div class="o_recurrent_weekday_label" t-att-data-tooltip="props.record.fields[day].string">
                                <t t-esc="props.record.fields[day].string"/>
                            </div>
                        </th>
                    </t>
                </tr>
                <tr>
                    <t t-foreach="weekdays" t-as="day" t-key="day">
                        <td>
                            <CheckBox disabled="props.readonly" value="data[day]" className="'o_recurrent_weekday_checkbox text-center'" onChange="(checked) =&gt; this.onChange(day, checked)"/>
                        </td>
                    </t>
                </tr>
            </table>
        </div>
    </t>

<t t-name="web.ActionDialog.header" owl="1">
        <t t-if="fullscreen">
            <button class="btn fa fa-arrow-left" data-bs-dismiss="modal" aria-label="Close" t-on-click="close"/>
        </t>
      <DebugMenu t-if="env.debug"/>
        <h4 class="modal-title text-break" t-att-class="{ 'me-auto': fullscreen }">
            <t t-esc="props.title"/>
        </h4>
        <t t-if="!fullscreen">
            <button type="button" class="btn-close" aria-label="Close" tabindex="-1" t-on-click="close"/>
        </t>
    </t>
<t t-name="web.ActionDialog" owl="1">
        <div class="o_dialog" t-att-id="id" t-att-class="{ o_inactive_modal: !data.isActive }">
            <div role="dialog" class="modal d-block" tabindex="-1" t-att-class="{ o_technical_modal: props.technical, o_modal_full: isFullscreen }" t-ref="modalRef">
                <div class="modal-dialog" t-attf-class="modal-{{props.size}}">
                    <div class="modal-content" t-att-class="props.contentClass">
                        <header t-if="props.header" class="modal-header">
                            <t t-call="web.ActionDialog.header">
        <t t-set="close" t-value="props.close"/>
        <t t-set="fullscreen" t-value="props.isFullscreen"/>
      </t>
    </header>

                        <footer t-if="props.footer" class="modal-footer justify-content-around justify-content-sm-start flex-wrap gap-1" style="order:2">
                            <t t-slot="footer" close="data.close">
                                <button class="btn btn-primary o-default-button" t-on-click="data.close">
                                    <t>Ok</t>
                                </button>
                            </t>
                        </footer>
                        <main class="modal-body" t-attf-class="{{ props.bodyClass }} {{ !props.withBodyPadding ? 'p-0': '' }}" t-att-class="&#10;        {&quot;o_act_window&quot;: props.actionType === &quot;ir.actions.act_window&quot;}&#10;      ">
                            <t t-if="props.ActionComponent" t-component="props.ActionComponent" t-props="props.actionProps"/>
    </main>
                    </div>
                </div>
            </div>
        </div>
    </t>

    <t t-name="web.LegacyAdaptedActionDialog" owl="1">
        <div class="o_dialog" t-att-id="id" t-att-class="{ o_inactive_modal: !data.isActive }">
            <div role="dialog" class="modal d-block" tabindex="-1" t-att-class="{ o_technical_modal: props.technical, o_modal_full: isFullscreen }" t-ref="modalRef">
                <div class="modal-dialog" t-attf-class="modal-{{props.size}}">
                    <div class="modal-content" t-att-class="props.contentClass">
                        <header t-if="props.header" class="modal-header">
                            <t t-call="web.ActionDialog.header">
        <t t-set="close" t-value="props.close"/>
        <t t-set="fullscreen" t-value="props.isFullscreen"/>
      </t>
    </header>

                        <footer t-if="props.footer" class="modal-footer justify-content-around justify-content-sm-start flex-wrap gap-1" style="order:2">
                            <t t-if="!isLegacy">
        <t t-slot="buttons">
          <button class="btn btn-primary o-default-button" t-on-click="data.close">Ok</button>
        </t>
      </t>
    </footer>
                        <main class="modal-body" t-attf-class="{{ props.bodyClass }} {{ !props.withBodyPadding ? 'p-0': '' }}" t-att-class="&#10;        {&quot;o_act_window&quot;: props.actionType === &quot;ir.actions.act_window&quot;}&#10;      ">
                            <t t-if="props.ActionComponent" t-component="props.ActionComponent" t-props="props.actionProps"/>
    </main>
                    </div>
                </div>
            </div>
        </div>
    </t>

    <t t-name="web.BarcodeDialog" owl="1">
        <Dialog title="'Barcode Scanner'" onClosed="props.onClose" fullscreen="true">
            <div class="p-0 d-flex justify-content-center flex-column">
                <video t-ref="videoPreview" autoplay="true" playsinline="true" class="" style="max-width: 100%; max-height: 100%;"/>
            </div>
            <t t-set-slot="buttons">
                <button class="btn btn-secondary" t-on-click="props.onClose">Cancel</button>
            </t>
        </Dialog>
    </t>
<div t-name="web.BurgerMenu" owl="1">
    <button class="o_mobile_menu_toggle o-no-caret d-md-none border-0" title="Toggle menu" aria-label="Toggle menu" t-on-click="_openBurger">
        <i class="oi oi-panel-right"/>
    </button>
    <t t-portal="'body'">
      <Transition name="'burgerslide'" visible="state.isBurgerOpened" leaveDuration="200" t-slot-scope="transition">
        <div class="o_burger_menu position-fixed top-0 bottom-0 start-100 d-flex flex-column flex-nowrap" t-att-class="transition.className" t-on-touchstart.stop="_onSwipeStart" t-on-touchend.stop="_onSwipeEnd">
          <div class="o_burger_menu_topbar d-flex align-items-center justify-content-between flex-shrink-0 py-0 fs-4" t-on-click.stop="_toggleUserMenu">
              <small class="o-no-caret dropdown-toggle d-flex align-items-center justify-content-between" t-att-class="{'active bg-view text-body': isUserMenuUnfolded }">
                  <img class="o_burger_menu_avatar o_image_24_cover rounded-circle" t-att-src="'/web/image?model=res.users&amp;field=avatar_128&amp;id=' + user.userId" alt="Menu"/>
                  <span class="o_burger_menu_username px-2"><t t-esc="user.name"/></span>
                  <i t-if="isUserMenuTogglable" class="fa" t-att-class="state.isUserMenuOpened ? 'fa-caret-down' : 'fa-caret-left'"/>
              </small>
              <button class="o_burger_menu_close oi oi-close btn d-flex align-items-center h-100 bg-transparent border-0 fs-2 text-reset" aria-label="Close menu" title="Close menu" t-on-click.stop="_closeBurger"/>
          </div>
          <nav class="o_burger_menu_content flex-grow-1 flex-shrink-1 overflow-auto" t-att-class="{o_burger_menu_dark: !isUserMenuUnfolded, 'bg-view': isUserMenuUnfolded}">

              <t t-if="isUserMenuUnfolded">
                  <MobileSwitchCompanyMenu t-if="Object.values(company.availableCompanies).length &gt; 1"/>
                  <BurgerUserMenu/>
              </t>

                <ul t-if="!isUserMenuUnfolded" class="ps-0 mb-0">
                    <t t-foreach="currentAppSections" t-as="subMenu" t-key="subMenu_index">
                        <t t-call="web.BurgerSection">
                            <t t-set="section" t-value="subMenu"/>
                        </t>
                    </t>
                </ul>
          </nav>
        </div>
      </Transition>
    </t>
    <t t-portal="'body'">
        <div t-if="state.isBurgerOpened" class="o_burger_menu_backdrop modal-backdrop show d-block d-md-none" t-on-click.stop="_closeBurger" t-on-touchstart.stop="_onSwipeStart" t-on-touchend.stop="_onSwipeEnd"/>
    </t>
</div>

<t t-name="web.BurgerSection" owl="1">
    <li t-if="section.childrenTree.length" class="ps-0">
        <div class="py-3 bg-transparent" t-att-class="{ 'fs-4': !isNested }" t-att-data-menu-xmlid="section.xmlid" t-esc="section.name"/>
        <ul class="ps-0">
            <t t-foreach="section.childrenTree" t-as="subSection" t-key="subSection_index">
                <t t-call="web.BurgerSection">
                    <t t-set="section" t-value="subSection"/>
                    <t t-set="isNested" t-value="true"/>
                </t>
            </t>
        </ul>
    </li>
    <li t-else="" t-on-click="() =&gt; this._onMenuClicked(section)" t-att-data-menu-xmlid="section.xmlid" class="py-3" t-att-class="{ 'fs-4': !isNested }">
        <t t-esc="section.name"/>
    </li>
</t>

<t t-name="web.BurgerUserMenu" owl="1">
    <div class="o_user_menu_mobile mt-2">
      <t t-foreach="getElements()" t-as="element" t-key="element_index">
          <t t-if="!element.hide">
              <a t-if="element.type == 'item'" class="dropdown-item py-3 fs-4" t-att-href="element.href or ''" t-esc="element.description" t-on-click.stop.prevent="() =&gt; this._onItemClicked(element.callback)"/>
              <CheckBox t-if="element.type == 'switch'" value="element.isChecked" className="'dropdown-item form-switch d-flex flex-row-reverse justify-content-between py-3 fs-4'" onChange="element.callback">
                  <t t-out="element.description"/>
              </CheckBox>
              <div t-if="element.type == 'separator'" role="separator" class="dropdown-divider"/>
          </t>
      </t>
    </div>
  </t>

<t t-name="web.MobileSwitchCompanyMenu" owl="1">
    <div class="o_burger_menu_companies p-3 bg-100">
        <div class="o_burger_menu_user_title h6 mb-3">Companies</div>
        <t t-foreach="Object.values(companyService.availableCompanies)" t-as="company" t-key="company.id">
            <t t-set="id" t-value="company.id"/>
            <t t-set="displayName" t-value="company.name"/>
            <t t-set="isCompanySelected" t-value="selectedCompanies.includes(id)"/>
            <t t-set="checkIcon" t-value="isCompanySelected ? 'fa-check-square text-primary' : 'fa-square-o'"/>
            <t t-set="isCompanyCurrent" t-value="companyService.currentCompany.id === id"/>
            <div class="d-flex menu_companies_item" t-att-data-company-id="id">
                <div class="border-end toggle_company" t-att-class="{'border-primary' : isCompanyCurrent}" t-on-click="() =&gt; this.toggleCompany(id)">
                    <span class="btn border-0 p-2">
                        <i t-attf-class="fa fa-fw fs-2 m-0 {{checkIcon}}"/>
                    </span>
                </div>
                <div class="flex-grow-1 p-2 ms-1 log_into text-muted" t-att-class="{'alert-primary': isCompanyCurrent}" t-on-click="() =&gt; this.logIntoCompany(id)">
                    <span t-esc="displayName" class="company_label" t-att-class="isCompanyCurrent ? 'text-900 fw-bold' : ''"/>
                    <small t-if="isCompanyCurrent" class="ms-1">(current)</small>
                </div>
            </div>
        </t>
    </div>
</t>

<t t-name="web.LoadingIndicator" owl="1">
        <Transition visible="state.show" name="'o-fade'" t-slot-scope="transition" leaveDuration="400">
            <span class="o_loading_indicator" t-att-class="transition.className">Loading<t t-if="env.debug" t-esc="' (' + state.count + ')'"/></span>
        </Transition>
    </t>

<t t-name="web.AppIconCommand" owl="1">
    <div class="o_command_default position-relative d-flex align-items-center px-4 py-2 cursor-pointer">
      <img t-if="props.webIconData" class="me-2 o_app_icon position-relative rounded-1" t-attf-src="{{props.webIconData}}"/>
      <div t-else="" class="me-2 o_app_icon d-flex align-items-center justify-content-center" t-attf-style="background-color:{{props.webIcon.backgroundColor}}">
        <i t-att-class="props.webIcon.iconClass" t-attf-style="color:{{props.webIcon.color}}"/>
      </div>
      <t t-slot="name"/>
      <span class="ms-auto flex-shrink-0">
        <t t-slot="focusMessage"/>
      </span>
    </div>
  </t>

<t t-name="web.NavBar" owl="1">
    <header class="o_navbar" t-ref="root">
      <nav class="o_main_navbar" data-command-category="navbar">

        <t t-call="web.NavBar.AppsMenu">
          <t t-set="apps" t-value="menuService.getApps()"/>
        </t>


        <DropdownItem t-if="currentApp" href="getMenuItemHref(currentApp)" t-esc="currentApp.name" class="'o_menu_brand d-none d-md-block'" dataset="{ menuXmlid: currentApp.xmlid, section: currentApp.id }" onSelected="() =&gt; this.onNavBarDropdownItemSelection(currentApp)"/>


        <t t-if="currentAppSections.length" t-call="web.NavBar.SectionsMenu">
          <t t-set="sections" t-value="currentAppSections"/>
        </t>


        <div class="o_menu_systray d-flex flex-shrink-0 ms-auto" role="menu">
          <t t-foreach="systrayItems" t-as="item" t-key="item.key">

            <div t-att-data-index="item.index"/>
            <ErrorHandler onError="error =&gt; this.handleItemError(error, item)">
                <t t-component="item.Component" t-props="item.props"/>
            </ErrorHandler>
          </t>
        </div>
      </nav>
    </header>
  </t>

  <t t-name="web.NavBar.AppsMenu" owl="1">
    <Dropdown hotkey="'h'" title="'Home Menu'" class="'o_navbar_apps_menu'">
      <t t-set-slot="toggler">
        <i class="oi oi-apps"/>
      </t>
      <DropdownItem t-foreach="apps" t-as="app" t-key="app.id" class="{ 'o_app': true, focus: menuService.getCurrentApp() === app }" href="getMenuItemHref(app)" t-esc="app.name" dataset="{ menuXmlid: app.xmlid, section: app.id }" onSelected="() =&gt; this.onNavBarDropdownItemSelection(app)"/>
    </Dropdown>
  </t>

  <t t-name="web.NavBar.SectionsMenu" owl="1">
    <div class="o_menu_sections d-none d-md-flex flex-grow-1 flex-shrink-1" t-ref="appSubMenus" role="menu">

      <t t-foreach="sections" t-as="section" t-key="section.id">
        <t t-set="sectionsVisibleCount" t-value="(sections.length - currentAppSectionsExtra.length)"/>

        <t t-if="section_index lt Math.min(10, sectionsVisibleCount)">
          <t t-set="hotkey" t-value="((section_index + 1) % 10).toString()"/>
        </t>
        <t t-else="">
          <t t-set="hotkey" t-value="undefined"/>
        </t>

        <t t-if="!section.childrenTree.length">
          <DropdownItem title="section.name" class="'o_nav_entry'" href="getMenuItemHref(section)" hotkey="hotkey" t-esc="section.name" dataset="{ menuXmlid: section.xmlid, section: section.id }" onSelected="() =&gt; this.onNavBarDropdownItemSelection(section)"/>
        </t>
        <t t-else="">
          <MenuDropdown hotkey="hotkey" title="section.name" xmlid="section.xmlid">
            <t t-set-slot="toggler">
              <span t-esc="section.name" t-att-data-section="section.id"/>
            </t>
            <t t-call="web.NavBar.SectionsMenu.Dropdown.MenuSlot">
              <t t-set="items" t-value="section.childrenTree"/>
              <t t-set="decalage" t-value="20"/>
            </t>
          </MenuDropdown>
        </t>
      </t>

      <t t-if="currentAppSectionsExtra.length" t-call="web.NavBar.SectionsMenu.MoreDropdown">
        <t t-set="sections" t-value="currentAppSectionsExtra"/>
        <t t-if="sectionsVisibleCount lt 10">
          <t t-set="hotkey" t-value="(sectionsVisibleCount + 1 % 10).toString()"/>
        </t>
      </t>

    </div>
  </t>

  <t t-name="web.NavBar.DropdownItem" owl="1">
    <t t-tag="props.href ? 'a' : 'span'" t-att-href="props.href" class="dropdown-item" t-att-class="props.class" role="menuitem" t-on-click.stop="onClick" t-att-title="props.title" t-att-data-hotkey="props.hotkey" t-att="dataAttributes" tabindex="0" t-att-style="props.style">
      <t t-slot="default"/>
    </t>
  </t>

<t t-name="web.NavBar.SectionsMenu.Dropdown.MenuSlot" owl="1">
    <t t-set="style" t-value="\`padding-left: \${decalage}px;\`"/>
    <t t-foreach="items" t-as="item" t-key="item.id">
      <DropdownItem t-if="!item.childrenTree.length" href="getMenuItemHref(item)" class="{           'dropdown-item': true,           o_dropdown_menu_group_entry: decalage gt 20         }" style="style" t-esc="item.name" dataset="{ menuXmlid: item.xmlid, section: item.id }" onSelected="() =&gt; this.onNavBarDropdownItemSelection(item)"/>

      <t t-else="">
        <div class="dropdown-menu_group dropdown-header" t-att-style="style" t-esc="item.name"/>
        <t t-call="web.NavBar.SectionsMenu.Dropdown.MenuSlot">
          <t t-set="items" t-value="item.childrenTree"/>
          <t t-set="decalage" t-value="decalage + 12"/>
        </t>
      </t>
    </t>
  </t>

  <t t-name="web.NavBar.SectionsMenu.MoreDropdown" owl="1">
    <Dropdown class="'o_menu_sections_more'" title="'More Menu'" hotkey="hotkey">
      <t t-set-slot="toggler">
        <i class="fa fa-plus"/>
      </t>
      <t t-foreach="sections" t-as="section" t-key="section.id">

        <t t-if="!section.childrenTree.length">
          <DropdownItem class="'o_more_dropdown_section'" href="getMenuItemHref(section)" t-esc="section.name" dataset="{ menuXmlid: section.xmlid, section: section.id }" onSelected="() =&gt; this.onNavBarDropdownItemSelection(section)"/>
        </t>
        <t t-else="">
          <div class="o_more_dropdown_section o_more_dropdown_section_group dropdown-header bg-100" t-esc="section.name"/>
          <t t-call="web.NavBar.SectionsMenu.Dropdown.MenuSlot">
            <t t-set="items" t-value="section.childrenTree"/>
            <t t-set="decalage" t-value="20"/>
          </t>
        </t>
      </t>
    </Dropdown>
  </t>

<t t-name="web.UpgradeDialog" owl="1">
        <Dialog size="'md'" title="'Odoo Enterprise'">
            <div class="row" role="status">
                <div class="col-6">
                    Get this feature and much more with Odoo Enterprise!
                    <ul class="list-unstyled">
                        <li><i class="fa fa-check"/> Access to all Enterprise Apps</li>
                        <li><i class="fa fa-check"/> New design</li>
                        <li><i class="fa fa-check"/> Mobile support</li>
                        <li><i class="fa fa-check"/> Upgrade to future versions</li>
                        <li><i class="fa fa-check"/> Bugfixes guarantee</li>
                        <li><a href="http://www.odoo.com/editions?utm_source=db&amp;utm_medium=enterprise" target="_blank"><i class="fa fa-plus"/> And more</a></li>
                    </ul>
                </div>
                <div class="col-6">
                    <img class="img-fluid" t-att-src="'/web/static/img/enterprise_upgrade.jpg'" draggable="false" alt="Upgrade to enterprise"/>
                </div>
            </div>
            <t t-set-slot="footer" owl="1">
                <button class="btn btn-primary" t-on-click="_confirmUpgrade">Upgrade now</button>
                <button class="btn btn-secondary" t-on-click="this.props.close">Cancel</button>
            </t>
        </Dialog>
    </t>
<t t-name="web.FormLabelHighlightText" owl="1">
        <label class="o_form_label" t-att-for="props.id" t-att-class="className">
            <HighlightText originalText="props.string"/>
            <t t-if="upgradeEnterprise">
                <span class="badge text-bg-primary oe_inline o_enterprise_label">Enterprise</span>
            </t>
        </label>
    </t>
<t t-name="web.HighlightText" owl="1">
        <t t-foreach="splitText" t-as="name" t-key="name_index">
            <b t-if="name_index % 2" t-out="name" t-att-class="constructor.highlightClass"/>
            <t t-else="" t-out="name"/>
        </t>
    </t>
<t t-name="web.SettingsRadioField" owl="1">
        <div role="radiogroup" t-attf-class="o_{{ props.orientation }}" t-att-aria-label="string">
            <t t-foreach="items" t-as="item" t-key="item[0]">
                <div class="form-check o_radio_item" aria-atomic="true">
                    <input type="radio" class="form-check-input o_radio_input" t-att-checked="item[0] === value" t-att-disabled="props.readonly" t-att-name="id" t-att-data-value="item[0]" t-att-data-index="item_index" t-att-id="\`\${id}_\${item[0]}\`" t-on-change="() =&gt; this.onChange(item)"/>
                    <FormLabelHighlightText className="'form-check-label'" id="\`\${id}_\${item[0]}\`" string="item[1]"/>
        </div>
            </t>
        </div>
    </t>

<t t-name="web.Setting" owl="1">
        <div t-att-class="classNames" t-att-title="props.title" t-if="visible()">
            <t t-slot="default"/>
        </div>
    </t>
<t t-name="web.SettingsApp" owl="1">
        <div class="app_settings_block" t-if="props.selectedTab === props.key or state.search.value.length !== 0" t-att-string="props.string" t-att-data-key="props.key" t-ref="settingsApp">
            <div class="settingSearchHeader h4" t-if="state.search.value.length !== 0" role="search">
                <img class="icon" t-att-src="props.imgurl" alt="Search"/>
                <span class="appName"><t t-esc="props.string"/></span>
            </div>
            <t t-slot="default"/>
        </div>
    </t>
<t t-name="web.SettingsContainer" owl="1">
        <h2 t-if="props.title" t-ref="settingsContainerTitle"><HighlightText originalText="props.title"/></h2>
        <h3 t-if="props.tip" class="o_setting_tip text-muted" t-ref="settingsContainerTip"><HighlightText originalText="props.tip"/></h3>
        <div t-att-class="props.class" t-ref="settingsContainer">
            <t t-slot="default"/>
        </div>
    </t>
<t t-name="web.SettingsPage" owl="1">
        <div class="settings_tab" t-if="!env.isSmall or state.search.value.length === 0">
            <t t-foreach="props.modules" t-as="module" t-key="module.key">
                <div class="tab" t-if="!module.isVisible" t-att-class="(state.selectedTab === module.key and state.search.value.length === 0) ? 'selected': ''" t-att-data-key="module.key" role="tab" t-on-click="() =&gt; this.onSettingTabClick(module.key)">
                    <div class="icon d-none d-md-block" t-attf-style="background : url('{{module.imgurl}}') no-repeat center;background-size:contain;"/> <span class="app_name"><t t-esc="module.string"/></span>
                </div>
            </t>
        </div>
        <ActionSwiper onRightSwipe=" hasRightSwipe() ? {                     action: onRightSwipe.bind(this),                 } : undefined" onLeftSwipe=" hasLeftSwipe() ? {                     action: onLeftSwipe.bind(this),                 } : undefined" animationOnMove="false" animationType="'forwards'" swipeDistanceRatio="6">
            <div class="settings" t-ref="settings">
                <t t-slot="NoContentHelper" t-if="props.slots['NoContentHelper'].isVisible"/>
                <t t-slot="default" selectedTab="state.selectedTab"/>
            </div>
        </ActionSwiper>
    </t>
<t t-name="web.SettingsConfirmationDialog" owl="1">
        <Dialog size="'md'" title="props.title" modalRef="modalRef">
            <t t-esc="props.body"/>
            <t t-set-slot="footer" owl="1">
                <button class="btn btn-primary" t-on-click="_confirm">
                    Save
                </button>
                <button class="btn btn-secondary" t-on-click="_stayHere">
                    Stay Here
                </button>
                <button class="btn btn-secondary" t-on-click="_cancel">
                    Discard
                </button>
            </t>
        </Dialog>
    </t>
<t t-name="web.SettingsFormView" owl="1">
        <div t-att-class="className" t-ref="root" class="o-settings-form-view o_field_highlight">
            <div class="o_form_view_container">
                <Layout className="model.useSampleModel ? 'o_view_sample_data' : ''" display="display">
                    <t t-set-slot="layout-buttons">
                        <t t-if="footerArchInfo and env.inDialog">
                            <t t-component="props.Renderer" record="model.root" Compiler="props.Compiler" archInfo="footerArchInfo" enableViewButtons.bind="enableButtons" disableViewButtons.bind="disableButtons"/>
                        </t>
                        <t t-else="">
                            <t t-call="{{ props.buttonTemplate }}"/>
                        </t>
                    </t>
                    <t t-set-slot="control-panel-action-menu">
                        <t t-if="props.info.actionMenus">
                            <ActionMenus getActiveIds="() =&gt; model.root.isVirtual ? [] : [model.root.resId]" context="props.context" items="getActionMenuItems()" isDomainSelected="model.root.isDomainSelected" resModel="model.root.resModel" domain="props.domain" onActionExecuted="() =&gt; model.load({ resId: model.root.resId, resIds: model.root.resIds })" shouldExecuteAction.bind="shouldExecuteAction"/>
                        </t>
                    </t>
                    <t t-set-slot="control-panel-create-button">
                        <t t-if="canCreate">
                            <button type="button" class="btn btn-outline-primary o_form_button_create" data-hotkey="c" t-on-click.stop="create" t-att-disabled="state.isDisabled">New</button>
                        </t>
                    </t>
                    <t t-component="props.Renderer" record="model.root" Compiler="props.Compiler" archInfo="archInfo" setFieldAsDirty.bind="setFieldAsDirty" enableViewButtons.bind="enableButtons" disableViewButtons.bind="disableButtons" onNotebookPageChange.bind="onNotebookPageChange" activeNotebookPages="props.state and props.state.activeNotebookPages" initialApp="initialApp">
            <t t-set-slot="NoContentHelper" isVisible="state.displayNoContent">
                <t t-call="web.NoContentHelper">
                    <t t-set="title" t-value="'No setting found'"/>
                    <t t-set="description" t-value="'Try searching for another keyword'"/>
                </t>
            </t></t>
            <t t-set-slot="control-panel-top-right">
                <div class="o_cp_searchview d-flex flex-grow-1" role="search">
                    <div class="o_searchview pb-1 align-self-center border-bottom flex-grow-1" role="search" aria-autocomplete="list">
                        <i class="o_searchview_icon oi oi-search" role="img" aria-label="Search..." title="Search..."/>
                        <div class="o_searchview_input_container">
                            <input type="text" class="o_searchview_input" accesskey="Q" placeholder="Search..." role="searchbox" t-model="searchState.value" t-ref="autofocus"/>
                        </div>
                    </div>
                </div>
            </t>
                </Layout>
            </div>
        </div>
    </t>

    <t t-name="web.SettingsFormView.Buttons" owl="1">
        <div class="o_cp_buttons" role="toolbar" aria-label="Main actions" t-ref="cpButtons">
            <div t-if="model.root.isInEdition" class="o_form_buttons_edit">
                <button type="button" class="btn btn-primary o_form_button_save" data-hotkey="s" t-on-click.stop="() =&gt; this.saveButtonClicked({closable: true})">
                    Save
                </button>
                <button type="button" class="btn btn-secondary o_form_button_cancel" data-hotkey="j" t-on-click.stop="discard">
                    Discard
                </button>
                <button t-if="props.removeRecord" class="btn btn-secondary o_form_button_remove" t-on-click="props.removeRecord" data-hotkey="x">
                    Remove
                </button>
            <span t-if="model.root.isDirty" class="text-muted ms-2 o_dirty_warning">Unsaved changes</span>
            </div>
            <div t-elif="canCreate" class="o_form_buttons_view">
                <button type="button" class="btn btn-secondary o_form_button_create" data-hotkey="c" t-on-click.stop="create">
                    New
                </button>
            </div>
        </div>
    </t>
<div t-name="res_config_dev_tool" owl="1">
        <div id="developer_tool">
            <t t-set="title">Developer Tools</t>
            <SettingsContainer title="title" class="'row mt16 o_settings_container'">
                <Setting class="'col-12 col-lg-6 o_setting_box'" id="devel_tool">
                    <div class="o_setting_right_pane">
                        <a t-if="!isDebug" class="d-block" href="?debug=1">Activate the developer mode</a>
                        <a t-if="!isAssets" class="d-block" href="?debug=assets">Activate the developer mode (with assets)</a>
                        <a t-if="!isTests" class="d-block" href="?debug=assets,tests">Activate the developer mode (with tests assets)</a>
                        <a t-if="isDebug" class="d-block" href="?debug=">Deactivate the developer mode</a>
                        <a t-if="isDebug and !isDemoDataActive" t-on-click.prevent="onClickForceDemo" class="o_web_settings_force_demo" href="#">Load demo data</a>
                    </div>
                </Setting>
            </SettingsContainer>
        </div>
    </div>
<div t-name="res_config_edition" owl="1">
        <div class="col-12 o_setting_box" id="edition">
            <div class="o_setting_right_pane">
                <div class="user-heading">
                    <h3 class="px-0">
                        Odoo <t t-esc="serverVersion"/>
                        (Community Edition)
                    </h3>
                </div>
                <div>
                    <div class="tab-content">
                        <div role="tabpanel" id="settings" class="tab-pane active text-muted o_web_settings_compact_subtitle">
                            <small>Copyright © 2004 <a target="_blank" href="https://www.odoo.com" style="text-decoration: underline;">Odoo S.A.</a> <a id="license" target="_blank" href="http://www.gnu.org/licenses/lgpl.html" style="text-decoration: underline;">GNU LGPL Licensed</a></small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
<div t-name="res_config_invite_users" owl="1">
        <p class="o_form_label">Invite New Users</p>

        <div class="d-flex">
            <input t-model="state.emails" t-att-disabled="state.status != 'idle'" class="o_user_emails o_input mt8 text-truncate" t-on-keydown="onKeydownUserEmails" type="text" placeholder="Enter e-mail address"/>
            <button t-att-disabled="state.status != 'idle'" class="btn btn-primary o_web_settings_invite flex-shrink-0" t-on-click="sendInvite"><strong><t t-esc="inviteButtonText"/></strong></button>
        </div>
        <t t-if="state.invite.pending_users.length">
            <p class="o_form_label pt-3">Pending Invitations:</p>
            <span t-foreach="state.invite.pending_users" t-as="pending" t-key="pending[0]">
                <a href="#" class="badge rounded-pill text-primary border border-primary o_web_settings_user" t-on-click.prevent="(ev) =&gt; this.onClickUser(ev, pending)"> <t t-esc="pending[1]"/> </a>
            </span>
            <t t-if="state.invite.pending_users.length &lt; state.invite.pending_count">
                <br/>
                <a href="#" class="o_web_settings_more" t-on-click.prevent="onClickMore"><t t-esc="state.invite.pending_count - state.invite.pending_users.length"/> more </a>
            </t>
        </t>
    </div>
<t t-name="web.SwitchCompanyMenu" owl="1">
    <Dropdown class="'o_switch_company_menu d-none d-md-block'" position="'bottom-end'">
        <t t-set-slot="toggler">
            <i class="fa fa-building d-lg-none"/>
            <span class="oe_topbar_name d-none d-lg-block" t-esc="currentCompany.name"/>
        </t>
        <t t-foreach="Object.values(companyService.availableCompanies).sort((c1, c2) =&gt; c1.sequence - c2.sequence)" t-as="company" t-key="company.id">
            <t t-call="web.SwitchCompanyItem">
                <t t-set="company" t-value="company"/>
            </t>
        </t>
    </Dropdown>
</t>


<t t-name="web.SwitchCompanyItem" owl="1">
    <DropdownItem class="'p-0 bg-white'">
        <t t-set="isCompanySelected" t-value="selectedCompanies.includes(company.id)"/>
        <t t-set="isCurrent" t-value="company.id === companyService.currentCompany.id"/>
        <div class="d-flex" data-menu="company" t-att-data-company-id="company.id">
            <div role="menuitemcheckbox" t-att-aria-checked="isCompanySelected ? 'true' : 'false'" t-att-aria-label="company.name" t-att-title="(isCompanySelected ? 'Hide ' : 'Show ') + company.name + ' content.'" tabindex="0" class="border-end toggle_company" t-attf-class="{{isCurrent ? 'border-primary' : ''}}" t-on-click.stop="() =&gt; this.toggleCompany(company.id)">

                <span class="btn btn-light border-0 p-2">
                    <i class="fa fa-fw py-2" t-att-class="isCompanySelected ? 'fa-check-square text-primary' : 'fa-square-o'"/>
                </span>
            </div>

            <div role="button" t-att-aria-pressed="isCurrent ? 'true' : 'false'" t-att-aria-label="'Switch to ' + company.name " t-att-title="'Switch to ' + company.name " tabindex="0" class="d-flex flex-grow-1 align-items-center py-0 log_into ps-2" t-att-class="isCurrent ? 'alert-primary ms-1 me-2' : 'btn btn-light fw-normal border-0'" t-on-click="() =&gt; this.logIntoCompany(company.id)">

                <span class="company_label pe-3" t-att-class="isCurrent ? 'text-900 fw-bold' : 'ms-1'">
                    <t t-esc="company.name"/>
                </span>
            </div>
        </div>
    </DropdownItem>
</t>

<t t-name="web.UserMenu" owl="1">
        <Dropdown class="'o_user_menu d-none d-md-block pe-0'" togglerClass="'py-1 py-lg-0'">
            <t t-set-slot="toggler">
                <img class="rounded-circle o_user_avatar h-75 py-1" t-att-src="source" alt="User"/>
                <span class="oe_topbar_name d-none d-lg-block ms-1"><t t-esc="user.name"/><t t-if="env.debug" t-esc="' (' + user.db.name + ')'"/></span>
            </t>
            <t t-foreach="getElements()" t-as="element" t-key="element_index">
                <t t-if="!element.hide">
                    <DropdownItem t-if="element.type == 'item' || element.type == 'switch'" href="element.href" dataset="{ menu: element.id }" onSelected="element.callback">
                        <CheckBox t-if="element.type == 'switch'" value="element.isChecked" className="'form-switch d-flex flex-row-reverse justify-content-between p-0'" onChange="element.callback">
                            <t t-out="element.description"/>
                        </CheckBox>
                        <t t-else="" t-out="element.description"/>
                    </DropdownItem>
                    <div t-if="element.type == 'separator'" role="separator" class="dropdown-divider"/>
                </t>
            </t>
        </Dropdown>
    </t>

<t t-name="web.UserMenu.ShortcutsFooterComponent" owl="1">
        <span>
            <span class="fw-bolder text-primary">TIP</span> — press <span class="fw-bolder text-primary"><t t-esc="runShortcutKey"/></span> on any screen to show shortcut overlays and <span class="fw-bolder text-primary"><t t-esc="runShortcutKey"/> + KEY</span> to trigger a shortcut.
        </span>
    </t>

<t t-name="web.WebClient" owl="1">
        <t t-if="!state.fullscreen">
            <NavBar/>
        </t>
        <ActionContainer/>
        <MainComponentsContainer/>
    </t>

<t t-name="web.ReportAction" owl="1">
        <div class="o_action">
            <Layout display="{ controlPanel: { 'top-right' : false, 'bottom-right': false } }">
                <t t-set-slot="control-panel-bottom-left">
                    <button t-on-click="print" type="button" class="btn btn-primary" title="Print">Print</button>
                </t>
                <iframe t-ref="iframe" t-on-load="onIframeLoaded" class="h-100 w-100" t-att-src="reportUrl"/>
            </Layout>
        </div>
    </t>

<t t-name="web.Legacy.ControlPanel" owl="1">
    <div class="o_control_panel" data-command-category="actions">
        <div class="o_cp_top">
            <div class="o_cp_top_left">
                <ol t-if="props.withBreadcrumbs" class="breadcrumb" role="navigation">
                    <li t-foreach="props.breadcrumbs" t-as="bc" t-key="bc.controllerID" class="breadcrumb-item" t-att-class="{ o_back_button: bc_index === props.breadcrumbs.length - 1 }" t-att-accesskey="bc_last and 'b'" t-on-click.prevent="()=&gt;this.trigger('breadcrumb-clicked', { controllerID: bc.controllerID })" title="Previous menu">
                        <a href="#">
                            <t t-if="bc.title" t-esc="bc.title"/>
                            <em t-else="" class="text-warning">Unnamed</em>
                        </a>
                    </li>
                    <li class="breadcrumb-item active">
                        <span t-attf-class="{{props.breadcrumbs.length ? 'text-muted' : 'text-900' }}" t-if="props.title" t-esc="props.title"/>
                        <em t-else="" class="text-warning">Unnamed</em>
                    </li>
                </ol>
            </div>
            <div class="o_cp_top_right">
                <div class="o_cp_searchview" role="search" t-ref="searchView">
                    <div t-if="props.withSearchBar" class="o_searchview" role="search" aria-autocomplete="list">
                        <i class="o_searchview_icon oi oi-search" title="Search..." role="img" aria-label="Search..."/>
                        <SearchBar t-if="props.withSearchBar" fields="fields"/>
                    </div>
                </div>
            </div>
        </div>
        <div class="o_cp_bottom">
            <div class="o_cp_bottom_left">
                <div class="o_cp_buttons" role="toolbar" aria-label="Control panel buttons" t-ref="buttons">
                    <t t-slot="buttons"/>
                </div>
                <ActionMenus t-if="props.actionMenus and props.actionMenus.items" t-props="props.actionMenus"/>
            </div>
            <div class="o_cp_bottom_right">
                <div class="btn-group o_search_options position-static" role="search" t-ref="searchViewButtons">
                    <t t-if="props.withSearchBar">
                        <FilterMenu t-if="props.searchMenuTypes.includes('filter')" fields="fields"/>
                        <GroupByMenu t-if="props.searchMenuTypes.includes('groupBy')" fields="fields"/>
                        <ComparisonMenu t-if="props.searchMenuTypes.includes('comparison') and model.get('filters', f =&gt; f.type === 'comparison').length"/>
                        <FavoriteMenu t-if="props.searchMenuTypes.includes('favorite')"/>
                    </t>
                </div>
                <div class="o_cp_pager" role="search" t-ref="pager">
                    <Pager t-if="props.pager and props.pager.limit" t-props="props.pager"/>
                </div>
                <nav t-if="props.views.length gt 1" class="btn-group o_cp_switch_buttons" role="toolbar" aria-label="View switcher">
                    <t t-foreach="props.views" t-as="view" t-key="view.type">
                        <t t-call="web.ViewSwitcherButton"/>
                    </t>
                </nav>
            </div>
        </div>
    </div>
</t>

<t t-name="web.Legacy.ControlPanelX2Many" owl="1">
    <div class="o_x2m_control_panel" t-ref="controlPanel">
        <div class="o_cp_buttons" role="toolbar" aria-label="Control panel buttons" t-ref="buttons">
            <t t-slot="buttons"/>
        </div>
        <div class="o_cp_pager" role="search" t-ref="pager">
            <Pager t-if="_shouldShowPager()" t-props="props.pager"/>
        </div>
    </div>
</t>

<t t-name="web.CustomCheckbox" owl="1">
    <div t-attf-class="{{ props.text ? 'form-check' : '' }}" t-att-class="props.class">
        <input t-att-id="props.id or _id" type="checkbox" class="form-check-input" t-att-disabled="props.disabled" t-att-checked="props.value" t-on-change="(ev) =&gt; props.onChange(ev.target.checked)"/>
        <label t-att-for="props.id or _id" class="form-check-label">
            <t t-esc="props.text or '​'"/>
        </label>
    </div>
</t>

<t t-name="web.CustomFileInput" owl="1">
    <span class="o_file_input" aria-atomic="true" t-on-uploaded="(ev) =&gt; props.onUpload(ev.detail.files)">
        <span class="o_file_input_trigger" t-on-click.prevent="() =&gt; this._onTriggerClicked()">
            <t t-slot="default">
                <button class="btn btn-primary">Choose File</button>
            </t>
        </span>
        <input type="file" name="ufile" class="o_input_file d-none" t-att="{multiple: props.multi_upload, accept: props.accepted_file_extensions}" t-ref="file-input" t-on-change="() =&gt; this._onFileInputChange()"/>
    </span>
</t>

<t t-name="web.Legacy.DatePicker" owl="1">
    <div class="o_datepicker" aria-atomic="true" t-att-id="datePickerId" data-target-input="nearest">
        <input type="text" class="o_datepicker_input o_input datetimepicker-input" t-att-name="props.name" t-att-placeholder="props.placeholder" t-attf-data-target="#{ '#' + datePickerId }" t-att-readonly="props.readonly" t-ref="autofocus" t-on-change="_onInputChange" t-on-click="_onInputClick"/>
        <span t-if="props.warn_future and state.warning" class="fa fa-exclamation-triangle text-danger o_tz_warning o_datepicker_warning">
            <t>This date is on the future. Make sure it is what you expected.</t>
        </span>
        <span class="o_datepicker_button"/>
    </div>
</t>

<t t-name="web.DialogButton.tooltip" owl="1">
    <div class="oe_tooltip_string" role="tooltip">
        <div class="tooltip-inner">
            <t>Hit ENTER to <t t-esc="title"/></t>
        </div>
    </div>
</t>

<t t-name="web.DropdownMenu" owl="1">
    <div class="btn-group dropdown" t-att-class="{ show: state.open }">
        <button type="button" class="dropdown-toggle btn btn-secondary o-no-caret" t-attf-class="{{ icon || displayCaret || displayChevron ? 'd-flex align-items-center ' : ''}} {{ displayCaret || displayChevron ? 'pe-1 ' : ''}}" t-att-aria-expanded="state.open ? 'true' : 'false'" tabindex="-1" t-on-click="() =&gt; { state.open = !state.open }" t-on-keydown="_onButtonKeydown" t-att-title="props.hotkeyTitle" t-att-data-hotkey="props.hotkey">
            <i t-if="icon" t-att-class="icon + ' small me-1'"/>
            <span class="o_dropdown_title" t-esc="title"/>
            <i t-if="displayCaret" t-attf-class="o_dropdown_caret fa fa-fw fa-caret-{{ state.open ? 'down' : 'right' }}"/>
            <i t-elif="displayChevron" t-attf-class="o_dropdown_chevron fa fa-fw ms-auto fa-chevron-{{ state.open ? 'down' : 'right' }}"/>
        </button>
        <ul t-if="state.open" t-attf-class="o-dropdown-menu {{ dropdownMenuAlignClass }} show" role="menu" t-on-item-selected="_onItemSelected">
            <t t-set="currentGroup" t-value="null"/>
            <t t-foreach="items" t-as="item" t-key="item.key || item.id || ('item-' + item_index)">
                <li t-if="currentGroup !== null and currentGroup !== item.groupNumber" class="dropdown-divider" role="separator"/>
                <t t-if="item.Component" t-component="item.Component" t-props="item.props"/>
                <DropdownMenuItem t-else="" t-props="item"/>
                <t t-set="currentGroup" t-value="item.groupNumber"/>
            </t>
        </ul>
    </div>
</t>

<t t-name="web.DropdownMenuItem" owl="1">
    <li class="o_menu_item" role="menuitem" t-on-keydown="_onKeydown">
        <t t-if="canBeOpened">
            <a class="o_menu_item_parent dropdown-item d-flex align-items-center justify-content-between" t-att-class="{ selected: props.isActive }" t-att-aria-checked="props.isActive ? 'true' : 'false'" role="menuitemcheckbox" href="#" t-ref="fallback-focus" t-on-click.prevent="() =&gt; { state.open = !state.open }">
                <t t-esc="props.description"/>
                <i t-attf-class="o_icon_right fa fa-fw mr-n4 fa-caret-{{ state.open ? 'down' : 'right' }}"/>
            </a>
            <ul t-if="state.open" class="o_menu_item_options pb-2 list-unstyled">
                <t t-set="currentGroup" t-value="null"/>
                <t t-foreach="props.options" t-as="option" t-key="option_index">
                    <li t-if="currentGroup !== null and currentGroup !== option.groupNumber" class="dropdown-divider" role="separator"/>
                    <li class="o_item_option" role="menuitem">
                        <a class="dropdown-item ps-5" t-att-class="{ selected: option.isActive }" t-att-aria-checked="option.isActive ? 'true' : 'false'" role="menuitemcheckbox" t-att-href="option.url or '#'" t-esc="option.description" t-on-click.prevent="() =&gt; this.trigger('item-selected', { item: props, option: option })"/>
                    </li>
                    <t t-set="currentGroup" t-value="option.groupNumber"/>
                </t>
            </ul>
        </t>
        <a t-else="" class="dropdown-item" t-att-class="{                 selected: props.isActive,                 [props.className]: props.className,                 'd-flex': props.removable,                 'align-items-center': props.removable,                 'justify-content-between': props.removable             }" t-att-aria-checked="props.isActive ? 'true' : 'false'" role="menuitemcheckbox" t-att-href="props.url or '#'" t-on-click.prevent="() =&gt; this.trigger('item-selected', { item: props })">
            <t t-esc="props.description"/>
            <i t-if="props.removable" class="o_icon_right fa fa-trash btn btn-link text-danger p-0 mr-n3" title="Delete item" t-on-click.stop.prevent="() =&gt; this.trigger('remove-item', { item: props })"/>
        </a>
    </li>
</t>

<t t-name="web.OwlDialog" owl="1">
    <t t-portal="'body'">
        <div class="o_dialog" t-on-focus="_onFocus" t-on-click="_onClick" t-on-dialog-closed="_onDialogClosed" t-ref="dialog">
            <div role="dialog" class="modal" tabindex="-1" t-att-class="{ o_technical_modal: props.technical, o_modal_full: props.fullscreen }" t-att-data-bs-backdrop="'' + props.backdrop" t-ref="modal" t-on-close_dialog.stop="_close" t-on-click="_onBackdropClick">
                <div class="modal-dialog" t-att-class="size">
                    <div class="modal-content" t-att-class="props.contentClass">
                        <header t-if="props.renderHeader" class="modal-header">
                            <h4 class="modal-title">
                                <t t-esc="props.title"/>
                                <span t-if="props.subtitle" class="o_subtitle text-muted small" t-esc="props.subtitle"/>
                            </h4>
                            <button type="button" class="btn-close" aria-label="Close" tabindex="-1" t-on-click="_close"/>
                        </header>
                        <main class="modal-body">
                            <t t-slot="default"/>
                        </main>
                        <footer t-if="props.renderFooter" class="modal-footer justify-content-around justify-content-sm-start flex-wrap gap-1" t-ref="modal-footer">
                            <t t-slot="buttons" close="_close">
                                <button class="btn btn-primary" t-on-click.prevent="_close">
                                    <t>Ok</t>
                                </button>
                            </t>
                        </footer>
                    </div>
                </div>
            </div>
        </div>
    </t>
</t>

<t t-name="Popover" owl="1">
    <div t-att-class="{ 'o_is_open': state.displayed }" t-attf-class="{{ props.class }}" t-att-title="props.titleAttribute" t-on-click="_onClick" t-on-o-popover-compute="_onPopoverCompute" t-on-o-popover-close="_onPopoverClose">
        <t t-slot="default"/>
        <t t-portal="'body'" t-if="state.displayed">
            <div role="tooltip" class="o_popover" t-att-class="props.popoverClass" t-ref="popover">
                <div class="arrow"/>
                <h3 t-if="props.title" class="o_popover_header"><t t-esc="props.title"/></h3>
                <div class="popover-body" t-on-o-popover-close="_onPopoverClose">
                    <t t-slot="opened"/>
                </div>
            </div>
        </t>
    </div>
</t>

<t t-name="web.legacy.Pager" owl="1">
    <nav class="o_pager align-items-center d-flex gap-2" aria-label="Pager">
        <span class="o_pager_counter" t-on-click.stop="">
            <input t-if="state.editing" type="text" class="o_pager_value o_input d-inline-block w-auto text-end" size="7" t-ref="autofocus" t-att-value="value" t-on-blur="() =&gt; { this.state.editing = false }" t-on-change="_onValueChange" t-on-keydown.stop="_onValueKeydown"/>
            <span t-else="" class="o_pager_value d-inline-block border-bottom border-white" t-esc="value" t-on-click="_onEdit"/>
            <span> / </span>
            <span class="o_pager_limit" t-esc="props.size"/>
        </span>
        <span class="btn-group" aria-atomic="true">

            <button type="button" class="fa fa-chevron-left px-2 btn btn-secondary o_pager_previous rounded-start" t-att-disabled="state.disabled || singlePage" t-att-accesskey="props.withAccessKey ? 'p' : false" aria-label="Previous page" title="Previous page" tabindex="-1" t-on-click="ev =&gt; this._changeSelection(-1, ev)"/>
            <button type="button" class="fa fa-chevron-right px-2 btn btn-secondary o_pager_next rounded-end" t-att-disabled="state.disabled || singlePage" t-att-accesskey="props.withAccessKey ? 'n' : false" aria-label="Next page" title="Next page" tabindex="-1" t-on-click="ev =&gt; this._changeSelection(1, ev)"/>
        </span>
    </nav>
</t>

<t t-name="web.Legacy.SearchBar" owl="1">
    <div class="o_searchview_input_container">
        <div t-foreach="model.get('facets')" t-as="facet" t-key="facet_index" tabindex="0" class="o_searchview_facet" role="img" aria-label="search" t-on-keydown="(ev) =&gt; this._onFacetKeydown(facet, facet_index, ev)">
            <span t-if="facet.icon" t-attf-class="o_searchview_facet_label text-bg-odoo {{ facet.icon }}"/>
            <span t-else="" class="o_searchview_facet_label text-bg-odoo" t-esc="facet.title"/>
            <div class="o_facet_values border border-odoo border-start-0">
                <t t-foreach="facet.values" t-as="facetValue" t-key="facetValue_index">
                    <span t-if="!facetValue_first" class="o_facet_values_sep" t-esc="facet.separator"/>
                    <span class="o_facet_value" t-esc="facetValue"/>
                </t>
            </div>
            <i class="o_facet_remove oi oi-close ms-1" role="img" aria-label="Remove" title="Remove" t-on-click="()=&gt;this._onFacetRemove(facet)"/>
        </div>
        <input type="text" class="o_searchview_input" t-att-autofocus="!env.device.isMobileDevice" accesskey="Q" placeholder="Search..." role="searchbox" title="Search for records" t-ref="autofocus" t-on-keydown="_onSearchKeydown" t-on-input="_onSearchInput"/>
        <ul t-if="state.sources.length" class="dropdown-menu o_searchview_autocomplete dropdown-menu show" role="menu">
            <li t-foreach="state.sources" t-as="src" t-key="src.id" t-att-id="src.id" class="o_menu_item dropdown-item" t-att-class="{ o_indent: src.parent and !src.parent.selection, focus: src_index === state.focusedItem}" t-on-click="()=&gt;this._selectSource(src)" t-on-mousemove="()=&gt;this._onSourceMousemove(src_index)">
                <a t-if="src.expand" href="#" class="o_expand" t-on-click.stop.prevent="()=&gt;this._expandSource(src, !src.expanded)">
                    <i t-attf-class="fa fa-caret-{{ src.expanded ? 'down' : 'right' }}"/>
                </a>
                <a href="#" t-on-click.prevent="">
                    <t t-if="src.parent.selection">
                        Search <b t-esc="src.parent.description"/>: <b class="fst-italic text-primary" t-esc="src.label"/></t>
                    <t t-elif="src.label" t-esc="src.label"/>
                    <t t-elif="['date', 'datetime'].includes(src.type)">
                        <t>Search <b t-esc="src.description"/> at: <b class="fst-italic text-primary" t-esc="state.inputValue"/></t>
                    </t>
                    <t t-else="">Search <b t-esc="src.description"/> for: <b class="fst-italic text-primary" t-esc="state.inputValue"/></t>
                </a>
            </li>
        </ul>
    </div>
</t>

<t t-name="web.Legacy.ActionMenus" owl="1">
    <div class="o_cp_action_menus" t-on-item-selected.stop="_onItemSelected">
        <DropdownMenu t-if="printItems.length" title="printButtonStrings.title" items="printItems" icon="'fa fa-print'" hotkey="'shift+u'" hotkeyTitle="printButtonStrings.hotkey"/>
        <DropdownMenu t-if="actionItems.length" title="actionButtonStrings.title" items="actionItems" icon="'fa fa-cog'" closeOnSelected="true" hotkey="'u'" hotkeyTitle="actionButtonStrings.hotkey"/>
    </div>
</t>

<t t-name="web.ViewSwitcherButton" owl="1">
    <t t-set="buttonLabel">View %s</t>
    <button type="button" t-att-accesskey="view.accessKey" t-attf-class="btn btn-light o_switch_view o_{{ view.type }} {{ view.icon }}" t-att-class="{ active: env.view.type === view.type }" t-att-aria-label="sprintf(buttonLabel.toString(), view.type)" t-att-data-tooltip="view.name" tabindex="-1" t-on-click="() =&gt; this.trigger('switch-view', { view_type: view.type })"/>
</t>



<div t-name="EmptyComponent"/>

<t t-name="WidgetLabel.tooltip">
    <div class="oe_tooltip_string" t-if="widget.string" role="tooltip">
        <t t-esc="widget.string"/> <t t-if="debug and widget.nolabel">(nolabel)</t>
    </div>
    <p t-if="help" class="oe_tooltip_help" role="tooltip">
        <t t-esc="help"/>
    </p>
    <ul t-if="debug" class="oe_tooltip_technical" role="tooltip">
        <li data-item="field" t-if="widget.name">
            <span class="oe_tooltip_technical_title">Field:</span>
            <t t-esc="widget.name"/>
        </li>
        <li data-item="object">
            <span class="oe_tooltip_technical_title">Object:</span>
            <t t-esc="widget.model"/>
        </li>
        <li data-item="type">
            <span class="oe_tooltip_technical_title">Type:</span>
            <t t-esc="widget.field.type"/>
        </li>
        <li t-if="widget.attrs.widget" data-item="widget">
            <span class="oe_tooltip_technical_title">Widget:</span>
            <t t-set="description" t-value="widget.attrs.Widget.prototype.description"/>
            <t t-if="description">
                <t t-esc="description"/> (<t t-esc="widget.attrs.widget"/>)
            </t>
            <t t-else="1">
                <t t-esc="widget.attrs.widget"/>
            </t>
        </li>
        <li t-if="widget.attrs.size || widget.field.size" data-item="size">
            <span class="oe_tooltip_technical_title">Size:</span>
            <t t-esc="widget.attrs.size || widget.field.size"/>
        </li>
        <li t-if="widget.attrs.context || widget.field.context" data-item="context">
            <span class="oe_tooltip_technical_title">Context:</span>
            <t t-esc="widget.attrs.context || JSON.stringify(widget.field.context)"/>
        </li>
        <li t-if="widget.attrs.domain || widget.field.domain" data-item="domain">
            <span class="oe_tooltip_technical_title">Domain:</span>
            <t t-esc="widget.attrs.domain || JSON.stringify(widget.field.domain)"/>
        </li>
        <li t-if="widget.attrs.modifiers and !_.isEmpty(widget.attrs.modifiers)" data-item="modifiers">
            <span class="oe_tooltip_technical_title">Modifiers:</span>
            <t t-esc="JSON.stringify(widget.attrs.modifiers)"/>
        </li>
        <li t-if="widget.field and widget.field.change_default" data-item="change_default">
            <span class="oe_tooltip_technical_title">Change default:</span>
            Yes
        </li>
        <li t-if="widget.attrs.on_change" data-item="on_change">
            <span class="oe_tooltip_technical_title">On change:</span>
            <t t-esc="widget.attrs.on_change"/>
        </li>
        <li t-if="widget.field and widget.field.relation" data-item="relation">
            <span class="oe_tooltip_technical_title">Relation:</span>
            <t t-esc="widget.field.relation"/>
        </li>
        <li t-if="widget.field and widget.field.selection" data-item="selection">
            <span class="oe_tooltip_technical_title">Selection:</span>
            <ul class="oe_tooltip_technical">
                <li t-foreach="widget.field.selection" t-as="option" t-key="option_index">
                    [<t t-esc="option[0]"/>]
                    <t t-if="option[1]"> - </t>
                    <t t-esc="option[1]"/>
                </li>
            </ul>
        </li>
    </ul>
</t>
<t t-name="WidgetButton.tooltip">
    <div class="oe_tooltip_string" t-if="debug || node.attrs.string" role="tooltip">
        <t t-if="debug">
            Button
            <t t-if="node.attrs.string">: </t>
            <t t-if="!node.attrs.string"> (no string)</t>
        </t>
        <t t-esc="node.attrs.string"/>
    </div>
    <p t-if="node.attrs.help" class="oe_tooltip_help" role="tooltip">
        <t t-esc="node.attrs.help"/>
    </p>
    <ul t-if="debug" class="oe_tooltip_technical" role="tooltip">
        <li data-item="object">
            <span class="oe_tooltip_technical_title">Object:</span>
            <t t-esc="state.model"/>
        </li>
        <li t-if="node.attrs.context" data-item="context">
            <span class="oe_tooltip_technical_title">Context:</span>
            <t t-esc="node.attrs.context || widget.field.context"/>
        </li>
        <li t-if="node.attrs.modifiers and !_.isEmpty(node.attrs.modifiers)" data-item="modifiers">
            <span class="oe_tooltip_technical_title">Modifiers:</span>
            <t t-esc="JSON.stringify(node.attrs.modifiers)"/>
        </li>
        <li t-if="node.attrs.special" data-item="special">
            <span class="oe_tooltip_technical_title">Special:</span>
            <t t-esc="node.attrs.special"/>
        </li>
        <t t-set="button_type" t-value="node.attrs.type"/>
        <li t-if="button_type" data-item="button_type">
            <span class="oe_tooltip_technical_title">Button Type:</span>
            <t t-esc="button_type"/>
        </li>
        <li t-if="button_type === 'object'" data-item="button_method">
            <span class="oe_tooltip_technical_title">Method:</span>
            <t t-esc="node.attrs.name"/>
        </li>
        <li t-if="button_type === 'action'" data-item="button_action">
            <span class="oe_tooltip_technical_title">Action ID:</span>
            <t t-esc="node.attrs.name"/>
        </li>
    </ul>
</t>

<div t-name="Action" class="o_action">
    <div class="o_content"/>
</div>

<t t-name="ListView.buttons">
    <div class="o_legacy_list_buttons d-flex" role="toolbar" aria-label="Main actions">
        <button type="button" class="btn btn-primary o_list_button_save" title="Save record" accesskey="s">
            Save
        </button>
        <button type="button" class="btn btn-secondary o_list_button_discard" title="Discard record" accesskey="j">
            Discard
        </button>
        <t t-if="widget.is_action_enabled('create')">
            <button type="button" class="btn btn-primary o_list_button_add" title="Create record" accesskey="c">
                Create
            </button>
        </t>
        <t t-if="widget.is_action_enabled('export_xlsx') and widget.isExportEnable">
            <button type="button" class="btn btn-secondary fa fa-download o_list_export_xlsx" title="Export All" aria-label="Export All"/>
        </t>
    </div>
</t>

<t t-name="ListView.selection">
    <div class="o_list_selection_box alert alert-info d-inline-flex align-items-center ps-0 px-lg-2 py-0 mb-0 ms-2" role="alert">
        <span t-if="isDomainSelected">All <span class="font-monospace" t-esc="nbTotal"/> selected</span>
        <t t-else="">
            <span class="font-monospace me-1" t-esc="nbSelected"/> selected
            <a t-if="isPageSelected and nbTotal &gt; nbSelected" href="#" class="o_list_select_domain ms-2 btn btn-sm btn-info px-2 py-1 border-0 fw-normal">
                <i class="fa fa-arrow-right"/> Select all <span class="font-monospace" t-esc="nbTotal"/>
            </a>
        </t>
    </div>
</t>

<t t-name="ListView.confirmModal">
    <main role="alert">
        <p>
            <t t-if="isDomainSelected">This update will only consider the records of the current page.<br/><br/></t>
            <t t-if="nbRecords != nbValidRecords">
                Among the <t t-esc="nbRecords"/> selected records,
                <t t-esc="nbValidRecords"/> are valid for this update.<br/>
            </t>
            Are you sure you want to perform the following update on those <t t-esc="nbValidRecords"/> records ?
        </p>
        <div class="table-responsive">
            <table class="o_modal_changes">
                <tbody>
                    <t t-foreach="fields" t-as="field" t-key="field_index">
                        <tr>
                            <td>Field:</td>
                            <td><t t-esc="field.label"/></td>
                        </tr>
                        <tr>
                            <td>Update to:</td>
                            <td>
                                <div class="o_changes_widget" t-att-data-name="field.name"/>
                            </td>
                        </tr>
                    </t>
                </tbody>
            </table>
        </div>
    </main>
</t>

<t t-name="FormView.buttons">
    <div class="o_form_buttons_view" role="toolbar" aria-label="Main actions">
        <button t-if="widget.is_action_enabled('edit')" type="button" class="btn btn-primary o_form_button_edit" title="Edit record" accesskey="a">
            Edit
        </button>
        <button t-if="widget.is_action_enabled('create')" type="button" class="btn btn-secondary o_form_button_create" title="Create record" accesskey="c">
            Create
        </button>
    </div>
    <div class="o_form_buttons_edit" role="toolbar" aria-label="Main actions">
        <button type="button" class="btn btn-primary o_form_button_save" title="Save record" accesskey="s">
            Save
        </button>
        <button type="button" class="btn btn-secondary o_form_button_cancel" title="Discard record" accesskey="j">
            Discard
        </button>
    </div>
</t>
<t t-name="SaveCancelButton.tooltip">
    <div class="oe_tooltip_string" role="alert">
        <div class="tooltip-inner">
            Hit ENTER to SAVE<br/>
            Hit ESCAPE to DISCARD
        </div>
    </div>
</t>
<t t-name="CreateButton.tooltip">
    <div class="oe_tooltip_string" role="tooltip">
        <div class="tooltip-inner">
            Hit ENTER to CREATE<br/>
            Hit DOWN to navigate to the list below
        </div>
    </div>
</t>
<t t-name="FormButton.tooltip">
    <div class="oe_tooltip_string" role="tooltip">
        <div class="tooltip-inner">
            Hit ENTER to
            <t t-esc="title"/>
        </div>
    </div>
</t>
<form t-name="FormView.set_default" aria-atomic="true">
    <t t-set="args" t-value="widget.args"/>
    <table style="width: 100%">
        <tr>
            <td>
                <label for="formview_default_fields" class="oe_label oe_align_right">
                    Default:
                </label>
            </td>
            <td class="oe_form_required">
                <select id="formview_default_fields" class="o_input">
                    <option value=""/>
                    <option t-foreach="args.fields" t-as="field" t-key="field_index" t-att-value="field.name">
                        <t t-esc="field.string"/> = <t t-esc="field.displayed"/>
                    </option>
                </select>
            </td>
        </tr>
        <tr t-if="args.conditions.length">
            <td>
                <label for="formview_default_conditions" class="oe_label oe_align_right">
                    Condition:
                </label>
            </td>
            <td>
                <select id="formview_default_conditions" class="o_input">
                    <option value=""/>
                    <option t-foreach="args.conditions" t-as="cond" t-key="cond_index" t-att-value="cond.name + '=' + cond.value">
                        <t t-esc="cond.string"/>=<t t-esc="cond.displayed"/>
                    </option>
                </select>
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <input type="radio" id="formview_default_self" value="self" name="scope" checked="checked"/>
                <label for="formview_default_self" class="oe_label" style="display: inline;">
                    Only you
                </label>
                <br/>
                <input type="radio" id="formview_default_all" value="all" name="scope"/>
                <label for="formview_default_all" class="oe_label" style="display: inline;">
                    All users
                </label>
            </td>
        </tr>
    </table>
</form>
<t t-name="GraphView.buttons">
    <div class="btn-group mb-2 mb-sm-auto" role="toolbar" aria-label="Main actions"/>
    <div class="btn-group o_graph_align mb-2 mb-sm-auto" role="toolbar" aria-label="Change graph">
        <button class="btn btn-secondary o_graph_button fa fa-bar-chart" title="Bar Chart" aria-label="Bar Chart" data-mode="bar"/>
        <button class="btn btn-secondary o_graph_button fa fa-area-chart" title="Line Chart" aria-label="Line Chart" data-mode="line"/>
        <button class="btn btn-secondary o_graph_button fa fa-pie-chart" title="Pie Chart" aria-label="Pie Chart" data-mode="pie"/>
    </div>
    <div class="btn-group o_stack_align mb-2 mb-sm-auto" role="toolbar" aria-label="Change graph">
        <button class="btn btn-secondary o_graph_button fa fa-database" title="Stacked" aria-label="Stacked" data-mode="stack"/>
    </div>
    <div class="btn-group o_sort_align mb-2 mb-sm-auto" role="toolbar" aria-label="Sort graph">
        <button class="btn btn-secondary o_graph_button fa fa-sort-amount-desc" title="Descending" aria-label="Descending" data-order="desc"/>
        <button class="btn btn-secondary o_graph_button fa fa-sort-amount-asc" title="Ascending" aria-label="Ascending" data-order="asc"/>
    </div>
</t>

<t t-name="PivotView.buttons">
    <div class="btn-group" role="toolbar" aria-label="Main actions">
        <button class="btn btn-primary dropdown-toggle o-no-caret" data-bs-toggle="dropdown" aria-expanded="false">
            Measures <i class="fa fa-caret-down ms-1"/>
        </button>
        <div class="dropdown-menu o_pivot_measures_list" role="menu">
            <t t-foreach="measures" t-as="measure" t-key="measure_index">
                <a role="menuitem" href="#" class="dropdown-item" t-att-data-field="measure[0]"><t t-esc="measure[1].string"/><t t-if="measure[1].type === 'many2one'"> (count)</t></a>
            </t>
            <div role="separator" class="dropdown-divider"/>
            <a role="menuitem" href="#" class="dropdown-item" data-field="__count">Count</a>
        </div>
    </div>
    <div class="btn-group" role="toolbar" aria-label="Pivot settings">
        <button class="btn btn-secondary fa fa-exchange o_pivot_flip_button" title="Flip axis" aria-label="Flip axis"/>
        <button class="btn btn-secondary fa fa-arrows o_pivot_expand_button" title="Expand all" aria-label="Expand all"/>
        <button class="btn btn-secondary fa fa-download o_pivot_download" title="Download xlsx" aria-label="Download xlsx"/>
    </div>
</t>

<t t-name="FormSelection">
    <div class="btn-group o_selection" aria-atomic="true">
        <a href="#" data-bs-toggle="dropdown" aria-expanded="false" role="button" title="Dropdown menu">
            <span class="o_status d-inline-block align-middle"/>
        </a>
        <div class="dropdown-menu state" role="menu"/>
    </div>
</t>
<t t-name="FormSelection.items">
    <t t-foreach="states" t-as="rec" t-key="rec_index">
        <a role="menuitem" href="#" class="dropdown-item ps-4" t-att-data-value="rec.name">
            <span t-att-class="'o_status rounded-circle d-inline-block align-middle ' + (rec.state_class &amp;&amp; rec.state_class || '')"/>
            <t t-out="rec.state_name"/>
        </a>
    </t>
</t>
<t t-name="FieldDomain.content">
    <div t-if="hasModel" class="o_field_domain_panel">
        <t t-if="nbRecords !== null">
            <i class="fa fa-arrow-right" role="img" aria-label="Domain" title="Domain"/>
            <button t-if="isValid" class="btn btn-sm btn-secondary o_domain_show_selection_button" type="button">
                <t t-esc="nbRecords"/> record(s)
            </button>
            <span t-else="" class="text-warning" role="alert"><i class="fa fa-exclamation-triangle" role="img" aria-label="Warning" title="Warning"/> Invalid domain</span>
            <button t-if="isDebug and editMode" class="btn btn-sm btn-icon fa fa-refresh o_refresh_count" role="img" aria-label="Refresh" title="Refresh"/>
        </t>
        <t t-else="">
            <i class="fa fa-circle-o-notch fa-spin" role="img" aria-label="Loading" title="Loading"/>
        </t>

        <button t-if="inDialog and editMode" class="btn btn-sm btn-primary o_field_domain_dialog_button">Edit Domain</button>
    </div>
    <div t-else="">Select a model to add a filter.</div>
</t>

<t t-name="DomainNode.ControlPanel">
    <div t-if="!widget.readonly &amp;&amp; !widget.noControlPanel" class="o_domain_node_control_panel" role="toolbar" aria-label="Domain node">
        <button class="btn btn-link text-danger o_domain_delete_node_button" title="Delete node" aria-label="Delete node"><i class="fa fa-times"/></button>
        <button class="btn o_domain_add_node_button" title="Add node" aria-label="Add node"><i class="fa fa-plus-circle"/></button>
        <button class="btn o_domain_add_node_button" title="Add branch" aria-label="Add branch" data-branch="1"><i class="fa fa-ellipsis-h"/></button>
    </div>
</t>
<t t-name="DomainTree.OperatorSelector">
    <div t-if="!widget.readonly" class="btn-group o_domain_tree_operator_selector" aria-atomic="true">
        <button class="btn btn-sm btn-primary o_domain_tree_operator_caret" data-bs-toggle="dropdown">
            <t t-if="widget.operator === '&amp;'">All</t>
            <t t-if="widget.operator === '|'">Any</t>
            <t t-if="widget.operator === '!'">None</t>
        </button>
        <div class="dropdown-menu" role="menu">
            <a role="menuitem" href="#" class="dropdown-item" data-operator="&amp;">All</a>
            <a role="menuitem" href="#" class="dropdown-item" data-operator="|">Any</a>
        </div>
    </div>
    <strong t-else="">
        <t t-if="widget.operator === '&amp;'">ALL</t>
        <t t-if="widget.operator === '|'">ANY</t>
        <t t-if="widget.operator === '!'">NONE</t>
    </strong>
</t>
<div aria-atomic="true" t-name="DomainSelector" t-attf-class="o_domain_node o_domain_tree o_domain_selector #{widget.readonly ? 'o_read_mode' : 'o_edit_mode'}">
    <t t-if="widget.children.length === 0">
        <span>Match <strong>all records</strong></span>
        <button t-if="!widget.readonly" class="btn btn-sm btn-primary o_domain_add_first_node_button"><i class="fa fa-plus"/> Add filter</button>
    </t>
    <t t-else="">
        <div class="o_domain_tree_header">
            <t t-if="widget.children.length === 1">Match records with the following rule:</t>
            <t t-else="">
                <span>Match records with</span>
                <t t-call="DomainTree.OperatorSelector"/>
                <span>of the following rules:</span>
            </t>
        </div>

        <div class="o_domain_node_children_container"/>
    </t>
    <label t-if="widget.debug &amp;&amp; !widget.readonly" class="o_domain_debug_container">
        <span class="small"># Code editor</span>
        <textarea type="text" class="o_domain_debug_input"/>
    </label>
</div>
<div t-name="DomainTree" class="o_domain_node o_domain_tree">
    <div class="o_domain_tree_header o_domain_selector_row">
        <t t-call="DomainNode.ControlPanel"/>
        <t t-call="DomainTree.OperatorSelector"/>
        <span class="ml4">of:</span>
    </div>

    <div class="o_domain_node_children_container"/>
</div>
<div t-name="DomainLeaf" t-attf-class="o_domain_node o_domain_leaf o_domain_selector_row #{widget.readonly ? 'o_read_mode' : 'o_edit_mode'}">
    <t t-call="DomainNode.ControlPanel"/>

    <div t-if="!widget.readonly" class="o_domain_leaf_edition">

        <div> 
            <select class="o_domain_leaf_operator_select o_input">
                <option t-foreach="widget.operators" t-as="key" t-key="key_index" t-att-value="key" t-att-selected="widget.displayOperator === key ? 'selected' : None">
                    <t t-esc="key_value"/>
                </option>
            </select>
        </div>
        <div t-attf-class="o_ds_value_cell#{_.contains(['set', 'not set'], widget.displayOperator) ? ' d-none' : ''}">
            <t t-if="widget.selectionChoices !== null">
                <select class="o_domain_leaf_value_input o_input">
                    <option t-foreach="widget.selectionChoices" t-as="val" t-key="val_index" t-att-value="val[0]" t-att-selected="_.contains(val, widget.displayValue) ? 'selected' : None">
                        <t t-esc="val[1]"/>
                    </option>
                </select>
            </t>
            <t t-else="">
                <t t-if="_.contains(['in', 'not in'], widget.operator)">
                    <div class="o_domain_leaf_value_input">
                        <span class="badge rounded-pill" t-foreach="widget.displayValue" t-as="val" t-key="val_index">
                            <t t-esc="val"/> <i class="o_domain_leaf_value_remove_tag_button fa fa-times" t-att-data-value="val" role="img" aria-label="Remove tag" title="Remove tag"/>
                        </span>
                    </div>
                    <div class="o_domain_leaf_value_tags">
                        <input placeholder="Add new value" type="text" class="o_input"/>
                        <button class="btn btn-sm btn-primary fa fa-plus o_domain_leaf_value_add_tag_button" aria-label="Add tag" title="Add tag"/>
                    </div>
                </t>
                <t t-else="">
                    <input class="o_domain_leaf_value_input o_input" type="text" t-att-value="widget.displayValue"/>
                </t>
            </t>
        </div>
    </div>
    <div t-else="" class="o_domain_leaf_info">

        <t t-if="_.isString(widget.value)">
            <span class="o_domain_leaf_operator"><t t-esc="widget.operator_mapping[widget.operator]"/></span>
            <span class="o_domain_leaf_value text-primary">"<t t-esc="widget.value"/>"</span>
        </t>
        <t t-if="_.isArray(widget.value)">
            <span class="o_domain_leaf_operator"><t t-esc="widget.operator_mapping[widget.operator]"/></span>
            <t t-foreach="widget.value" t-as="v" t-key="v_index">
                <span class="o_domain_leaf_value text-primary">"<t t-esc="v"/>"</span>
                <t t-if="!v_last"> or </t>
            </t>
        </t>
        <t t-if="_.isNumber(widget.value)">
            <span class="o_domain_leaf_operator"><t t-esc="widget.operator_mapping[widget.operator]"/></span>
            <span class="o_domain_leaf_value text-primary"><t t-esc="widget.value"/></span>
        </t>
        <t t-if="_.isBoolean(widget.value)">
            is
            <t t-if="widget.operator === '=' &amp;&amp; widget.value === false || widget.operator === '!=' &amp;&amp; widget.value === true">not</t>
            set
        </t>
    </div>
</div>
<div aria-atomic="true" t-name="ModelFieldSelector" t-attf-class="o_field_selector o_legacy_field_selector#{!widget.options.readonly ? ' o_edit_mode o_input' : ''}">
    <div class="o_field_selector_value" tabindex="0"/>
    <div class="o_field_selector_controls" tabindex="0">
        <i role="alert" class="fa fa-exclamation-triangle o_field_selector_warning d-none" title="Invalid field chain" aria-label="Invalid field chain"/>
    </div>
</div>
<div t-name="ModelFieldSelector.popover" class="o_field_selector_popover o_legacy_field_selector_popover d-none" tabindex="0">
    <div class="o_field_selector_popover_header text-center">
        <i class="fa fa-arrow-left o_field_selector_popover_option o_field_selector_prev_page" title="Previous" role="img" aria-label="Previous"/>
        <div class="o_field_selector_title"/>
        <i class="fa fa-times o_field_selector_popover_option o_field_selector_close" title="Close" role="img" aria-label="Close"/>
        <div t-if="widget.options.showSearchInput" class="o_field_selector_search mt-2">
            <input type="text" placeholder="Search a field..." class="o_input"/>
        </div>
        <div t-if="widget.options.needDefaultValue" class="o_field_selector_default_value_input mt-2 d-none">
            <input type="text" placeholder="type a default text or press ENTER" class="o_input"/>
        </div>
    </div>
    <div class="o_field_selector_popover_body">
        <ul class="o_field_selector_page"/>
    </div>
    <div t-if="widget.options.debugMode" class="o_field_selector_popover_footer">
        <input type="text" class="o_input o_field_selector_debug"/>
    </div>
</div>
<t t-name="ModelFieldSelector.value">
    <t t-foreach="chain" t-as="fieldName" t-key="fieldName_index">
        <t t-if="fieldName_index &gt; 0">
            <i class="fa fa-chevron-right" role="img" aria-label="Followed by" title="Followed by"/>
        </t>
        <span class="o_field_selector_chain_part">
            <t t-if="fieldName === '1'">
                <t t-esc="fieldName"/>
            </t>
            <t t-elif="fieldName === '0'">
                <t t-esc="fieldName"/>
            </t>
            <t t-else="">
                <t t-set="fieldInfo" t-value="_.findWhere(pages[fieldName_index], {'name': fieldName})"/>
                <t t-esc="fieldInfo &amp;&amp; fieldInfo.string || '?'"/>
            </t>
        </span>
    </t>
</t>
<ul t-name="ModelFieldSelector.defaultValue" class="o_field_selector_page o_field_selector_default_value">
    <li t-attf-class="o_field_selector_item active o_field_selector_select_button">
        <t t-esc="line.string"/>
        <div class="text-muted o_field_selector_item_title"><t t-esc="line.description"/></div>
    </li>
</ul>
<ul t-name="ModelFieldSelector.page" class="o_field_selector_page">
    <t t-foreach="lines" t-as="line" t-key="line_index">
        <t t-set="relationToFollow" t-value="followRelations(line) &amp;&amp; line.relation"/>
        <li t-attf-class="o_field_selector_item #{relationToFollow and 'o_field_selector_next_page' or 'o_field_selector_select_button'}#{line_index == 0 and ' active' or ''}" t-att-data-name="line.name">
            <t t-esc="line.string"/>
            <div t-if="debug" class="text-muted o_field_selector_item_title"><t t-esc="line.name"/> (<t t-esc="line.type"/>)</div>
            <i t-if="relationToFollow" class="fa fa-chevron-right o_field_selector_relation_icon" role="img" aria-label="Relation to follow" title="Relation to follow"/>
        </li>
    </t>
</ul>

<t t-name="web.datepicker">
    <t t-set="placeholder" t-value="widget.getParent().node and widget.getParent().node.attrs.placeholder"/>
    <t t-set="datepickerID" t-value="_.uniqueId('datepicker')"/>
    <div class="o_datepicker" aria-atomic="true" t-att-id="datepickerID" data-target-input="nearest">
        <input type="text" class="o_datepicker_input o_input datetimepicker-input" t-att-name="widget.name" t-att-placeholder="placeholder" t-attf-data-target="##{datepickerID}" autocomplete="off"/>
        <span class="o_datepicker_button"/>
    </div>
</t>
<t t-name="web.Legacy.FieldSelection">
    <span t-if="widget.mode === 'readonly'"/>

    <select t-if="widget.mode !== 'readonly'" class="o_input" t-att-name="widget.name" t-att-tabindex="widget.attrs.tabindex" t-att-autofocus="widget.attrs.autofocus" t-att-id="widget.idForLabel"/>
</t>
<t t-name="FieldRadio.button">
    <div class="form-check o_radio_item" aria-atomic="true">
        <input type="radio" class="form-check-input o_radio_input" t-att-checked="checked ? true : undefined" t-att-disabled="disabled ? true : undefined" t-att-name="name" t-att-data-value="value[0]" t-att-data-index="index" t-att-id="id"/>
        <label class="form-check-label o_form_label" t-att-for="id"><t t-esc="value[1]"/></label>
    </div>
</t>

<t t-name="FieldSelectionBadge">
    <span t-foreach="values" t-as="value" t-key="value_index" t-attf-class="o_selection_badge #{value[0] == current_value ? 'active' : ''}" t-att-data-index="value_index">
        <t t-esc="value[1]"/>
    </span>
</t>

<t t-name="FieldMany2One">
    <t t-if="widget.mode === 'readonly'">
        <a t-if="!widget.noOpen" t-att-tabindex="widget.attrs.tabindex" class="o_form_uri" href="#"/>
        <span t-if="widget.noOpen"/>
    </t>
    <div t-if="widget.mode === 'edit'" class="o_field_widget o_field_many2one" aria-atomic="true">
        <div class="o_field_many2one_selection">
            <div class="o_input_dropdown">
                <input type="text" class="o_input form-control" t-att-barcode_events="widget.nodeOptions.barcode_events" t-att-tabindex="widget.attrs.tabindex" t-att-autofocus="widget.attrs.autofocus" t-att-placeholder="widget.attrs.placeholder" t-att-id="widget.idForLabel"/>
                <a role="button" class="o_dropdown_button" draggable="false"/>
            </div>
            <button type="button" t-if="!widget.noOpen" class="fa fa-external-link btn btn-secondary o_external_button" tabindex="-1" draggable="false" aria-label="External link" title="External link"/>
        </div>
        <div class="o_field_many2one_extra"/>
    </div>
</t>

<t t-name="web.Many2OneAvatar">
    <div class="o_m2o_avatar">
        <img t-if="widget.value" t-att-src="url" t-att-alt="value"/>
        <span t-elif="widget.mode === 'edit'" class="o_m2o_avatar_empty"/>
        <span t-if="widget.mode === 'readonly'" t-esc="value"/>
    </div>
</t>

<t t-name="FieldReference" t-extend="FieldMany2One">
    <t t-jquery=".o_input_dropdown" t-operation="before">
        <t t-if="!widget.nodeOptions.model_field">
            <select t-att-class="'o_input o_field_widget o_legacy_field_widget' + (widget.nodeOptions.hide_model and ' d-none' or '')">
                <option/>
                <option t-foreach="widget.field.selection" t-as="model" t-key="model_index" t-att-value="model[0]"><t t-esc="model[1]"/></option>
            </select>
        </t>
    </t>
</t>
<t t-name="FieldMany2ManyTag">
    <t t-foreach="elements" t-as="el" t-key="el_index">
        <t t-set="color" t-value="el[colorField] || 0"/>
        <t t-set="colornames" t-value="['No color', 'Red', 'Orange', 'Yellow', 'Light blue', 'Dark purple', 'Salmon pink', 'Medium blue', 'Dark blue', 'Fushia', 'Green', 'Purple']"/>
        <div t-attf-class="badge rounded-pill #{hasDropdown ? 'dropdown' : ''} o_tag_color_#{color}" t-att-data-color="color" t-att-data-index="el_index" t-att-data-id="el.id" t-attf-title="Tag color: #{colornames[color]}">
            <t t-set="_badge_text">
                <span class="o_badge_text" t-att-title="el.display_name"><span role="img" t-attf-aria-label="Tag color: #{colornames[color]}"/><span class="o_tag_badge_text" t-esc="el.display_name"/></span>
            </t>
            <t t-if="hasDropdown">
                <a role="button" href="#" class="dropdown-toggle o-no-caret" aria-expanded="false">
                    <t t-out="_badge_text"/>
                </a>
            </t>
            <t t-else="">
                <t t-out="_badge_text"/>
            </t>
            <a t-if="!readonly" href="#" class="fa fa-times o_delete" title="Delete" aria-label="Delete"/>
        </div>
    </t>
</t>
<t t-name="FieldMany2ManyTagAvatar" t-extend="FieldMany2ManyTag">
    <t t-jquery="t[t-set='_badge_text']" t-operation="before">
        <span><img t-attf-src="/web/image/#{avatarModel}/#{el.id}/#{avatarField}" t-att-data-id="el.id" class="rounded-circle o_m2m_avatar"/></span>
    </t>
</t>
<t t-name="KanbanMany2ManyTagAvatar">
    <t t-set="visibleElements" t-value="elements.length === widget.visibleAvatarCount ? elements : elements.slice(0, widget.visibleAvatarCount - 1)"/>
    <t t-foreach="visibleElements" t-as="el" t-key="el_index">
        <span><img t-attf-src="/web/image/#{avatarModel}/#{el.id}/#{avatarField}" t-att-title="el.display_name" t-att-data-id="el.id" class="rounded-circle o_m2m_avatar"/></span>
    </t>
    <t t-if="elements.length &gt; widget.visibleAvatarCount">
        <span class="o_m2m_avatar_empty rounded-circle text-center fw-bold">
            <span t-if="elements.length - widget.visibleAvatarCount + 1 &gt; 9">9+</span>
            <span t-else="">+<t t-esc="elements.length - widget.visibleAvatarCount + 1"/></span>
        </span>
    </t>
</t>
<t t-name="ListMany2ManyTagAvatar">
    <t t-if="widget.mode !== 'readonly'">
        <t t-call="FieldMany2ManyTagAvatar"/>
    </t>
    <t t-else="">
        <t t-if="elements.length === 1">
            <div>
                <img t-attf-src="/web/image/#{avatarModel}/#{elements[0].id}/#{avatarField}" t-att-data-id="elements[0].id" class="rounded-circle o_m2m_avatar"/>
                <span t-esc="elements[0].display_name"/>
            </div>
        </t>
        <t t-else="">
            <t t-set="visibleElements" t-value="elements.length === widget.visibleAvatarCount ? elements : elements.slice(0, widget.visibleAvatarCount - 1)"/>
            <t t-foreach="visibleElements" t-as="el" t-key="el_index">
                <span><img t-attf-src="/web/image/#{avatarModel}/#{el.id}/#{avatarField}" t-att-title="el.display_name" t-att-data-id="el.id" class="rounded-circle o_m2m_avatar"/></span>
            </t>
            <t t-if="elements.length &gt; widget.visibleAvatarCount">
                <span class="o_m2m_avatar_empty rounded-circle text-center fw-bold">
                    <span t-if="elements.length - widget.visibleAvatarCount + 1 &gt; 9">9+</span>
                    <span t-else="">+<t t-esc="elements.length - widget.visibleAvatarCount + 1"/></span>
                </span>
            </t>
        </t>
    </t>
</t>
<t t-name="Many2ManyTagAvatarPopover">
    <t t-foreach="elements" t-as="el" t-key="el_index">
        <div><t t-esc="el.display_name"/></div>
    </t>
</t>
<t t-name="FieldMany2ManyTag.colorpicker">
    <div class="o_colorpicker dropdown-menu tagcolor_dropdown_menu" role="menu">
        <ul>
            <li><a role="menuitem" href="#" t-att-data-id="tag_id" class="o_tag_color_1" data-color="1" title="Red" aria-label="Red"/></li>
            <li><a role="menuitem" href="#" t-att-data-id="tag_id" class="o_tag_color_2" data-color="2" title="Orange" aria-label="Orange"/></li>
            <li><a role="menuitem" href="#" t-att-data-id="tag_id" class="o_tag_color_3" data-color="3" title="Yellow" aria-label="Yellow"/></li>
            <li><a role="menuitem" href="#" t-att-data-id="tag_id" class="o_tag_color_4" data-color="4" title="Light blue" aria-label="Light blue"/></li>
            <li><a role="menuitem" href="#" t-att-data-id="tag_id" class="o_tag_color_5" data-color="5" title="Dark purple" aria-label="Dark purple"/></li>
            <li><a role="menuitem" href="#" t-att-data-id="tag_id" class="o_tag_color_6" data-color="6" title="Salmon pink" aria-label="Salmon pink"/></li>
            <li><a role="menuitem" href="#" t-att-data-id="tag_id" class="o_tag_color_7" data-color="7" title="Medium blue" aria-label="Medium blue"/></li>
            <li><a role="menuitem" href="#" t-att-data-id="tag_id" class="o_tag_color_8" data-color="8" title="Dark blue" aria-label="Dark blue"/></li>
            <li><a role="menuitem" href="#" t-att-data-id="tag_id" class="o_tag_color_9" data-color="9" title="Fushia" aria-label="Fushia"/></li>
            <li><a role="menuitem" href="#" t-att-data-id="tag_id" class="o_tag_color_10" data-color="10" title="Green" aria-label="Green"/></li>
            <li><a role="menuitem" href="#" t-att-data-id="tag_id" class="o_tag_color_11" data-color="11" title="Purple" aria-label="Purple"/></li>
            <li> 
                <div role="menuitem" class="o_hide_in_kanban" t-att-data-id="tag_id" t-att-data-color="0">
                    <div class="form-check">
                        <input type="checkbox" id="o_hide_in_kanban_checkbox" class="form-check-input"/>
                        <label for="o_hide_in_kanban_checkbox" class="form-check-label">Hide in Kanban</label>
                    </div>
                </div>
            </li>
        </ul>
    </div>
</t>
<t t-name="ProgressBar">
    <div class="o_progressbar" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">
        <div t-if="widget.title" class="o_progressbar_title"><t t-esc="widget.title"/></div><div class="o_progress">
            <div class="o_progressbar_complete"/>
        </div><div class="o_progressbar_value"/>
    </div>
</t>
<t t-name="FieldPercentPie">
    <div class="o_field_percent_pie">
        <div class="o_pie">
            <div class="o_mask"/>
            <div class="o_mask"/>
            <div class="o_pie_value"/>
        </div>
        <span t-if="widget.string"><t t-esc="widget.string"/></span>
    </div>
</t>
<t t-name="FieldStatus.content">
    <t t-if="selection_folded.length">
        <button type="button" class="btn o_arrow_button btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">More</button>
        <div class="dropdown-menu" role="menu">
            <t t-foreach="selection_folded" t-as="i" t-key="i_index">
                <t t-call="FieldStatus.content.button">
                    <t t-set="is_dropdown" t-value="true"/>
                </t>
            </t>
        </div>
    </t>
    <t t-foreach="selection_unfolded.reverse()" t-as="i" t-key="i_index">
        <t t-call="FieldStatus.content.button"/>
    </t>
</t>
<t t-name="FieldStatus.content.button">
    <t t-set="disabled" t-value="!clickable"/>
    <button type="button" t-att-data-value="i.id" disabled="disabled" title="Current state" aria-checked="true" t-att-role="is_dropdown ? 'menuitemradio': 'radio'" t-attf-class="btn o_arrow_button btn-primary disabled cursor-default #{is_dropdown ? 'dropdown-item bg-primary text-white': ''}" t-if="i.selected" aria-current="step">
        <t t-esc="i.display_name" role="img" t-attf-aria-label="#{i.display_name} is current state"/>
    </button>
    <button type="button" t-att-data-value="i.id" disabled="disabled" title="Not active state" aria-checked="false" t-att-role="is_dropdown ? 'menuitemradio': 'radio'" t-attf-class="btn o_arrow_button btn-secondary disabled cursor-default #{is_dropdown ? 'dropdown-item': ''}" t-if="!i.selected and disabled">
        <t t-esc="i.display_name" role="img" t-attf-aria-label="#{i.display_name} is not current state"/>
    </button>
    <button type="button" t-att-data-value="i.id" title="Not active state, click to change it" aria-checked="false" t-att-role="is_dropdown ? 'menuitemradio': 'radio'" t-attf-class="btn o_arrow_button btn-secondary #{is_dropdown ? 'dropdown-item': ''}" t-if="!i.selected and !disabled">
        <t t-esc="i.display_name" role="img" t-attf-aria-label="Click to change current state to #{i.display_name}"/>
    </button>
</t>
<t t-name="FieldBinaryImage">
    <div class="o_field_image" aria-atomic="true">
        <t t-if="widget.mode !== 'readonly'">
            <div class="o_form_image_controls">
                <button class="fa fa-pencil fa-lg float-start o_select_file_button" title="Edit" aria-label="Edit"/>
                <button class="fa fa-trash-o fa-lg float-end o_clear_file_button" title="Clear" aria-label="Clear"/>

                <span class="o_form_binary_progress">Uploading...</span>
                <t t-call="HiddenInputFile">
                    <t t-set="fileupload_id" t-value="widget.fileupload_id"/>
                </t>
            </div>
        </t>
    </div>
</t>
<t t-name="FieldBinaryImage-img">
    <img class="img img-fluid" alt="Binary file" t-att-src="url" t-att-name="widget.name"/>
</t>
<t t-name="CopyClipboardButton">
    <button class="btn btn-secondary o_clipboard_button o_btn_button_copy">Copy</button>
</t>
<t t-name="CopyClipboardText">
    <button class="btn btn-sm btn-primary o_clipboard_button o_btn_text_copy">
        <span class="fa fa-clipboard"/><span> Copy</span>
    </button>
</t>
<t t-name="CopyClipboardChar">
    <button class="btn btn-sm btn-primary o_clipboard_button o_btn_char_copy">
        <span class="fa fa-clipboard"/><span> Copy</span>
    </button>
</t>
<t t-name="FieldBinaryFile">
    <a t-if="widget.mode === 'readonly'" href="javascript:void(0)" class="o_form_uri"/>

    <div t-if="widget.mode !== 'readonly'" class="o_field_binary_file" aria-atomic="true">
        <input type="text" class="o_input" readonly="readonly" t-att-name="widget.name" t-att-tabindex="widget.attrs.tabindex" t-att-autofocus="widget.attrs.autofocus"/>

        <button type="button" class="btn btn-primary o_select_file_button" title="Select">Upload your file</button>
        <button type="button" class="btn btn-secondary fa fa-pencil o_select_file_button" title="Select" aria-label="Select"/>
        <button type="button" class="btn btn-secondary fa fa-trash-o o_clear_file_button" title="Clear" aria-label="Clear"/>

        <span class="o_form_binary_progress">Uploading...</span>
        <t t-call="HiddenInputFile">
            <t t-set="fileupload_id" t-value="widget.fileupload_id"/>
            <t t-set="fileupload_style" t-translation="off">overflow-x: hidden</t>
        </t>
    </div>
</t>

<t t-name="HiddenInputFile">
    <div t-attf-class="o_hidden_input_file #{fileupload_class or ''}" t-att-style="fileupload_style" aria-atomic="true">
        <form class="o_form_binary_form" t-att-target="fileupload_id" method="post" enctype="multipart/form-data" t-att-action="fileupload_action || '/web/binary/upload'">
            <input type="hidden" name="csrf_token" t-att-value="csrf_token"/>
            <input type="hidden" name="callback" t-att-value="fileupload_id"/>
            <input type="file" class="o_input_file" name="ufile" t-att="{'multiple': multi_upload ? 'multiple' : null, 'accept': widget.accepted_file_extensions || '*'}"/>
            <t t-out="0"/>
        </form>
        <iframe t-att-id="fileupload_id" t-att-name="fileupload_id" style="display: none"/>
    </div>
</t>

<t t-name="FieldBinarySignature-img">
    <img class="o_signature img img-fluid" alt="Binary file" t-att-src="url" t-att-name="widget.name"/>
</t>

<div t-name="FieldBinarySignature">
    <div class="o_sign_signature_draw panel panel-default mt16 mb0">
        <div class="card-header">
            <a role="button" class="o_sign_select_style float-end btn btn-link">Select Signature Style</a>
            <a role="button" class="o_sign_clean float-end btn btn-link">Clear Signature</a>
            <a data-mode="draw" class="o_sign_mode o_sign_mode_draw btn btn-primary" role="button">Draw</a>
            <a data-mode="auto" class="o_sign_mode o_sign_mode_auto btn" role="button">Auto</a>
            <a data-mode="load" class="o_sign_mode o_sign_mode_load btn" role="button">Load</a>
            <input type="file" name="files[]" class="o_sign_load btn btn-link" role="button"/>
        </div>
        <div class="o_sign_signature card-body"/>
    </div>
    <div class="mt16 small">By clicking Adopt &amp; Sign, I agree that the chosen signature/initials will be a valid electronic representation of my hand-written signature/initials for all purposes when it is used on documents, including legally binding contracts.</div>

    <div class="o_sign_font_dialog card">
        <div class="card-header">Styles</div>
        <div class="o_sign_font_selection card-body"/>
    </div>
</div>

<t t-name="SignatureSvgText" name="SVG Signature Text">
    <svg t-att-width="width" t-att-height="height">
        <defs>
            <style type="text/css">
                @font-face {
                    font-family: "font_sign";
                    src: url(data:font/ttf;base64,<t t-esc="font"/>) format("woff");
                    font-weight: normal;
                    font-style: normal;
                }
            </style>
        </defs>
        <text x="50%" t-att-y="height*4/5" t-att-font-size="height*4/5" t-att-textLength="width * 4 / 5 * Math.min(1, text.length / 7)" lengthAdjust="spacingAndGlyphs" style="font-family:'font_sign'" fill="black" text-anchor="middle"><t t-esc="text"/></text>
    </svg>
</t>

<t t-name="FieldPdfViewer">
    <div class="o_field_pdfviewer" aria-atomic="true">
        <div t-if="widget.mode !== 'readonly'" class="o_form_pdf_controls mt8" role="toolbar" aria-label="PDF controls">
            <span class="o_form_binary_progress">Uploading...</span>
            <button type="button" class="btn btn-primary o_select_file_button" title="Select">Upload your file</button>
            <button class="btn btn-secondary fa fa-pencil o_select_file_button" title="Select" aria-label="Select" type="button"/>
            <button class="btn btn-secondary fa fa-trash-o o_clear_file_button" title="Clear" aria-label="Clear" type="button"/>
        </div>
        <iframe class="o_pdfview_iframe o_field_pdfviewer"/>
        <t t-call="HiddenInputFile">
            <t t-set="fileupload_id" t-value="widget.fileupload_id"/>
            <t t-set="fileupload_style" t-translation="off">overflow-x: hidden</t>
        </t>
    </div>
</t>

<div t-name="FieldBinaryFileUploader" t-attf-class="oe_fileupload #{widget.attrs.class ? widget.attrs.class :''}" aria-atomic="true">
    <div class="oe_placeholder_files"/>
    <div t-if="widget.mode !== 'readonly'" class="oe_add">
        <button class="btn btn-secondary o_attach" title="Attach"><span class="fa fa-paperclip" aria-label="Attach"/> <t t-esc="widget.string"/></button>
        <t t-call="HiddenInputFile">
            <t t-set="fileupload_id" t-value="widget.fileupload_id"/>
            <t t-set="fileupload_action" t-translation="off">/web/binary/upload_attachment</t>
            <t t-set="multi_upload" t-value="true"/>
            <input type="hidden" name="model" t-att-value="widget.model"/>
            <input type="hidden" name="id" t-att-value="widget.res_id or 0"/>
        </t>
    </div>
</div>

<t t-name="FieldBinaryFileUploader.attachment_preview">
    <t t-set="url" t-value="widget.metadata[file.id] ? widget.metadata[file.id].url : false"/>
    <t t-if="file.data" t-set="file" t-value="file.data"/>
    <t t-set="editable" t-value="widget.mode === 'edit'"/>
    <t t-if="file.mimetype" t-set="mimetype" t-value="file.mimetype"/>
    <div t-attf-class="o_attachment o_attachment_many2many #{ editable ? 'o_attachment_editable' : '' } #{upload ? 'o_attachment_uploading' : ''}" t-att-title="file.name">
        <div class="o_attachment_wrap">
            <t t-set="ext" t-value="file.name.replace(/^.*\\./, '')"/>
            <div class="o_image_box float-start" t-att-data-id="file.id">
                <a t-att-href="url" t-att-title="'Download ' + file.name" aria-label="Download">
                    <span class="o_image o_hover" t-att-data-mimetype="mimetype" t-att-data-ext="ext" role="img"/>
                </a>
            </div>

            <div class="caption">
                <a class="ml4" t-att-href="url" t-att-title="'Download ' + file.name"><t t-esc="file.name"/></a>
            </div>
            <div class="caption small">
                <a class="ml4 small text-uppercase" t-att-href="url" t-att-title="'Download ' + file.name"><b><t t-esc="ext"/></b></a>
                <div t-if="editable" class="progress o_attachment_progress_bar">
                    <div class="progress-bar progress-bar-striped active" style="width: 100%">Uploading</div>
                </div>
            </div>

            <div t-if="editable" class="o_attachment_uploaded"><i class="text-success fa fa-check" role="img" aria-label="Uploaded" title="Uploaded"/></div>
            <div t-if="editable" class="o_attachment_delete" t-att-data-id="file.id"><span class="text-white" role="img" aria-label="Delete" title="Delete">×</span></div>
        </div>
    </div>
</t>

<div t-name="FieldBinaryFileUploader.files" class="o_attachments" aria-atomic="true">

    <t t-foreach="widget.value.data" t-as="file" t-key="file_index">
        <t t-if="!file.data.upload" t-call="FieldBinaryFileUploader.attachment_preview"/>
    </t>

    <t t-foreach="widget.uploadingFiles" t-as="file" t-key="file_index">
        <t t-set="upload" t-value="true"/>
        <t t-call="FieldBinaryFileUploader.attachment_preview"/>
    </t>
</div>

<div t-name="ExportDialog" class="o_export">
    <div class="row o-export-panel h-100">
        <div class="o_left_panel col-12 col-md-6 h-100 d-flex flex-column flex-nowrap">
            <div class="form-check o_import_compat">
                <input class="form-check-input" id="o-update-data" type="checkbox"/>
                <label class="form-check-label" for="o-update-data">
                    I want to update data (import-compatible export)
                </label>
            </div>
            <div class="mt-3">
                <h4>Available fields</h4>
            </div>
            <div class="input-group mb-3">
                <input type="search" class="form-control o_export_search_input" id="o-export-search-filter" placeholder="Search"/>
            </div>
            <div class="o_left_field_panel flex-grow-1 px-2 overflow-auto border "/>
        </div>
        <div class="o_right_panel col-12 col-md-6 h-100 d-flex flex-column flex-nowrap mt-3 mt-md-0">
            <div class="o_export_format">
                <strong>Export Format:</strong>
            </div>
            <div class="mt-3">
                <h4>Fields to export</h4>
            </div>
            <div class="o_save_list">
                <t t-call="Export.SaveList"/>
            </div>
            <div class="o_exported_lists"/>
            <div class="o_right_field_panel flex-grow-1 px-2 overflow-auto border ">
                <ul class="o_fields_list list-unstyled my-2"/>
            </div>
        </div>
    </div>
</div>
<t t-name="Export.TreeItems">
    <t t-foreach="fields" t-as="field" t-key="field_index">
        <t t-set="has_child" t-value="field.children &amp;&amp; (field.id).split('/').length != 3"/>
        <div t-att-data-id="field.id" t-attf-class="o_export_tree_item #{has_child ? 'haschild o_expand' : ''} cursor-pointer position-relative ps-3 " tabindex="-1" role="treeitem"> 
            <span t-if="has_child" class="o_expand_parent d-inline-block position-absolute top-0 start-0 mt-1 ml-n3 small fa fa-chevron-right" role="img" aria-label="Show sub-fields" title="Show sub-fields"/>
            <div t-attf-class="o_tree_column text-wrap">
                <t t-esc="field.string"/>
                <t t-if="debug and field.id">
                    (<t t-esc="field.id"/>)
                </t>
                <span title="Select field" class="fa fa-plus float-end m-1 o_add_field"/>
            </div>
        </div>
    </t>
</t>
<t t-name="Export.SaveList">
    <div class="input-group mb-3">
        <label class="pt-2 fw-bold">Save as : </label>
        <input class="form-control ms-4 o_save_list_name" placeholder="New template"/>
        <button type="button" class="btn btn-secondary ms-1 o_save_list_btn"><i class="fa fa-floppy-o"/></button>
        <button type="button" class="btn btn-secondary ms-1 o_cancel_list_btn"><i class="fa fa-times"/></button>
    </div>
</t>
<t t-name="Export.SavedList">
    <div class="input-group mb-3">
        <label class="pt-2 mb-0 fw-bold">Template: </label>
        <select class="form-select ms-4 o_exported_lists_select">
            <option/>
            <option class="fst-italic" value="new_template">New template</option>
            <t t-foreach="existing_exports" t-as="export" t-key="export_index">
                <option t-att-value="export.id">
                    <t t-esc="export.name"/>
                </option>
            </t>
        </select>
        <button type="button" class="btn btn-secondary d-none ms-1 o_delete_exported_list">
            <i class="fa fa-trash"/>
        </button>
    </div>
</t>

<t t-name="Throbber">
    <div>
        <div class="oe_blockui_spin" style="height: 50px">
            <img src="/web/static/img/spin.png" style="animation: fa-spin 1s infinite steps(12);" alt="Loading..."/>
        </div>
        <br/>
        <div class="oe_throbber_message" style="color:white"/>
    </div>
</t>
<t t-name="Spinner">
    <div class="o_spinner"><i class="fa fa-circle-o-notch fa-spin" role="img" aria-label="Loading, please wait..." title="Loading, please wait..."/></div>
</t>
<t t-name="M2ODialog">
    <div>
        Create <strong t-esc="widget.value"/> as a new <t t-esc="widget.name"/>?
    </div>
</t>
<t t-name="FieldMany2ManyCheckBoxes">
    <div aria-atomic="true">
        <div t-foreach="widget.m2mValues" t-as="m2m_value" t-key="m2m_value_index">
            <t t-set="id_for_label" t-value="'o_many2many_checkbox_' + _.uniqueId()"/>
            <div class="form-check">
                <input type="checkbox" t-att-id="id_for_label" class="form-check-input" t-att-data-record-id="JSON.stringify(m2m_value[0])"/>
                <label t-att-for="id_for_label" class="form-check-label o_form_label"><t t-esc="m2m_value[1]"/></label>
            </div>
        </div>
    </div>
</t>
<t t-name="StatInfo">
    <span class="o_stat_value"><t t-esc="value"/></span>
    <span class="o_stat_text"><t t-esc="text"/></span>
</t>
<t t-name="toggle_button">
    <button type="button" class="o_icon_button" t-att-title="widget.string" t-att-aria-label="widget.string" aria-pressed="false">
        <i class="fa fa-circle" t-att-title="widget.string"/>
    </button>
</t>

<t t-name="AceEditor">
    <div class="oe_form_field o_ace_view_editor oe_ace_open">
        <div class="ace-view-editor"/>
    </div>
</t>

<t t-name="notification-box">
    <div t-attf-class="o_notification_box mb0 alert alert-dismissible alert-{{type}}" role="alertdialog">
        <button type="button" class="btn-close" aria-label="Close"/>
    </div>
</t>

<t t-name="translation-alert">
    <div role="alertdialog">
        Please update translations of :
        <t t-foreach="fields" t-as="field" t-key="field_index">
            <strong><a class="oe_field_translate" t-att-name="field" href="#"><t t-esc="field_value.string"/><t t-if="field_index &lt; _.size(fields)-1">, </t></a></strong>
        </t>
    </div>
</t>

<t t-name="LegacyAttachDocument">
    <button t-attf-class="btn o_attachment_button #{widget.node.attrs.highlight?'btn-primary':'btn-secondary'}">
        <span class="o_attach_document"><t t-esc="widget.node.attrs.string"/></span>
        <span class="d-none">
            <t t-call="HiddenInputFile">
                <t t-set="fileupload_id" t-value="widget.fileuploadID"/>
                <t t-set="fileupload_action" t-translation="off">/web/binary/upload_attachment</t>
                <t t-set="multi_upload" t-value="true"/>
                <input type="hidden" name="model" t-att-value="widget.res_model"/>
                <input type="hidden" name="id" t-att-value="widget.res_id"/>
            </t>
        </span>
    </button>
</t>

<t t-name="FieldColor">
    <div>
        <button class="o_field_color" t-attf-tabindex="#{widget.mode === 'edit' ? 0 : -1}"/>
    </div>
</t>

<t t-name="ColorPicker">
    <div class="o_field_color_picker">
        <ul/>
    </div>
</t>
<t t-name="ColorPickerReadonly">
    <div class="o_field_color_picker_preview">
        <li>
            <a href="#" role="menuitem" t-att-class="'oe_kanban_color_'+active_color" t-att-data-color="active_color" t-att-aria-label="name_color" t-att-title="name_color"/>
        </li>
    </div>
</t>

<t t-name="SignButton">
    <button t-attf-class="btn o_sign_button #{widget.node.attrs.highlight?'btn-primary':'btn-secondary'}">
        <span class="o_sign_label"><t t-esc="widget.node.attrs.string"/></span>
    </button>
</t>

<t t-name="web.IframeWrapper">
    <div class="o_preview_iframe_wrapper">
        <i class="o_iframe_wrapper_spinner fa fa-circle-o-notch fa-spin fa-4x" style="color: black; z-index: 2"/>

        <iframe src="about:blank" class="o_preview_iframe" style="display:none"/>
    </div>
</t>

<t t-name="web.ribbon">
        <div class="ribbon ribbon-top-right">
            <span t-att-class="widget.className" t-att-title="widget.tooltip">
                <t t-esc="widget.text"/>
            </span>
        </div>
    </t>

<t t-name="web.Legacy.FavoriteMenu" owl="1">
        <Dropdown class="'o_favorite_menu btn-group'" togglerClass="'btn btn-light'">
            <t t-set-slot="toggler">
                <i class="me-1" t-att-class="icon"/>
                <span class="o_dropdown_title">Favorites</span>
        <Dialog t-if="state.deletedFavorite" title="'Warning'" size="'medium'" onClosed="() =&gt; { state.deletedFavorite = false }">
            <t t-if="state.deletedFavorite.userId">Are you sure that you want to remove this filter?</t>
            <t t-else="">This filter is global and will be removed for everybody if you continue.</t>
            <t t-set-slot="buttons">
                <button type="button" class="btn btn-primary" t-on-click="_onRemoveFavorite">
                    <t>Ok</t>
                </button>
                <button type="button" class="btn btn-secondary" t-on-click.stop="() =&gt; { state.deletedFavorite = false }">
                    <t>Cancel</t>
                </button>
            </t>
        </Dialog>
            </t>
            <t t-set="currentGroup" t-value="null"/>
            <t t-foreach="items" t-as="item" t-key="item.id or item.key">
                <t t-if="currentGroup !== null and currentGroup !== item.groupNumber">
                    <div role="separator" class="dropdown-divider"/>
                </t>
                <t t-if="item.type ==='favorite'">
                    <DropdownItem class="{ o_menu_item: true, selected: item.isActive }" checked="item.isActive" parentClosingMode="'none'" onSelected="() =&gt; this.onFavoriteSelected(item.id)">
                        <span class="d-flex p-0 align-items-center justify-content-between">
                            <t t-esc="item.description"/>
                            <i class="ms-1 o_icon_right fa fa-trash-o" title="Delete item" t-on-click.stop="() =&gt; this.openConfirmationDialog(item.id)"/>
                        </span>
                    </DropdownItem>
                </t>
                <t t-else="">
                    <t t-component="item.Component"/>
                </t>
                <t t-set="currentGroup" t-value="item.groupNumber"/>
            </t>
        </Dropdown>
    </t>

<t t-name="web.legacy.FilterMenu" owl="1">
        <Dropdown class="'o_filter_menu btn-group ' + props.class" togglerClass="'btn btn-light'">
            <t t-set-slot="toggler">
                <i class="me-1" t-att-class="icon"/>
                <span class="o_dropdown_title">Filters</span>
            </t>
            <t t-set="currentGroup" t-value="null"/>
            <t t-foreach="items" t-as="item" t-key="item.id">
                <t t-if="currentGroup !== null and currentGroup !== item.groupNumber">
                    <div class="dropdown-divider" role="separator"/>
                </t>
                <t t-if="item.options">
                    <Dropdown togglerClass="'o_menu_item' + (item.isActive ? ' selected' : '')">
                        <t t-set-slot="toggler">
                            <t t-esc="item.description"/>
                        </t>
                        <t t-set="subGroup" t-value="null"/>
                        <t t-foreach="item.options" t-as="option" t-key="option.id">
                            <t t-if="subGroup !== null and subGroup !== option.groupNumber">
                                <div class="dropdown-divider" role="separator"/>
                            </t>
                            <DropdownItem class="{ o_item_option: true, selected: option.isActive }" t-esc="option.description" checked="option.isActive" parentClosingMode="'none'" onSelected="() =&gt; this.onFilterSelected({ itemId: item.id, optionId: option.id })"/>
                            <t t-set="subGroup" t-value="option.groupNumber"/>
                        </t>
                    </Dropdown>
                </t>
                <t t-else="">
                    <DropdownItem class="{ o_menu_item: true, selected: item.isActive }" checked="item.isActive" parentClosingMode="'none'" t-esc="item.description" onSelected="() =&gt; this.onFilterSelected({ itemId: item.id })"/>
                </t>
                <t t-set="currentGroup" t-value="item.groupNumber"/>
            </t>
            <t t-if="items.length">
                <div role="separator" class="dropdown-divider"/>
            </t>
            <CustomFilterItem fields="props.fields"/>
        </Dropdown>
    </t>

<t t-name="web.LegacyFieldBoolean" owl="1">
        <CustomCheckbox disabled="hasReadonlyModifier" value="value" class="'o_field_boolean'" onChange.bind="_onChange"/>
    </t>

    <t t-name="web.FieldBadge" owl="1">
        <span class="badge rounded-pill o_field_badge bg-opacity-50" t-esc="_formatValue(value)"/>
    </t>

<t t-name="KanbanView.buttons">
    <div>
        <button t-if="!noCreate" type="button" t-attf-class="btn #{btnClass} o-kanban-button-new" title="Create record" accesskey="c">
            <t t-esc="create_text || _t('Create')"/>
        </button>
    </div>
</t>

<t t-name="KanbanView.Group">
    <div t-attf-class="o_kanban_group#{widget.data_records.length == 0 ? ' o_kanban_no_records' : ''}" t-att-data-id="widget.id or widget.db_id" role="feed" t-attf-aria-labelledby="kanban_header_#{widget.id or widget.db_id}">
        <div class="o_kanban_header">
            <div class="o_kanban_header_title">
                <span t-attf-id="#kanban_header_#{widget.id or widget.db_id}" class="o_column_title" t-attf-class="{{ !widget.isMobile and widget.folded ? 'fs-4 overflow-visible' : '' }}"><t t-esc="widget.title"/></span>
                <button class="o_column_unfold btn btn-link p-0 border-0 small text-center text-700 cursor-pointer"><i class="fa fa-arrows-h" role="img" aria-label="Unfold" title="Unfold"/></button>
                <span class="o_kanban_config dropdown">
                    <a class="dropdown-toggle o-no-caret" data-bs-toggle="dropdown" href="#"><i class="fa fa-gear d-block text-center text-700 small opacity-50 opacity-100-hover cursor-pointer" role="img" aria-label="Settings" title="Settings"/></a>
                    <div class="dropdown-menu cursor-default" role="menu">
                        <a t-if="!widget.isMobile" role="menuitem" class="dropdown-item o_kanban_toggle_fold" href="#">Fold</a>
                        <t t-if="widget.grouped_by_m2o">
                            <a t-if="widget.editable and widget.id" role="menuitem" class="dropdown-item o_column_edit" href="#">Edit Stage</a>
                            <a t-if="widget.deletable and widget.id" role="menuitem" class="dropdown-item o_column_delete" href="#">Delete</a>
                        </t>
                        <t t-if="widget.has_active_field and widget.archivable and !widget.grouped_by_m2m">
                            <a role="menuitem" href="#" class="dropdown-item o_column_archive_records">Archive All</a>
                            <a role="menuitem" href="#" class="dropdown-item o_column_unarchive_records">Unarchive All</a>
                        </t>
                    </div>
                </span>
                <a t-if="widget.quick_create" class="o_kanban_quick_add"><i class="fa fa-plus d-block small text-center text-700 opacity-50 opacity-100-hover cursor-pointer" role="img" aria-label="Quick add" title="Quick add"/></a>
            </div>
        </div>
        <div t-if="widget.loadMoreCount &gt; 0" class="o_kanban_load_more">
            <t t-call="KanbanView.LoadMore"/>
        </div>
    </div>
</t>

<t t-name="KanbanView.LoadMore">
    <button class="btn btn-outline-primary w-100 mt-4">Load more... (<t t-out="widget.loadMoreCount"/> remaining)</button>
</t>

<t t-name="KanbanView.ColumnQuickCreate">
    <div class="o_column_quick_create">
        <div class="o_quick_create_folded">
            <button class="o_kanban_add_column btn btn-outline-secondary w-100">
                <i class="fa fa-plus me-2" role="img" aria-label="Add column" title="Add column"/><t t-out="widget.groupByFieldString"/>
            </button>
        </div>
        <div class="o_quick_create_unfolded">
            <div class="o_kanban_header">
                <div class="input-group">
                    <input type="text" class="form-control o_input" t-attf-placeholder="{{ widget.groupByFieldString }}..."/>
                    <button class="btn btn-primary o_kanban_add" type="button">Add</button>
                </div>
                <span t-if="!widget.isMobile" class="o_discard_msg text-muted float-end">Esc to discard</span>
                <t t-if="widget.examples &amp;&amp; !widget.isMobile">
                    <button type="button" class="btn btn-link o_kanban_examples p-0">See examples</button>
                </t>
            </div>
            <div class="o_kanban_muted_record"/>
            <div class="o_kanban_muted_record"/>
            <div class="o_kanban_muted_record"/>
        </div>
    </div>
</t>

<t t-name="KanbanView.RecordQuickCreate.buttons">
    <div class="d-flex">
        <button class="btn btn-primary o_kanban_add me-1 text-truncate" data-hotkey="r">Add</button>
        <button class="btn btn-primary o_kanban_edit me-1 text-truncate" data-hotkey="a">Edit</button>
        <button class="btn btn-secondary o_kanban_cancel ms-auto" data-hotkey="d">
            <i class="fa fa-trash"/>
        </button>
    </div>
</t>

<t t-name="web.Legacy.KanbanColorPicker">
    <t t-foreach="colors" t-as="color">
        <li>
            <a role="menuitem" href="#" t-att-data-color="color_index" t-attf-class="oe_kanban_color_#{color_index}" t-att-title="color" t-att-aria-label="color"/>
        </li>
    </t>
</t>

<t t-name="GraphCustomTooltip">
    <table>
        <tbody>
            <tr>
                <td class="legend-color-guide">
                    <div t-attf-style="background-color: #{color};"/>
                </td>
                <td class="key"><t t-esc="key"/></td>
                <td class="value"><t t-esc="value"/></td>
            </tr>
        </tbody>
    </table>
</t>

<t t-name="KanbanView.ColumnProgressBar">
    <div class="o_legacy_kanban_counter">
        <div class="o_kanban_counter_progress progress">
            <t t-foreach="widget.colors" t-as="color">
                <t t-set="count" t-value="widget.subgroupCounts and widget.subgroupCounts[color] or 0"/>
                <div t-attf-class="progress-bar transition-off bg-#{color_value}#{count ? ' o_bar_has_records' : ''}#{widget.activeFilter ? ' progress-bar-animated progress-bar-striped' : ''}" t-att-data-filter="color" t-attf-data-bs-original-title="#{count} #{color}" aria-valuemin="0" aria-valuemax="100" t-att-aria-valuenow="count*100" role="progressbar" t-attf-style="width: #{count ? (count * 100 / widget.groupCount) : 0}%;"/>
            </t>
        </div>
        <div class="o_kanban_counter_side" t-att-title="widget.sumFieldLabel || ''"><b><t t-esc="widget.totalCounterValue || 0"/></b></div>
    </div>
</t>

<t t-name="KanbanView.SetCoverModal">
    <div t-if="attachmentIds.length" class="o_legacy_kanban_cover_container bg-100">
        <t t-foreach="attachmentIds" t-as="attachment">
            <div t-attf-class="o_kanban_cover_image position-relative d-inline-block m-2 bg-white #{coverId === attachment.id ? ' o_selected' : ''}">
                <img t-attf-src="/web/image/#{attachment.id}?unique=1" t-att-data-id="attachment.id" t-att-data-name="attachment.name" class="m-auto mw-100" alt="Attachment"/>
            </div>
        </t>
    </div>
    <div t-else="">There is no available image to be set as cover.</div>
    <span class="d-none">
        <t t-call="HiddenInputFile">
            <t t-set="fileupload_id" t-value="widget.imageUploadID"/>
            <t t-set="fileupload_action" t-translation="off">/web/binary/upload_attachment</t>
            <input type="hidden" name="model" t-att-value="widget.modelName"/>
            <input type="hidden" name="id" t-att-value="widget.id"/>
        </t>
    </span>
</t>


<div t-name="KanbanView.ExamplesDialog" class="o_legacy_kanban_examples_dialog">
    <div class="o_kanban_examples_dialog_nav">
        <ul class="nav nav-pills flex-column">
            <t t-foreach="examples" t-as="example">
                <li class="nav-item">
                    <a t-attf-aria-controls="example_#{example_index}" data-bs-toggle="tab" role="tab" t-att-data-example-index="example_index" t-attf-href="#example_#{example_index}" t-attf-class="nav-link#{example_index == 0 and ' active' or ''}"> <t t-esc="example.name"/> </a>
                </li>
            </t>
        </ul>
    </div>
    <div class="o_kanban_examples_dialog_content">
        <div class="tab-content">
            <t t-foreach="examples" t-as="example">
                <div role="tabpanel" t-attf-id="example_#{example_index}" t-attf-class="tab-pane #{example_index == 0 and 'active in' or ''}">
                    <div t-if="example.description" class="o_kanban_examples_description">
                        <t t-out="example.description"/>
                    </div>
                    <div class="o_kanban_examples d-flex p-2">
                        <t t-foreach="example.columns" t-as="column">
                            <div class="o_kanban_examples_group flex-grow-1 m-3">
                                <h6><b><t t-esc="column"/></b></h6>
                                <t t-foreach="_.random(1,4)">
                                    <t t-call="KanbanView.ExamplesDialog.RecordGhost"/>
                                </t>
                            </div>
                        </t>
                    </div>
                </div>
            </t>
        </div>
    </div>
</div>
<t t-name="KanbanView.ExamplesDialog.RecordGhost">
    <div class="o_kanban_examples_ghost o_collapse p-2 border bg-white">
        <div class="o_ghost_content pb-3 bg-300"/>
        <div class="o_ghost_content o_ghost_tag d-inline-block w-50 mt-3 pb-3 bg-300"/>
            <t t-if="example.bullets and _.random(0, 5) &gt; 3">
                <t t-out="_.sample(example.bullets)"/>
            </t>
        <img class="float-end o_ghost_avatar mt-2" src="/base/static/img/avatar.png" alt="Avatar"/>
    </div>
</t>


<t t-name="KanbanView.ExamplesBackground">
    <div class="o_kanban_example_background_container d-flex opacity-50">
        <div class="o_kanban_example_background flex-grow-1">
            <div class="o_kanban_examples d-flex p-2">
                <t t-foreach="ghostColumns" t-as="column">
                    <div class="o_kanban_examples_group flex-grow-1 m-3">
                        <h6><b><t t-esc="column"/></b></h6>
                        <t t-foreach="_.random(2,6)">
                            <t t-call="KanbanView.ExamplesBackground.RecordGhost"/>
                        </t>
                    </div>
                </t>
            </div>
        </div>
    </div>
</t>
<t t-name="KanbanView.ExamplesBackground.RecordGhost">
    <div class="o_kanban_examples_ghost mb-3 p-2 border bg-white">
        <div class="o_ghost_content pb-3 bg-300"/>
        <div class="o_ghost_content o_ghost_tag d-inline-block w-50 mt-3 pb-3 bg-300"/>
        <img class="float-end o_ghost_avatar mt-2" src="/base/static/img/avatar.png" alt="Avatar"/>
    </div>
</t>


<t t-name="KanbanView.MobileTabs">
    <div class="o_kanban_mobile_tabs_container">
        <div class="o_kanban_mobile_tabs">
            <t t-foreach="data" t-as="group">
                <div class="o_kanban_mobile_tab" t-att-data-id="group.res_id or group.id">
                    <span class="o_column_title"><t t-esc="group.value"/></span>
                </div>
            </t>
            <div class="o_kanban_mobile_add_column" t-if="quickCreateEnabled">
                <i class="fa fa-plus " role="img" aria-label="Add column" title="Add column"/>
            </div>
        </div>
    </div>
</t>
<t t-name="web.Legacy.SearchPanel" owl="1">
    <div class="o_search_panel flex-grow-0 flex-shrink-0 border-end pe-2 pb-5 ps-4 h-100 bg-view overflow-auto" t-att-class="props.className" t-ref="legacySearchPanel">
        <section t-foreach="model.get('sections', s =&gt; !s.empty)" t-as="section" t-key="section.id" t-attf-class="o_search_panel_section o_search_panel_{{ section.type }}">
            <header class="o_search_panel_section_header pt-4 pb-2 text-uppercase cursor-default">
                <i t-attf-class="fa {{ section.icon }} o_search_panel_section_icon me-2 {{!section.color &amp;&amp; section.type == 'filter' ? 'text-warning' : !section.color ? 'text-odoo': ''}}" t-att-style="section.color and ('color: ' + section.color)"/>
                <b t-esc="section.description"/>
            </header>
            <div t-if="section.errorMsg" class="alert alert-warning">
                <span><t t-esc="section.errorMsg"/></span>
            </div>
            <ul t-else="" class="list-group d-block o_search_panel_field">
                <t t-if="section.type === 'category'" t-call="web.Legacy.SearchPanel.Category">
                    <t t-set="values" t-value="section.rootIds"/>
                </t>
                <t t-elif="section.groups">
                    <li t-foreach="section.sortedGroupIds" t-as="groupId" t-key="groupId" class="o_search_panel_filter_group list-group-item p-0 border-0" t-att-class="groupId_last? 'mb-0' : 'mb-3'">

                        <t t-set="_section" t-value="section"/>
                        <t t-set="group" t-value="section.groups.get(groupId)"/>
                        <header class="o_search_panel_group_header pb-1">
                            <div class="form-check w-100">

                                <input type="checkbox" class="form-check-input" t-attf-id="{{ section.id }}_input_{{ groupId }})" t-on-click="() =&gt; this._toggleFilterGroup(section.id, group)"/>
                                <label t-attf-for="{{ section.id }}_input_{{ groupId }})" class="o_search_panel_label form-check-label d-flex align-items-center justify-content-between w-100 o_cursor_pointer" t-att-class="{ o_with_counters: group.enableCounters }" t-att-title="group.tooltip or false">
                                    <span class="o_search_panel_label_title text-truncate">
                                        <span t-if="group.hex_color" class="me-1" t-attf-style="color: {{ group.hex_color }};">●</span>
                                        <t t-esc="group.name"/>
                                    </span>
                                </label>
                            </div>
                        </header>
                        <ul class="list-group d-block">
                            <t t-call="web.Legacy.SearchPanel.FiltersGroup">
                                <t t-set="values" t-value="group.values"/>
                                <t t-set="isChildList" t-value="true"/>

                                <t t-set="section" t-value="_section"/>
                            </t>
                        </ul>
                    </li>
                    <ul t-if="section.groups.get(false)" class="list-group d-block">
                        <t t-call="web.Legacy.SearchPanel.FiltersGroup">
                            <t t-set="group" t-value="section.groups.get(false)"/>
                            <t t-set="values" t-value="group.values"/>

                            <t t-set="section" t-value="section"/>
                        </t>
                    </ul>
                </t>
                <t t-else="" t-call="web.Legacy.SearchPanel.FiltersGroup">
                    <t t-set="values" t-value="section.values"/>
                </t>
            </ul>
        </section>
    </div>
</t>

<t t-name="web.Legacy.SearchPanel.Category" owl="1">
    <t t-foreach="values" t-as="valueId" t-key="valueId">
        <t t-set="value" t-value="section.values.get(valueId)"/>

        <li class="o_search_panel_category_value list-group-item py-1 o_cursor_pointer border-0" t-att-class="isChildList ? 'o_treeEntry ps-4 pe-0' : 'ps-0 pe-2'">
            <header class="list-group-item list-group-item-action d-flex align-items-center p-0 border-0" t-att-class="{'active text-900 fw-bold': state.active[section.id] === valueId}" t-on-click="() =&gt; this._toggleCategory(section, value)">
                <div class="o_search_panel_label d-flex align-items-center overflow-hidden w-100 o_cursor_pointer mb-0" t-att-class="{'o_with_counters': section.enableCounters }">
                    <button class="o_toggle_fold btn p-0 flex-shrink-0 text-center">
                        <i t-if="value.childrenIds.length" class="fa" t-att-class="{                                 'fa-caret-down' : state.expanded[section.id][valueId],                                 'fa-caret-right ms-1':  !state.expanded[section.id][valueId]                             }"/>
                    </button>
                    <span class="o_search_panel_label_title text-truncate" t-att-class="{'fw-bold' : value.bold}" t-esc="value.display_name"/>
                </div>
                <small t-if="section.enableCounters and value.__count gt 0" class="o_search_panel_counter text-muted mx-2 fw-bold" t-esc="value.__count"/>
            </header>
            <ul t-if="value.childrenIds.length and state.expanded[section.id][valueId]" class="list-group d-block">
                <t t-call="web.Legacy.SearchPanel.Category">
                    <t t-set="values" t-value="value.childrenIds"/>
                    <t t-set="isChildList" t-value="true"/>
                </t>
            </ul>
        </li>
    </t>
</t>

<t t-name="web.Legacy.SearchPanel.FiltersGroup" owl="1">
    <li t-foreach="[...values.keys()]" t-as="valueId" t-key="valueId" class="o_search_panel_filter_value list-group-item p-0 mb-1 border-0 o_cursor_pointer" t-att-class="{ 'ps-2' : isChildList }">
        <t t-set="value" t-value="values.get(valueId)"/>
        <div class="form-check w-100">
            <input type="checkbox" t-attf-id="{{ section.id }}_input_{{ valueId }}" t-att-checked="state.active[section.id][valueId]" class="form-check-input" t-on-click="ev =&gt; this._toggleFilterValue(section.id, valueId, ev)"/>
            <label class="o_search_panel_label form-check-label d-flex align-items-center justify-content-between w-100 o_cursor_pointer" t-attf-for="{{ section.id }}_input_{{ valueId }}" t-att-title="(group and group.tooltip) or false">
                <span class="o_search_panel_label_title text-truncate" t-esc="value.display_name"/>
                <span t-if="section.enableCounters and value.__count gt 0" class="o_search_panel_counter text-muted mx-2 small" t-esc="value.__count"/>
            </label>
        </div>
    </li>
</t>

<t t-name="web.RecurrentTask" owl="1">
        <div class="o_recurrent_weekdays border mt-2 mb-2">
            <table class="table table-responsive mb-0">
                <tr>
                    <th t-foreach="weekdaysShort" t-as="day" t-key="day" class="text-center border fw-bold">
                        <div class="o_recurrent_weekday_label" t-att-title="props.record.fields[day].string">
                            <t t-esc="props.record.fields[day].string"/>
                        </div>
                    </th>
                </tr>
                <tr>
                    <td t-foreach="weekdaysShort" t-as="day" t-key="day">
                        <CustomCheckbox disabled="mode === 'readonly'" value="state.days[day].value" id="state.days[day].id" class="'text-center'" onChange="(checked) =&gt; this._onChange(checked, state.days[day].id)"/>
                    </td>
                </tr>
            </table>
        </div>
    </t>
<t t-name="base_import.ImportRecords" owl="1">
        <DropdownItem class="'o_import_menu'" onSelected.bind="importRecords">
            Import records
        </DropdownItem>
    </t>

<t t-name="ImportView">
        <t t-set="_id" t-value="_.uniqueId('export')"/>
        <form action="" method="post" enctype="multipart/form-data" class="oe_import">
            <input type="hidden" name="csrf_token" t-att-value="csrf_token"/>
            <input type="hidden" name="import_id"/>

            <div class="d-flex h-100">
                <t t-call="ImportView.side_panel"/>
                <t t-call="ImportView.data_matching"/>
            </div>

            <div class="o_view_nocontent">
                <div class="o_nocontent_help">
                    <p class="o_view_nocontent_smiling_face">
                        Upload an Excel or CSV file to import
                    </p>
                    <p>
                        Excel files are recommended as formatting is automatic.
                    </p>
                    <div class="mt16 mb4">Need Help?</div>
                    <div t-foreach="widget.importTemplates" t-as="template">
                        <a class="btn btn-outline-primary mb32 mt8" t-att-href="template.template" aria-label="Download" title="Download">
                            <i class="fa fa-download"/> <span><t t-esc="template.label"/></span>
                        </a>
                    </div>
                    <a href="https://www.odoo.com/documentation/16.0/applications/general/export_import_data.html" target="new">Import FAQ</a>
                </div>
            </div>
        </form>
    </t>

    <t t-name="ImportView.buttons">
        <button type="button" class="btn btn-primary o_import_import o_import_import_full d-none">Import</button>
        <button type="button" class="btn btn-primary o_import_import o_import_import_partial d-none">Resume</button>
        <button type="button" class="btn btn-secondary o_import_validate d-none">Test</button>
        <button type="button" class="btn btn-primary oe_import_file">Upload File</button>
        <button type="button" class="btn btn-secondary o_import_cancel">Cancel</button>
    </t>

    <t t-name="ImportView.create_record_option">
        <div t-attf-class="oe_import_dropdown o_import_field_#{data.type} position-relative alert alert-error">
            <b>When a value cannot be matched:</b>
            <select class="o_import_create_option" t-att-type="data.type" t-att-field="data.id" t-att-model="data.comodel_name || data.model_name">
                <option value="prevent">Prevent import</option>
                <t t-if="data.type === 'boolean'">
                    <option value="false">Set to: False</option>
                    <option value="true">Set to: True</option>
                </t>
                <option t-if="set_empty" value="set_empty">Set value as empty</option>
                <option t-if="show_skip_record" value="skip_record">Skip record</option>
                <option t-if="is_relational" value="create">Create new values</option>
                <t t-if="data.type === 'selection'">
                    <option t-foreach="values" t-as="value" t-att-value="value">Set to: <t t-esc="value"/></option>
                </t>
            </select>
        </div>
    </t>

    <t t-name="ImportView.preview">
        <thead>
            <tr class="oe_import_grid-header">
                <td class="oe_import_grid-cell border-0 fw-bold" style="width: 20%;">
                    <span class="o_single_line_text" title="File Column">File Column</span></td>
                <td class="oe_import_grid-cell border-0 fw-bold" style="width: 15%;">
                    <span class="o_single_line_text" title="File Column">Odoo Field</span></td>
                <td class="oe_import_grid-cell border-0 fw-bold">
                    <span class="o_single_line_text" title="File Column">Comments</span></td>
            </tr>
        </thead>
        <tbody>
            <t t-set="columns" t-value="headers || preview"/>
            <tr t-if="columns" t-foreach="columns" t-as="column" class="oe_import_grid-row">
                <td class="oe_import_grid-cell oe_import_name_cell">
                    <span class="o_import_header_name o_single_line_text fw-bold" t-att-title="column">
                        <span t-if="column" t-esc="column"/>
                        <span t-else="">Untitled</span>
                    </span>
                    <span t-if="options['has_headers']" class="fst-italic small o_import_preview">
                        <t t-esc="preview[column_index][0]"/>
                    </span>
                </td>
                <td class="oe_import_grid-cell oe_import_match_cell">
                    <input class="oe_import_match_field oe_import_dropdown"/>
                </td>
                <td class="oe_import_grid-cell oe_import_comment_cell">
                    <div class="oe_import_comments_div"/>
                    <div class="oe_import_options_div d-none"/>
                </td>
            </tr>
        </tbody>
    </t>

    <t t-name="ImportView.comment_same_mapped_field">
        <div class="oe_import_same_mapped_field alert alert-info">
            This column will be concatenated in field <b t-esc="field"/>
        </div>
    </t>

    <t t-name="ImportView.comment_m2m_field">
        <div class="oe_import_m2m_field alert alert-info">
            To import multiple values, separate them by a comma
        </div>
    </t>

    <t t-name="ImportView.preview_popover">
        <div class="o_import_preview_popover" style="position: relative">
            <div t-foreach="preview" t-as="preview_value" t-esc="preview_value"/>
        </div>
    </t>

    <t t-name="ImportView.preview.error">
        <div class="oe_import_report alert alert-danger">
            <p>Import preview failed due to: <t t-esc="error"/>.</p>
            <p>For CSV files, you may need to select the correct separator.</p>
            <p t-if="preview">Here is the start of the file we could not import:</p>
        </div>
        <pre t-if="preview"><t t-esc="preview"/></pre>
    </t>

    <t t-name="ImportView.error">
        <div t-foreach="errors" t-as="error" t-attf-class="oe_import_report alert alert-#{error.type}">
            <span class="oe_import_report_message">
                <b><t t-esc="error.message"/></b>
                <t t-if="error.rows" t-call="ImportView.error.at">
                    <t t-set="rows" t-value="error.rows"/>
                </t>
            </span>
            <t t-if="error.moreinfo" t-call="ImportView.error.more_info">
                <t t-set="messages" t-value="error.moreinfo"/>
            </t>
        </div>
    </t>

    <div t-name="ImportView.fieldError" t-attf-class="oe_import_report alert alert-#{errors[0].type}">
        <t t-if="errors.length &gt; 1" t-call="ImportView.fieldError.multi"/>
        <t t-else="" t-call="ImportView.fieldError.single">
            <t t-set="error" t-value="errors[0]"/>
        </t>
    </div>
    <t t-name="ImportView.fieldError.single">
        <span class="oe_import_report_message">
            <t t-if="error.value &amp;&amp; !error.error_message">
                No matching records found for <t t-esc="error.field_type"/> <b>'<t t-esc="error.value"/>'</b> in field <b t-esc="error.field_name"/>
            </t>
            <b t-else="" t-esc="error.message"/>
        </span>
        <t t-if="error.rows" t-call="ImportView.error.at">
            <t t-set="rows" t-value="error.rows"/>
        </t>
        <t t-if="error.moreinfo" t-call="ImportView.error.more_info">
            <t t-set="messages" t-value="error.moreinfo"/>
        </t>
    </t>

    <t t-name="ImportView.fieldError.multi">
        <div class="oe_import_report_message">
            <t t-if="errors[0].value">
            No matching records found for the following <t t-esc="errors[0].field_type"/> </t>
            <t t-else="">Multiple errors occurred </t>
            in field <b t-esc="errors[0].field_name"/>:
            <ul>
                <t t-foreach="errors.length" t-as="index">
                    <li t-att-class="index &gt; 2 ? 'oe_import_report_more':''">
                        <b t-if="errors[index].error_message" t-esc="errors[index].message"/>
                        <b t-else="" t-esc="errors[index].value || errors[index].message"/>
                        <t t-if="errors[index].rows" t-call="ImportView.error.at">
                            <t t-set="rows" t-value="errors[index].rows"/>
                        </t>
                    </li>
                    <li t-if="errors.length &gt; 3 and index == 2" style="display: block;">
                        <a href="#" class="oe_import_report_count">
                            ( <i class="arrow down"/> <t t-esc="errors.length - 3"/> more)
                        </a>
                    </li>
                </t>
            </ul>
        </div>

        <t t-if="errors[0].moreinfo" t-call="ImportView.error.more_info">
            <t t-set="messages" t-value="errors[0].moreinfo"/>
        </t>
    </t>

    <t t-name="ImportView.error.at">
        <t t-set="from" t-value="rows.from + offset"/>
        <t t-set="to" t-value="rows.to + offset"/>

        <t t-if="from === to">
            at row <t t-esc="from"/> <t t-if="result_names.length &gt; rows.from &amp;&amp; result_names[rows.from] !== ''">(<t t-esc="result_names[rows.from]"/>)</t>
        </t>
        <t t-else="">
            at multiple rows
        </t>
    </t>

    <t t-name="ImportView.error.more_info">
        <div t-if="typeof messages === 'string'" class="oe_import_moreinfo oe_import_moreinfo_action">
            <t t-esc="messages"/>
        </div>
        <div t-elif="messages instanceof Array" class="oe_import_moreinfo oe_import_moreinfo_choices">
            <a href="#" class="oe_import_report_see_possible_value oe_import_see_all">
                <i class="fa fa-arrow-right"/> See possible values </a>
            <ul class="oe_import_report_more">
                <li t-foreach="messages" t-as="msg"><t t-esc="msg"/></li>
            </ul>
        </div>
        <div t-else="" class="oe_import_moreinfo oe_import_moreinfo_action">
            <a href="#" t-att-data-action="JSON.stringify(messages)" class="oe_import_see_all">
                <i class="fa fa-arrow-right"/> See possible values </a>
        </div>
    </t>

    <t t-name="ImportView.data_matching">
        <div class="oe_import_with_file bg-view d-none">
            <div class="oe_import_noheaders">
                <p class="alert alert-info">If the file contains
                    the column names, Odoo can try auto-detecting the
                    field corresponding to the column. This makes imports
                    simpler especially when the file has many columns.</p>
            </div>
            <div class="o_import_partial_alert alert alert-warning d-none mx-2 my-2 fw-bold">
                Click 'Resume' to proceed with the import, resuming at line
                <span class="o_import_partial_count">0</span>.<br/>
                You can test or reload your file before resuming the import.
            </div>
            <div class="oe_import_error_report px-3 py-2"/>
            <div class="table-responsive">
                <table class="table-striped oe_import_grid w-100 overflow-hidden"/>
            </div>
        </div>
    </t>

    <t t-name="ImportView.side_panel">
        <div class="oe_import_box d-none bg-white overflow-auto">
            <input accept=".csv, .xls, .xlsx, .xlsm, .ods" t-attf-id="file_#{_id}" name="file" class="oe_import_file" type="file" style="display:none;"/>
            <div class="oe_import_with_file">
                <h4>Imported file</h4>
                <div class="mb-2 d-flex align-items-center">
                    <i class="fa fa-file white me-2"/>
                    <div id="oe_imported_file" class="fst-italic truncate"/>
                    <span id="oe_imported_file_extension" class="fst-italic"/>
                </div>

                <div class="oe_import_has_multiple_sheets flex-column mt-2">
                    <label for="oe_import_sheet">Sheet:</label>
                    <input class="oe_import_sheet oe_import_dropdown" id="oe_import_sheet"/>
                </div>

                <input type="checkbox" class="oe_import_has_header form-check-input" id="oe_import_has_header" checked="checked"/>
                <label class="form-check-label" for="oe_import_has_header">Use first row as header</label>

                <div class="o_import_formatting">
                    <h4 class="mt-3">Formatting</h4>
                    <div t-foreach="[widget.opts, widget.parse_opts_formats, widget.parse_opts_separators]" t-as="options" class="oe_import_options">
                        <div t-attf-class="mb-1 oe_import_#{option.type}_box" t-foreach="options" t-as="option">

                            <label t-attf-for="#{option.name}_#{_id}">
                                <t t-esc="option.label"/></label>
                            <input t-attf-id="#{option.name}_#{_id}" t-attf-class="oe_import_#{option.name} oe_import_dropdown w-100 mb-3" t-att-value="option.value"/>
                        </div>
                    </div>
                </div>

                <div class="o_import_batch">
                    <h4 class="mt-3">Batch Import</h4>
                    <div class="o_import_batch_alert fw-bold d-none pb-2">
                        The file will be imported by batches
                    </div>
                    <div class="d-flex">
                        <div class="oe_import_options oe_import_batch_limit w-50 pe-1">
                            <label class="mb-1" for="oe_import_batch_limit">Batch limit</label>
                            <input class="w-100" id="oe_import_batch_limit" value="2000"/>
                        </div>
                        <div class="oe_import_options w-50 ps-1" title="Warning: ignores the labels line, empty lines and lines composed only of empty cells">
                            <label class="mb-1" for="oe_import_row_start">Start at line</label>
                            <input class="w-100" id="oe_import_row_start" value="1"/>
                        </div>
                    </div>
                </div>

                <h4 class="mt-3">Help</h4>
                <div t-foreach="widget.importTemplates" t-as="template">
                    <a t-att-href="template.template" aria-label="Download" title="Download">
                        <i class="fa fa-download"/> <span>Download Template</span>
                    </a>
                </div>
                <a href="https://www.odoo.com/documentation/16.0/applications/general/export_import_data.html" target="new">
                    <i class="fa fa-external-link"/> Go to Import FAQ
                </a>

                <div class="oe_import_debug_option">
                    <h4 class="mt-3">Advanced</h4>
                    <div title="If the model uses openchatter, history tracking will set up subscriptions and send notifications during the import, but lead to a slower import.">
                        <input type="checkbox" id="oe_import_tracking" class="form-check-input"/>
                        <label class="form-check-label" for="oe_import_tracking">
                            Track history during import
                        </label>
                    </div>

                    <div>
                        <input type="checkbox" class="oe_import_advanced_mode form-check-input" checked="checked" id="oe_import_advanced_mode"/>
                        <label class="form-check-label" for="oe_import_advanced_mode">Allow matching with subfields</label>
                    </div>
                </div>

            </div>
        </div>
    </t>

    <div t-name="base_import.progressDialog" class="o_import_progress_dialog text-white">
        <span class="fa fa-spin fa-circle-o-notch fa-2x mb-2"/>
        <div t-if="isBatch">
            <div class="o_import_progress_dialog_batch">
                <span t-esc="importMode"/> batch <span class="o_import_progress_dialog_batch_count">1</span> out of <span t-esc="totalSteps"/>...
                <div class="o_import_progress_dialog_time_left d-none">
                    <span>Estimated time left:</span>
                    <span class="o_import_progress_dialog_time_left_text"/>
                    <span>minutes</span>
                </div>
            </div>
            <span class="o_import_progress_dialog_stop d-none">
                Finalizing current batch before interrupting...
            </span>
            <div class="d-flex align-items-center mt-2">
                <div class="progress flex-grow-1">
                    <div class="progress-bar progress-bar-striped" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
                        <span>0%</span>
                    </div>
                </div>
                <a class="o_progress_stop_import ms-2" role="button"><i class="fa fa-close" aria-label="Stop Import"/></a>
            </div>
        </div>
        <div t-else="">
            <span t-esc="task"/>...
        </div>
    </div>
<t t-name="web_editor.DocumentAttachment" owl="1">
    <div class="o_existing_attachment_cell o_we_attachment_highlight card col-2 position-relative mb-2 p-2 opacity-trigger-hover cursor-pointer" t-att-class="{ o_we_attachment_selected: props.selected }" t-on-click="props.selectAttachment">
        <RemoveButton remove="() =&gt; this.remove()"/>
        <div t-att-data-url="props.url" role="img" t-att-aria-label="props.name" t-att-title="props.name" t-att-data-mimetype="props.mimetype" class="o_image d-flex align-items-center justify-content-center"/>
        <small class="o_file_name d-block text-truncate" t-esc="props.name"/>
    </div>
</t>

<t t-name="web_editor.DocumentsListTemplate" owl="1">
    <div class="o_we_existing_attachments o_we_documents">
        <div t-if="!hasContent" class="o_nocontent_help">
            <p class="o_empty_folder_image">No documents found.</p>
            <p class="o_empty_folder_subtitle">You can upload documents with the button located in the top left of the screen.</p>
        </div>
        <div t-else="" class="d-flex flex-wrap gap-2">
            <t t-foreach="state.attachments" t-as="attachment" t-key="attachment.id">
                <DocumentAttachment url="attachment.url" name="attachment.name" mimetype="attachment.mimetype" id="attachment.id" onRemoved="(attachmentId) =&gt; this.onRemoved(attachmentId)" selected="this.selectedAttachmentIds.includes(attachment.id)" selectAttachment="() =&gt; this.onClickDocument(attachment)"/>
            </t>
        </div>
    </div>
</t>
<t t-name="web_editor.FileSelectorControlPanel" owl="1">
    <div class="d-flex flex-wrap gap-2 mt-4 mb-2 align-items-end">
        <SearchMedia searchPlaceholder="props.searchPlaceholder" needle="props.needle" search="props.search"/>
        <div class="d-flex gap-3 justify-content-start align-items-center">
            <div t-if="props.showOptimizedOption" class="flex-shrink-0 form-check form-switch align-items-center" t-on-change="props.changeShowOptimized">
                <input class="o_we_show_optimized form-check-input" type="checkbox" t-att-checked="props.showOptimized" id="o_we_show_optimized_switch"/>
                <label class="form-check-label" for="o_we_show_optimized_switch">
                    Show optimized images
                </label>
            </div>
            <select t-if="showSearchServiceSelect" class="o_input o_we_search_select form-select" t-on-change="ev =&gt; props.changeSearchService(ev.target.value)">
                <option t-att-selected="props.searchService === 'all'" value="all">All</option>
                <option t-att-selected="props.searchService === 'database'" value="database">My Images</option>
                <option t-if="props.useMediaLibrary" t-att-selected="props.searchService === 'media-library'" value="media-library">Illustrations</option>
            </select>
        </div>
        <div class="col justify-content-end flex-nowrap input-group has-validation">
            <input type="text" class="form-control o_input o_we_url_input o_we_transition_ease flex-grow-0" t-att-class="{ o_we_horizontal_collapse: !state.showUrlInput, 'w-auto': state.showUrlInput }" name="url" t-att-placeholder="props.urlPlaceholder" t-model="state.urlInput" t-on-input="onUrlInput" t-if="state.showUrlInput"/>
            <button type="button" class="btn o_upload_media_url_button text-nowrap" t-att-class="{ 'btn-primary': state.urlInput, 'btn-secondary': !state.urlInput}" t-on-click="onUrlUploadClick" t-att-disabled="!enableUrlUploadClick">
                    <t t-esc="props.addText"/>
            </button>
            <div class="d-flex align-items-center">
                <span t-if="state.urlInput and state.isValidUrl and state.isValidFileFormat" class="o_we_url_success text-success mx-2 fa fa-lg fa-check" title="The URL seems valid."/>
                <span t-if="state.urlInput and !state.isValidUrl" class="o_we_url_error text-danger mx-2 fa fa-lg fa-times" title="The URL does not seem to work."/>
                <span t-if="props.urlWarningTitle and state.urlInput and state.isValidUrl and !state.isValidFileFormat" class="o_we_url_warning text-warning mx-2 fa fa-lg fa-warning" t-att-title="props.urlWarningTitle"/>
            </div>
        </div>
        <input type="file" class="d-none o_file_input" t-on-change="onChangeFileInput" t-ref="file-input" t-att-accept="props.accept" t-att-multiple="props.multiSelect and 'multiple'"/>
        <div class="col-auto btn-group">
            <button type="button" class="btn btn-primary o_upload_media_button" t-on-click="onClickUpload">
                <t t-esc="props.uploadText"/>
            </button>
        </div>
    </div>
</t>

<t t-name="web_editor.FileSelector" owl="1">
    <div>
        <FileSelectorControlPanel uploadText="uploadText" accept="fileMimetypes" urlPlaceholder="urlPlaceholder" addText="addText" searchPlaceholder="searchPlaceholder" urlWarningTitle="urlWarningTitle" uploadUrl="(url) =&gt; this.uploadUrl(url)" uploadFiles="(files) =&gt; this.uploadFiles(files)" showOptimizedOption="showOptimizedOption" showOptimized="state.showOptimized" changeShowOptimized="showOptimized =&gt; this.state.showOptimized = !this.state.showOptimized" changeSearchService="service =&gt; this.state.searchService = service" searchService="state.searchService" needle="state.needle" search="(needle) =&gt; this.handleSearch(needle)" useMediaLibrary="props.useMediaLibrary" validateUrl="validateUrl" multiSelect="props.multiSelect"/>
        <t t-call="{{ constructor.attachmentsListTemplate }}"/>
        <div name="load_more_attachments" class="mt-4 text-center mx-auto o_we_load_more" t-ref="load-more-button">
            <button t-if="canLoadMore" class="btn btn-odoo o_load_more" type="button" t-on-click="handleLoadMore">Load more...</button>
            <div t-if="hasContent and !canLoadMore" class="mt-4 o_load_done_msg">
                <span><i t-esc="allLoadedText"/></span>
            </div>
        </div>
    </div>
</t>
<t t-name="web_editor.IconSelector" owl="1">
    <div>
        <div class="d-flex gap-2 align-items-center py-4">
            <SearchMedia searchPlaceholder="searchPlaceholder" search.bind="this.search" needle="state.needle"/>
        </div>
        <div class="font-icons-icons">
            <t t-foreach="state.fonts" t-as="font" t-key="font.base">
                <div t-if="!font.icons.length" class="o_nocontent_help">
                    <p class="o_empty_folder_image">No pictograms found.</p>
                    <p class="o_empty_folder_subtitle">Try searching with other keywords.</p>
                </div>
                <span t-foreach="font.icons" t-as="icon" t-key="icon.id" t-att-title="icon.names[0]" t-att-aria-label="icon.names[0]" role="img" class="font-icons-icon m-2 fs-2 p-3 cursor-pointer text-center" t-att-class="{ o_we_attachment_selected: this.selectedMediaIds.includes(icon.id) }" t-attf-class="{{ font.base }} {{ icon.names[0] }}" t-on-click="() =&gt; this.onClickIcon(font, icon)"/>
            </t>
        </div>
    </div>
</t>
<t t-name="web_editor.AutoResizeImage" owl="1">
    <div t-ref="auto-resize-image-container" class="o_existing_attachment_cell o_we_image align-items-center justify-content-center me-1 mb-1 opacity-trigger-hover opacity-0 cursor-pointer" t-att-class="{ o_we_attachment_optimized: props.isOptimized, 'o_loaded position-relative opacity-100': state.loaded, o_we_attachment_selected: props.selected, 'position-fixed': !state.loaded }" t-on-click="props.onImageClick">
        <RemoveButton t-if="props.isRemovable" model="props.model" remove="() =&gt; this.remove()"/>
        <div class="o_we_media_dialog_img_wrapper">
            <img t-ref="auto-resize-image" class="o_we_attachment_highlight img img-fluid w-100" t-att-src="props.src" t-att-alt="props.altDescription" t-att-title="props.title" loading="lazy"/>
            <a t-if="props.author" class="o_we_media_author position-absolute start-0 bottom-0 end-0 text-truncate text-center text-primary fs-6 bg-white-50" t-att-href="props.authorLink" target="_blank" t-esc="props.author"/>
        </div>
        <span t-if="props.isOptimized" class="badge position-absolute bottom-0 end-0 m-1 text-bg-success">Optimized</span>
    </div>
</t>

<t t-name="web_editor.ImagesListTemplate" owl="1">
    <div class="o_we_existing_attachments o_we_images d-flex flex-wrap my-0">
        <t t-if="!hasContent and !isFetching">
            <div t-if="state.needle" class="o_nocontent_help">
                <p class="o_empty_folder_image">No images found.</p>
                <p class="o_empty_folder_subtitle">You can upload images with the button located in the top left of the screen.</p>
            </div>
            <div t-else="" class="o_we_search_prompt">
                <h2>Get the perfect image by searching in our library of copyright free photos and illustrations.</h2>
            </div>
        </t>
        <t t-else="">
            <t t-if="['all', 'database'].includes(state.searchService)">
                <t t-foreach="state.attachments" t-as="attachment" t-key="attachment.id">
                    <AutoResizeImage t-if="!attachment.original_id or state.showOptimized" id="attachment.id" isOptimized="!!attachment.original_id" isRemovable="true" onRemoved="(attachmentId) =&gt; this.onRemoved(attachmentId)" selected="this.selectedAttachmentIds.includes(attachment.id)" src="attachment.thumbnail_src or attachment.image_src" name="attachment.name" title="attachment.name" altDescription="attachment.altDescription" model="attachment.res_model" minRowHeight="MIN_ROW_HEIGHT" onImageClick="() =&gt; this.onClickAttachment(attachment)" onLoaded="(imgEl) =&gt; this.onImageLoaded(imgEl, attachment)"/>
                </t>
            </t>
            <t id="o_we_media_library_images" t-if="['all', 'media-library'].includes(state.searchService)">
                <t t-foreach="state.libraryMedia" t-as="media" t-key="media.id">
                    <AutoResizeImage author="media.author" src="media.thumbnail_url" authorLink="media.author_link" title="media.tooltip" altDescription="media.tooltip" minRowHeight="MIN_ROW_HEIGHT" selected="this.selectedMediaIds.includes(media.id)" onImageClick="() =&gt; this.onClickMedia(media)" onLoaded="(imgEl) =&gt; this.onImageLoaded(imgEl, media)"/>
                </t>
            </t>

            <t t-foreach="[...Array(20).keys()]" t-as="i" t-key="i">
                <div class="o_we_attachment_placeholder"/>
            </t>
        </t>
    </div>
</t>
<t t-name="web_editor.MediaDialog" owl="1">
    <Dialog contentClass="contentClass" size="size" title="title">
        <Notebook pages="tabs" onPageUpdate.bind="onTabChange" defaultPage="state.activeTab"/>
        <t t-set-slot="footer">
            <button class="btn btn-primary" t-on-click="() =&gt; this.save()">Add</button>
            <button class="btn btn-secondary" t-on-click="() =&gt; this.props.close()">Discard</button>
        </t>
    </Dialog>
</t>
<div t-name="web_editor.videoWrapper" t-att-data-oe-expression="src">
    <div class="css_editable_mode_display"/>
    <div class="media_iframe_video_size" contenteditable="false"/>
    <iframe t-att-src="src" frameborder="0" contenteditable="false" allowfullscreen="allowfullscreen"/>
</div>

<t t-name="web_editor.VideoOption" owl="1">
    <div class="mb-1">
        <label class="o_switch" t-on-change="props.onChangeOption">
            <input type="checkbox" t-att-checked="props.value"/><span/>
            <span t-esc="props.label"/>
            <span t-if="props.description" class="small text-muted ms-auto" t-esc="props.description"/>
        </label>
    </div>
</t>

<t t-name="web_editor.VideoSelector" owl="1">
    <div class="row">
        <div class="col mt-4 o_video_dialog_form">
            <div class="mb-2">
                <label class="col-form-label" for="o_video_text">
                    <b>Video code </b>(URL or Embed)
                </label>
                <div class="text-start">
                    <small class="text-muted">Accepts <b><i>Youtube</i></b>, <b><i>Vimeo</i></b>, <b><i>Dailymotion</i></b> and <b><i>Youku</i></b> videos</small>
                </div>
                <textarea t-model="state.urlInput" class="form-control" id="o_video_text" placeholder="Copy-paste your URL or embed code here" t-on-input="onChangeUrl" t-att-class="{ 'is-valid': state.urlInput and !this.state.errorMessage, 'is-invalid': state.urlInput and this.state.errorMessage }"/>
            </div>
            <div t-if="shownOptions.length" class="o_video_dialog_options mt-4">
                <VideoOption t-foreach="shownOptions" t-as="option" t-key="option.id" value="option.value" onChangeOption="() =&gt; this.onChangeOption(option.id)" label="option.label" description="option.description"/>
            </div>
            <t t-if="state.vimeoPreviews.length">
                <span class="fw-bold">Suggestions</span>
                <div id="video-suggestion" class="mt-4 d-flex flex-wrap mh-75 overflow-auto">
                    <t t-foreach="state.vimeoPreviews" t-as="vimeoPreview" t-key="vimeoPreview.id">
                        <div class="o_sample_video w-25 mh-100 cursor-pointer" t-on-click="() =&gt; this.onClickSuggestion(vimeoPreview.src)">
                            <img class="mw-100 mh-100 p-1" t-att-src="vimeoPreview.thumbnailSrc"/>
                        </div>
                    </t>
                </div>
            </t>
        </div>
        <div class="col-md-6">
            <div class="o_video_preview position-relative border-0 p-3">
                <div t-if="this.state.src and !this.state.errorMessage" class="o_video_dialog_preview_text mb-2">Preview</div>
                <div class="media_iframe_video">
                    <div class="media_iframe_video_size"/>
                    <iframe t-if="this.state.src and !this.state.errorMessage" height="720" width="1280" class="o_video_dialog_iframe mw-100 mh-100 overflow-hidden shadow" allowfullscreen="allowfullscreen" frameborder="0" t-att-src="this.state.src"/>
                    <div t-if="this.state.errorMessage" class="alert alert-warning o_video_dialog_iframe mw-100 mh-100 mb-2 mt-2" t-esc="this.state.errorMessage"/>
                </div>
            </div>
        </div>
    </div>
</t>
<t t-name="web_editor.ProgressBar" owl="1">
    <small class="text-info d-flex align-items-center me-2">
        <span t-if="!props.hasError and !props.uploaded"><i class="fa fa-circle-o-notch fa-spin me-2"/></span>
        <span class="fst-italic fw-bold text-truncate flex-grow-1 me-2" t-esc="props.name"/>
        <span class="fw-bold text-nowrap" t-esc="props.size"/>
    </small>
    <small t-if="props.uploaded or props.hasError" class="d-flex align-items-center mt-1">
        <span t-if="props.uploaded" class="text-success"><i class="fa fa-check my-1 me-1"/> File has been uploaded</span>
        <span t-else="" class="text-danger"><i class="fa fa-times float-start my-1 me-1"/> <span class="o_we_error_text" t-esc="props.errorMessage ? props.errorMessage : 'File could not be saved'"/></span>
    </small>
    <div t-else="" class="progress">
        <div class="progress-bar bg-info progress-bar-striped progress-bar-animated" role="progressbar" t-attf-style="width: {{this.progress}}%;"><span t-esc="this.progress + '%'"/></div>
    </div>
    <hr/>
</t>

<t t-name="web_editor.UploadProgressToast" owl="1">
    <div class="o_notification_manager o_upload_progress_toast">
        <div t-if="state.isVisible" class="o_notification position-relative show fade mb-2 border border-info bg-white" role="alert" aria-live="assertive" aria-atomic="true">
            <button type="button" class="btn btn-close o_notification_close p-2" aria-label="Close" t-on-click="props.close"/>
            <div class="o_notification_body ps-2 pe-4 py-2">
                <div class="me-auto o_notification_content">
                    <div t-foreach="state.files" t-as="file" t-key="file" class="o_we_progressbar">
                        <ProgressBar progress="file_value.progress" errorMessage="file_value.errorMessage" hasError="file_value.hasError" name="file_value.name" uploaded="file_value.uploaded" size="file_value.size" id="file_value.id"/>
                    </div>
                </div>
            </div>
        </div>
    </div>
</t>
<t t-name="web_editor.HtmlField" owl="1">
        <t t-if="props.readonly || props.notEditable || (sandboxedPreview and !state.showCodeView)">
            <t t-if="this.showIframe">
                <iframe t-ref="iframe" t-att-class="{'d-none': !this.state.iframeVisible, 'o_readonly': true}" t-att-sandbox="sandboxedPreview ? 'allow-same-origin allow-popups allow-popups-to-escape-sandbox' : false"/>
            </t>
            <t t-else="">
                <div t-ref="readonlyElement" class="o_readonly" t-out="markupValue"/>
            </t>
        </t>
        <t t-else="">
            <t t-if="state.showCodeView">
                <textarea t-ref="codeView" class="o_codeview" t-att-value="markupValue"/>
            </t>
            <t t-else="">
                <HtmlFieldWysiwygAdapterComponent Component="this.Wysiwyg" startWysiwyg.bind="this.startWysiwyg" editingValue="this.currentEditingValue" widgetArgs="[this.wysiwygOptions]"/>
            </t>
            <t t-if="props.isTranslatable">
                <span t-attf-style="font-size: 15px; position: absolute; right: {{this.props.codeview ? '40px' : '5px'}}; top: 5px;">
                    <TranslationButton fieldName="props.name" record="props.record"/>
                </span>
            </t>
        </t>
        <t t-if="state.showCodeView || (sandboxedPreview and !props.readonly and !props.notEditable)">
            <div t-ref="codeViewButton" id="codeview-btn-group" class="btn-group" t-on-click="() =&gt; this.toggleCodeView()">
                <button class="o_codeview_btn btn btn-primary">
                    <i class="fa fa-code"/>
                </button>
            </div>
        </t>
    </t>

<t t-name="web_editor.FieldTextHtml.button.translate">
        <div class="btn-group float-end">
            <button t-if="widget.field.translate" class="o_field_translate btn btn-secondary" style="height: 24px; padding: 1px 17px 0px 5px" aria-label="Translate" title="Translate">
                <span class="fa fa-language fa-lg oe_input_icon"/>
            </button>
        </div>
    </t>

    <t t-name="web_editor.FieldTextHtml.fullscreen">
        <span style="margin: 5px; position: fixed; top: 0; right: 0; z-index: 2000;">
            <button class="o_fullscreen btn btn-primary" style="width: 24px; height: 24px; background-color: #337ab7; border: 1px solid #2e6da4; border-radius: 4px; padding: 0; position: relative;">
                <img src="/web_editor/font_to_img/61541/rgb(255,255,255)/16" style="position: absolute; top: 3px; left: 4px;" alt="Fullscreen"/>
            </button>
        </span>
    </t>

<t t-name="web.GaugeField" owl="1">
        <div class="oe_gauge position-relative">
            <canvas t-ref="canvas"/>
            <span class="o_gauge_value position-absolute start-0 end-0 bottom-0 text-center" t-esc="props.value"/>
        </div>
    </t>

<t t-name="web_tour.ToursDialog" owl="1">
    <Dialog title="this.constructor.title">
        <t t-call="web_tour.ToursDialog.Table">
            <t t-set="caption">Onboarding tours</t>
            <t t-set="tours" t-value="onboardingTours"/>
        </t>
        <t t-if="testingTours.length" t-call="web_tour.ToursDialog.Table">
            <t t-set="caption">Testing tours</t>
            <t t-set="tours" t-value="testingTours"/>
        </t>
    </Dialog>
</t>

<t t-name="web_tour.ToursDialog.Table" owl="1">
    <div class="table-responsive">
        <table class="table table-sm table-striped">
            <caption style="caption-side: top; font-size: 14px">
                <t t-esc="caption"/>
            </caption>
            <thead>
                <tr>
                    <th>Sequence</th>
                    <th width="50%">Name</th>
                    <th width="50%">Path</th>
                    <th>Start</th>
                    <th>Test</th>
                </tr>
            </thead>
            <tbody>
                <tr t-foreach="tours" t-as="tour" t-key="tour.name">
                    <td><t t-esc="tour.sequence"/></td>
                    <td><t t-esc="tour.name"/></td>
                    <td><t t-esc="tour.url"/></td>
                    <td>
                        <button type="button" class="btn btn-primary fa fa-play o_start_tour" t-on-click.prevent="_onStartTour" t-att-data-name="tour.name" aria-label="Start tour" title="Start tour"/>
                    </td>
                    <td>
                        <button type="button" class="btn btn-primary fa fa-cogs o_test_tour" t-on-click.prevent="_onTestTour" t-att-data-name="tour.name" aria-label="Test tour" title="Test tour"/>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</t>


</templates>`;
                        return loadXML(templates);
                    });